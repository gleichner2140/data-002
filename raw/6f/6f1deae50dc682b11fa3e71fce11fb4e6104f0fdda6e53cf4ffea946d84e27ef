%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: coworking center 7.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Антон
%%CreationDate: 2/9/2015
%%BoundingBox: 0 0 1150 880
%%HiResBoundingBox: 0 0 1150 880
%%CropBox: 0 0 1150 880
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">coworking</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-02-09T09:04:14+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-02-09T09:04:14+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-02-09T09:04:14+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9S4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0z&#xA;BRU4q7mn8w+/FXc0/mH34q1JIsa8j9A8TkJzERZVYsk1Ryjop8DUj55ATne4VxmcuVjXlx6kmgri&#xA;chJqIulcJzwc8aOn2lODxtjtuFdLOEjV6V5U29uuHJm4Yg96rmko6KBXnX7hkpTogd6rfWkYkRJy&#xA;C7Fiab+2Q8Uk+kWrazBkZqUZK8lPiMlHLYJ6hVvry8OZj+Clag70yHiyq62VcZf3kagVDgmv0VyZ&#xA;ybgd6trLykKqKqv2m9/DDHJcqHIKt9c+i0lPsmlPppkPF9JkrfrAwmQDoK09xkvE9HErmmCorUqz&#xA;U4qPE4yy0AepVyvNyAeOgPcGtPnjGUr3CqmWqtdwqk9fbFVvORSvOhB227YqqYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq04JU0O+KqY5fyfjirYDVHwU+nFVtzt6bH7IcVyjP0PS1VqjL7VRtqcXX9oMa5Rg5&#xA;EeatAB7iQDpx4t8zgA4pn3KpxD1QqH9hCD8ztlWMcdDuBQugJd1P8iU+mtMliPER5BK+0I9EDupI&#xA;b51yzT/TSrRu9wR0pSvuBkBuZlVn730o1ZgImoCQNxlfq4QCfSULp0PqxIh4mhAPgKZPLE8UQEr7&#xA;f4C0J6ruD4g5Zh9NxPRVP/j0k+Z/XlX+SKHS/uw38kg+5qfxxyem+6Q+1V3SSAnpxp9NMlylAnuS&#xA;vkeVZF3HBmApTfLJykJDuJVUevE069suVDnhQUrX9vFV8QDnck8egOKq2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVplVgQwqD1GAgEUVU1towQdzToCagZUMEQrbwIzctw3cg0wyxAm+qrkjRBRRQZ&#xA;OEBEUFckSIWK9WNTgjjESSOquSJELFerGpxhjEbrqq1reNmLbqT1oaVyMsMSbVcsaKnACinJCAAo&#xA;clcYkMfpkfDSmPhjh4eiu9JeStvVBQY+GLB7lc0al1f9pehwmAJB6hWvRTgU/ZO5yPhCq6K28aun&#xA;FumSlASFFXNGjJwIqo6YDAEUeSrVt41YHdiOlTWmRjhANqqZarTKGBB74q0kap03JxVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdiqGkJZ2qaU6DFVWBiU37GgxVqd2HFFNGc0r4AdcpyyOwHMq2s&#xA;PFgQ7HxBNa4Y4qN2VUhxZ5OcpWjEAcqbZSKJNyrfvQun5qkYjY1J2NeuSy2ABE9UueUtEjKaEsAw&#xA;/WMZZLiCO9XXKFY2kDsDttXbrjnjUTIEqudDHE5DMTTua0yUo8MTuVWxiM8f3zFtjx5d/lkYCJr1&#xA;G/eriOc7guygAUANMSLmRZVu3ZiXUtyVT8LHJYZGyLsBVbL1QzTOTsaDwxVfDKxbid/fFVbFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVC4HxA064qrIKKB7Yqpzq1UkUVKHcDwPXKcwO0h0&#xA;VtbhGYKoJJ67dPnhGYE0FUlaNXk5rUljT4a7ZTExBNjr3IXyEN6RUbch2yczfCR3pWTIyyDiPgdg&#xA;SPAjIZYES25EoVLoEwMBv0/XluoHoKV0/wDcv8jksv0lVOOSEBRxo1AK8e+VQnAAbb+5XGJZJ5OQ&#xA;2oKH6MTjEpm1XW1QhjIoyGh9/fJ4NhwnoqrlyqXoBqltid6DFV6RqnTr44quxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV1MVdirsVdiq0yIDQnfFVwIIqDXFXYq7FVjykNxUcjiro5OR4kU&#xA;YdcVX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXEgCpNB74CaVwYEVB&#xA;BHtiCDyV2FXHpiqEZGB3GKqluDyJ7Yqr4q7FVEkxyEkVDeGKtpV5edKKOmKquKuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxVDXsjKqqDQNWuYmqmQAAqGgZxKoU0qdxmLhkRIUhMs2qXYq7FWFec/zk/L&#xA;vydd/Udb1VU1EKGNlAjzyqDuOYjDBKg1AcioyMpgc22GGUuQTLyX+Yfk/wA6Wklz5d1FLv0SBcQE&#xA;NHNFXpzicK4Bps1KHscYyB5MZ45R5sjyTBBX1fUG+1Ns1+rviQ1ZEiag6Eb4NKTxKh9c83eV9B4j&#xA;WdVtbB3HKOOeVEkZa0qqE8mFfAZsgESkBzRGj67outWv1rSL6C/t9gZLeRZApIrxbiTxah6HfAQk&#xA;SB5K167KihTTl1OYuqmQBSULE8isAnWuwzEx5JDYIRd5fWljZTXt9Klra26GW4mlYKkaKKszMdgA&#xA;M2gO27IC0n8q+ffJvmyF5fLurW+o+kAZYo2KyoD0LxOFkUe5XEEFlPHKPMJ7IGKnj1wsHRhgg5dc&#xA;VS7U/Mek6c7R3E1ZlFTCgLN40PYH5nMTJrsUMgxmXrkQK9/3N+PTTnHiA2U9I8x2Os6VHfWTFTIi&#xA;u0L09ROXTkAT9+W6nIIGUARxQ5tc8co8+SqLiYGvM/Sa5rxmmDza0yBqAc2o5JaZlRS7kKqglmJo&#xA;AB1JOFXkepf85OeQbTUpLWG3vr23jbib2BIxG1OpQSSIxHuQMNItm2g+bNG80acuqaPdC5s2Yp0K&#xA;sjihKOpoVYV/zGavUGXFuqfWTOQwJqopSuZGkkSDfJKJBBrQ1p1zLV2KuxV2KuxV2KoS+dSVUbkb&#xA;nMHVyGwQXWtvIJA7CgAqPpx0+EiVlUXmcl2KuqPvxV8Y/mx+TvnJ/PXnHVLd0ubSOWXVEch+bpcE&#xA;ziCNSCWeNWp8Pw7UrXbMPIQJUXc6ccUAWv8AnG3T/MelfndbaddRS2k0NvdDU4G2rD6JKhqbMpl9&#xA;NgenTJ4quw1auNQNst/PL/nIDz5onny/8v8Ali9isLHTPTiedYYp3lmaJJJORnSRV4F+FAO2SyZC&#xA;DQacOCJjZZh/zj1+bXmXz9+k9M8whJr7TUjmiv4oxGHjkJVkkCUTlUVXioqK+GVSgcnvatRhEaIe&#xA;r32p2WkwyXV7dxWdtH8L3E7rHGN+7OQN8xY8UZVHm4r5B83W2qeavPOu3WmFtRilvZ5EvAxMSwBz&#xA;6ZaV6KqLGABU0AzbjKIxHFzceOlyZJnhFvUv+cf/ACf5p8ueern9IwCO3n02QSFX5LUTRFT8NV5V&#xA;FKHtXIjPGfJuGiyYjchs99vnWip+0DU5h6uQ2HVkttreQSK7CigVHvkcGGXECeSvMv8AnITyd5n8&#xA;36TpOiaNqUdjbyTSy6hDMXVJljVTHXgrFuDGvE7V36gZkZ58Ic/Qxsk9zx3yv/zj9578t+YtP1yL&#xA;XbS0+pXMTyS2rziQwBx6g3jUHklRxJoehygZxbn5IcQL67qK075nOiWSiRomELBZCp4ORyAPYkVF&#xA;cjKzH0ndMavd5Xrun3NhdXbXd2rm3/fXbhTUoy8yR1JJ/XnMYOyMv5mJEhKfGDvY8+b0I1EThsCh&#xA;VfoX/l0VkvrWOymaWza3ZVlZeBZIhwPJKmh5qDSp+eZ2s02Udpy4qHHG9t9qod3UBxM0gdPXUF6C&#xA;8bpTmtK9MslAx5h06YQiPgDH9k5s8QjXp5JQHmaGaby5qsMH99LZ3CRU68miYL+OWK+cdD/L2zvJ&#xA;bKXULaOOG5ZisPpqHaNF5cq02BNB8soy6kCwObmafQmVGXIvafImkW1np90lnp8Fgk1zI6x24Chw&#xA;oVObLwjCk8egqKb13zAqUzXNGujEZKArZNdcvms44rYv6Yk5STPXjRQCd28Bx3/plsgYR4WnBg8S&#xA;VH6RzSlL6GArLBKqyFDLF6ZXkyLQkr4ruPbKomjs5+Ts/GR6RwlmVnP9YtY5iKF1BYdq9DT6c2kJ&#xA;WLdUDsrVH3dckl2KuxVZJKEqO/EsPoyueTh+SpaSSSTuT1zVE2hMIJB9XDt0UGp+WbTBK4BK+KWO&#xA;aJJY25RyKGRh3VhUHLVDpZYok5yusaDqzEAfecVUYbu1uZiIJkl9EfHwYNQt0rQ+xys7y9ypL5i0&#xA;C5vLpbi1AaSRPSl5EKFC1K70rT4jlGfCZGw7HR6qMIkSYVY635X0HzZbXepQouqmFrGS7CAvDC7h&#xA;qO3ULzQfrzXjXQwzEZHn9jt8vZ2TUYjKA5b+/wAgwaLytot5qmpalcautomo6le3WoQSW6yiOaWU&#xA;lFBMiPQKFFePjlGbgyniJ4S04xKEaAtkH5VeXYdG/MJ7mC+N9c3emTQXaLGscapHMjwSUR5RXqm5&#xA;6UzK0UxA8Ed+ZcXXxJhxHyen6sulnT5n1VYXsI1Mk/1hVaMKoqSwYEYwBJoc3SSkIizyDyjU7+w8&#xA;76Bqmh+Tmisr65RoLS2dFhUL0rxUUCOooSBtXfMvLpMmOQ4hduw7M7UwZsREJbx5g82f/ljaebYd&#xA;MlvvNthDpes3B9I2cDJKPTgqQ7SI8gPJmYqtfhHvk8cfD+K6zUDJQDJGYsSTuT1zAJs2XBRsVzFH&#xA;bK80ixqPh5OQo9tzmz08rgEvOfzA8w2g81aPpk8kZ07VormyiuOSvGbshWSFuDBq0U1BIryA+VOo&#xA;ibt2eiI4a6pV5xurLQtEOoNMBeLAml2QHLnJcTMqRKgd2Db1YqQxoKk/DmNEWac0mnqOialHeWkM&#xA;ryJ9aljUvCHR2U0qyngSCVNQabZsMQPM83RZK4jXJHxbck/lO3yO4w49rHcwY/5i8vXF5devaojt&#xA;OnpTiTjx4gECoIPJaMajfKsuOfEJRO7sNLqYRgYzYBH+Zvk3yd5lsNL1R0tp7hTbyiFFWO1R25Bp&#xA;QvEIrOPDvy6Y4MeTLkOWW5qrP3L2hmxQiIDnd/2vU7qRZHBUhk4gqRuCDvUZj6qVyrudc3aS8CwP&#xA;2aE/dh02ThJvkry3zXrfmS81u5tZJ5LaK1lIihhZ4gFBqjEqQSWWhqf1Zzuu1+bxSLI4TsFEqLdv&#xA;DDrDif8ASK6RqNnGfTeUCSMrIRzDoWj5IeK9GVq982Wj1Iyx5fjydpPX3EGI9T0XSLaOyht4I9wg&#xA;AZhX4iftNuWO5365l4pVMOuyZDKVliX5uana6NFpN7qMwg0671FbW4uZPT9GOJ7aQmOX1El4rI0Q&#xA;+LjSvWlczMkOZO+7foxLiNFg3mbzd5e0vQrq5W/gN/NbsmgRxRokpDKI1jtv9HUtyLV2NBy8BU1D&#xA;hPRz+HLtchT3LRqfUFkAZI5CzxRsApSMn4VoCaUGZUImINnq6WKLiHwcj1Y8j9OHHyvvZL8mrsVQ&#xA;92QCvyf9WYuoPL4/cqUXhqUWrCtTRSy9KdSpHjlWlgDdoC6O9mRCgoUIoVYswp/siczgAOSVFWiW&#xA;nC3gTj9njDGKfL4cKr/rVwBRXKgdAvw/qpiq6OSO3u7C7kBaSd5rQNudnjE+/b/j37+OQnMRFlUR&#xA;rutpYaJf3qV9S3t5ZI9h9pUJX8cxM+tjGEiOYBcjSYvEyxh/OkA+XL26uprotyaSZ6s7H4mJPjnH&#xA;4MM80qiDOR+L6dOUMcdyIxHwW+YZryW1tSiO9xGOF0pmaISRooWLjIoLAoNiOlAM3M9Fl09RzR4T&#xA;067fjbyeZ1GSE8hOM+n5b9f1/N6d+TPmbRNN0dra9na31e5KfW7mYAQylAVURv2C7n4qbnNnodHm&#xA;OMzxxPDf4p0XaEZmQ6gIL84fOUWpaFo9vprsbHUzLcT1+Bitu3BVYeHqciR4qM2PYmMTJmem363k&#xA;vaXjwkYTz5n9H61D8lNG0i5+vahNbq9/aSxfV5qspjBBIKcStCSM2faBIodHF7AhGQlIj1AvZPrs&#xA;vAowDqagh6vsRQj4ic1hAL0iipjU1SCBD4rFGD/xHEAKv+tXFKByoGwC/CKfRTCrBPzc0/Q7uw0d&#xA;dVmNpLdSSx6bqCuUkh1GN45bV1YgpyVUlChutSBucqzA8OwtydLICYs0x+w8oajq2t+X7rzdrNvf&#xA;m1vYTpGmQW620c06SK0s0qF3MrLCjkKKBevscbB9Wwc/VyqB3euvPPHK6LIwVWIAqabHwzOdOsaY&#xA;v/eJHJXc840b9YxVfDdtCD6MccfL7XBAlaePGmKsG87eQ/Itzour6jc6JaC6W1nma7jjCy81jZuf&#xA;IUq1R1OThIigGGSINk82QeVIrW18uaVFZl2tUs4Ftw8skn7sRrx3LU6ZXOAJsjdlEbJvJOslDJDC&#xA;5HQtGrEf8EDgEAOQStSUof3aRx9/gjRf1DJKqxTTyzRo8jFWYClTTc+GKqWicobZ04gLBdXUcSCn&#xA;FY47mRI1AWgAVAAB2zWZDw5CVK7zRoGnebPL97oGqwJLaX0ZQhq/C4+KNwRuCjgEHMuJnIbimeOf&#xA;DIF5J+X/APzjvo9lq/6T1S8u9SbSS6WFreNWOCQCikAUqy0BWmwoDTpkcNmXLk7HV5AIUD9X3Pcj&#xA;NCIhEpoKBRXsOn6ssyzAFOrVfrEH84w+NDvV31iD+cY+NDvVcksbmisCclHJGXIqh77qn01/DMbV&#xA;9PihLLpVorH7QJAPz3/hkNIfUVCHzPSmOoXlpPbIsf8AeAg8aU4imKpdirr+YQaZb3npCZrK7DrG&#xA;aCrTRPbru3TebIZCAN+SY11NJbqfmWKfy5OJtNZXuLZ/VhZxSpQhkD8d99thmu1OSEoEAbOy0Ol4&#xA;pRnGY5jlu+d4pHgk+sOSE5ioY1IjI4mp9q8s6P2e7P8Ay2nEpCpz3Pu6D9PvLsO1dWcuXncY7D9J&#xA;/HRFXd05uDbqiNGqK7M1W3YkAUFOy+OZnaOeG0JxExz3dZPOcZ2aN5d8aKYwabfAaD6OQyodqkCh&#xA;ENX5nyQN5Hql5bWlvcXaOlny9H922wchmG8nQsK/Scxvzp4jIAWf0On1+ghqZCUiRQeu/lBpNjZa&#xA;U93bXX1mTUUR5wOIVDENlABJqDKQa/hmNm1hzSoiuH9jPR9kx0sOKMjLjrfp12++3oakBgSKgEEj&#xA;xytykfqd3azxxiLdwd9qUFOmKpfiry7/AJyhs2ufynsp0FfqWrRPIfBXhmTx/mkXLMR9TVmHpeU/&#xA;848Xesa5+cWgS6hdy3a6Vb3TRes5bhGLaSMBeVf2pRlmSIjHYc2GOcpS3N0H1TK3KR2/mJP3nMdy&#xA;FS0eJLhHlFYwd+/yxVW1O5hnmDRbgChalK4qwr807/6h+XXmG42/3iljAYAgmUelQg+POmSgNwwm&#xA;aiVT8s7v63+Xnlycmp/R1sjHrVo4gjHf3XGfMph9IZlplzDBKxl2DCgalafdkWSHunje4keMURjV&#xA;e2KrYG4zRt/KwP3HFUJEdbk8138cckcej2kzCWNkYySPLbwSpxdvhCq0jk09vfKBjByEkNkox4Qe&#xA;rHtS/NvStJ1K406WyuXls3MLSrxAJQ0qKmuXtaFX88NGBk/3HXS8yCxDoeRoBUgnbYAYpU/+V26T&#xA;6of9HXBVQRxLJuSR1H0YCAeaGcaF508u6tpUGoVFp6/L9xOF5rwdk348hQ8aj2zCy6rT45cMjEFv&#xA;hpskhYFhEJ5g0Bron63D6fH4QKEHehP31GUHW6YSsmNEfpZ/ks380phZ6tpd1L6NrcJJIBXgvWgz&#xA;KwazDkPDCQJa8mnnAXIUFmqaVYXvB7uH1RGGA3IIrTfYjwyGs0mPLRnHiq1xaieP6TTF30Wx0m8t&#xA;po3kUSF0b1Gqv2ajtmr0uGGDNGtuKw5uTVzz45AgemjsEV+ktP8A+WqH/kYv9c6Gw6xCwTxi8Lhg&#xA;Y3J+IHYhuhr4YVRbX9irFWuIlYGhUuoII+nFUn846uieU9RjsbuIX5EMtkA3MmaCZJVHFDzIoh5c&#xA;e2+UamQGORJrZlGAkaJoHq8r/wAVatdaZJBqMyS30g4G5jZ1VUHUBHZzU9zX6M5rDmjDMMk4+Jw1&#xA;XEf2O/0ukOHGYCV31PN5l5111rcCwt2pIaM7Dw/z/wA9s9Cn2iMuKMo7cQv3Ol1uTgPAObIrSQy+&#xA;rMDySRwUNa7BFUj/AIJTmJrp8WU/BjlNlmnlnzhpWj+WdW0ybSkur7UA6R3bcfhR0ChTUE/AasKd&#xA;8xGpiMjcEZ6V4gmnywE0LSBZpO/yf87anb+crvSNWhgtdFit3htNRMSQKzxsnph5uK8iyBurdffN&#xA;fhGMZyQRc9+Ha99/fsHdaqM/ysRR4YUOK5Vt6e/h593ue2jzF5fJoNTtCf8AjPH/AM1ZsadI1aSq&#xA;t01Ts9Vr8zUfqxVfLr2hwv6cuo20b9eLzRqfuJxTTz78/PMPl+4/KPWrOPUrWS6kktGtIkljd2db&#xA;mMsFVSTX0+R27DJw5teT6Swv/nF3TtBsfX8xyXsZ1GSK5sZY2fh6PJoWiVgxofUCuwNOxHyjlyHi&#xA;o8mWHEODiHO3vP6V0v8A5bIP+Rif1yNhnwnuW3N3by2p9GRJQ5pVGDDbc7jCgilKHUtOtoxHc3UM&#xA;MhqwSSRFNCetCRkTIDmUiEjyDBPz01e1uPyz1Oz06Zbu7u3t40itm9V6CdJHPGPkacYzUnbDDNCM&#xA;hcgPis9PklE8MZH3Au/IjzFpkv5Z6RbTXcUV3aGa3lhkcIwKzOU2Y1PwMuW5RvfRpxfSz27urWaL&#xA;jDPHIwIJVGDGnToD75XbY3Ff2dvaK1zPHAqtw5SMEBJqRuxHvirv07of/Vxtv+R0f9cVVl1pGvLt&#xA;rXhLHIsbmZWqDPw9NlrU9FjQ9O/zzHyZxGVOZi0pnG+RfPerDzU2rXk3meAW2pXEzSrGrpIvoE8Y&#xA;+LITsAvHffbfLozEtw4sscobSFFkXlE/l6NI1L/EizHUaH6h6fqfy7cOHw8uX+/NskhiRNBU9MVf&#xA;Q3ljRdGlsLDTdQ0+3muLa1SMyFFY8kUc9/diTmCI480vVEF2hnm08PROUQTy83hv5U675r1vzY2l&#xA;eYtHhtrO2ZhI/wBUSHlKs6J6ZYInZm+7NDqcWOJiIkEmcQRUf0C3fT1OYYzKpR2NHil+k0+mbHQN&#xA;EsJvXsrGG3moV9SNArUPUVHyzpcelxwNxiAXls2tzZRwznKQ8yjJegHiy/rrlmTl8Q4rGvNmnGa9&#xA;sGjnkiluJREGBJVDTZlXbf6c0Xa2m4suM2QZSrny8w7XQZuGMrAIAv3pRq2g6vaXdlbnWJZRdl1L&#xA;FWHHjx7eoa15Zh63SSwzhHjkeK+p2qvNzMWrwzhKXhD0+f7EZF5Gv5Iw51hwT/xUf+qmbDF2bklG&#xA;/Fn8z/xTi/yhg/1EfP8A46u/wZqiyrENblA41/uz2/56YD2dk4uHxZ/M/wDFL/KGD/UR8/8AjrzP&#xA;8ytd13yxrY0yW4a9gWFLmB5KgUbkpop503Vh1y09iymKOWRHx/4phLtPBy8GPz/46w9fN2pTqJjp&#xA;1u/PuwStBsOqe2XQ9k5yAIma/H9JyMfaURH04gB/W/46lOseYtTNxAIvLUN7JNVFEKKz1G9CEjJ8&#xA;cnk7Cy4I3LKRH8ebVl1sDucF/wCd+xkNroepSwxzNovpSSKrvEJCArMKkcQwHX2yUcOKheq/2LcM&#xA;mA7nF/sj+pDa5BremWJurfQDdOrDlEhLnjQ1PFeZNPlkMmCFenUkn+rTDLmwxFjDf+d+xTu38xWv&#xA;k3SPNKaRZSJqckyLYtKqzp6LshLJIgB+xuOoqKjMTNp5Q2yZiInl+lnpskMwBxYOKY5+rl3JF/jb&#xA;zB6Ponyta+idzH/o/Gta/Z4U65h/ltPxcXjni7/Vf3ucRqeHg/L+nu4xXypB3vnu8sovWufKtlHF&#xA;ULzKQEVP+rEcycOjhllww1Eif879bhamRwR4smmAj7x+p6J5f/MGSWXyhBqEzWlv5maW2R0AK28i&#xA;SJHECKpVWL07UyGHQ5Z5cmPxZ/u+Hqd7Hva567BHHCXgj1317v8ANeo+afLHmWw0G8utM1GS/v4Y&#xA;XktrLiVMrIK+mCXbdug265PJ2fONXlnv5n/imB7Rw/6iPn/x14Ev5i+fZY1ki8vAqevqPHER9EiK&#xA;cz4ezWaQvxJ/b/xSRr4n/ID5/wDHVOfzz56uoWt5/LUE8L05xPLburUNRVSpB3Fcn/oYz/6pP5/8&#xA;eX89H/UB/ph+pmH5Xah5t1O41O3GmLoOn6fbfWZ5IQio8zsERAI1jDEqGJIO3HfqM1/aHZWbTY5T&#xA;OSe3mf1tmDWYpTEZYQL8/wDjqd+cda13QdRW3Ny06yW8VyjmqkiRdx1bowIzSaiebHIDxJ7xB+o9&#xA;fi9DoNHps+My4AKJHyYvL5uvrhvWmtopnYbu4UtQe7Lmdj9ntZqIjJXEJdTLf7SyOp0mEmAJjXQX&#xA;X2Kf+Jrn/lht/wDgE/5pyf8AoT1n83/ZD9aP5R0v86X+yZboFld3FvoWoGS1gk1bURZW0UMYM8fB&#xA;JHkl2VPsCOux6HqMysXYWXHDhnOUDd0Dt9h5ul7Q7UwcYAhx+ZP6wWX+dtK1nQfL8mrHVZbqC2lg&#xA;+tKUb93A8qpLNTm9fTRix26DCOyZg/3s/t/4pwp9p4QP7kfP/jrBPNHmjUdK1drTStUXU7ZY43+u&#xA;KQqMZFD/AAFDKGFCN69c2WH2czZI8QzSHxl+tsjrMMhYxR+f/HUiuvOOt3aqt3HDcKpqqy/GAfEB&#xA;kOWH2WzH/Ly+cv1svzWL/Uo/P/jrf+PPMrXUVnCivPOCIF5UBeh4qarsK7Zrdd2AdPEyllkaF9f1&#xA;sv5SiJCAx8/6X/HUr8o+ZPL3ma/1R/NE9rod7bGJf9KuPRaVvjVwQzQbx8AD88nh7OyRiODKeE+V&#xA;/pcKfaWCRPHi3H9L9jJzp/5YChPmbS6HdeN+pNOnxD1xQ17eGW/ktR/qh/0oY/ntL/qQ/wBOf1JL&#xA;+Xmmx+dPPOoaLZWatoemvOLjWI5pJYiiMyQFaMFJmIBA5/Zqd6Yy0Wat8p/0oRDXacnbD/sz+p7P&#xA;YeV9QGr3emw6q8K2iJSRIyKhlBpQOKUrmlw6GUs88XHIcNb7738XaZNdi8KMzju/P9iH1PyZLplx&#xA;DJDfL6t1cIskiwBW5OSeZIepNcx9b2aMUo+onikPt682eDtSOS4mG0Yk/V+xm+laMLCjNdT3MpQL&#xA;I0rkqTtVgu9N/fOk0uiGI3xSka6l0Wo1HicoiIvop8m8T9+YfEXFSrWmY3embn/egZgayR48f9Zz&#xA;tJ9GT+qs1gk6tpNTX45P1LkdYSc2L3n9DLS/3WT3D9KccmHQnNjxF17uTVrU18ceIq8m/PjRTJb6&#xA;frKgngWtJz1+FqvH+If782GhybmJYTDz78svKcXm3WrrR766ntrKxiN2z2j+nOzOVjSPmQwEf2mI&#xA;49cydRqsmL6SfnssZGqt6ZH5D0nynO0VhJdXAuVDNNeS+s/wkjipooA6E7fwzR6/V5cpAkSQHY6T&#xA;kd7Qer6pp+lIk17cw2sMh4rJNIsaluvEFiN6ZhQhKWwFuSZRHM0iNNurW9tUu7aVJ4Ja+nLEwdCA&#xA;SDRlqDuMEokGiKKQQdwlY/Lu283a9fxHUbjTbSySGWVLRiTJdXHMMzLIXiWkUUf2Y+Rruc2GOjiA&#xA;mBLc1bhS1GTFkJxyMbG9Iv8A6F40n/qYtT/6d/8Aqlj4eL+ZFn/Kmq/1STzf82/LVn5f8p32jqRc&#xA;XVjrFmF1FuQnltrq0mkCSipT4ZIj9mgNK0GZ+gwYxkEoxAsH73E1evz5IcM5mQthXneRo/JPkahK&#xA;t6d+ysNiCJYiCMjov8b1Hvh9xTqP8Xxf533vpc+Zr7Xfyes9bhlZrm7s4DdyJsefJY7jp25hgfbM&#xA;rs+EfzYjLlZr5bLp6Mhbyq7n+r2ss/HkIlLkEhdhudz7Z2cpULdiTQtLNF8wQanPJHDEihByZkkV&#xA;+9BUKO+VYs4mdmvHlEuTM/KIuzqxMHIRiGU3NK09PgR8VO3Pj9NM03tOYjQ5L8q99uRi+uPvZB+b&#xA;OkltP0jVQKj0ltJj7cecf/G+eca2H7uE/IB3Xs7qPXkxHv4h9x/QwvyH5StvOGqz6Te3E9raabH9&#xA;aeWzYRTO8/GNI2kIb4B6TNSnXoRvXd9la3LDDtI1dAWaDrPaUVnFbemzXXcs8/5UB5S/6uesf9JY&#xA;/wCqebD+VM/8773nt+8/NEeSPJuk+V/O9/p0TSXzLYwXmn3t45luYVmklhnhVtl4H0laqqDuQa5V&#xA;m1E8keIndiBu9Fkcem3qN+7APPkdqd61zG4izeWeTPyn8haz5ZsNc1bSEuNR1iJb+4cvJEoNyPVC&#xA;pHEyRoqqwAAH45kZNRMSIB5NUYAhOJ/yN/K2WF4/0IsZYECRJrgMp8QfUO4yA1WTvZeHHueKfmVr&#xA;Wp2+l6LqSTAajZ6PFaiZFCcXgvJ7bkqqFAI4bUFM2OHHGcZRlvEn9TAzMaI5h4i7s7M7sWZiSzE1&#xA;JJ6knNgAAHF5reS+ONrTOPyX1XWtP/MvQRpUsiNdXcVvdxoTxktpGpMHUbMFSrb9CK9sp1QBxm+5&#xA;njJ4g+yLJm/xJqJqa8It/wDYrnG4ZH8zk9w+4O9zf4vD3n7yu8wkmOyJO/1uL9TZLtA7Q/rj9LHQ&#xA;85/1Cm3N/wCY/fmw4j3uCtyKpVrX+9emf8xAzA1n14/6znaT6Mn9Vbq//HW0n/Xk/UuR1f8AfYve&#xA;f0MtL/dZPcP0pvmxde7FWNfmPpUmp+TNSt4Y2lnSMTxRxirM0RD8QO9QKUG+XaeYjMEokNnj35Kz&#xA;vo/n3Ujqv+hrPYJFFDJUO0rTc0Xj2PEN1/jl+t1OMgAG92MIEFnH5i61BLrXlVbQSJqU97JbLVqR&#xA;m0kQPdc4x9sj0kK9KHvSoOHGInCV8gPt6NkchhIEIHzj5Xs9e0W40fUeUMcnFvVUVeNlIKuoNK08&#xA;K7jbMLDlOKYLspxGSFd6ro+j2fl7RLfS7eQy22nxcBMRQuFqWem/2jU0wZZnJMnvKcY4IAdwTn8o&#xA;r621Wy1fW7ZDHFf3NsUQkMV46bas6lh1pNJJmyyw4AI9w/SXVcXESe9n2VJfOf8AzklY6rLrLpZQ&#xA;TXNvJBp91cxwq0nFoWvovUZVBoKSqKnuc2mgkBufP9DRlgZck/1/8p01z8tJNGFt/wA7Bodjay6c&#xA;aKJBcpb1lgqDSkxBQ705UPbNRo9RWryy6Ej9LsdRD/B8Q8ilX/OPPm6wu/y+8xeWtWl4RaPFPO8Y&#xA;JjlWzmRzNQ9ij8t+xbNrqomOSM48/wBLg45UPclyQzTabZzXUPppqNrFcpGTyBinTkN6LXrTpnY6&#xA;bOM0L+B97tcU+ONoTTvI+k+VJTFp9698byCC4mkkUIYy4LCKgLV4g1r75i9m4jESsfxEfANWmxcF&#xA;s/8Ay+eJJvM1hcQNFqNra2ksbs2z292pkHFKClCo5Ek9um9eY9qNT4kCAfTG/n1Z4cvFqAO4s284&#xA;6bPqHkWaC3hae4SGKWKKMVZjHxYhR3PGuw3zn8mIz04A50HJ7N1AxawSJocRB+Lzr8n7XUtJ83a9&#xA;cajbvbQm0t4+Ei8ZPUZ2dF4ncVVj19sv0uCcMIsGtz936m/t3Pjy5ZGJsjhH+6J+8PWB5hhJoIWJ&#xA;7bjJ+I6BKjNIPzF06SSNoVvdIvEUMdy1tc2zD4R7Tt1zIibgff8ArY9U480Xf1Pyzq95Xj9Wsrib&#xA;lsKcImau+3bIwFyASeTvK9n9S8s6RZ04/VrK3h4im3pxKtNtu2MzciVHJM8il8y6/wCV9Q1XUtZt&#xA;YVSSzhm1e3MpkWsbJcXdwisCeVeLr2p+ObXxvDxcR8j9zXjiJGrHOufXm8JtohNcRRMSBI6oSOvx&#xA;Gm2bOXJxI83pcX5RaPL+V+o+dYtVuPW05mjksmhHFpA6KvF/U3UrKpJ4+OYAykZRGm+UfTaZ/wDO&#xA;LWlWt3+YdxeTEetp1jLLbJ35yMkLN9CSMPpw9oSqFd5YYBu+m7L/AJSPUf8AUj/4iucph/xmfuH3&#xA;B3eb/F4e8/eV3mH+6sv+YuL9TZLX8of1x+ljoec/6hTXM9wXYqlWtf716Z/zEDMDWfXj/rOdpPoy&#xA;f1Vur/8AHW0n/Xk/UuR1f99i95/Qy0v91k9w/Sm+bF16yWaKJeUjBR+OAlWP6t5g1iOZV02zEsXE&#xA;8pHK1qajozp0698xsuXKD+7A+KDbzzy7+X9zeebdT1fWpUSKCeJrSBX5K/pxrR26Ns4Pw06jw6w0&#xA;pgIiI3lC7PmSb/H4FktPKABP8S6/u7K4/PXQLWMvJDollPO/IDea5ikVqL7L6R+n5ZtIARwk95aD&#xA;9TNPNztctayW0JYEsl054rxSlVbc1O447eOYOUAi+rm6bIRKuhS+0hWWRkYBlKsGU71BHHofnlGL&#xA;6rcjUyqHvYn+QGp3tr5NudNqqz2V9IsqkAn440ZW+7YV8M2utJ47HUOqxcnpv6X1DxX/AIHMPiLY&#xA;k8MmqQ/mDa6y4M9hLps1pchaD0nW4ieIqtKsWDPX2G2+xztLqIxjUu9HVPdNvbeTVNVuamON2iIE&#xA;itG32W/YcK34ZqoEfmMtd8fuc/U/3OP/ADnmX5pX3lzy/wCV/Mr6Z5c+oX2uEW0+sxJbAXAnZXnq&#xA;RJ64rGrkj06V39832myRkAL3ddOVRpNtY0qzuPy90kxQyxXOiWVtFzeNlVo1RImQMetDQjNh2VqY&#xA;xzcINif3uVppUa72LeT9LTVPNVnaTgvbykvN1PwwoWofZqBc3faOc4cMpDn+tyssuEEp55puDpP5&#xA;0qxIW21vRFtGHQesrzSJ/wALa0+nOC1gvSS8nD0ZrURelafrccFtETE7MkahQvE1+EDuy5LQThGA&#xA;MjvX6FzfXL3lhlj5cv7/AMza5rGryC2tbu9t5ba1R+QaO0gjWFjSh/vOTEEfaA7DfIz6viFRaAGY&#xA;Ws+m226ROX/34QCf15gggMkDq3rSeYtD1OKNhBaC7jueTBW9OeIcaJX4v3ka5aJjhIQRugvOjanr&#xA;XlzU9LsyImvreS2FTSolUo1Wo37JPbIwyVIHuWQsIsXN8AAJnAGwAJyqylv61f8A+/3+842VePee&#xA;PK2paJYeYNdjlQLd3Mn1dOTcx9dWOHkSepMztVewAO+bzT9oROLwpC9uf48g6jN2dLx45YGtxY+e&#xA;/wBvyeC6S82leZNOuJVKPbXNvcUNK0DLKp3/AMmmZ5PFD4ORyL2T82dK826R5Mupb67Etretb2k8&#xA;MMrsgVH9VCysiCgMdOvU5Tg1mDIeGEaPPo4UNLqYzEsk+IDbrZHQHpt80t/I+3vPL3mbytqs8LQ2&#xA;2vNd23qMpUvGeMSHelV9doqe9co1pEgQOYdjh4gd+T6Ysv8AlI9R/wBSP/iK5y2H/GZ+4fcHd5v8&#xA;Xh7z95XeYf7qy/5i4v1Nktfyh/XH6WOh5z/qFNcz3BdiqySCGRkaRAzRnkhIrQ+IyMoA1Y5MozIu&#xA;jzSrWWC6rpROwDyV+5cwNX/fY/ef0Odpf7rJ7h+lGTXr7iIU/wAo/wBMzyXXoJ43duTksfE5GlW+&#xA;h7Y0q0WkUfJ6BOW7N0rkI44xsgc2UpyIAJ5PNPIunyah5u1PzlJLGbO4n1C2tfteoyJLBbxMKDjx&#xA;4Wbd+pzMzTEYiHu/T+tpiN7Zf5i1bSrK1ja6vIbZZHopmcRciATQFytcw5Y5THpBPuczTECW7AfM&#xA;/mnXNK8w6FPpkf1nTJQ73HGhSVSeBUP24g1+dNjm17K7O8WMhIerl5x8/wAdzbnkZERHJGfl1bjT&#xA;fNdzZq6vb63azX0BWoo0F7LSNgQKOsFzGGG/2epGR1uGUfTIbxP6Ofu2cDgMZUXqaaeSOTkRp4nr&#xA;9AzX8LJVBjhFLdPi/wB+tufowqhxYs7vM1FL7yStsDTxOQGMAk9SyMyQATsHm35o6evmLWdM8r2E&#xA;gaQWt7fXLyVWMVjFpEdgx6zvvTqMzNPMQBl7h+lpmL2ZR5/85x6f5de2htJq3tLRpY45ZI4IZBSS&#xA;WQwpIUCx1Cnj9qnauS0cTKd/zWRNPPfKvn3y95evLe9/S0LpqMzWjWwlhdlhd/3ErRoWkVxRWLN8&#xA;HBjTcCu5188meFH+FM9QZVacfmhYTtdWvm0UeLREjmmjapdvTu4XNNqcfQ9YHeu4+jQ4ZCQOM/xf&#xA;q/sQSQeIdHpKQoUUpQoQOJHSnamY4jWzMm91RbUkcjRV8T/DDSHEKn90u/8AO3X6B2xVSMLMSTuT&#xA;1JwUrvQ9saVwtydgMaVXTT1Ucp24L2UfaOHhVgH5txSay2ieUrD04Jb+W4u+cjEKPqds5iMpUMQv&#xA;ryR9sycBEQZHl+thLo+cfzc0saX58vrJd0iitVRqUUhbWJar1qKqRm60UrxD4/e4uX6nv2qt5e8w&#xA;fl35YsPNbs0t7aw319MSyv6yxcVqYg/EuZCRWnTfwzRzzxw5jR4ef9nIuUI8Ud0R528tJL5F0LUN&#xA;GmhjHlnSzNBCzkS/uVt7mMIKGrcrMA1of1GzT5xI7/xfj9KJx226M/0O9gvtVuL23PKC6t7eaJvF&#xA;JI1ZT9xzUYhWqyDyH6HZ5f8AFoe8/pTyWCGYKJUDhGDryFaMOhGZ0oCXMW4UZmPI0vyTF2KrWZv2&#xA;R9OKpTqNlczahYyqpdI2cyNtsDSmYOpxSlkgQNgTf2OZp8sY45gnc1X2o76v7ZmU4bvQoKnYDqTj&#xA;SoSe7hjqIh6jeP7OAlUvmaaY1dq+3bIFUFp2kWWnWcdlYwrb2sIIihT7K1JY/eTXDImRsoASfWfI&#xA;Wl61dCfU5ZLhVJ9OJkjZYweoTkDTpm50vasMOMRGMe/vbhkAFUExg8g6dNpcGmxxNBZ2/wDcyKQr&#xA;KDsaEhuo67U+WV4+1MkcxygDcVXRAykG090/yjotg9nLDbA3Ngsi2tw1SyesAJKf69BWuY2o1M8s&#xA;jKR3LCUuI2U1aAndj8ycx6QhJru3i2jX1X8f2R/XIkql9xJPOaysSB0XoB9GRO6oEaRYjUW1IQr9&#xA;eeIW7XH7XpKxcJ8uRJxs1XRaR0DSQklAPi61HhmRg1Bxiq2VDaP5W0qy1C71Ox0y2gv71zJcXoiV&#xA;ZG5UqOQHKm1aeOZI1xI3CAAE0l0CxuLSa1uolnguEaKeNx8LI4KstPAg5hk+ri6pKKgtILaCOCBA&#xA;I4lCRjsFUUAFfbAVbaFmNW3OCla+r+2NK76v7Y0q5bWu52HjjSukkht1qKKf5juT8hjyVLLi8kcn&#xA;gKV/aO5yBKpVLpVq98upGBZL+OJoYpj9oI5DMoJ6VKjBZqlpJdS8m2WqSSy6loumXs8q8GuJ4keU&#xA;KBQBZG+JadqZVDLq4igYge8sDG+iPi8s2bWVlbyx0ktYY4FMZIoEUDiKbU+jIzwCdGe8u9nSfW/l&#xA;1ZYPRnUJbFeBiO5KUpSh9vHMiMFVtG0dNMvpobaD0NOihhgtFB+EJEiqFG9aKBTKMeOX5iczyNOZ&#xA;kyROCERzFp1mY4bsVdirsVdiqhLdomyDm34YCVQEzzTH422/lHTIFVL0MaV3oY0qpFYySdBQfzHp&#xA;jSo6DT4I6FhzbxPT7skIqickqjLcomy/E3t0wEqgpnmm+2fh/lHTIlVL0cFK70caVfHZvIfhG3ie&#xA;mNKjIbCGPdhzb36fdkhFUTkldirqDFXUGKuoMVWuyIKsQBiqEmvXO0Qp/lHr92RJVAvGzsWYlmPU&#xA;nIq16GNK70PbGlREOmu+7fAv44RFUfBawwj4F37seuSAVVwq7FXYq7FXYqtZ6dBU4qouJH6nbw7Y&#xA;FWeh7YKV3oe2NK2LcntjSqqW0a7kVP4YaVVwq0TT3xVScO2x2HgMCrPQxpXehjSuEBxpVRbdBud8&#xA;aVVwq7FXYq7FXYq4mmKqbyN0UfTgVQaNmNW3OCla9D2xpXeh7Y0q5bUn2GNKrxwxpuBv4nDSr8Ku&#xA;xV2KuxV2KuxV2KuoMVdQYq6gxV1BirsVdirsVdirsVdirsVdirsVdirsVdirsVdirqYq6gxV1Bir&#xA;qDFXUGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:d9cfc958-d90d-a54a-84ff-b8fe6c15acdd</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:d9cfc958-d90d-a54a-84ff-b8fe6c15acdd</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:86964926-c659-2b48-93d0-b5546699b39a</stRef:instanceID>
            <stRef:documentID>xmp.did:86964926-c659-2b48-93d0-b5546699b39a</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea3a206a-cb7b-a343-b301-ed43e6ba1134</stEvt:instanceID>
                  <stEvt:when>2015-01-21T11:01:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d9cfc958-d90d-a54a-84ff-b8fe6c15acdd</stEvt:instanceID>
                  <stEvt:when>2015-02-09T09:04:14+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1150.000000</stDim:w>
            <stDim:h>880.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -880 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 880 li
1150 880 li
1150 0 li
cp
clp
1150 880 mo
0 880 li
0 0 li
1150 0 li
1150 880 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.988235 .988235 .988235 rgb
f
1150 880 mo
0 880 li
0 541.504 li
1150 541.504 li
1150 880 li
cp
.917647 .956863 .764706 rgb
f
943.445 434.941 mo
921.996 434.941 li
922.553 442.35 923.351 449.148 923.571 450.97 cv
927.983 451.055 935.402 451.277 943.445 451.863 cv
943.445 434.941 li
cp
943.445 479.596 mo
942.465 479.727 941.455 479.853 940.41 479.97 cv
936.775 480.379 932.791 480.706 928.756 480.967 cv
928.318 480.996 927.879 481.022 927.44 481.049 cv
943.445 481.049 li
943.445 479.596 li
cp
943.445 493.152 mo
941.235 493.152 li
941.325 494.41 940.531 496.474 934.343 496.474 cv
933.442 496.474 932.507 496.474 931.558 496.474 cv
937.466 497.182 942.345 501.318 942.831 506.461 cv
943.445 512.967 li
943.445 493.152 li
cp
892.842 481.049 mo
892.012 480.803 891.192 480.505 890.396 480.147 cv
889.409 479.88 888.455 479.532 887.556 479.085 cv
885.254 477.961 883.297 476.241 882.075 473.802 cv
881.732 475.088 880.638 476.098 879.236 476.252 cv
877.412 476.454 875.77 475.138 875.569 473.314 cv
871.631 437.625 li
871.631 480.812 li
871.631 487.093 876.741 492.203 883.022 492.203 cv
884.416 492.203 li
883.71 491.552 883.26 490.628 883.26 489.592 cv
883.26 484.609 li
883.26 482.643 884.854 481.049 886.819 481.049 cv
892.842 481.049 li
cp
1134.6 431.663 mo
1117.75 431.663 li
1118.54 434.941 li
1099.49 434.941 li
1099.49 590.476 li
1091.15 590.476 li
1091.15 434.941 li
951.785 434.941 li
951.785 452.597 li
953.425 452.769 955.058 452.959 956.664 453.168 cv
959.996 453.603 963.054 454.313 965.763 455.248 cv
976.063 458.651 982.193 465.125 980.18 472.168 cv
977.885 480.203 977.721 486.507 976.092 493.773 cv
975.062 498.37 969.88 510.895 965.725 525.457 cv
965.426 526.507 965.786 531.143 965.728 531.366 cv
965.622 531.778 963.093 535.124 962.555 537.101 cv
962.49 537.341 962.439 537.598 962.397 537.862 cv
962.083 539.805 962.321 542.264 962.378 543.036 cv
962.381 543.076 li
962.387 543.178 li
962.389 543.216 li
962.388 543.277 li
962.388 543.281 li
962.273 543.695 959.921 547.978 959.543 548.829 cv
959.494 548.951 li
959.494 548.951 959.393 548.938 959.21 548.911 cv
959.149 548.902 li
958.955 549.72 958.763 550.533 958.578 551.339 cv
958.534 551.532 958.522 551.827 958.541 552.199 cv
961.581 551.842 li
961.581 551.842 961.686 552.2 961.873 552.791 cv
963.011 552.58 li
964.289 555.673 li
962.877 555.777 li
963.053 556.27 963.244 556.789 963.447 557.318 cv
964.749 557.076 li
966.026 560.17 li
964.672 560.269 li
964.959 560.901 965.256 561.512 965.561 562.082 cv
966.373 561.931 li
967.633 564.981 li
967.854 565.171 968.074 565.32 968.292 565.411 cv
969.01 566.13 974.039 567.464 976.297 569.311 cv
979.036 571.552 977.421 575.777 977.217 575.777 cv
977.208 575.777 li
977.176 576.477 976.546 577.419 975.421 577.419 cv
973.632 577.419 966.431 577.419 962.852 577.419 cv
960.628 577.419 956.917 575.181 953.795 572.831 cv
953.11 572.831 952.435 572.831 951.785 572.831 cv
951.785 590.476 li
943.445 590.476 li
943.445 570.629 li
940.527 568.773 937.577 566.18 936.195 564.615 cv
933.866 561.978 928.73 558.124 929.114 556.603 cv
929.685 554.644 930.611 553.57 931.504 552.974 cv
931.504 552.966 li
932.852 548.337 937.286 546.537 937.323 546.522 cv
938.096 545.343 938.724 543.907 939.273 542.215 cv
939.256 542.076 li
939.245 541.991 li
939.204 541.654 939.158 541.253 939.114 540.811 cv
938.993 539.582 938.895 538.06 938.982 536.885 cv
939.075 535.642 940.2 533.39 940.326 531.628 cv
940.344 531.376 940.342 531.134 940.313 530.907 cv
940.313 530.907 940.151 525.726 940.176 525.592 cv
940.176 525.592 940.495 525.065 940.912 524.303 cv
939.287 506.796 li
938.929 503.002 934.661 499.915 929.773 499.915 cv
889.905 499.915 li
885.017 499.915 880.749 503.002 880.391 506.796 cv
873.649 575.526 li
870.326 575.526 li
876.847 506.461 li
877.333 501.318 882.212 497.182 888.12 496.474 cv
884.943 496.474 883.022 496.474 883.022 496.474 cv
874.372 496.474 867.36 489.462 867.36 480.812 cv
867.36 480.812 867.36 442.807 867.36 427.297 cv
867.36 421.782 868.538 420.092 869.656 419.727 cv
865.835 385.094 li
865.634 383.27 866.949 381.628 868.773 381.427 cv
870.597 381.226 872.239 382.541 872.44 384.365 cv
881.151 463.315 li
881.36 462.034 881.665 460.673 882.087 459.221 cv
882.223 459.194 li
881.863 450.813 880.945 427.713 880.387 398.511 cv
879.833 369.536 890.06 362.785 902.423 348.317 cv
902.56 348.393 902.711 348.486 902.866 348.584 cv
904.044 345.422 906.103 339.221 906.244 334.186 cv
906.009 334.139 906.006 334.138 906.006 334.138 cv
906.006 334.138 904.141 321.64 903.15 316.639 cv
901.642 310.213 903.18 296.409 915.559 291.648 cv
915.874 291.527 916.262 290.979 916.547 290.764 cv
916.942 290.466 917.364 290.204 917.8 289.971 cv
918.775 289.448 919.826 289.071 920.893 288.786 cv
923.446 288.106 926.132 287.941 928.763 288.063 cv
934.757 288.339 940.895 290.117 945.861 293.541 cv
949.546 296.081 953.31 299.887 953.469 304.563 cv
953.555 307.075 953.472 309.749 952.36 312.02 cv
951.448 313.881 950.34 315.364 949.001 316.556 cv
949.107 319.086 949.135 321.734 948.951 323.532 cv
949.356 324.156 949.305 324.845 948.875 325.225 cv
948.785 325.305 948.701 325.352 948.619 325.373 cv
948.612 325.463 li
948.44 325.561 li
947.586 326.888 945.666 327.537 945.763 329.55 cv
945.977 333.973 947.367 337.932 946.876 339.269 cv
946.953 339.282 li
946.832 339.568 946.63 339.74 946.318 339.78 cv
945.182 339.926 943.694 339.768 943.256 340.154 cv
943.24 340.147 li
943.062 340.346 li
942.81 340.754 942.585 341.465 942.266 342.303 cv
942.172 342.549 942.419 343.551 941.476 343.904 cv
942.033 344.518 941.297 345.072 940.703 346.386 cv
939.908 348.678 939.102 350.544 937.705 351.319 cv
937.499 351.439 li
937.489 351.444 li
936.719 351.792 935.459 351.606 934.03 351.182 cv
933.762 351.102 933.488 351.015 933.21 350.92 cv
932.417 350.651 931.593 350.33 930.784 349.999 cv
929.915 349.643 929.064 349.277 928.292 348.956 cv
928.045 348.853 927.809 348.757 927.58 348.665 cv
927.187 348.508 926.825 348.37 926.501 348.26 cv
925.593 347.95 924.986 347.855 924.903 348.178 cv
924.694 348.848 924.268 349.861 923.772 351.059 cv
923.276 352.256 922.709 353.638 922.219 355.048 cv
921.892 355.989 921.599 356.941 921.383 357.859 cv
921.383 357.861 li
926.103 370.339 li
926.103 370.339 926.164 370.53 926.271 370.874 cv
926.271 370.875 li
926.271 370.875 li
926.994 373.215 929.828 382.773 930.084 389.675 cv
930.301 395.547 926.685 401.821 924.081 408.259 cv
925.98 408.493 927.836 408.808 928.483 409.067 cv
928.478 409.165 li
936.085 410.249 944.437 412.019 952.348 412.318 cv
952.465 412.322 952.578 412.341 952.69 412.367 cv
953.12 412.375 953.539 412.371 953.951 412.359 cv
953.78 412.275 953.626 412.158 953.528 411.992 cv
953.463 411.882 953.419 411.757 953.401 411.622 cv
953.401 411.622 li
953.362 411.336 953.458 411.067 953.631 410.862 cv
953.625 410.862 li
953.738 410.768 li
953.891 410.64 li
953.997 410.578 954.116 410.535 954.245 410.517 cv
956.337 410.238 li
958.429 409.958 li
958.429 409.958 li
958.43 409.958 li
958.566 409.94 958.698 409.951 958.822 409.986 cv
958.877 410.013 li
958.979 410.048 959.077 410.092 959.162 410.158 cv
959.165 410.159 li
959.163 410.159 li
959.359 410.312 959.499 410.537 959.534 410.802 cv
959.534 410.802 li
959.58 411.144 959.432 411.455 959.189 411.665 cv
961.294 411.166 963.017 410.498 964.34 409.976 cv
968.05 408.514 970.512 407.739 972.252 407.382 cv
973.782 406.777 974.449 406.758 975.719 407.007 cv
979.622 408.703 981.575 409.336 983.532 410.289 cv
984.12 410.575 986.451 413.005 987.938 414.974 cv
989.28 416.751 991.04 417.988 989.171 418.277 cv
988.844 418.328 988.369 418.281 987.871 418.134 cv
988.686 419.121 989.49 419.612 987.856 420.139 cv
986.802 420.479 984.944 418.609 984.71 417.75 cv
983.41 417.297 982.374 415.632 982.373 415.631 cv
982.121 415.268 979.772 415.025 979.32 414.85 cv
979.205 414.806 li
977.93 415.031 976.544 415.405 975.602 416.07 cv
973.625 417.466 967.956 418.858 963.957 417.357 cv
962.77 417.259 961.007 417.503 959.255 417.852 cv
959.258 417.956 959.259 418.029 959.259 418.029 cv
959.067 418.68 956.338 419.033 955.624 418.871 cv
955.543 418.735 li
946.771 421.325 936.014 424.052 925.871 424.888 cv
925.804 425.035 925.742 425.143 925.685 425.195 cv
925.456 425.225 li
1134.6 425.225 li
1134.6 431.663 li
cp
416.52 432.195 mo
412.477 468.836 li
412.27 470.709 410.585 472.059 408.712 471.853 cv
406.84 471.646 405.489 469.961 405.696 468.088 cv
405.995 465.377 li
405.179 468.902 403.396 471.548 401.105 473.462 cv
400.929 473.611 400.747 473.751 400.566 473.891 cv
400.45 473.982 li
398.744 475.274 396.805 476.183 394.797 476.777 cv
400.926 476.777 li
402.945 476.777 404.581 478.414 404.581 480.432 cv
404.581 485.549 li
404.581 486.612 404.119 487.561 403.394 488.229 cv
404.825 488.229 li
411.273 488.229 416.52 482.983 416.52 476.534 cv
416.52 432.195 li
cp
354.994 492.614 mo
354.02 492.614 353.06 492.614 352.134 492.614 cv
345.781 492.614 344.966 490.495 345.059 489.203 cv
338.552 489.203 li
336.534 489.203 334.898 487.567 334.898 485.549 cv
334.898 483.357 li
334.48 483.427 334.061 483.499 333.638 483.578 cv
333.791 484.096 333.955 484.632 334.139 485.205 cv
334.203 485.404 334.261 485.601 334.32 485.798 cv
334.534 486.513 334.717 487.217 334.871 487.916 cv
335.095 488.933 335.261 489.94 335.38 490.956 cv
335.418 491.29 335.453 491.625 335.482 491.961 cv
335.528 492.483 335.562 493.008 335.587 493.54 cv
335.602 493.841 335.613 494.144 335.622 494.45 cv
335.638 495.028 335.645 495.616 335.644 496.216 cv
335.643 496.816 335.635 497.428 335.621 498.055 cv
335.545 501.504 335.304 505.412 335.243 510.294 cv
335.238 510.738 335.234 511.19 335.231 511.65 cv
335.229 512.11 335.229 512.579 335.23 513.056 cv
335.236 514.966 335.274 517.017 335.36 519.234 cv
335.371 519.497 335.41 519.792 335.47 520.104 cv
335.53 520.417 335.612 520.748 335.708 521.086 cv
335.852 521.594 336.027 522.117 336.209 522.616 cv
336.374 523.067 336.543 523.494 336.7 523.877 cv
336.8 524.117 li
337.117 524.875 337.363 525.395 337.363 525.395 cv
337.366 525.439 337.292 526.009 337.19 526.771 cv
337.128 527.228 337.056 527.755 336.984 528.279 cv
336.791 529.677 336.597 531.057 336.597 531.057 cv
336.547 531.272 336.524 531.502 336.51 531.738 cv
336.499 531.825 li
336.421 533.702 337.311 536.102 337.26 537.426 cv
337.227 538.286 337.084 539.321 336.91 540.309 cv
336.586 542.161 336.157 543.841 336.141 543.903 cv
336.51 545.495 336.985 546.85 337.616 547.973 cv
337.827 547.691 li
337.827 547.691 338.343 548.118 339.079 548.849 cv
343.42 502.868 li
343.919 497.587 348.928 493.341 354.994 492.614 cv
cp
326.886 548.944 mo
326.7 548.133 326.507 547.314 326.312 546.492 cv
326.265 546.319 325.715 545.27 325.1 544.106 cv
325.012 543.94 324.923 543.772 324.834 543.603 cv
324.656 543.266 324.477 542.928 324.309 542.607 cv
324.224 542.447 324.143 542.291 324.065 542.142 cv
323.675 541.395 323.381 540.812 323.341 540.671 cv
323.341 540.666 li
323.34 540.604 li
323.342 540.562 li
323.348 540.461 li
323.351 540.419 li
323.409 539.626 323.654 537.102 323.332 535.107 cv
323.332 535.107 li
323.288 534.835 323.237 534.571 323.17 534.325 cv
322.833 533.088 321.738 531.331 320.908 530.05 cv
320.908 559.6 li
323.684 555.645 326.447 550.114 326.447 550.114 cv
326.867 550.487 li
326.948 549.784 326.955 549.244 326.886 548.944 cv
cp
312.266 429.294 mo
285.64 429.294 li
285.64 431.663 li
268.793 431.663 li
269.584 434.941 li
250.536 434.941 li
250.536 564.136 li
257.687 562.614 261.744 559.614 271.999 554.175 cv
272.053 554.367 li
272.587 553.958 272.926 553.632 273 553.426 cv
273.281 552.643 273.561 551.85 273.841 551.052 cv
273.856 551.003 273.875 550.872 273.898 550.679 cv
274.01 549.714 274.198 547.2 274.34 545.699 cv
274.369 545.399 274.395 545.139 274.419 544.941 cv
274.443 544.742 274.464 544.605 274.481 544.548 cv
274.483 544.546 li
274.516 544.492 li
274.539 544.459 li
274.603 544.372 li
274.615 544.355 li
275.081 543.733 276.665 541.725 277.476 539.86 cv
277.586 539.608 277.685 539.357 277.761 539.114 cv
278.392 537.107 278.059 532.814 278.196 532.399 cv
278.27 532.174 281.15 528.366 281.473 527.294 cv
281.473 527.292 li
285.951 512.404 288.411 498.707 290.068 494.164 cv
292.687 486.98 296.038 481.442 298.506 473.224 cv
298.971 471.676 301.335 469.723 305.047 467.55 cv
303.616 462.331 306.535 457.425 312.266 453.797 cv
312.266 429.294 li
cp
135.29 425.225 mo
135.29 424.954 li
116.326 424.932 li
114.513 424.93 113.018 423.612 112.72 421.884 cv
115.592 421.887 li
115.677 421.504 116.003 421.211 116.412 421.211 cv
135.29 421.211 li
135.29 419.225 li
136.839 419.225 li
136.298 418.722 135.858 418.136 135.753 417.75 cv
134.453 417.297 133.416 415.632 133.415 415.631 cv
133.163 415.268 130.814 415.025 130.362 414.85 cv
130.248 414.806 li
128.973 415.031 127.587 415.405 126.645 416.07 cv
124.667 417.466 118.998 418.858 114.999 417.357 cv
113.813 417.259 112.05 417.503 110.298 417.852 cv
110.3 417.956 110.301 418.029 110.301 418.029 cv
110.11 418.68 107.381 419.033 106.667 418.871 cv
106.586 418.735 li
97.8136 421.325 87.0561 424.052 76.9135 424.888 cv
76.8468 425.035 76.7843 425.143 76.7279 425.195 cv
76.4986 425.225 li
135.29 425.225 li
cp
94.4874 434.941 mo
73.0388 434.941 li
73.5955 442.35 74.393 449.148 74.6134 450.97 cv
79.0252 451.055 86.4444 451.277 94.4874 451.863 cv
94.4874 434.941 li
cp
94.4874 479.596 mo
93.507 479.727 92.4976 479.853 91.4523 479.97 cv
87.8175 480.379 83.8338 480.706 79.7981 480.967 cv
79.3602 480.996 78.9212 481.022 78.4824 481.049 cv
94.4874 481.049 li
94.4874 479.596 li
cp
94.4874 493.152 mo
92.277 493.152 li
92.3671 494.41 91.5734 496.474 85.3858 496.474 cv
84.4842 496.474 83.5493 496.474 82.6004 496.474 cv
88.5086 497.182 93.3874 501.318 93.8731 506.461 cv
94.4874 512.967 li
94.4874 493.152 li
cp
43.8845 481.049 mo
43.0543 480.803 42.2343 480.505 41.4382 480.147 cv
40.4519 479.88 39.4972 479.532 38.5988 479.085 cv
36.2966 477.961 34.3397 476.241 33.1171 473.802 cv
32.7744 475.088 31.6805 476.098 30.278 476.252 cv
28.4542 476.454 26.8125 475.138 26.6113 473.314 cv
22.6735 437.625 li
22.6735 480.812 li
22.6735 487.093 27.7837 492.203 34.0647 492.203 cv
35.4583 492.203 li
34.752 491.552 34.3021 490.628 34.3021 489.592 cv
34.3021 484.609 li
34.3021 482.643 35.896 481.049 37.8619 481.049 cv
43.8845 481.049 li
cp
422.471 378.262 mo
418.547 413.819 li
419.696 414.193 420.905 415.929 420.905 421.591 cv
420.905 437.515 420.905 476.534 420.905 476.534 cv
420.905 485.415 413.706 492.614 404.825 492.614 cv
404.825 492.614 402.852 492.614 399.591 492.614 cv
405.657 493.341 410.666 497.587 411.165 502.868 cv
417.86 573.775 li
414.449 573.775 li
407.526 503.211 li
407.158 499.316 402.777 496.147 397.759 496.147 cv
356.826 496.147 li
351.808 496.147 347.427 499.316 347.059 503.211 cv
342.439 552.989 li
342.533 553.14 342.623 553.294 342.713 553.45 cv
342.836 553.66 li
342.978 553.914 343.113 554.172 343.24 554.435 cv
343.298 554.565 li
343.354 554.685 343.409 554.805 343.461 554.926 cv
344.152 555.609 344.776 556.69 345.073 558.431 cv
345.191 559.322 343.516 560.962 341.535 562.725 cv
340.509 573.775 li
336.725 573.775 li
337.421 566.407 li
337.223 566.599 337.035 566.786 336.861 566.967 cv
334.159 569.777 326.538 575.72 322.864 575.72 cv
322.293 575.72 321.625 575.72 320.908 575.72 cv
320.908 590.476 li
312.266 590.476 li
312.266 575.72 li
311.243 575.72 310.424 575.72 309.961 575.72 cv
308.806 575.72 308.158 574.752 308.126 574.034 cv
308.117 574.034 li
308.048 573.961 li
308.021 573.912 li
307.948 573.764 li
307.911 573.679 li
307.881 573.606 307.85 573.522 307.819 573.43 cv
307.789 573.345 li
307.748 573.218 307.707 573.078 307.668 572.924 cv
307.643 572.812 li
307.614 572.689 307.587 572.56 307.562 572.424 cv
307.533 572.248 li
307.512 572.116 307.496 571.981 307.481 571.84 cv
307.464 571.662 li
307.448 571.462 307.438 571.257 307.441 571.046 cv
307.443 571.02 li
307.446 570.821 307.461 570.618 307.485 570.414 cv
307.49 570.34 li
307.497 570.332 li
307.633 569.286 308.062 568.212 309.06 567.395 cv
309.88 566.725 311.056 566.121 312.266 565.587 cv
312.266 507.366 li
311.505 509.217 310.577 510.948 309.484 512.722 cv
309.369 512.909 309.251 513.098 309.132 513.286 cv
308.769 513.862 308.388 514.446 307.99 515.041 cv
307.877 515.21 307.762 515.381 307.646 515.553 cv
307.349 515.992 307.045 516.437 306.73 516.894 cv
303.913 520.973 300.382 525.815 296.169 532.988 cv
295.835 533.557 295.549 534.382 295.315 535.248 cv
294.799 537.154 294.53 539.256 294.53 539.256 cv
294.5 539.311 293.788 540.151 292.996 541.078 cv
291.978 542.271 290.829 543.609 290.829 543.609 cv
290.117 544.303 289.614 545.423 289.18 546.524 cv
288.747 547.625 288.383 548.708 287.95 549.329 cv
287.145 550.485 285.839 551.877 284.851 552.873 cv
284.103 553.627 283.543 554.149 283.512 554.178 cv
282.964 555.717 282.632 557.114 282.558 558.4 cv
282.888 558.276 li
282.888 558.276 283.71 560.855 283.882 563.916 cv
283.883 563.91 li
283.886 563.979 li
283.894 564.188 li
283.903 564.403 283.909 564.619 283.911 564.837 cv
283.912 564.931 283.911 565.025 283.911 565.119 cv
283.909 565.333 283.903 565.548 283.893 565.763 cv
283.883 566.005 li
283.865 566.295 283.84 566.586 283.805 566.875 cv
283.783 567.017 li
283.751 567.258 283.712 567.498 283.666 567.735 cv
283.649 567.826 283.629 567.915 283.609 568.005 cv
283.565 568.206 283.515 568.404 283.459 568.6 cv
283.589 569.75 283.468 571.129 282.802 572.698 cv
282.337 573.693 263.385 574.262 250.536 574.227 cv
250.536 590.476 li
242.196 590.476 li
242.196 574.075 li
240.363 573.993 239.179 573.877 238.941 573.725 cv
237.868 573.037 238.004 571.822 238.515 571.353 cv
238.238 570.686 237.573 568.352 238.632 567.09 cv
238.631 567.118 li
239.156 566.124 240.198 565.317 242.181 565.19 cv
242.196 565.189 li
242.196 434.941 li
167.837 434.941 li
167.837 590.476 li
159.194 590.476 li
159.194 434.941 li
102.827 434.941 li
102.827 452.597 li
104.468 452.769 106.101 452.959 107.706 453.168 cv
111.038 453.603 114.097 454.313 116.805 455.248 cv
127.105 458.651 133.236 465.125 131.223 472.168 cv
128.927 480.203 128.763 486.507 127.135 493.773 cv
126.104 498.37 120.922 510.895 116.768 525.457 cv
116.468 526.507 116.829 531.143 116.771 531.366 cv
116.665 531.778 114.135 535.124 113.597 537.101 cv
113.532 537.341 113.482 537.598 113.439 537.862 cv
113.125 539.805 113.364 542.264 113.421 543.036 cv
113.424 543.076 li
113.43 543.178 li
113.432 543.216 li
113.43 543.277 li
113.43 543.281 li
113.315 543.695 110.964 547.978 110.585 548.829 cv
110.537 548.951 li
110.537 548.951 110.436 548.938 110.252 548.911 cv
110.192 548.902 li
109.997 549.72 109.806 550.533 109.621 551.339 cv
109.576 551.532 109.565 551.827 109.583 552.199 cv
112.624 551.842 li
112.624 551.842 112.729 552.2 112.915 552.791 cv
114.053 552.58 li
115.331 555.673 li
113.919 555.777 li
114.095 556.27 114.287 556.789 114.489 557.318 cv
115.791 557.076 li
117.069 560.17 li
115.715 560.269 li
116.001 560.901 116.299 561.512 116.604 562.082 cv
117.416 561.931 li
118.675 564.981 li
118.896 565.171 119.117 565.32 119.334 565.411 cv
120.053 566.13 125.082 567.464 127.34 569.311 cv
130.079 571.552 128.464 575.777 128.259 575.777 cv
128.25 575.777 li
128.218 576.477 127.588 577.419 126.463 577.419 cv
124.674 577.419 117.473 577.419 113.895 577.419 cv
111.67 577.419 107.959 575.181 104.837 572.831 cv
104.152 572.831 103.477 572.831 102.827 572.831 cv
102.827 590.476 li
94.4874 590.476 li
94.4874 570.629 li
91.5691 568.773 88.6191 566.18 87.2373 564.615 cv
84.9083 561.978 79.772 558.124 80.1568 556.603 cv
80.7271 554.644 81.653 553.57 82.5467 552.974 cv
82.5468 552.966 li
83.8947 548.337 88.3282 546.537 88.3656 546.522 cv
89.1383 545.343 89.7662 543.907 90.3159 542.215 cv
90.2982 542.076 li
90.2877 541.991 li
90.2462 541.654 90.2001 541.253 90.1566 540.811 cv
90.0359 539.582 89.937 538.06 90.0247 536.885 cv
90.1175 535.642 91.2425 533.39 91.3688 531.628 cv
91.3869 531.376 91.3845 531.134 91.3559 530.907 cv
91.3559 530.907 91.1935 525.726 91.2187 525.592 cv
91.2187 525.592 91.5379 525.065 91.9541 524.303 cv
90.3291 506.796 li
89.971 503.002 85.7035 499.915 80.8159 499.915 cv
40.947 499.915 li
36.0593 499.915 31.7918 503.002 31.4338 506.796 cv
24.6911 575.526 li
21.3685 575.526 li
27.8897 506.461 li
28.3755 501.318 33.2542 497.182 39.1625 496.474 cv
35.9857 496.474 34.0648 496.474 34.0648 496.474 cv
25.4146 496.474 18.4021 489.462 18.4021 480.812 cv
18.4021 480.812 18.4021 442.807 18.4021 427.297 cv
18.4021 421.782 19.58 420.092 20.6988 419.727 cv
16.8775 385.094 li
16.6762 383.27 17.9916 381.628 19.8154 381.427 cv
21.6393 381.226 23.281 382.541 23.4822 384.365 cv
32.1931 463.315 li
32.4023 462.034 32.7078 460.673 33.1297 459.221 cv
33.2655 459.194 li
32.9058 450.813 31.9873 427.713 31.429 398.511 cv
30.875 369.536 41.1027 362.785 53.4654 348.317 cv
53.6026 348.393 53.7538 348.486 53.9081 348.584 cv
55.0868 345.422 57.1453 339.221 57.286 334.186 cv
57.0515 334.139 57.0485 334.138 57.0485 334.138 cv
57.0485 334.138 55.1837 321.64 54.1925 316.639 cv
52.684 310.213 54.2229 296.409 66.6019 291.648 cv
66.916 291.527 67.3042 290.979 67.5898 290.764 cv
67.9847 290.466 68.4065 290.204 68.8422 289.971 cv
69.8175 289.448 70.868 289.071 71.9357 288.786 cv
74.4887 288.106 77.1743 287.941 79.8056 288.063 cv
85.7995 288.339 91.937 290.117 96.903 293.541 cv
100.588 296.081 104.352 299.887 104.512 304.563 cv
104.597 307.075 104.514 309.749 103.402 312.02 cv
102.49 313.881 101.383 315.364 100.043 316.556 cv
100.15 319.086 100.178 321.734 99.9936 323.532 cv
100.398 324.156 100.347 324.845 99.9177 325.225 cv
99.8274 325.305 99.7434 325.352 99.6617 325.373 cv
99.6542 325.463 li
99.482 325.561 li
98.628 326.888 96.7083 327.537 96.8057 329.55 cv
97.0197 333.973 98.409 337.932 97.9183 339.269 cv
97.9953 339.282 li
97.874 339.568 97.6728 339.74 97.3607 339.78 cv
96.224 339.926 94.7369 339.768 94.2989 340.154 cv
94.2825 340.147 li
94.1042 340.346 li
93.8529 340.754 93.6278 341.465 93.3084 342.303 cv
93.2145 342.549 93.4613 343.551 92.5189 343.904 cv
93.0756 344.518 92.3396 345.072 91.7459 346.386 cv
90.9506 348.678 90.1449 350.544 88.7476 351.319 cv
88.5411 351.439 li
88.5319 351.444 li
87.7613 351.792 86.5019 351.606 85.0722 351.182 cv
84.8041 351.102 84.5305 351.015 84.2524 350.92 cv
83.4594 350.651 82.6352 350.33 81.826 349.999 cv
80.9572 349.643 80.1067 349.277 79.3342 348.956 cv
79.0872 348.853 78.8511 348.757 78.622 348.665 cv
78.2298 348.508 77.8675 348.37 77.5432 348.26 cv
76.6353 347.95 76.0288 347.855 75.9456 348.178 cv
75.7368 348.848 75.3109 349.861 74.8147 351.059 cv
74.3184 352.256 73.7518 353.638 73.2612 355.048 cv
72.9342 355.989 72.641 356.941 72.4249 357.859 cv
72.4259 357.861 li
77.1454 370.339 li
77.1454 370.339 77.2068 370.53 77.3132 370.874 cv
77.3135 370.875 li
77.3134 370.875 li
78.0368 373.215 80.8704 382.773 81.126 389.675 cv
81.3435 395.547 77.727 401.821 75.1239 408.259 cv
77.0226 408.493 78.8786 408.808 79.525 409.067 cv
79.5208 409.165 li
87.1276 410.249 95.4791 412.019 103.391 412.318 cv
103.508 412.322 103.621 412.341 103.732 412.367 cv
104.162 412.375 104.582 412.371 104.994 412.359 cv
104.822 412.275 104.669 412.158 104.57 411.992 cv
104.506 411.882 104.461 411.757 104.443 411.622 cv
104.443 411.622 li
104.405 411.336 104.5 411.067 104.674 410.862 cv
104.667 410.862 li
104.78 410.768 li
104.933 410.64 li
105.039 410.578 105.158 410.535 105.287 410.517 cv
107.38 410.238 li
109.472 409.958 li
109.472 409.958 li
109.473 409.958 li
109.608 409.94 109.741 409.951 109.865 409.986 cv
109.919 410.013 li
110.021 410.048 110.12 410.092 110.204 410.158 cv
110.207 410.159 li
110.206 410.159 li
110.402 410.312 110.541 410.537 110.577 410.802 cv
110.577 410.802 li
110.622 411.144 110.474 411.455 110.231 411.665 cv
112.336 411.166 114.059 410.498 115.383 409.976 cv
119.092 408.514 121.554 407.739 123.295 407.382 cv
124.824 406.777 125.491 406.758 126.762 407.007 cv
130.665 408.703 132.618 409.336 134.575 410.289 cv
135.163 410.575 137.493 413.005 138.981 414.974 cv
140.323 416.751 142.082 417.988 140.213 418.277 cv
139.886 418.328 139.411 418.281 138.913 418.134 cv
139.285 418.584 139.652 418.93 139.789 419.225 cv
183.297 419.225 li
203.648 356.157 li
203.769 355.782 204.096 355.543 204.448 355.524 cv
204.485 355.412 li
204.697 355.55 li
204.743 355.554 li
204.918 355.611 205.048 355.732 205.148 355.875 cv
206.242 356.81 206.737 358.332 206.264 359.786 cv
186.952 419.225 li
271.927 419.225 li
270.711 418.97 269.718 418.122 269.263 416.99 cv
267.73 416.962 266.316 415.988 265.816 414.448 cv
246.058 353.637 li
245.582 352.173 246.08 350.641 247.181 349.699 cv
247.283 349.556 247.414 349.434 247.59 349.376 cv
247.636 349.372 li
247.85 349.233 li
247.886 349.346 li
248.241 349.365 248.57 349.605 248.692 349.983 cv
269.588 414.738 li
269.691 415.057 269.608 415.379 269.417 415.61 cv
269.624 416.25 li
271.705 416.247 li
271.76 415.823 272.108 415.491 272.547 415.491 cv
336.536 415.491 li
336.947 415.491 337.276 415.785 337.362 416.171 cv
340.253 416.168 li
339.961 417.864 338.52 419.158 336.757 419.225 cv
357.287 419.225 li
357.287 425.896 li
339.828 425.896 li
340.648 429.294 li
320.908 429.294 li
320.908 449.959 li
323.39 449.207 326.086 448.622 328.953 448.24 cv
341.827 446.523 356.201 446.036 363.194 445.898 cv
363.372 444.422 363.92 439.762 364.425 434.111 cv
364.688 431.17 364.939 427.965 365.119 424.811 cv
365.225 422.955 365.304 421.12 365.348 419.363 cv
364.926 419.352 364.502 419.34 364.076 419.321 cv
352.753 418.848 340.317 415.737 330.369 412.8 cv
330.285 412.941 li
329.552 413.107 326.751 412.744 326.554 412.075 cv
326.554 412.075 326.555 412 326.557 411.893 cv
324.772 411.538 322.968 411.285 321.75 411.379 cv
317.643 412.932 311.808 411.5 309.774 410.065 cv
307.851 408.707 304.123 408.52 303.082 408.402 cv
302.713 408.865 302.202 409.365 301.528 409.677 cv
301.051 411.563 299.232 412.368 298.234 412.217 cv
297.948 412.174 297.751 412.107 297.614 412.024 cv
296.951 412.301 296.274 412.397 295.844 412.331 cv
294.946 412.192 294.869 411.838 295.176 411.316 cv
294.096 411.94 292.917 411.793 292.432 411.439 cv
291.117 410.478 293.073 409.778 294.963 408.357 cv
297.057 406.782 299.476 404.87 300.069 404.771 cv
300.367 404.721 300.666 404.687 300.965 404.648 cv
301.259 404.383 301.494 404.196 301.632 404.129 cv
303.642 403.151 305.647 402.5 309.654 400.76 cv
310.958 400.504 311.643 400.524 313.214 401.145 cv
315.001 401.511 317.528 402.307 321.337 403.808 cv
322.696 404.344 324.465 405.029 326.625 405.542 cv
326.376 405.326 326.224 405.007 326.271 404.656 cv
326.307 404.384 326.451 404.153 326.652 403.996 cv
326.65 403.996 li
326.653 403.994 li
326.739 403.927 326.841 403.883 326.945 403.846 cv
327.002 403.818 li
327.125 403.784 327.257 403.775 327.391 403.79 cv
327.405 403.789 li
331.701 404.364 li
331.834 404.382 331.956 404.426 332.065 404.489 cv
332.223 404.621 li
332.338 404.717 li
332.332 404.718 li
332.51 404.928 332.608 405.204 332.568 405.498 cv
332.522 405.845 332.295 406.111 332.003 406.255 cv
332.426 406.267 332.857 406.271 333.298 406.262 cv
333.413 406.236 333.529 406.216 333.649 406.212 cv
343.424 405.843 353.853 403.288 362.815 402.405 cv
362.789 402.336 li
362.697 402.107 362.6 401.878 362.506 401.649 cv
362.372 401.323 362.24 400.997 362.102 400.673 cv
362.008 400.45 361.911 400.228 361.815 400.006 cv
361.668 399.665 361.522 399.324 361.373 398.984 cv
361.304 398.827 361.235 398.671 361.166 398.515 cv
360.868 397.841 360.572 397.169 360.276 396.5 cv
360.197 396.321 360.117 396.141 360.039 395.962 cv
360.04 395.962 li
358.078 391.487 356.353 387.127 356.508 382.965 cv
356.809 374.835 362.265 357.434 362.265 357.434 cv
362.265 357.434 362.542 357.211 363.034 356.816 cv
363.975 354.269 li
363.975 354.269 li
365.381 350.463 li
365.381 350.463 li
365.441 350.3 li
365.275 349.593 365.064 348.866 364.827 348.14 cv
364.511 347.172 364.15 346.204 363.787 345.284 cv
363.269 343.972 362.751 342.763 362.357 341.787 cv
362.31 341.671 362.266 341.559 362.223 341.45 cv
362.145 341.251 362.073 341.065 362.01 340.891 cv
361.939 340.699 361.875 340.518 361.826 340.36 cv
361.751 340.071 361.265 340.11 360.521 340.336 cv
360.334 340.395 li
360.161 340.452 359.975 340.517 359.779 340.589 cv
359.558 340.671 359.324 340.762 359.078 340.861 cv
358.904 340.931 358.724 341.004 358.539 341.08 cv
357.112 341.669 355.403 342.425 353.781 343.007 cv
352.063 344.02 350.519 344.678 349.597 344.727 cv
346.296 344.904 345.576 342.462 346.648 341.137 cv
346.272 340.367 345.937 339.481 345.604 338.521 cv
344.995 337.172 344.239 336.603 344.811 335.972 cv
343.843 335.61 344.097 334.581 344 334.329 cv
343.936 334.156 li
343.851 334.208 li
343.851 334.208 342.627 333.016 343.35 332.88 cv
343.444 332.862 li
343.357 332.654 343.271 332.463 343.183 332.32 cv
343 332.116 li
342.983 332.123 li
342.533 331.726 341.007 331.888 339.84 331.738 cv
339.519 331.697 339.313 331.521 339.188 331.228 cv
339.195 331.226 li
338.621 329.988 339.638 326.502 339.758 322.023 cv
339.764 321.796 339.578 320.221 338.791 318.694 cv
338.385 317.907 338.072 317.021 337.829 316.078 cv
337.715 316.065 337.63 316.032 337.605 315.945 cv
337.598 315.85 li
337.512 315.816 337.423 315.754 337.329 315.657 cv
336.834 315.154 336.813 314.343 337.382 313.747 cv
336.864 309.958 337.165 305.735 337.381 302.964 cv
337.412 302.576 337.47 302.099 337.589 301.553 cv
337.358 301.472 li
337.145 301.459 li
337.096 301.359 li
333.145 299.458 337.805 291.676 347.814 287.278 cv
373.468 276.005 384.195 298.61 381.778 298.835 cv
381.773 298.835 li
384.479 304.624 384.934 311.239 383.793 314.248 cv
382.183 318.495 381.115 327.207 381.078 327.517 cv
381.276 329.651 381.74 331.907 382.294 334.017 cv
387.07 331.629 391.133 332.217 391.133 332.217 cv
391.131 332.222 li
394.328 332.652 401.683 338.811 406.694 341.568 cv
412.452 344.734 407.134 355.309 402.182 362.548 cv
405.72 369.558 407.792 378.395 407.531 392.037 cv
406.946 422.64 405.975 446.721 405.623 454.86 cv
405.787 454.895 405.943 454.929 406.108 454.963 cv
406.426 456.839 406.567 458.566 406.57 460.169 cv
415.69 377.514 li
415.896 375.641 417.582 374.291 419.454 374.497 cv
421.327 374.704 422.677 376.389 422.471 378.262 cv
cp
823.593 438.834 mo
819.627 474.772 li
819.425 476.609 817.772 477.933 815.935 477.731 cv
814.099 477.528 812.774 475.875 812.977 474.038 cv
813.27 471.38 li
812.47 474.837 810.72 477.431 808.474 479.308 cv
808.301 479.454 808.123 479.592 807.945 479.729 cv
807.832 479.819 li
806.158 481.086 804.256 481.977 802.287 482.56 cv
808.298 482.56 li
810.278 482.56 811.883 484.165 811.883 486.145 cv
811.883 491.163 li
811.883 492.206 811.43 493.137 810.719 493.792 cv
812.122 493.792 li
818.447 493.792 823.593 488.646 823.593 482.322 cv
823.593 438.834 li
cp
763.249 498.093 mo
762.293 498.093 761.352 498.093 760.444 498.093 cv
754.213 498.093 753.414 496.015 753.504 494.748 cv
747.123 494.748 li
745.143 494.748 743.538 493.143 743.538 491.163 cv
743.538 489.014 li
743.129 489.082 742.718 489.153 742.303 489.23 cv
742.453 489.739 742.613 490.264 742.794 490.826 cv
743.23 492.18 743.544 493.488 743.77 494.794 cv
743.785 494.885 743.801 494.976 743.816 495.066 cv
743.891 495.532 743.956 495.999 744.011 496.467 cv
744.049 496.794 744.083 497.122 744.112 497.452 cv
744.156 497.964 744.19 498.479 744.215 499.001 cv
744.255 499.851 744.271 500.718 744.27 501.611 cv
744.295 502.653 744.271 503.677 744.213 504.703 cv
744.207 504.898 744.201 505.093 744.194 505.291 cv
744.183 505.625 744.17 505.964 744.157 506.308 cv
744.132 506.974 744.105 507.66 744.078 508.369 cv
744.063 508.735 744.049 509.108 744.035 509.487 cv
743.981 510.931 743.93 512.469 743.898 514.123 cv
743.897 514.171 li
743.873 515.424 743.86 516.744 743.864 518.141 cv
743.864 518.142 li
743.87 520.016 743.907 522.027 743.992 524.201 cv
744.008 524.616 744.099 525.109 744.23 525.63 cv
744.294 525.883 744.368 526.142 744.449 526.404 cv
744.636 527.011 744.858 527.623 745.075 528.178 cv
745.146 528.361 745.217 528.537 745.285 528.705 cv
745.333 528.821 745.379 528.932 745.424 529.039 cv
745.725 529.755 745.956 530.244 745.956 530.244 cv
745.96 530.297 745.855 531.09 745.723 532.063 cv
745.701 532.224 745.678 532.391 745.655 532.561 cv
745.446 534.084 745.205 535.797 745.205 535.797 cv
744.764 537.698 745.913 540.56 745.856 542.044 cv
745.838 542.504 745.788 543.016 745.719 543.543 cv
745.627 544.246 745.5 544.976 745.369 545.651 cv
745.309 545.959 745.248 546.254 745.189 546.53 cv
745.155 546.688 li
745.08 547.04 745.009 547.351 744.948 547.613 cv
745.306 549.38 745.773 550.881 746.415 552.113 cv
746.427 552.119 746.957 552.357 747.675 552.865 cv
751.897 508.15 li
752.386 502.97 757.299 498.806 763.249 498.093 cv
cp
736.04 553.34 mo
735.853 552.529 735.661 551.709 735.465 550.886 cv
735.248 550.918 735.117 550.936 735.117 550.936 cv
735.069 550.813 li
734.866 550.356 734.097 548.916 733.407 547.608 cv
733.234 547.281 733.066 546.962 732.913 546.669 cv
732.531 545.937 732.242 545.365 732.204 545.226 cv
732.204 545.222 li
732.202 545.161 li
732.204 545.124 li
732.211 545.018 li
732.213 544.988 li
732.269 544.219 732.512 541.733 732.195 539.77 cv
732.152 539.503 732.101 539.244 732.036 539.003 cv
731.494 537.012 728.947 533.643 728.84 533.228 cv
728.782 533.003 729.145 528.335 728.843 527.278 cv
727.94 524.113 726.99 521.054 726.043 518.14 cv
726.043 567.671 li
726.258 567.51 li
726.478 567.419 726.7 567.268 726.922 567.077 cv
728.191 564.006 li
729.008 564.158 li
729.315 563.584 729.615 562.968 729.904 562.333 cv
728.54 562.232 li
729.826 559.117 li
731.138 559.36 li
731.341 558.828 731.534 558.306 731.712 557.81 cv
730.29 557.705 li
731.576 554.59 li
732.722 554.802 li
732.91 554.207 733.016 553.846 733.016 553.846 cv
736.078 554.207 li
736.096 553.832 736.085 553.534 736.04 553.34 cv
cp
829.429 385.937 mo
825.581 420.812 li
826.708 421.179 827.894 422.881 827.894 428.434 cv
827.894 444.053 827.894 482.321 827.894 482.321 cv
827.894 491.032 820.832 498.093 812.122 498.093 cv
812.122 498.093 810.188 498.093 806.989 498.093 cv
812.938 498.806 817.851 502.97 818.34 508.15 cv
824.907 577.695 li
821.561 577.695 li
814.771 508.487 li
814.411 504.666 810.114 501.558 805.192 501.558 cv
765.045 501.558 li
760.124 501.558 755.826 504.666 755.466 508.487 cv
750.97 556.925 li
751.212 557.507 751.411 558.142 751.531 558.846 cv
751.53 558.854 li
752.361 559.477 753.169 560.6 753.518 562.646 cv
753.634 563.519 751.991 565.128 750.048 566.857 cv
749.042 577.695 li
745.331 577.695 li
746.013 570.469 li
745.819 570.656 745.635 570.84 745.464 571.018 cv
742.814 573.773 735.339 579.602 731.736 579.602 cv
730.247 579.602 728.135 579.602 726.043 579.602 cv
726.043 590.476 li
717.703 590.476 li
717.703 578.96 li
717.442 578.648 717.295 578.273 717.281 577.948 cv
717.272 577.948 li
717.079 577.948 715.654 574.247 717.703 571.918 cv
717.703 519.248 li
717.305 519.858 716.89 520.478 716.455 521.115 cv
716.277 521.376 716.096 521.639 715.911 521.906 cv
715.599 522.359 715.276 522.823 714.945 523.297 cv
714.827 523.466 714.708 523.637 714.588 523.81 cv
714.053 524.577 713.497 525.373 712.916 526.213 cv
712.701 526.525 712.483 526.842 712.262 527.165 cv
710.271 530.072 708.033 533.47 705.553 537.691 cv
705.422 537.915 705.299 538.178 705.183 538.468 cv
705.125 538.613 705.069 538.765 705.016 538.922 cv
704.908 539.235 704.808 539.569 704.716 539.908 cv
704.21 541.777 703.946 543.839 703.946 543.839 cv
703.912 543.9 703.005 544.967 702.106 546.019 cv
701.993 546.151 701.881 546.282 701.771 546.411 cv
701.55 546.669 701.337 546.918 701.145 547.143 cv
701.048 547.255 700.958 547.361 700.874 547.458 cv
700.706 547.654 700.567 547.816 700.469 547.93 cv
700.372 548.043 700.316 548.108 700.316 548.108 cv
698.919 549.471 698.342 552.5 697.493 553.718 cv
696.966 554.474 696.221 555.333 695.496 556.111 cv
695.254 556.37 695.015 556.621 694.786 556.855 cv
694.558 557.09 694.34 557.309 694.142 557.505 cv
693.568 558.075 693.165 558.45 693.14 558.474 cv
692.695 559.722 692.386 560.88 692.253 561.956 cv
693.524 562.285 li
693.524 562.285 695.288 566.901 693.444 571.399 cv
693.448 571.4 li
693.448 571.4 694.917 572.566 692.943 577.216 cv
691.736 577.216 650.942 578.618 649.425 577.646 cv
648.357 576.961 648.511 575.746 649.03 575.301 cv
648.747 574.205 648.132 568.598 653.148 567.9 cv
659.694 566.989 662.824 565.927 665.586 564.361 cv
665.302 564.122 li
668.173 562.356 li
668.388 562.582 li
668.884 562.244 669.401 561.888 669.954 561.511 cv
669.498 561.125 li
672.368 559.36 li
672.688 559.696 li
673.106 559.429 673.554 559.15 674.019 558.865 cv
673.573 558.489 li
676.443 556.723 li
676.886 557.189 li
677.495 556.848 678.131 556.499 678.817 556.135 cv
682.445 558.208 li
682.65 558.017 682.787 557.855 682.83 557.737 cv
683.106 556.968 683.38 556.191 683.654 555.408 cv
683.715 555.215 683.838 553.732 683.963 552.241 cv
683.98 552.04 683.997 551.839 684.013 551.641 cv
684.043 551.288 684.073 550.944 684.101 550.627 cv
684.116 550.463 684.13 550.306 684.144 550.158 cv
684.2 549.57 684.249 549.14 684.282 549.03 cv
684.285 549.025 li
684.316 548.974 li
684.34 548.941 li
684.401 548.858 li
684.417 548.836 li
684.877 548.221 686.427 546.257 687.22 544.431 cv
687.22 544.431 li
687.327 544.184 687.424 543.938 687.499 543.7 cv
688.118 541.731 687.792 537.521 687.926 537.114 cv
687.998 536.893 690.822 533.16 691.139 532.107 cv
691.143 532.095 li
695.533 517.497 697.945 504.068 699.57 499.613 cv
702.138 492.568 705.425 487.135 707.845 479.076 cv
708.301 477.557 710.62 475.642 714.261 473.51 cv
713.204 469.654 714.564 465.972 717.703 462.868 cv
717.703 434.941 li
578.334 434.941 li
578.334 590.476 li
569.994 590.476 li
569.994 434.941 li
524.913 434.941 li
524.122 431.663 li
510.476 431.663 li
510.476 425.225 li
673.008 425.225 li
672.26 424.815 671.665 424.158 671.343 423.358 cv
669.811 423.33 668.397 422.355 667.897 420.816 cv
648.139 360.005 li
647.663 358.541 648.161 357.008 649.262 356.067 cv
649.363 355.923 649.494 355.801 649.67 355.744 cv
649.716 355.739 li
649.93 355.6 li
649.967 355.713 li
650.322 355.732 650.651 355.972 650.773 356.35 cv
671.668 421.105 li
671.771 421.424 671.688 421.746 671.497 421.977 cv
671.705 422.617 li
673.786 422.614 li
673.84 422.19 674.188 421.858 674.627 421.858 cv
738.616 421.858 li
739.028 421.858 739.356 422.152 739.442 422.538 cv
742.334 422.535 li
742.128 423.727 741.35 424.713 740.297 425.225 cv
761.147 425.225 li
761.147 431.663 li
744.3 431.663 li
745.091 434.941 li
726.043 434.941 li
726.043 457.602 li
729.42 456.197 733.366 455.15 737.708 454.571 cv
750.335 452.887 764.432 452.41 771.291 452.274 cv
771.451 450.953 771.912 447.029 772.369 442.133 cv
772.586 439.808 772.801 437.268 772.981 434.691 cv
773.053 433.661 773.12 432.624 773.179 431.593 cv
773.208 431.077 773.236 430.563 773.261 430.052 cv
773.325 428.757 773.372 427.485 773.404 426.249 cv
772.989 426.238 772.574 426.226 772.156 426.208 cv
761.05 425.743 748.853 422.693 739.096 419.813 cv
739.015 419.95 li
738.295 420.113 735.548 419.757 735.355 419.101 cv
735.355 419.101 735.356 419.028 735.358 418.922 cv
733.607 418.574 731.838 418.326 730.643 418.419 cv
726.615 419.942 720.892 418.537 718.898 417.129 cv
717.949 416.46 716.553 416.082 715.269 415.856 cv
715.154 415.9 li
714.699 416.077 712.334 416.321 712.08 416.687 cv
712.079 416.688 711.035 418.365 709.726 418.821 cv
709.49 419.686 707.62 421.569 706.558 421.227 cv
704.913 420.696 705.722 420.201 706.543 419.207 cv
706.042 419.355 705.564 419.403 705.235 419.352 cv
703.353 419.06 705.124 417.815 706.475 416.026 cv
707.973 414.042 710.32 411.595 710.912 411.307 cv
712.883 410.349 714.849 409.71 718.78 408.003 cv
720.059 407.752 720.731 407.772 722.271 408.381 cv
724.023 408.74 726.503 409.52 730.238 410.993 cv
731.571 411.518 733.306 412.19 735.425 412.693 cv
735.18 412.482 735.031 412.169 735.077 411.825 cv
735.077 411.825 li
735.113 411.558 735.254 411.331 735.451 411.177 cv
735.449 411.177 li
735.452 411.176 li
735.537 411.11 735.636 411.066 735.739 411.03 cv
735.794 411.003 li
735.915 410.969 736.044 410.96 736.176 410.976 cv
736.19 410.975 li
740.403 411.538 li
740.534 411.555 740.653 411.599 740.76 411.661 cv
740.914 411.79 li
741.028 411.884 li
741.021 411.885 li
741.196 412.091 741.292 412.362 741.254 412.651 cv
741.235 412.786 741.191 412.911 741.125 413.022 cv
741.027 413.19 740.872 413.308 740.699 413.392 cv
741.114 413.405 741.536 413.409 741.969 413.4 cv
742.082 413.374 742.196 413.355 742.313 413.35 cv
751.901 412.989 762.13 410.483 770.919 409.616 cv
770.893 409.55 li
770.805 409.327 770.711 409.105 770.62 408.883 cv
770.487 408.56 770.356 408.237 770.219 407.914 cv
770.132 407.708 770.042 407.502 769.953 407.297 cv
769.803 406.948 769.653 406.6 769.501 406.253 cv
769.445 406.126 769.39 406.001 769.334 405.875 cv
769.029 405.182 768.723 404.492 768.42 403.804 cv
768.346 403.636 768.27 403.466 768.197 403.298 cv
768.197 403.298 li
766.273 398.908 764.582 394.633 764.733 390.551 cv
765.028 382.576 770.38 365.51 770.38 365.51 cv
770.38 365.51 770.652 365.29 771.134 364.903 cv
772.057 362.406 li
773.438 358.667 li
773.495 358.513 li
773.332 357.819 773.125 357.107 772.893 356.394 cv
772.428 354.969 771.863 353.546 771.343 352.283 cv
771.17 351.861 771.002 351.458 770.845 351.078 cv
770.657 350.624 770.487 350.209 770.339 349.832 cv
770.208 349.501 770.097 349.205 770.011 348.948 cv
769.95 348.764 li
769.837 348.326 768.771 348.649 767.288 349.241 cv
764.887 351.201 761.665 352.727 757.955 353.047 cv
754.722 353.326 753.132 348.672 754.183 347.361 cv
754.135 347.227 754.087 347.097 754.039 346.96 cv
753.441 345.636 752.7 345.078 753.261 344.46 cv
752.494 344.173 752.509 343.465 752.493 343.07 cv
751.936 343.082 751.667 341.756 752.013 341.698 cv
752.037 341.694 li
751.909 341.361 751.79 341.082 751.664 340.878 cv
751.485 340.678 li
751.469 340.685 li
751.027 340.295 749.53 340.455 748.385 340.307 cv
748.071 340.267 747.868 340.094 747.746 339.807 cv
747.824 339.793 li
747.33 338.447 748.729 334.46 748.944 330.006 cv
749.042 327.979 747.109 327.326 746.249 325.99 cv
746.076 325.892 li
746.068 325.8 li
745.986 325.78 745.901 325.732 745.81 325.652 cv
745.378 325.269 745.327 324.575 745.734 323.947 cv
745.575 322.394 745.573 320.213 745.644 318.013 cv
745.522 318.013 745.4 318.009 745.279 318.009 cv
744.985 310.859 745.768 304.101 745.866 302.436 cv
745.906 302.257 li
745.947 302.168 li
746.008 302.033 li
746.086 301.903 li
746.169 301.767 li
746.299 301.584 li
746.386 301.464 li
746.577 301.229 li
746.66 301.128 li
746.739 301.034 746.829 300.936 746.92 300.837 cv
746.987 300.762 li
747.092 300.65 747.206 300.532 747.325 300.413 cv
747.365 300.371 li
747.499 300.238 747.642 300.101 747.792 299.961 cv
747.794 299.959 li
751.548 296.458 760.42 290.968 771.135 292.446 cv
771.619 292.513 772.072 292.599 772.538 292.677 cv
772.533 292.66 li
772.729 292.692 772.908 292.735 773.101 292.769 cv
773.523 292.845 773.936 292.924 774.343 293.008 cv
774.734 293.089 775.118 293.173 775.496 293.262 cv
775.889 293.354 776.275 293.449 776.654 293.549 cv
777.016 293.644 777.37 293.743 777.719 293.845 cv
778.084 293.952 778.443 294.061 778.794 294.174 cv
779.128 294.283 779.453 294.395 779.775 294.509 cv
780.112 294.629 780.444 294.75 780.766 294.875 cv
781.073 294.995 781.369 295.118 781.663 295.242 cv
781.972 295.373 782.278 295.503 782.572 295.639 cv
782.853 295.768 783.122 295.901 783.39 296.034 cv
783.67 296.173 783.948 296.312 784.214 296.455 cv
784.47 296.593 784.712 296.733 784.955 296.874 cv
785.206 297.019 785.458 297.164 785.695 297.312 cv
785.927 297.457 786.145 297.604 786.364 297.751 cv
786.585 297.9 786.809 298.048 787.018 298.199 cv
787.226 298.35 787.419 298.502 787.615 298.655 cv
787.808 298.805 788.004 298.954 788.184 299.106 cv
788.37 299.262 788.539 299.418 788.712 299.575 cv
788.877 299.724 789.046 299.872 789.198 300.021 cv
789.362 300.181 789.507 300.34 789.657 300.499 cv
789.793 300.644 789.936 300.789 790.061 300.934 cv
790.202 301.096 790.323 301.256 790.45 301.418 cv
790.559 301.557 790.677 301.696 790.775 301.834 cv
790.894 301.999 790.992 302.16 791.096 302.322 cv
791.178 302.451 791.27 302.582 791.343 302.709 cv
791.441 302.879 791.516 303.042 791.597 303.207 cv
791.653 303.321 791.719 303.438 791.767 303.549 cv
791.845 303.73 791.899 303.902 791.956 304.076 cv
792.05 304.343 li
792.12 304.599 792.168 304.846 792.192 305.081 cv
792.561 308.676 791.894 318.014 791.161 322.038 cv
791.118 322.325 791.076 322.589 791.034 322.842 cv
799.305 325.107 806.519 327.689 807.687 328.234 cv
810.084 329.353 802.775 330.553 798.62 331.671 cv
797.095 332.082 793.597 331.215 789.365 329.712 cv
789.243 330.241 789.122 330.768 789.005 331.291 cv
787.832 336.571 790.665 345.213 792.137 349.164 cv
792.293 349.071 792.446 348.982 792.586 348.904 cv
805.035 363.473 815.334 370.271 814.776 399.448 cv
814.202 429.463 813.25 453.081 812.905 461.065 cv
813.066 461.099 813.219 461.131 813.381 461.165 cv
813.693 463.005 813.831 464.699 813.834 466.271 cv
822.778 385.203 li
822.981 383.367 824.634 382.042 826.471 382.245 cv
828.307 382.448 829.632 384.101 829.429 385.937 cv
cp
534.238 478.675 mo
534.237 478.565 534.233 478.463 534.226 478.367 cv
532.356 478.806 530.143 479.194 527.677 479.534 cv
526.554 479.689 525.381 479.834 524.17 479.97 cv
520.535 480.379 516.551 480.706 512.516 480.967 cv
512.078 480.996 511.639 481.022 511.2 481.049 cv
531.332 481.049 li
532.229 481.049 533.039 481.392 533.666 481.94 cv
533.848 481.311 533.98 480.76 534.071 480.277 cv
534.134 479.939 534.177 479.636 534.204 479.362 cv
534.228 479.112 534.239 478.885 534.238 478.682 cv
534.238 478.675 li
cp
533.492 545.651 mo
533.448 545.465 li
533.421 545.346 533.392 545.218 533.362 545.083 cv
533.303 544.816 533.239 544.52 533.174 544.206 cv
532.859 544.687 532.606 545.08 532.493 545.277 cv
532.431 545.395 li
532.431 545.395 532.304 545.378 532.091 545.348 cv
531.807 546.136 531.526 546.92 531.251 547.697 cv
531.186 547.882 531.141 548.167 531.119 548.526 cv
532.783 548.339 li
533.059 547.524 533.293 546.631 533.492 545.651 cv
cp
529.599 493.152 mo
524.994 493.152 li
525.085 494.41 524.291 496.474 518.103 496.474 cv
517.202 496.474 516.267 496.474 515.318 496.474 cv
521.226 497.182 526.105 501.318 526.591 506.461 cv
527.319 514.181 li
527.487 512.774 527.626 511.445 527.745 510.19 cv
527.821 509.386 527.889 508.611 527.951 507.862 cv
528.137 505.615 528.273 503.6 528.419 501.74 cv
528.435 501.54 528.451 501.344 528.468 501.148 cv
528.523 500.166 528.611 499.186 528.749 498.189 cv
528.785 497.879 528.822 497.572 528.861 497.268 cv
528.993 496.252 529.149 495.269 529.345 494.301 cv
529.365 494.203 529.385 494.104 529.406 494.006 cv
529.466 493.72 529.531 493.436 529.599 493.152 cv
cp
476.602 481.049 mo
475.772 480.803 474.952 480.505 474.156 480.147 cv
473.169 479.88 472.215 479.532 471.316 479.085 cv
469.014 477.961 467.057 476.241 465.835 473.802 cv
465.492 475.088 464.398 476.098 462.995 476.252 cv
461.172 476.454 459.53 475.138 459.329 473.314 cv
455.391 437.625 li
455.391 480.812 li
455.391 487.093 460.501 492.203 466.782 492.203 cv
468.176 492.203 li
467.469 491.552 467.02 490.628 467.02 489.592 cv
467.02 484.609 li
467.02 482.643 468.613 481.049 470.579 481.049 cv
476.602 481.049 li
cp
563.94 472.168 mo
561.644 480.203 561.481 486.507 559.852 493.773 cv
558.822 498.37 553.64 510.895 549.485 525.457 cv
549.186 526.507 549.546 531.143 549.488 531.366 cv
549.382 531.778 546.852 535.124 546.315 537.101 cv
546.25 537.341 546.199 537.598 546.156 537.862 cv
545.843 539.805 546.081 542.264 546.138 543.036 cv
546.141 543.076 li
546.147 543.178 li
546.149 543.216 li
546.148 543.277 li
546.148 543.281 li
546.033 543.695 543.681 547.978 543.302 548.829 cv
543.254 548.951 li
543.254 548.951 543.153 548.938 542.97 548.911 cv
542.909 548.902 li
542.714 549.72 542.523 550.533 542.338 551.339 cv
542.294 551.532 542.282 551.827 542.3 552.199 cv
545.341 551.842 li
545.341 551.842 545.446 552.2 545.633 552.791 cv
546.771 552.58 li
548.048 555.673 li
546.637 555.777 li
546.813 556.27 547.004 556.789 547.207 557.318 cv
548.509 557.076 li
549.786 560.17 li
548.432 560.269 li
548.719 560.901 549.016 561.512 549.321 562.082 cv
550.133 561.931 li
551.393 564.981 li
551.614 565.171 551.834 565.32 552.052 565.411 cv
552.77 566.13 557.799 567.464 560.057 569.311 cv
562.796 571.552 561.181 575.777 560.977 575.777 cv
560.968 575.777 li
560.936 576.477 560.306 577.419 559.18 577.419 cv
557.391 577.419 550.191 577.419 546.612 577.419 cv
544.387 577.419 540.677 575.181 537.555 572.831 cv
535.822 572.831 534.138 572.831 532.857 572.831 cv
533.112 575.526 li
529.426 575.526 li
529.071 571.706 li
525.63 569.941 521.635 566.517 519.955 564.615 cv
517.626 561.978 512.489 558.124 512.874 556.603 cv
513.444 554.644 514.37 553.57 515.264 552.974 cv
515.264 552.966 li
516.612 548.337 521.046 546.537 521.083 546.522 cv
521.856 545.343 522.484 543.907 523.033 542.215 cv
523.016 542.076 li
523.005 541.991 li
522.964 541.654 522.917 541.253 522.874 540.811 cv
522.753 539.582 522.654 538.06 522.742 536.885 cv
522.835 535.642 523.96 533.39 524.086 531.628 cv
524.104 531.376 524.102 531.134 524.073 530.907 cv
524.073 530.907 523.911 525.726 523.936 525.592 cv
523.936 525.592 524.255 525.065 524.671 524.303 cv
523.046 506.796 li
522.688 503.002 518.421 499.915 513.533 499.915 cv
473.664 499.915 li
468.777 499.915 464.509 503.002 464.151 506.796 cv
457.408 575.526 li
454.086 575.526 li
460.607 506.461 li
461.093 501.318 465.972 497.182 471.88 496.474 cv
468.703 496.474 466.782 496.474 466.782 496.474 cv
458.132 496.474 451.119 489.462 451.119 480.812 cv
451.119 480.812 451.119 442.807 451.119 427.297 cv
451.119 421.782 452.297 420.092 453.416 419.727 cv
449.595 385.094 li
449.394 383.27 450.709 381.628 452.533 381.427 cv
454.357 381.226 455.998 382.541 456.2 384.365 cv
464.911 463.315 li
465.12 462.034 465.425 460.673 465.847 459.221 cv
465.983 459.194 li
465.623 450.813 464.705 427.713 464.146 398.511 cv
463.592 369.536 473.82 362.785 486.183 348.317 cv
486.32 348.393 486.471 348.486 486.626 348.584 cv
487.804 345.422 489.863 339.221 490.003 334.186 cv
489.769 334.139 489.766 334.138 489.766 334.138 cv
489.766 334.138 487.901 321.64 486.91 316.639 cv
485.401 310.213 486.94 296.409 499.319 291.648 cv
500.163 290.738 501.339 290 502.742 289.429 cv
502.742 288.986 li
502.742 288.328 503.01 287.732 503.442 287.301 cv
503.442 287.275 li
503.442 285.96 504.337 284.894 505.441 284.894 cv
508.757 284.894 li
509.861 284.894 510.755 285.96 510.755 287.275 cv
510.755 287.301 li
510.965 287.509 511.133 287.757 511.253 288.032 cv
520.032 288.094 530.742 291.816 535.632 299.699 cv
543.408 312.237 544.995 309.222 545.471 309.063 cv
544.995 311.443 538.967 316.702 532.619 313.845 cv
532.618 313.845 li
532.816 316.998 532.964 321.066 532.711 323.532 cv
533.116 324.156 533.065 324.845 532.635 325.225 cv
532.545 325.305 532.461 325.352 532.379 325.373 cv
532.372 325.463 li
532.199 325.561 li
531.345 326.888 529.426 327.537 529.523 329.55 cv
529.737 333.973 531.126 337.932 530.636 339.269 cv
530.713 339.282 li
530.591 339.568 530.39 339.74 530.078 339.78 cv
528.941 339.926 527.454 339.768 527.016 340.154 cv
527 340.147 li
526.822 340.346 li
526.57 340.754 526.345 341.465 526.026 342.303 cv
525.932 342.549 526.179 343.551 525.236 343.904 cv
525.793 344.518 525.057 345.072 524.463 346.386 cv
523.668 348.678 522.862 350.544 521.465 351.319 cv
521.258 351.439 li
521.249 351.444 li
520.479 351.792 519.219 351.606 517.79 351.182 cv
517.521 351.102 517.248 351.015 516.97 350.92 cv
516.177 350.651 515.353 350.33 514.543 349.999 cv
513.675 349.643 512.824 349.277 512.052 348.956 cv
511.805 348.853 511.569 348.757 511.339 348.665 cv
510.947 348.508 510.585 348.37 510.261 348.26 cv
509.353 347.95 508.746 347.855 508.663 348.178 cv
508.454 348.848 508.028 349.861 507.532 351.059 cv
507.036 352.256 506.469 353.638 505.979 355.048 cv
505.652 355.989 505.358 356.941 505.142 357.859 cv
505.143 357.861 li
509.863 370.339 li
509.863 370.339 509.924 370.53 510.031 370.874 cv
510.031 370.875 li
510.031 370.875 li
510.754 373.215 513.588 382.773 513.843 389.675 cv
514.061 395.547 510.444 401.821 507.841 408.259 cv
509.74 408.493 511.596 408.808 512.242 409.067 cv
512.238 409.165 li
519.845 410.249 528.197 412.019 536.108 412.318 cv
536.225 412.322 536.338 412.341 536.45 412.367 cv
536.88 412.375 537.299 412.371 537.711 412.359 cv
537.54 412.275 537.386 412.158 537.288 411.992 cv
537.223 411.882 537.178 411.757 537.16 411.622 cv
537.161 411.622 li
537.122 411.336 537.217 411.067 537.391 410.862 cv
537.385 410.862 li
537.497 410.768 li
537.651 410.64 li
537.757 410.578 537.875 410.535 538.005 410.517 cv
540.097 410.238 li
542.189 409.958 li
542.189 409.958 li
542.19 409.958 li
542.326 409.94 542.458 409.951 542.582 409.986 cv
542.636 410.013 li
542.739 410.048 542.837 410.092 542.922 410.158 cv
542.924 410.159 li
542.923 410.159 li
543.119 410.312 543.259 410.537 543.294 410.802 cv
543.294 410.802 li
543.34 411.144 543.192 411.455 542.949 411.665 cv
545.053 411.166 546.776 410.498 548.1 409.976 cv
551.81 408.514 554.271 407.739 556.012 407.382 cv
557.541 406.777 558.209 406.758 559.479 407.007 cv
563.382 408.703 565.335 409.336 567.292 410.289 cv
567.88 410.575 570.211 413.005 571.698 414.974 cv
573.04 416.751 574.799 417.988 572.93 418.277 cv
572.604 418.328 572.129 418.281 571.631 418.134 cv
572.446 419.121 573.249 419.612 571.616 420.139 cv
570.562 420.479 568.704 418.609 568.47 417.75 cv
567.17 417.297 566.133 415.632 566.133 415.631 cv
565.88 415.268 563.531 415.025 563.08 414.85 cv
562.965 414.806 li
561.69 415.031 560.304 415.405 559.362 416.07 cv
557.385 417.466 551.716 418.858 547.717 417.357 cv
546.53 417.259 544.767 417.503 543.015 417.852 cv
543.017 417.956 543.019 418.029 543.019 418.029 cv
542.827 418.68 540.098 419.033 539.384 418.871 cv
539.303 418.735 li
530.531 421.325 519.773 424.052 509.631 424.888 cv
509.564 425.035 509.502 425.143 509.445 425.195 cv
508.84 425.288 507.164 425.418 505.243 425.519 cv
505.53 435.662 507.017 448.374 507.331 450.97 cv
514.129 451.1 528.072 451.557 540.424 453.168 cv
543.755 453.603 546.814 454.313 549.522 455.248 cv
559.823 458.651 565.953 465.125 563.94 472.168 cv
cp
964.549 421.887 mo
961.678 421.884 li
961.975 423.612 963.471 424.93 965.284 424.932 cv
1028.78 425.006 li
1030.33 425.007 1031.63 424.05 1032.18 422.701 cv
1033.7 422.673 1035.1 421.705 1035.6 420.176 cv
1055.22 359.786 li
1055.69 358.332 1055.2 356.81 1054.11 355.875 cv
1054.01 355.732 1053.88 355.611 1053.7 355.554 cv
1053.65 355.55 li
1053.44 355.412 li
1053.41 355.524 li
1053.05 355.543 1052.73 355.782 1052.61 356.157 cv
1031.85 420.464 li
1031.75 420.781 1031.83 421.101 1032.02 421.33 cv
1031.82 421.965 li
1029.75 421.963 li
1029.7 421.542 1029.35 421.211 1028.92 421.211 cv
965.37 421.211 li
964.961 421.211 964.635 421.504 964.549 421.887 cv
cp
539.886 421.243 mo
603.433 421.243 li
603.869 421.243 604.214 421.574 604.269 421.995 cv
606.335 421.997 li
606.541 421.362 li
606.351 421.133 606.269 420.813 606.371 420.496 cv
627.122 356.188 li
627.243 355.813 627.57 355.575 627.923 355.556 cv
627.959 355.444 li
628.172 355.582 li
628.217 355.586 li
628.392 355.643 628.522 355.764 628.622 355.907 cv
629.716 356.842 630.211 358.364 629.738 359.818 cv
610.117 420.208 li
609.62 421.737 608.216 422.705 606.694 422.733 cv
606.151 424.082 604.843 425.039 603.299 425.038 cv
539.801 424.964 li
537.988 424.962 536.492 423.643 536.195 421.916 cv
539.066 421.919 li
539.151 421.536 539.477 421.243 539.886 421.243 cv
cp
f
617.124 720.151 mo
777.169 633.99 li
723.072 633.99 li
709.207 641.489 li
690.929 641.489 li
776.098 595.426 li
722 595.426 li
490.651 720.151 li
617.124 720.151 li
cp
level3{
gsave
clp
[5.25686e-009 -116.819 116.819 5.25686e-009 633.91 721.725 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .956863 .764706 ]
/C1 [.917647 .956863 .764706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.768627 .815686 .564706 ]
/C1 [.917647 .956863 .764706 ]
/N 1.11544 
>>
]
/Bounds [.0158103 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.25686e-009 -116.819 116.819 5.25686e-009 633.91 721.725 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lK[["lKRQtl07Eqkih6okND$kkND!ik2tggjlPUcjlPRajQ,C_jQ#:\j5]1Zio8tWio/kTiSibRi8EPO
i8<GLhr!>JhVR,GhVI#Dh;-oBgt^]?gt^Z=gY:K;g=k97g=k65g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'
e^`4#e^`1!eC<!te'ldpe'ldodaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\c-=MXc-=MWbfn;T
bfn8RbKJ)PbK@uMb0%lLaiVZHaiVZHaN2HDaN2HCa2c6@a2c6?`l?$<`l?$;`Pog8`Pog7`5KU4`5KU4
~>
<~o^qeJo^h\GoCMSEo()ABo'u8?naZ/=nF5r:nF5o8n*f`6mdBN2mdBN1mHs<.mHj3+m-O*)lg*m&lg*j$
lK[["l07Hsl07Hrkih6oki_-lkND$kk2tggk2tdejlPUcjlGL`jQ,C_j5]1[j5].Yio8tWio/kTiSibS
i8EPOi8EPNhr!>Khr!;IhVR,Gh;-oCh;-oBgt^]?gt^Z=gY:K;gY1B8g=k97g=b04g"G'3f\"j/f\"j.
f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC2mqe'ldpe'c[mdaHRldaHOjdF$@hdF$=fd*U.dd*U.d
~>
<~_o'C0_ns:-_SO()_8*k%^qd_"^V@Ls^:q=p]tM+l]Y(ni]=Y\e]"5Ja]",A^\[]/Z\@B#W\$rfS[^NWP
[C*EM['[3IZa7!EZa-mBZE^[>Z*CO;Yct@8YHP.4Y-+q1Xf\_-XfSV*XK/D&X/i8#WiE(uWMukrW2QYn
Vl-GjVl$>gVP^2dV5:#aUnjf^USFTZUS=KWU7n9STqS-PTV.sMT:_aJSt;OFSt2FCSXl=AS=H+>S"#n:
S!oe7R[TY4R@0J1R$a8.R$X/+Q^=#(QBmi&Q'IW"Q'@MtPa%DrPEV2oPEM)lP*1ujOcbcgOcYZdOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
150.647 718.651 mo
310.692 635.49 li
256.595 635.49 li
242.73 642.989 li
224.452 642.989 li
309.621 596.926 li
255.524 596.926 li
24.1739 718.651 li
150.647 718.651 li
cp
level3{
gsave
clp
[5.13042e-009 -114.009 114.009 5.13042e-009 167.433 720.188 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.13042e-009 -114.009 114.009 5.13042e-009 167.433 720.188 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
328.659 717.151 mo
476.023 637.885 li
433.574 637.885 li
456.48 622.647 li
339.474 622.647 li
161.165 717.151 li
328.659 717.151 li
cp
343.658 717.151 mo
506.697 636.797 li
564.384 636.797 li
401.345 717.151 li
343.658 717.151 li
cp
level3{
gsave
clp
[4.17967e-009 -92.8814 92.8814 4.17967e-009 362.774 713.317 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.17967e-009 -92.8814 92.8814 4.17967e-009 362.774 713.317 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
768.137 730.65 mo
944.733 631.725 li
905.516 631.725 li
926.679 617.647 li
818.581 617.647 li
613.396 730.65 li
768.137 730.65 li
cp
811.635 718.651 mo
973.072 630.719 li
1026.37 630.719 li
864.929 718.651 li
811.635 718.651 li
cp
level3{
gsave
clp
[4.99785e-009 -111.063 111.063 4.99785e-009 819.881 726.066 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.99785e-009 -111.063 111.063 4.99785e-009 819.881 726.066 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
834.133 804.147 mo
1044.36 693.757 li
1040.16 678.762 li
917.975 678.762 li
679.633 804.147 li
834.133 804.147 li
cp
level3{
gsave
clp
[5.54547e-009 -123.232 123.232 5.54547e-009 861.997 799.06 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.54547e-009 -123.232 123.232 5.54547e-009 861.997 799.06 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
427.654 798.147 mo
645.191 682.554 li
641.084 667.899 li
521.665 667.899 li
276.651 798.147 li
427.654 798.147 li
cp
level3{
gsave
clp
[5.76056e-009 -128.012 128.012 5.76056e-009 460.921 792.863 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.76056e-009 -128.012 128.012 5.76056e-009 460.921 792.863 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
162.167 802.647 mo
383.191 688.554 li
379.084 673.899 li
259.665 673.899 li
11.164 802.647 li
162.167 802.647 li
cp
level3{
gsave
clp
[5.6942e-009 -126.538 126.538 5.6942e-009 197.178 797.423 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.6942e-009 -126.538 126.538 5.6942e-009 197.178 797.423 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
257.415 467.245 mo
17.2974 467.245 li
17.2974 474.461 li
257.415 474.461 li
257.415 467.245 li
cp
.937255 .67451 .215686 rgb
f
65.9937 652.474 mo
56.6456 652.474 li
56.6456 477.188 li
65.9937 477.188 li
65.9937 652.474 li
cp
f
231.559 652.474 mo
222.211 652.474 li
222.211 477.188 li
231.559 477.188 li
231.559 652.474 li
cp
f
257.415 474.304 mo
36.2194 474.304 li
35.2949 478.136 li
257.415 478.136 li
257.415 474.304 li
cp
1 .392157 .121569 rgb
f
207.945 463.707 mo
207.945 464.238 207.515 464.668 206.984 464.668 cv
135.755 464.668 li
135.225 464.668 134.795 464.238 134.795 463.707 cv
134.795 463.177 135.225 462.747 135.755 462.747 cv
206.984 462.747 li
207.515 462.747 207.945 463.177 207.945 463.707 cv
cp
.776471 .776471 .776471 rgb
f
131.862 463.178 mo
131.357 463.342 130.808 463.04 130.634 462.503 cv
107.375 390.422 li
107.202 389.885 107.47 389.317 107.975 389.152 cv
108.479 388.988 109.029 389.29 109.202 389.827 cv
132.461 461.909 li
132.635 462.446 132.366 463.014 131.862 463.178 cv
cp
0 .298039 .337255 rgb
f
132.503 463.592 mo
108.264 388.993 li
106.526 389.911 105.642 391.963 106.27 393.895 cv
128.264 461.587 li
128.82 463.3 130.394 464.385 132.1 464.416 cv
132.708 465.929 134.175 467.002 135.905 467 cv
207.08 466.917 li
209.112 466.915 210.789 465.437 211.122 463.5 cv
132.503 463.592 li
cp
.878431 .878431 .878431 rgb
f
143.578 465.217 mo
143.578 465.52 143.332 465.766 143.029 465.766 cv
136.579 465.766 li
136.275 465.766 136.03 465.52 136.03 465.217 cv
136.03 464.914 136.275 464.668 136.579 464.668 cv
143.029 464.668 li
143.332 464.668 143.578 464.914 143.578 465.217 cv
cp
.776471 .776471 .776471 rgb
f
153.048 465.217 mo
153.048 465.52 152.802 465.766 152.499 465.766 cv
146.048 465.766 li
145.745 465.766 145.499 465.52 145.499 465.217 cv
145.499 464.914 145.745 464.668 146.048 464.668 cv
152.499 464.668 li
152.802 464.668 153.048 464.914 153.048 465.217 cv
cp
f
205.749 465.217 mo
205.749 465.52 205.503 465.766 205.2 465.766 cv
198.749 465.766 li
198.446 465.766 198.2 465.52 198.2 465.217 cv
198.2 464.914 198.446 464.668 198.749 464.668 cv
205.2 464.668 li
205.503 464.668 205.749 464.914 205.749 465.217 cv
cp
f
225.655 340.056 mo
225.305 344.533 224.851 353.244 225.811 355.28 cv
226.67 356.946 229.076 357.622 228.961 360.004 cv
228.672 365.97 226.465 371.196 228.332 371.437 cv
230.199 371.677 231.501 371.315 231.989 372.106 cv
232.271 372.563 232.523 373.36 232.881 374.299 cv
232.986 374.575 232.71 375.698 233.766 376.093 cv
233.142 376.781 233.967 377.402 234.632 378.876 cv
235.57 381.578 236.512 383.769 238.235 384.545 cv
241.408 385.976 251.953 379.374 252.343 380.884 cv
252.967 382.889 255.321 387.619 256.289 391.736 cv
250.998 405.725 li
277.954 383.655 li
277.954 383.655 271.82 369.24 273.555 361.434 cv
275.289 353.629 277.977 345.215 271.72 337.111 cv
265.464 329.007 259.348 317.639 243.379 323.76 cv
227.409 329.88 225.881 337.165 225.655 340.056 cv
cp
.968627 .701961 .611765 rgb
f
253.74 398.576 mo
250.809 406.325 li
277.954 383.655 li
277.954 383.655 277.392 382.49 276.425 379.619 cv
272.325 382.864 258.505 395.564 253.74 398.576 cv
cp
.917647 .631373 .54902 rgb
f
256.223 391.913 mo
256.223 391.913 258.247 388.873 259.015 387.707 cv
260.168 385.958 257.59 376.19 257.59 376.19 cv
254.823 373.995 253.81 369.487 252.673 365.965 cv
252.028 363.966 250.634 357.47 250.891 353.15 cv
250.976 351.712 249.855 353.94 248.988 355.741 cv
248.988 355.741 248.998 368.618 249.954 373.241 cv
250.615 376.436 239.547 388.184 234.691 378.987 cv
235.41 380.667 236.999 383.988 238.235 384.545 cv
241.408 385.976 251.953 379.374 252.343 380.884 cv
252.967 382.889 255.321 387.619 256.289 391.736 cv
256.223 391.913 li
cp
f
233.358 353.426 mo
233.468 353.913 231.636 353.747 229.54 354.298 cv
227.444 354.85 225.906 355.903 225.768 355.424 cv
225.515 354.547 226.66 352.698 228.755 352.146 cv
230.851 351.595 233.142 352.479 233.358 353.426 cv
cp
.917647 .623529 .545098 rgb
f
232.968 352.738 mo
233.78 353.457 230.797 352.906 228.727 353.574 cv
226.658 354.241 226.285 355.876 225.473 355.157 cv
224.66 354.438 225.018 352.728 227.088 352.06 cv
229.158 351.392 232.156 352.019 232.968 352.738 cv
cp
.227451 .054902 .00784314 rgb
f
232.712 359.367 mo
232.9 360.369 232.366 361.311 231.519 361.471 cv
230.671 361.63 229.831 360.947 229.642 359.945 cv
229.453 358.943 229.987 358.001 230.835 357.841 cv
231.683 357.682 232.523 358.365 232.712 359.367 cv
cp
.184314 .0117647 0 rgb
f
232.401 358.871 mo
232.496 359.376 232.227 359.851 231.8 359.931 cv
231.373 360.011 230.95 359.667 230.855 359.163 cv
230.76 358.658 231.029 358.183 231.456 358.103 cv
231.883 358.023 232.306 358.367 232.401 358.871 cv
cp
1 1 1 rgb
f
232.96 368.566 mo
233.518 371.407 230.126 370.375 227.627 370.913 cv
227.763 371.233 227.989 371.426 228.339 371.47 cv
229.613 371.634 231.28 371.457 231.771 371.891 cv
232.721 371.516 233.96 370.844 232.96 368.566 cv
cp
.917647 .623529 .545098 rgb
f
256.583 349.72 mo
257.963 350.978 258.818 353.226 258.673 355.684 cv
258.463 359.257 256.219 361.921 253.661 361.633 cv
252.842 361.54 252.092 361.155 251.455 360.559 cv
252.189 362.122 253.37 363.159 254.755 363.24 cv
257.231 363.385 259.418 360.419 259.641 356.616 cv
259.831 353.361 258.517 350.554 256.583 349.72 cv
cp
f
252.671 359.185 mo
255.301 358.939 257.113 356.831 255.578 354.73 cv
253.436 351.8 253.424 355.058 253.763 355.643 cv
254.675 357.219 253.624 357.509 252.671 359.185 cv
cp
f
233.593 376.833 mo
233.756 377.423 234.309 378.104 234.638 378.833 cv
234.67 378.925 234.762 379.2 234.873 379.514 cv
234.985 379.383 235.087 378.641 234.997 378.044 cv
234.961 377.806 236.865 376.941 237.28 376.109 cv
236.894 376.365 234.461 377.49 233.593 376.833 cv
cp
f
250.998 405.725 mo
250.998 405.725 246.865 418.522 246.536 427.398 cv
246.207 436.274 253.701 445.971 255.673 455.834 cv
257.646 465.696 253.769 496.655 253.769 496.655 cv
300.013 509.148 li
300.013 509.148 301.45 478.676 302.241 437.302 cv
302.862 404.824 291.398 397.257 277.541 381.04 cv
271.623 384.327 250.998 405.725 250.998 405.725 cv
cp
.909804 .317647 .0196078 rgb
f
299.219 506.525 mo
296.156 501.31 291.42 445.062 291.821 440.102 cv
292.174 435.736 293.165 415.763 291.977 411.488 cv
289.533 402.69 275.714 399.957 270.502 408.753 cv
267.039 414.596 264.834 427.685 261.764 433.708 cv
259.318 438.505 252.393 439.72 252.393 439.72 cv
254.434 444.378 256.712 449.152 257.674 453.966 cv
259.647 463.828 255.77 494.787 255.77 494.787 cv
299.219 506.525 li
cp
.756863 .219608 .00784314 rgb
f
208.672 458.391 mo
204.185 460.137 197.748 458.561 195.515 456.984 cv
193.281 455.408 188.815 455.276 188.027 455.145 cv
187.239 455.014 184.743 451.861 190.785 450.022 cv
196.828 448.183 205.914 455.501 208.672 458.391 cv
cp
.917647 .631373 .54902 rgb
f
195.587 452.213 mo
193.977 450.52 192.482 451.561 191.367 451.869 cv
189.3 452.44 187.1 452.878 185.155 453.589 cv
184.567 453.804 183.467 456.248 182.446 458.281 cv
181.525 460.116 179.459 460.796 181.78 461.545 cv
182.961 461.926 185.043 459.83 185.305 458.867 cv
186.762 458.359 187.925 456.493 187.925 456.492 cv
188.208 456.085 190.841 455.813 191.347 455.616 cv
193.976 454.595 196.926 453.62 195.587 452.213 cv
cp
.886275 .584314 .513726 rgb
f
208.447 451.379 mo
198.361 446.887 198.184 446.276 195.383 446.825 cv
191.008 448.726 188.819 449.436 186.626 450.503 cv
185.967 450.824 183.354 453.548 181.687 455.756 cv
180.183 457.747 178.211 459.133 180.306 459.458 cv
181.372 459.623 183.825 458.938 184.334 456.88 cv
185.959 456.11 188.552 453.963 188.552 453.963 cv
188.552 453.963 192.18 453.549 194.726 452.977 cv
195.841 452.936 196.627 453.627 198.358 454.473 cv
202.075 456.29 204.019 458.268 208.01 457.04 cv
210.821 456.172 215.432 457.58 215.432 457.58 cv
215.432 457.58 215.363 457.733 216.15 454.393 cv
211.608 455.313 210.807 452.43 208.447 451.379 cv
cp
.917647 .631373 .54902 rgb
f
208.138 450.153 mo
197.695 446.037 195.984 446.726 194.106 447.715 cv
191.46 449.403 189.261 450.251 187.019 451.319 cv
186.346 451.639 186.03 453.424 184.327 455.632 cv
182.789 457.624 180.774 459.01 182.915 459.334 cv
184.005 459.499 185.991 458.62 186.512 456.561 cv
188.172 455.792 188.975 453.965 188.975 453.965 cv
188.975 453.965 191.135 454.357 193.737 453.785 cv
194.876 453.744 196.011 455.145 197.779 455.991 cv
201.578 457.808 203.681 459.786 207.759 458.558 cv
210.632 457.69 220.282 460.583 220.282 460.583 cv
220.282 460.583 223.183 455.988 223.987 452.649 cv
216.677 453.481 211.363 451.424 208.138 450.153 cv
cp
.968627 .701961 .611765 rgb
f
271.936 405.104 mo
278.669 401.022 285.5 401.548 289.441 410.481 cv
290.769 413.491 289.621 419.872 287.374 427.271 cv
285.238 447.176 276.217 455.758 272.802 465.041 cv
257.38 470.281 234.05 464.744 217.404 459.796 cv
218.64 455.066 219.832 452.844 221.58 452.778 cv
234.117 452.305 247.648 448.528 258.398 448.299 cv
260.772 448.864 256.6 449.89 267.372 424.931 cv
266.321 419.676 267.615 407.724 271.936 405.104 cv
cp
f
213.834 459.179 mo
213.834 459.179 213.913 451.877 215.287 451.877 cv
216.662 451.877 218.823 452.041 218.88 452.952 cv
218.923 453.639 218.251 460.046 217.908 460.124 cv
217.107 460.305 214.049 459.909 213.834 459.179 cv
cp
.2 .215686 .227451 rgb
f
220.4 451.999 mo
220.319 452.602 219.765 453.026 219.161 452.945 cv
214.471 452.318 li
213.868 452.237 213.444 451.683 213.525 451.08 cv
213.606 450.476 214.16 450.052 214.764 450.133 cv
219.454 450.76 li
220.057 450.841 220.481 451.395 220.4 451.999 cv
cp
f
213.525 451.08 mo
213.444 451.683 213.868 452.237 214.471 452.318 cv
219.161 452.945 li
219.765 453.026 220.319 452.602 220.4 451.999 cv
220.412 451.913 213.549 450.898 213.525 451.08 cv
cp
.0666667 .0941176 .109804 rgb
f
220.149 451.146 mo
219.978 450.943 219.737 450.798 219.454 450.76 cv
214.764 450.133 li
214.457 450.092 214.165 450.182 213.939 450.358 cv
214.097 450.42 219.947 451.245 220.149 451.146 cv
cp
.745098 .858824 .929412 rgb
f
281.944 427.273 mo
281.944 427.273 282.706 443.817 268.862 457.592 cv
268.862 457.592 267.266 461.419 266.231 462.229 cv
257.488 469.073 228.647 462.571 218.193 458.838 cv
218.05 459.822 li
234.696 464.77 257.38 470.281 272.801 465.041 cv
276.217 455.758 285.238 447.176 287.374 427.271 cv
288.619 423.172 289.524 419.388 289.86 416.314 cv
289.494 417.616 282.573 426.628 281.944 427.273 cv
cp
.917647 .631373 .54902 rgb
f
259.349 496.439 mo
259.349 496.439 236.838 496.329 217.664 498.83 cv
200.662 501.047 192.434 510.349 196.378 519.943 cv
199.946 528.623 199.189 534.178 201.914 542.028 cv
204.639 549.877 218.337 579.911 227.024 604.523 cv
227.59 606.129 226.82 614.084 223.282 619.417 cv
220.652 623.383 206.814 623.05 211.487 630.7 cv
225.288 630.7 230.69 630.847 238.063 621.72 cv
242.899 615.733 251.029 614.402 240.337 605.422 cv
235.991 601.772 234.977 593.625 232.417 581.475 cv
227.108 556.279 234.624 552.538 224.288 533.756 cv
217.489 521.4 223.585 523.282 230.716 525.277 cv
244.156 529.039 275.045 527.414 285.053 527.414 cv
295.062 527.414 304.595 524.182 300.045 505.557 cv
268.261 499.237 259.349 496.439 259.349 496.439 cv
cp
.968627 .701961 .611765 rgb
f
300.335 505.352 mo
268.55 499.032 258.52 496.045 258.52 496.045 cv
258.52 496.045 235.916 496.066 216.742 498.567 cv
199.74 500.784 189.069 509.406 193.012 519 cv
196.58 527.68 197.544 534.489 200.269 542.339 cv
201.992 547.304 209.351 560.834 215.81 576.565 cv
216.275 577.698 216.445 582.706 216.537 582.948 cv
216.707 583.393 219.957 587.006 220.804 589.143 cv
221.793 591.636 221.694 595.664 221.756 595.818 cv
221.949 596.295 225.538 601.528 225.701 601.943 cv
225.701 601.943 232.859 601.023 236.118 599.229 cv
236.118 599.229 236.758 595.039 236.562 592.405 cv
236.443 590.813 234.813 587.743 235.069 585.703 cv
235.069 585.703 235.251 579.896 235.223 579.746 cv
235.223 579.746 232.638 575.483 232.294 573.264 cv
229.401 554.605 231.185 547.106 226.859 537.46 cv
221.138 524.703 224.874 525.154 224.874 525.154 cv
238.315 528.915 275.15 529.552 285.158 529.552 cv
295.167 529.552 305.655 523.662 300.335 505.352 cv
cp
.27451 .329412 .368627 rgb
f
298.821 505.05 mo
297.166 523.502 282.894 518.034 275.021 517.036 cv
270.511 516.465 241.988 527.926 220.556 514.817 cv
218.143 513.341 223.65 522.393 220.952 522.65 cv
219.445 522.793 209.472 514.866 207.939 514.861 cv
206.619 514.857 215.962 522.303 216.973 523.301 cv
219.554 525.845 215.635 525.55 211.149 529.81 cv
219.618 528.48 214.834 533.106 216.187 536.684 cv
219.241 544.764 226.159 551.43 231.266 583.678 cv
232.176 589.426 226.585 597.329 221.076 589.964 cv
221.772 592.432 221.7 595.68 221.756 595.818 cv
221.948 596.295 225.538 601.528 225.701 601.943 cv
225.701 601.943 232.859 601.023 236.118 599.229 cv
236.118 599.229 236.758 595.039 236.562 592.405 cv
236.443 590.813 234.813 587.742 235.069 585.703 cv
235.069 585.703 235.251 579.896 235.223 579.746 cv
235.223 579.746 232.638 575.483 232.294 573.264 cv
229.401 554.605 231.185 547.106 226.859 537.46 cv
221.138 524.703 224.874 525.154 224.874 525.154 cv
238.315 528.915 275.15 529.552 285.158 529.552 cv
295.167 529.552 306.22 523.416 300.115 505.308 cv
299.769 505.24 299.162 505.118 298.821 505.05 cv
cp
.211765 .266667 .298039 rgb
f
242.145 609.635 mo
242.145 609.635 246.067 609.162 247.622 614.506 cv
248.054 616.211 242.296 620.531 239.686 623.487 cv
237.075 626.443 229.471 632.695 225.46 632.695 cv
221.449 632.695 213.378 632.695 211.373 632.695 cv
209.367 632.695 208.466 630.12 209.737 630.12 cv
213.09 630.12 242.145 609.635 242.145 609.635 cv
cp
f
223.72 605.066 mo
228.315 605.58 li
238.417 603.205 li
238.417 603.205 243.426 605.219 244.943 610.429 cv
245.364 612.092 239.218 618.368 237.227 621.652 cv
234.422 626.281 228.363 630.922 224.452 630.922 cv
220.54 630.922 211.112 630.922 209.156 630.922 cv
208.927 630.922 206.594 626.358 209.386 623.937 cv
211.689 621.941 217.161 620.5 217.877 619.724 cv
221.214 618.316 223.72 605.066 223.72 605.066 cv
cp
.423529 .486275 .0509804 rgb
f
218.548 619.306 mo
226.088 619.838 li
226.983 617.258 li
219.597 615.965 li
218.548 619.306 li
cp
219.768 614.062 mo
227.308 614.593 li
228.203 612.014 li
220.817 610.72 li
219.768 614.062 li
cp
222.209 605.863 mo
229.594 607.157 li
228.7 609.736 li
221.159 609.205 li
222.209 605.863 li
cp
1 1 1 rgb
f
259.304 496.454 mo
259.304 496.454 236.805 496.34 217.345 498.935 cv
200.089 501.236 190.795 510.888 193.64 520.843 cv
196.213 529.849 194.821 535.613 196.646 543.758 cv
198.472 551.904 208.729 583.067 214.597 608.606 cv
214.979 610.272 213.298 618.527 209.149 624.061 cv
206.064 628.176 192.264 627.831 196.061 635.768 cv
209.862 635.768 215.247 635.921 223.666 626.45 cv
229.188 620.238 237.47 618.857 227.807 609.539 cv
223.879 605.751 223.799 597.298 222.63 584.69 cv
220.208 558.546 228.152 554.665 219.968 535.176 cv
214.584 522.354 220.464 524.307 227.367 526.378 cv
240.377 530.28 271.451 528.595 281.46 528.595 cv
291.468 528.595 302.826 525.549 300.41 506.223 cv
269.349 499.665 259.304 496.454 259.304 496.454 cv
cp
.968627 .701961 .611765 rgb
f
300.115 505.308 mo
269.055 498.751 258.52 496.045 258.52 496.045 cv
258.52 496.045 235.914 496.067 216.453 498.662 cv
199.197 500.963 187.538 509.909 190.383 519.864 cv
192.956 528.87 193.14 535.936 194.965 544.081 cv
196.12 549.233 201.929 563.273 206.586 579.595 cv
206.921 580.771 206.517 585.968 206.582 586.219 cv
206.701 586.68 209.536 590.43 210.139 592.647 cv
210.843 595.234 210.282 599.414 210.326 599.574 cv
210.464 600.068 213.454 605.498 213.57 605.929 cv
213.57 605.929 220.833 604.975 224.298 603.113 cv
224.298 603.113 225.418 598.765 225.523 596.032 cv
225.586 594.38 224.308 591.194 224.798 589.078 cv
224.798 589.078 225.646 583.052 225.635 582.897 cv
225.635 582.897 223.538 578.473 223.448 576.17 cv
222.692 556.81 225.336 549.028 222.115 539.019 cv
217.855 525.782 221.54 526.25 221.54 526.25 cv
234.549 530.153 271.311 530.814 281.32 530.814 cv
291.328 530.814 303.338 524.308 300.115 505.308 cv
cp
.337255 .392157 .435294 rgb
f
299.693 505.792 mo
295.924 524.938 280.375 518.862 272.616 517.826 cv
268.172 517.233 238.336 529.126 218.406 515.523 cv
216.162 513.992 220.631 523.385 217.904 523.651 cv
216.381 523.8 207.316 515.574 205.783 515.57 cv
204.464 515.565 212.954 523.292 213.851 524.327 cv
216.141 526.967 212.255 526.66 207.281 531.081 cv
215.903 529.701 210.588 534.501 211.531 538.214 cv
213.66 546.598 219.814 553.514 221.227 586.977 cv
221.478 592.94 214.982 601.141 210.317 593.5 cv
210.73 596.061 210.286 599.43 210.326 599.574 cv
210.464 600.068 213.454 605.498 213.57 605.929 cv
213.57 605.929 220.833 604.975 224.298 603.113 cv
224.298 603.113 225.418 598.765 225.523 596.032 cv
225.586 594.38 224.308 591.194 224.798 589.078 cv
224.798 589.078 225.646 583.052 225.635 582.897 cv
225.635 582.897 223.538 578.473 223.448 576.17 cv
222.692 556.81 225.336 549.028 222.115 539.019 cv
217.855 525.782 221.54 526.25 221.54 526.25 cv
234.549 530.153 271.311 530.814 281.32 530.814 cv
291.328 530.814 304.379 524.721 300.349 505.931 cv
300.01 505.86 300.026 505.862 299.693 505.792 cv
cp
.27451 .329412 .368627 rgb
f
229.132 613.911 mo
229.132 613.911 233.108 613.42 234.052 618.965 cv
234.288 620.734 228.036 625.217 225.086 628.284 cv
222.137 631.351 213.816 637.839 209.806 637.839 cv
205.795 637.839 197.723 637.839 195.718 637.839 cv
193.713 637.839 193.107 635.167 194.377 635.167 cv
197.73 635.167 229.132 613.911 229.132 613.911 cv
cp
.211765 .266667 .298039 rgb
f
211.23 609.169 mo
215.767 609.703 li
226.141 607.238 li
226.141 607.238 230.919 609.328 231.84 614.735 cv
232.07 616.46 225.205 622.972 222.838 626.38 cv
219.502 631.183 212.912 635.998 209 635.998 cv
205.089 635.998 195.66 635.998 193.705 635.998 cv
193.475 635.998 191.665 631.263 194.735 628.751 cv
197.266 626.68 202.903 625.185 203.708 624.379 cv
207.207 622.919 211.23 609.169 211.23 609.169 cv
cp
.615686 .752941 .180392 rgb
f
204.427 623.946 mo
211.907 624.497 li
213.097 621.821 li
205.859 620.479 li
204.427 623.946 li
cp
206.248 618.504 mo
213.728 619.055 li
214.918 616.379 li
207.68 615.037 li
206.248 618.504 li
cp
209.628 609.997 mo
216.866 611.339 li
215.676 614.016 li
208.196 613.464 li
209.628 609.997 li
cp
1 1 1 rgb
f
259.023 448.481 mo
259.806 450.928 262.006 464.01 264.581 467.696 cv
268.961 467.71 276.348 467.212 276.726 466.189 cv
281.263 450.98 288.48 431.323 289.547 426.786 cv
290.614 422.25 294.884 404.906 281.809 401.971 cv
268.734 399.035 265.799 410.243 265.799 416.913 cv
261.606 437.994 257.956 445.146 259.023 448.481 cv
cp
.827451 .258824 .00784314 rgb
f
312.055 461.559 mo
312.055 529.552 li
312.055 536.593 306.327 542.321 299.287 542.321 cv
234.315 542.321 li
234.315 542.321 231.786 547.108 241.761 547.108 cv
263.707 547.108 299.287 547.108 299.287 547.108 cv
308.983 547.108 316.843 539.248 316.843 529.552 cv
316.843 529.552 316.843 486.954 316.843 469.568 cv
316.843 457.798 312.055 461.559 312.055 461.559 cv
cp
.113725 .231373 .239216 rgb
f
299.021 539.394 mo
299.021 541.598 297.234 543.384 295.03 543.384 cv
226.933 543.384 li
224.73 543.384 222.943 541.598 222.943 539.394 cv
222.943 533.808 li
222.943 531.605 224.73 529.818 226.933 529.818 cv
295.03 529.818 li
297.234 529.818 299.021 531.605 299.021 533.808 cv
299.021 539.394 li
cp
.521569 .345098 .729412 rgb
f
236.22 558.678 mo
236.622 554.425 241.405 550.965 246.884 550.965 cv
291.572 550.965 li
297.051 550.965 301.834 554.425 302.236 558.678 cv
309.794 635.716 li
313.518 635.716 li
306.208 558.303 li
305.61 551.965 299.065 546.975 291.572 546.975 cv
246.884 546.975 li
239.391 546.975 232.846 551.965 232.248 558.303 cv
224.938 635.716 li
229.07 635.716 li
236.22 558.678 li
cp
.0784314 .172549 .176471 rgb
f
307.641 521.149 mo
307.416 523.193 305.576 524.667 303.531 524.442 cv
301.487 524.216 300.012 522.376 300.238 520.332 cv
311.149 421.446 li
311.374 419.402 313.214 417.927 315.259 418.153 cv
317.303 418.379 318.777 420.219 318.552 422.263 cv
307.641 521.149 li
cp
.521569 .345098 .729412 rgb
f
258.937 448 mo
258.845 447.464 249.998 448.467 248.331 449.134 cv
248.531 454.938 250.599 466.412 251.466 467.212 cv
253.2 467.479 262.74 468.013 264.808 467.612 cv
262.873 462.809 260.071 451.736 258.937 448 cv
cp
.827451 .258824 .00784314 rgb
f
236.077 349.942 mo
228.477 346.073 236.584 339.031 236.612 338.819 cv
233.175 346.281 237.735 347.524 237.735 347.524 cv
236.699 342.964 244.528 344.69 244.528 344.69 cv
244.528 344.69 249.178 354.518 249.522 357.876 cv
251.11 355.007 250.891 353.15 250.891 353.15 cv
250.891 353.15 250.932 349.671 254.668 349.137 cv
258.404 348.603 261.784 354.118 263.029 357.676 cv
264.274 361.234 269.611 365.681 270.856 365.681 cv
273.524 365.147 273.524 365.147 273.524 365.147 cv
273.524 365.147 275.615 351.138 276.726 345.532 cv
278.416 338.33 276.692 322.857 262.816 317.52 cv
262.464 317.385 262.029 316.77 261.709 316.529 cv
261.266 316.195 260.793 315.902 260.305 315.64 cv
259.212 315.054 258.034 314.631 256.837 314.313 cv
253.976 313.55 250.965 313.365 248.016 313.502 cv
241.298 313.812 234.418 315.805 228.852 319.642 cv
224.721 322.489 220.502 326.755 220.323 331.996 cv
220.227 334.812 220.32 337.809 221.567 340.355 cv
224.401 346.142 228.892 348.699 236.077 349.942 cv
cp
.196078 0 .00392157 rgb
f
261.739 318.451 mo
261.205 313.781 240.259 311.113 229.985 320.852 cv
227.103 323.585 223.907 326.52 222.416 330.289 cv
221.073 333.687 220.88 337.685 222.332 341.081 cv
222.316 340.1 222.331 339.317 222.757 338.408 cv
223.199 337.465 224.084 336.835 224.671 335.995 cv
224.954 335.59 225.093 335.168 225.424 334.822 cv
225.882 334.342 226.574 333.973 227.099 333.56 cv
229.151 331.946 231.096 330.19 232.921 328.324 cv
238.791 322.32 249.598 317.25 260.538 319.785 cv
254.534 320.319 242.66 317.784 229.052 335.528 cv
232.387 333.794 237.057 330.992 250.532 332.993 cv
264.007 334.995 267.209 328.324 265.075 323.654 cv
267.209 325.122 267.209 341.399 275.348 347.803 cv
277.216 343.267 278.55 322.453 261.739 318.451 cv
cp
.227451 .054902 .00784314 rgb
f
910.872 457.302 mo
910.872 457.836 911.305 458.269 911.84 458.269 cv
983.564 458.269 li
984.099 458.269 984.532 457.836 984.532 457.302 cv
984.532 456.768 984.099 456.334 983.564 456.334 cv
911.84 456.334 li
911.305 456.334 910.872 456.768 910.872 457.302 cv
cp
.776471 .776471 .776471 rgb
f
987.485 456.769 mo
987.993 456.934 988.546 456.63 988.721 456.089 cv
1012.14 383.506 li
1012.32 382.965 1012.05 382.393 1011.54 382.228 cv
1011.03 382.062 1010.48 382.366 1010.3 382.907 cv
986.881 455.49 li
986.707 456.031 986.977 456.603 987.485 456.769 cv
cp
0 .298039 .337255 rgb
f
986.84 457.185 mo
1011.25 382.067 li
1013 382.991 1013.89 385.057 1013.26 387.004 cv
991.108 455.166 li
990.548 456.892 988.963 457.984 987.245 458.015 cv
986.633 459.539 985.156 460.619 983.413 460.617 cv
911.743 460.534 li
909.696 460.531 908.008 459.043 907.673 457.093 cv
986.84 457.185 li
cp
.878431 .878431 .878431 rgb
f
975.687 458.822 mo
975.687 459.127 975.935 459.375 976.24 459.375 cv
982.735 459.375 li
983.041 459.375 983.288 459.127 983.288 458.822 cv
983.288 458.517 983.041 458.269 982.735 458.269 cv
976.24 458.269 li
975.935 458.269 975.687 458.517 975.687 458.822 cv
cp
.776471 .776471 .776471 rgb
f
966.151 458.822 mo
966.151 459.127 966.399 459.375 966.704 459.375 cv
973.2 459.375 li
973.505 459.375 973.752 459.127 973.752 458.822 cv
973.752 458.517 973.505 458.269 973.2 458.269 cv
966.704 458.269 li
966.399 458.269 966.151 458.517 966.151 458.822 cv
cp
f
913.083 458.822 mo
913.083 459.127 913.331 459.375 913.636 459.375 cv
920.131 459.375 li
920.437 459.375 920.684 459.127 920.684 458.822 cv
920.684 458.517 920.437 458.269 920.131 458.269 cv
913.636 458.269 li
913.331 458.269 913.083 458.517 913.083 458.822 cv
cp
f
869.863 488.446 mo
901.309 495.326 950.12 515.418 952.54 523.477 cv
955.306 532.687 959.704 536.898 962.639 544.949 cv
965.575 553.001 973.976 585.62 983.056 610.945 cv
983.648 612.597 999.078 620.938 1005.73 623.422 cv
1010.68 625.27 1024.18 625.729 1020.52 632.015 cv
1017.51 635.027 994.392 633.432 985.104 631.393 cv
976.769 629.564 968.965 632.48 972.154 619.071 cv
973.451 613.621 968.836 606.27 962.86 594.725 cv
950.468 570.786 941.451 571.833 937.726 550.454 cv
935.275 536.388 926.758 533.126 919.638 531.113 cv
907.118 527.572 885.8 529.549 851.377 518.179 cv
857.5 508.23 863.469 498.19 869.863 488.446 cv
cp
.968627 .701961 .611765 rgb
f
870.168 487.983 mo
903.319 494.976 952.034 512.947 954.467 521.048 cv
957.233 530.258 960.989 536.467 963.925 544.518 cv
965.782 549.612 968.54 564.965 973.559 581.653 cv
973.921 582.856 977.149 587.124 977.232 587.376 cv
977.385 587.841 977.012 592.653 977.719 594.903 cv
978.545 597.529 981.346 600.831 981.396 600.994 cv
981.551 601.498 981.975 607.848 982.114 608.284 cv
982.114 608.284 975.307 611.484 971.281 611.795 cv
971.281 611.795 967.904 608.657 966.298 606.353 cv
965.328 604.96 964.668 601.498 963.072 599.941 cv
963.072 599.941 959 595.202 958.924 595.062 cv
958.924 595.062 958.285 590.077 957.087 588.036 cv
947.012 570.884 940.415 565.622 937.654 555.187 cv
934.001 541.385 923.402 534.123 923.402 534.123 cv
896.414 525.255 883.195 530.01 851.305 518.296 cv
857.551 508.151 863.634 497.909 870.168 487.983 cv
cp
.27451 .329412 .368627 rgb
f
854.762 512.657 mo
864.993 514.192 912.112 531.113 922.273 527.35 cv
924.888 526.381 930.273 540.852 932.779 539.57 cv
934.177 538.855 937.454 526.723 938.777 525.87 cv
939.915 525.135 936.858 536.517 936.656 537.909 cv
936.14 541.459 939.328 539.041 946.077 540.106 cv
937.86 543.691 945.113 544.895 946.356 548.626 cv
949.161 557.053 947.674 566.44 964.995 596.146 cv
968.081 601.44 978.24 604.929 978.039 595.739 cv
979.1 598.181 981.351 600.848 981.396 600.994 cv
981.551 601.498 981.975 607.848 982.114 608.284 cv
982.114 608.284 975.307 611.484 971.281 611.795 cv
971.281 611.795 967.904 608.657 966.298 606.353 cv
965.328 604.96 964.668 601.498 963.072 599.941 cv
963.072 599.941 959 595.202 958.924 595.062 cv
958.924 595.062 958.285 590.077 957.086 588.036 cv
947.012 570.884 940.415 565.622 937.654 555.187 cv
934.001 541.385 922.649 534.5 922.649 534.5 cv
900.447 527.726 887.578 535.802 851.305 518.296 cv
852.461 516.418 853.614 514.539 854.762 512.657 cv
cp
.211765 .266667 .298039 rgb
f
973.085 623.806 mo
973.085 623.806 969.812 627.231 972.069 632.546 cv
972.845 634.207 1019.5 634.809 1021.23 633.698 cv
1022.97 632.587 1021.89 630.248 1020.79 630.952 cv
1017.89 632.81 973.085 623.806 973.085 623.806 cv
cp
f
984.178 611.784 mo
981.835 620.088 li
971.973 616.382 li
971.973 616.382 969.544 623.972 971.744 629.155 cv
972.501 630.774 996.637 632.313 1002.56 632.28 cv
1006.57 632.257 1019.91 632.33 1021.6 631.247 cv
1021.8 631.12 1023.95 624.54 1017.6 624.131 cv
1002.45 623.157 999.441 619.879 984.178 611.784 cv
cp
.0627451 .639216 .698039 rgb
f
992.638 624.681 mo
991.207 624.336 981.835 620.088 981.835 620.088 cv
982.757 616.821 li
985.951 619.563 989.352 622.049 992.638 624.681 cv
cp
.211765 .266667 .298039 rgb
f
985.002 630.066 mo
979.221 629.572 971.945 626.624 970.857 622.697 cv
970.737 624.828 970.901 627.168 971.744 629.155 cv
973.262 633.627 1019.91 632.33 1021.6 631.247 cv
1021.73 631.165 1022.96 627.902 1021.58 626.261 cv
1021.97 630.561 1017 629.956 1011.31 630.155 cv
1007.04 630.304 989.636 630.462 985.002 630.066 cv
cp
.0392157 .552941 .576471 rgb
f
910.891 330.204 mo
911.251 334.801 911.823 342.963 909.311 347.836 cv
908.429 349.547 908.221 351.312 908.228 351.567 cv
908.392 357.697 910.059 362.175 908.143 362.422 cv
906.226 362.669 904.889 362.297 904.388 363.109 cv
904.099 363.579 903.84 364.396 903.473 365.361 cv
903.365 365.644 903.649 366.797 902.564 367.203 cv
903.205 367.909 902.358 368.547 901.674 370.06 cv
900.712 372.834 899.745 375.083 897.976 375.881 cv
894.718 377.349 883.892 370.571 883.491 372.121 cv
882.851 374.18 880.434 379.036 879.44 383.263 cv
882.999 392.898 li
857.197 374.967 li
857.197 374.967 863.494 360.167 861.714 352.153 cv
859.933 344.139 857.173 335.501 863.597 327.181 cv
870.02 318.861 876.299 307.189 892.695 313.473 cv
909.09 319.756 910.66 327.236 910.891 330.204 cv
cp
.968627 .701961 .611765 rgb
f
881.083 387.712 mo
882.999 392.898 li
857.197 374.967 li
857.197 374.967 857.773 373.771 858.767 370.823 cv
862.976 374.155 876.191 384.619 881.083 387.712 cv
cp
.917647 .631373 .54902 rgb
f
879.507 383.445 mo
879.507 383.445 877.43 380.324 876.641 379.127 cv
875.458 377.331 878.104 367.302 878.104 367.302 cv
880.945 365.049 881.985 360.42 883.152 356.805 cv
883.814 354.752 885.245 348.083 884.982 343.648 cv
884.895 342.171 885.767 344.91 886.815 345.072 cv
886.815 345.072 886.615 357.806 885.634 362.552 cv
884.955 365.832 893.47 373.392 900.837 372.257 cv
900.099 373.982 899.245 375.309 897.976 375.881 cv
894.717 377.349 883.892 370.571 883.491 372.121 cv
882.851 374.18 880.434 379.036 879.44 383.263 cv
879.507 383.445 li
cp
f
902.668 343.931 mo
902.552 344.448 904.477 343.981 906.678 344.208 cv
908.88 344.436 910.495 345.268 910.641 344.754 cv
910.907 343.813 909.704 342.099 907.502 341.872 cv
905.301 341.645 902.894 342.923 902.668 343.931 cv
cp
.917647 .623529 .545098 rgb
f
903.077 343.161 mo
902.224 344.03 905.357 342.982 907.532 343.333 cv
909.706 343.684 910.097 345.302 910.951 344.432 cv
911.804 343.563 911.428 341.865 909.254 341.514 cv
907.08 341.163 903.93 342.291 903.077 343.161 cv
cp
.196078 0 .00392157 rgb
f
903.646 350.03 mo
903.453 351.059 904.001 352.026 904.871 352.19 cv
905.742 352.354 906.604 351.653 906.798 350.624 cv
906.992 349.595 906.444 348.628 905.573 348.464 cv
904.703 348.3 903.84 349.001 903.646 350.03 cv
cp
.184314 .0117647 0 rgb
f
903.965 349.522 mo
903.868 350.04 904.144 350.527 904.582 350.609 cv
905.021 350.692 905.455 350.339 905.553 349.821 cv
905.65 349.302 905.374 348.815 904.936 348.733 cv
904.497 348.65 904.063 349.003 903.965 349.522 cv
cp
1 1 1 rgb
f
903.392 359.475 mo
902.819 362.392 906.301 361.333 908.866 361.885 cv
908.727 362.213 908.495 362.411 908.136 362.457 cv
906.828 362.625 905.117 362.443 904.612 362.888 cv
903.636 362.504 902.365 361.814 903.392 359.475 cv
cp
.917647 .623529 .545098 rgb
f
879.138 340.126 mo
877.721 341.418 876.844 343.726 876.992 346.249 cv
877.207 349.918 879.512 352.652 882.138 352.356 cv
882.979 352.262 883.749 351.866 884.403 351.254 cv
883.649 352.859 882.437 353.924 881.015 354.007 cv
878.473 354.155 876.227 351.11 875.999 347.206 cv
875.804 343.864 877.152 340.982 879.138 340.126 cv
cp
f
883.154 349.843 mo
880.454 349.591 878.594 347.426 880.17 345.27 cv
882.369 342.262 882.382 345.606 882.034 346.207 cv
881.097 347.825 882.176 348.123 883.154 349.843 cv
cp
f
885.6 344.414 mo
885.6 344.414 887.226 352.787 884.199 362.22 cv
882.727 366.807 893.674 375.317 900.492 372.974 cv
901.714 374.455 900.913 377.215 897.199 377.016 cv
893.486 376.817 880.767 367.826 882.281 363.11 cv
883.794 358.393 884.786 353.751 885.6 344.414 cv
cp
.2 .215686 .227451 rgb
f
904.202 363.736 mo
905.012 363.889 903.64 365.225 903.64 365.225 cv
903.64 365.225 900.381 363.111 898.148 365.504 cv
898.677 362.696 902.3 363.378 904.202 363.736 cv
cp
f
902.742 367.963 mo
902.574 368.568 902.006 369.267 901.668 370.016 cv
901.635 370.111 901.541 370.393 901.428 370.715 cv
901.313 370.581 901.207 369.818 901.3 369.206 cv
901.337 368.961 899.382 368.073 898.957 367.22 cv
899.353 367.482 901.85 368.637 902.742 367.963 cv
cp
.917647 .623529 .545098 rgb
f
866.622 318.005 mo
870.965 314.196 879.251 307.379 891.325 311.653 cv
903.4 315.928 913.923 323.787 911.157 328.517 cv
907.147 329.107 898.819 324.318 898.161 325.82 cv
897.903 326.408 897.88 326.864 897.636 328.36 cv
880.373 326.518 li
897.401 329.633 li
897.319 330.02 897.124 331.291 897.02 331.65 cv
891.279 331.762 li
896.45 333.268 li
896.126 333.939 895.721 334.425 895.191 334.562 cv
892.956 335.142 890.797 335.985 889.526 338.747 cv
888.256 341.509 885.7 347.78 885.7 347.78 cv
885.7 347.78 885.013 338.147 880.559 338.559 cv
876.105 338.97 874.13 346.725 873.728 348.276 cv
872.815 351.793 868.52 356.673 865.923 357.184 cv
863.326 357.696 861.915 357.742 861.915 357.742 cv
861.915 357.742 860.707 347.699 858.869 342.852 cv
857.031 338.004 858.873 324.799 866.622 318.005 cv
cp
.407843 .435294 .447059 rgb
f
898.161 325.82 mo
897.957 326.284 897.809 327.242 897.636 328.36 cv
893.642 327.246 863.587 325.181 861.128 325.576 cv
858.419 325.324 870.443 299.986 899.198 312.622 cv
910.924 317.775 916.108 327.077 910.559 328.658 cv
906.549 329.247 898.819 324.318 898.161 325.82 cv
cp
.2 .215686 .227451 rgb
f
882.999 391.259 mo
882.999 391.259 889.116 410.764 889.453 419.877 cv
889.791 428.99 882.097 438.946 880.072 449.071 cv
878.047 459.197 882.028 490.982 882.028 490.982 cv
834.549 503.808 li
834.549 503.808 833.074 472.524 832.262 430.045 cv
831.624 396.7 843.394 388.932 857.621 372.281 cv
863.697 375.657 882.999 391.259 882.999 391.259 cv
cp
.615686 .752941 .180392 rgb
f
837.419 503.033 mo
840.563 497.679 845.426 439.93 845.014 434.838 cv
844.651 430.355 843.635 409.849 844.854 405.46 cv
847.364 396.428 861.551 393.621 866.903 402.652 cv
870.458 408.651 872.722 422.09 875.874 428.273 cv
878.385 433.198 885.495 434.445 885.495 434.445 cv
883.399 439.228 881.061 444.129 880.072 449.071 cv
878.047 459.197 882.028 490.982 882.028 490.982 cv
837.419 503.033 li
cp
.568627 .666667 .14902 rgb
f
850.642 362.994 mo
850.642 362.994 855.197 362.335 860.55 365.012 cv
860.092 366.924 858.458 372.747 857.005 374.506 cv
855.628 376.112 850.642 362.994 850.642 362.994 cv
cp
.360784 .407843 .0745098 rgb
f
882.999 392.898 mo
882.999 392.898 859.864 378.2 851.425 382.25 cv
846.7 387.313 841.046 393.366 839.021 398.092 cv
833.283 389.991 826.449 377.188 833.199 373.475 cv
839.95 369.762 850.499 360.532 852.187 363.57 cv
855.562 371.333 877.271 387.583 882.999 392.898 cv
cp
.568627 .666667 .14902 rgb
f
928.327 451.697 mo
932.935 453.49 939.543 451.871 941.836 450.253 cv
944.129 448.634 948.715 448.499 949.524 448.364 cv
950.333 448.229 952.896 444.993 946.691 443.104 cv
940.487 441.216 931.159 448.73 928.327 451.697 cv
cp
.917647 .631373 .54902 rgb
f
942.68 444.663 mo
942.859 442.805 944.904 443.555 946.092 443.671 cv
948.295 443.885 950.517 443.952 952.715 444.319 cv
953.38 444.43 956.091 446.573 958.438 448.338 cv
960.556 449.931 962.749 450.716 961.275 451.793 cv
960.525 452.341 958.293 452.469 956.917 450.458 cv
955.288 450.207 952.867 448.671 952.866 448.67 cv
952.328 448.329 950.041 447.962 949.46 447.856 cv
946.446 447.303 942.532 446.209 942.68 444.663 cv
cp
.886275 .584314 .513726 rgb
f
928.558 444.498 mo
938.914 439.886 939.095 439.258 941.971 439.823 cv
946.463 441.774 948.71 442.503 950.962 443.599 cv
951.639 443.928 954.321 446.724 956.033 448.991 cv
957.577 451.036 959.602 452.459 957.451 452.792 cv
956.356 452.962 953.838 452.259 953.315 450.145 cv
951.647 449.355 948.984 447.151 948.984 447.151 cv
948.984 447.151 945.26 446.726 942.645 446.139 cv
941.501 446.096 940.694 446.805 938.917 447.674 cv
935.1 449.54 933.105 451.571 929.008 450.31 cv
926.121 449.419 921.387 450.864 921.387 450.864 cv
921.387 450.864 921.458 451.021 920.65 447.593 cv
925.313 448.537 926.136 445.577 928.558 444.498 cv
cp
.917647 .631373 .54902 rgb
f
928.876 443.239 mo
939.598 439.013 941.354 439.721 943.282 440.736 cv
945.999 442.469 948.257 443.34 950.559 444.436 cv
951.25 444.765 951.573 446.597 953.323 448.864 cv
954.901 450.909 956.97 452.332 954.772 452.665 cv
953.653 452.835 951.613 451.932 951.079 449.818 cv
949.375 449.028 948.551 447.153 948.551 447.153 cv
948.551 447.153 946.333 447.555 943.661 446.969 cv
942.491 446.926 941.327 448.364 939.511 449.233 cv
935.611 451.098 933.452 453.13 929.265 451.868 cv
926.315 450.977 916.407 453.947 916.407 453.947 cv
916.407 453.947 913.429 449.23 912.603 445.802 cv
920.109 446.656 925.565 444.544 928.876 443.239 cv
cp
.968627 .701961 .611765 rgb
f
863.375 396.988 mo
856.462 392.797 849.449 393.337 845.403 402.508 cv
844.04 405.599 845.218 412.15 847.525 419.747 cv
849.719 440.182 858.98 448.994 862.487 458.525 cv
878.319 463.905 902.273 458.219 919.363 453.139 cv
918.093 448.284 916.869 446.002 915.076 445.934 cv
902.204 445.448 888.311 441.571 877.275 441.336 cv
874.838 441.916 879.121 442.97 868.061 417.344 cv
869.14 411.949 867.812 399.678 863.375 396.988 cv
cp
f
923.028 452.506 mo
923.028 452.506 922.947 445.009 921.536 445.009 cv
920.124 445.009 917.906 445.178 917.847 446.113 cv
917.803 446.818 918.493 453.396 918.845 453.476 cv
919.667 453.662 922.808 453.256 923.028 452.506 cv
cp
.2 .215686 .227451 rgb
f
916.287 445.134 mo
916.369 445.753 916.939 446.188 917.558 446.106 cv
922.373 445.462 li
922.993 445.379 923.428 444.81 923.345 444.19 cv
923.262 443.571 922.693 443.136 922.073 443.219 cv
917.258 443.862 li
916.639 443.945 916.204 444.514 916.287 445.134 cv
cp
f
923.345 444.19 mo
923.428 444.81 922.993 445.379 922.373 445.462 cv
917.558 446.106 li
916.939 446.188 916.369 445.753 916.286 445.134 cv
916.275 445.046 923.32 444.004 923.345 444.19 cv
cp
.0666667 .0941176 .109804 rgb
f
916.545 444.258 mo
916.72 444.05 916.967 443.901 917.258 443.862 cv
922.073 443.219 li
922.388 443.177 922.688 443.269 922.92 443.45 cv
922.758 443.513 916.752 444.36 916.545 444.258 cv
cp
.745098 .858824 .929412 rgb
f
853.1 419.749 mo
853.1 419.749 852.318 436.734 866.532 450.876 cv
866.532 450.876 868.17 454.806 869.232 455.638 cv
878.209 462.664 907.82 455.988 918.552 452.156 cv
918.7 453.166 li
901.61 458.246 878.319 463.905 862.487 458.525 cv
858.98 448.994 849.719 440.182 847.525 419.747 cv
846.247 415.538 845.318 411.654 844.973 408.497 cv
845.349 409.834 852.454 419.086 853.1 419.749 cv
cp
.917647 .631373 .54902 rgb
f
876.756 490.776 mo
876.756 490.776 899.854 490.659 919.834 493.323 cv
937.551 495.685 947.092 505.594 944.172 515.815 cv
941.53 525.062 942.959 530.98 941.085 539.343 cv
939.211 547.705 928.68 579.7 922.656 605.921 cv
922.263 607.631 923.989 616.107 928.249 621.788 cv
931.416 626.013 945.584 625.658 941.686 633.808 cv
927.517 633.808 921.988 633.964 913.345 624.241 cv
907.675 617.863 899.172 616.446 909.093 606.879 cv
913.126 602.99 913.208 594.311 914.408 581.367 cv
916.895 554.525 908.738 550.54 917.141 530.531 cv
922.669 517.367 916.631 519.372 909.545 521.498 cv
896.188 525.505 864.329 525.382 854.053 525.382 cv
843.778 525.382 831.376 520.422 833.856 500.579 cv
865.746 493.847 876.756 490.776 876.756 490.776 cv
cp
.968627 .701961 .611765 rgb
f
833.856 500.579 mo
865.746 493.847 877.15 490.356 877.15 490.356 cv
877.15 490.356 900.359 490.379 920.339 493.042 cv
938.055 495.405 950.025 504.589 947.105 514.81 cv
944.463 524.057 944.274 531.311 942.4 539.674 cv
941.215 544.964 935.251 559.377 930.47 576.136 cv
930.125 577.343 930.54 582.679 930.473 582.936 cv
930.351 583.41 927.44 587.26 926.821 589.536 cv
926.099 592.192 926.675 596.483 926.629 596.648 cv
926.488 597.155 923.418 602.73 923.299 603.172 cv
923.299 603.172 915.842 602.192 912.285 600.281 cv
912.285 600.281 911.135 595.817 911.027 593.011 cv
910.962 591.315 912.274 588.044 911.771 585.872 cv
911.771 585.872 910.901 579.685 910.912 579.525 cv
910.912 579.525 913.065 574.984 913.157 572.619 cv
913.933 552.742 911.219 544.752 914.526 534.477 cv
918.9 520.886 915.116 521.367 915.116 521.367 cv
901.76 525.374 864.017 526.052 853.741 526.052 cv
843.466 526.052 830.548 520.086 833.856 500.579 cv
cp
.337255 .392157 .435294 rgb
f
834.878 500.363 mo
838.747 520.02 854.711 513.782 862.677 512.719 cv
867.24 512.109 897.872 524.319 918.334 510.354 cv
920.638 508.781 916.049 518.426 918.849 518.699 cv
920.413 518.851 929.719 510.406 931.293 510.402 cv
932.648 510.397 923.932 518.329 923.01 519.392 cv
920.66 522.103 924.649 521.788 929.756 526.327 cv
920.904 524.91 926.36 529.838 925.392 533.65 cv
923.206 542.258 916.888 549.359 915.438 583.714 cv
915.179 589.837 921.849 598.257 926.639 590.411 cv
926.215 593.04 926.67 596.5 926.629 596.648 cv
926.488 597.155 923.418 602.73 923.299 603.172 cv
923.299 603.172 915.842 602.192 912.285 600.281 cv
912.285 600.281 911.135 595.817 911.027 593.011 cv
910.962 591.315 912.274 588.044 911.771 585.872 cv
911.771 585.872 910.901 579.685 910.912 579.525 cv
910.912 579.525 913.065 574.984 913.157 572.619 cv
913.933 552.742 911.219 544.752 914.526 534.477 cv
918.9 520.886 915.116 521.367 915.116 521.367 cv
901.76 525.374 864.017 526.052 853.741 526.052 cv
843.466 526.052 830.067 519.797 834.204 500.506 cv
834.552 500.432 834.535 500.435 834.878 500.363 cv
cp
.27451 .329412 .368627 rgb
f
907.321 611.367 mo
907.321 611.367 903.239 610.863 902.271 616.556 cv
902.028 618.372 908.447 622.975 911.475 626.124 cv
914.503 629.273 923.046 635.934 927.164 635.934 cv
931.282 635.934 939.568 635.934 941.627 635.934 cv
943.686 635.934 944.308 633.19 943.004 633.19 cv
939.561 633.19 907.321 611.367 907.321 611.367 cv
cp
f
923.148 607.233 mo
916.694 612.959 li
910.392 604.516 li
910.392 604.516 904.25 609.595 903.305 615.146 cv
903.069 616.918 909.329 621.406 912.282 624.477 cv
915.235 627.548 923.975 634.044 927.99 634.044 cv
932.006 634.044 941.686 634.044 943.694 634.044 cv
943.93 634.044 945.788 629.182 942.636 626.603 cv
940.038 624.477 934.25 622.942 933.424 622.115 cv
929.832 620.615 923.148 607.233 923.148 607.233 cv
cp
.0784314 .670588 .768627 rgb
f
923.31 622.656 mo
922.292 621.593 916.694 612.959 916.694 612.959 cv
919.233 610.706 li
920.442 614.738 921.965 618.667 923.31 622.656 cv
cp
.27451 .329412 .368627 rgb
f
922.867 629.777 mo
922.867 629.777 904.841 613.124 906.044 609.231 cv
904.793 610.96 903.668 613.019 903.305 615.146 cv
903.069 616.918 909.329 621.406 912.282 624.477 cv
915.235 627.548 923.975 634.044 927.99 634.044 cv
932.006 634.044 941.686 634.044 943.694 634.044 cv
943.846 634.044 944.67 632.028 944.397 629.904 cv
944.308 629.212 939.076 632.297 932.966 632.479 cv
928.698 632.606 922.867 629.777 922.867 629.777 cv
cp
.0470588 .627451 .686275 rgb
f
822.186 454.95 mo
822.186 524.757 li
822.186 531.986 828.066 537.866 835.295 537.866 cv
902 537.866 li
902 537.866 904.597 542.782 894.355 542.782 cv
871.824 542.782 835.295 542.782 835.295 542.782 cv
825.34 542.782 817.27 534.712 817.27 524.757 cv
817.27 524.757 817.27 481.022 817.27 463.172 cv
817.27 451.088 822.186 454.95 822.186 454.95 cv
cp
.113725 .231373 .239216 rgb
f
835.568 534.862 mo
835.568 537.124 837.402 538.958 839.665 538.958 cv
909.579 538.958 li
911.841 538.958 913.675 537.124 913.675 534.862 cv
913.675 529.127 li
913.675 526.864 911.841 525.03 909.579 525.03 cv
839.665 525.03 li
837.402 525.03 835.568 526.864 835.568 529.127 cv
835.568 534.862 li
cp
.521569 .345098 .729412 rgb
f
900.044 554.66 mo
899.632 550.294 894.721 546.742 889.096 546.742 cv
843.215 546.742 li
837.59 546.742 832.679 550.294 832.267 554.66 cv
824.508 633.755 li
820.684 633.755 li
828.188 554.275 li
828.803 547.768 835.522 542.645 843.215 542.645 cv
889.096 542.645 li
896.789 542.645 903.508 547.768 904.123 554.275 cv
911.627 633.755 li
907.385 633.755 li
900.044 554.66 li
cp
.0784314 .172549 .176471 rgb
f
826.717 516.129 mo
826.949 518.228 828.838 519.742 830.937 519.51 cv
833.036 519.279 834.55 517.39 834.318 515.291 cv
823.116 413.766 li
822.885 411.667 820.995 410.154 818.897 410.385 cv
816.798 410.617 815.284 412.506 815.516 414.605 cv
826.717 516.129 li
cp
.521569 .345098 .729412 rgb
f
1137.41 460.52 mo
888.579 460.52 li
888.579 467.998 li
1137.41 467.998 li
1137.41 460.52 li
cp
.937255 .67451 .215686 rgb
f
939.044 652.474 mo
929.356 652.474 li
929.356 470.824 li
939.044 470.824 li
939.044 652.474 li
cp
f
1110.62 652.474 mo
1100.93 652.474 li
1100.93 470.824 li
1110.62 470.824 li
1110.62 652.474 li
cp
f
1137.41 467.835 mo
908.188 467.835 li
907.23 471.806 li
1137.41 471.806 li
1137.41 467.835 li
cp
1 .392157 .121569 rgb
f
412.662 495.631 mo
443.504 502.379 491.378 522.085 493.751 529.989 cv
496.464 539.023 500.777 543.152 503.656 551.049 cv
506.535 558.946 514.775 590.939 523.681 615.777 cv
524.262 617.398 539.396 625.578 545.92 628.015 cv
550.771 629.826 564.02 630.277 560.429 636.442 cv
557.475 639.396 534.799 637.832 525.69 635.832 cv
517.515 634.038 509.861 636.898 512.989 623.747 cv
514.26 618.402 509.735 611.192 503.873 599.869 cv
491.719 576.389 482.875 577.416 479.222 556.447 cv
476.818 542.652 468.464 539.453 461.482 537.478 cv
449.202 534.006 428.293 535.945 394.531 524.793 cv
400.537 515.035 406.392 505.187 412.662 495.631 cv
cp
.968627 .701961 .611765 rgb
f
412.961 495.177 mo
445.476 502.036 493.255 519.662 495.641 527.606 cv
498.354 536.64 502.038 542.729 504.917 550.626 cv
506.739 555.622 509.444 570.68 514.367 587.048 cv
514.721 588.227 517.888 592.413 517.969 592.661 cv
518.119 593.117 517.753 597.836 518.447 600.043 cv
519.256 602.619 522.003 605.857 522.053 606.017 cv
522.205 606.511 522.621 612.739 522.757 613.167 cv
522.757 613.167 516.081 616.305 512.132 616.61 cv
512.132 616.61 508.82 613.533 507.245 611.273 cv
506.294 609.907 505.646 606.512 504.081 604.984 cv
504.081 604.984 500.088 600.336 500.012 600.199 cv
500.012 600.199 499.386 595.31 498.21 593.308 cv
488.33 576.485 481.859 571.325 479.151 561.09 cv
475.569 547.553 465.173 540.431 465.173 540.431 cv
438.704 531.733 425.738 536.396 394.461 524.907 cv
400.587 514.957 406.553 504.912 412.961 495.177 cv
cp
.054902 .137255 .188235 rgb
f
397.852 519.377 mo
407.886 520.882 454.1 537.478 464.065 533.788 cv
466.631 532.837 471.912 547.03 474.369 545.773 cv
475.741 545.072 478.955 533.173 480.252 532.336 cv
481.368 531.615 478.37 542.778 478.172 544.144 cv
477.666 547.626 480.793 545.254 487.413 546.299 cv
479.353 549.814 486.467 550.996 487.686 554.655 cv
490.437 562.92 488.979 572.127 505.966 601.262 cv
508.994 606.454 518.957 609.876 518.76 600.863 cv
519.801 603.258 522.009 605.874 522.053 606.017 cv
522.205 606.511 522.621 612.739 522.757 613.167 cv
522.757 613.167 516.081 616.305 512.132 616.61 cv
512.132 616.61 508.82 613.533 507.245 611.273 cv
506.294 609.907 505.646 606.512 504.081 604.984 cv
504.081 604.984 500.088 600.336 500.012 600.199 cv
500.012 600.199 499.386 595.31 498.21 593.308 cv
488.33 576.485 481.859 571.325 479.151 561.09 cv
475.569 547.553 464.434 540.8 464.434 540.8 cv
442.659 534.157 430.037 542.078 394.461 524.907 cv
395.595 523.066 396.725 521.223 397.852 519.377 cv
cp
.0196078 .0784314 .109804 rgb
f
511.779 631.092 mo
511.779 631.092 510.133 632.399 512.346 637.612 cv
513.698 637.612 559.424 639.183 561.124 638.093 cv
562.824 637.003 561.766 634.709 560.69 635.399 cv
558.707 636.67 536.692 633.179 522.951 631.491 cv
516.989 630.758 511.779 631.092 511.779 631.092 cv
cp
.211765 .266667 .298039 rgb
f
528.179 613.982 mo
519.787 618.777 li
511.694 620.875 li
511.694 620.875 509.676 626.141 511.834 631.224 cv
522.31 632.701 534.481 635.263 542.808 636.702 cv
546.689 637.373 559.83 636.751 561.488 635.689 cv
561.683 635.564 563.133 628.03 556.951 627.169 cv
540.958 624.942 543.148 621.921 528.179 613.982 cv
cp
.937255 .937255 .937255 rgb
f
540.11 620.955 mo
535.004 626.329 li
537.557 627.807 li
543.327 622.934 li
540.11 620.955 li
cp
535.407 617.596 mo
530.302 622.97 li
532.855 624.448 li
538.625 619.575 li
535.407 617.596 li
cp
534.057 616.62 mo
528.287 621.492 li
525.734 620.015 li
530.84 614.641 li
534.057 616.62 li
cp
1 1 1 rgb
f
452.903 340.429 mo
453.255 344.937 453.712 353.709 452.745 355.758 cv
451.88 357.437 449.458 358.118 449.574 360.516 cv
449.865 366.523 452.087 371.786 450.207 372.028 cv
448.327 372.27 447.016 371.905 446.525 372.702 cv
446.241 373.162 445.987 373.964 445.626 374.91 cv
445.52 375.188 445.799 376.319 444.735 376.717 cv
445.364 377.41 444.533 378.035 443.863 379.519 cv
442.918 382.24 441.97 384.446 440.235 385.228 cv
437.04 386.668 426.421 380.021 426.029 381.541 cv
425.401 383.56 423.03 388.323 422.055 392.469 cv
425.546 401.918 li
400.24 384.332 li
400.24 384.332 406.416 369.816 404.67 361.956 cv
402.923 354.096 400.216 345.624 406.516 337.464 cv
412.816 329.303 418.975 317.856 435.055 324.019 cv
451.136 330.182 452.675 337.518 452.903 340.429 cv
cp
.968627 .701961 .611765 rgb
f
423.667 396.832 mo
425.546 401.919 li
400.24 384.332 li
400.24 384.332 400.805 383.159 401.779 380.267 cv
405.908 383.535 418.869 393.799 423.667 396.832 cv
cp
.917647 .631373 .54902 rgb
f
422.121 392.647 mo
422.121 392.647 420.084 389.586 419.31 388.412 cv
418.15 386.651 420.745 376.814 420.745 376.814 cv
423.531 374.604 424.552 370.065 425.696 366.519 cv
426.346 364.505 427.749 357.964 427.491 353.614 cv
427.405 352.166 428.534 354.41 429.407 356.223 cv
429.407 356.223 430.975 363.928 430.012 368.583 cv
429.346 371.8 439.036 380.109 443.804 379.631 cv
443.08 381.323 441.48 384.667 440.235 385.228 cv
437.039 386.668 426.421 380.021 426.029 381.541 cv
425.401 383.56 423.03 388.323 422.055 392.468 cv
422.121 392.647 li
cp
f
445.146 353.892 mo
445.035 354.382 446.88 354.215 448.991 354.77 cv
451.101 355.326 452.65 356.386 452.789 355.904 cv
453.044 355.021 451.891 353.159 449.781 352.603 cv
447.67 352.048 445.363 352.938 445.146 353.892 cv
cp
.917647 .623529 .545098 rgb
f
445.539 353.199 mo
444.721 353.923 447.725 353.368 449.809 354.041 cv
451.893 354.713 452.268 356.359 453.086 355.635 cv
453.904 354.911 453.544 353.189 451.46 352.517 cv
449.376 351.844 446.357 352.475 445.539 353.199 cv
cp
.196078 0 .00392157 rgb
f
445.797 359.874 mo
445.607 360.883 446.145 361.832 446.998 361.993 cv
447.852 362.153 448.698 361.466 448.888 360.456 cv
449.078 359.447 448.54 358.499 447.687 358.338 cv
446.833 358.177 445.987 358.865 445.797 359.874 cv
cp
.184314 .0117647 0 rgb
f
446.11 359.375 mo
446.014 359.884 446.285 360.361 446.715 360.442 cv
447.145 360.523 447.571 360.177 447.667 359.669 cv
447.762 359.16 447.491 358.683 447.061 358.602 cv
446.632 358.521 446.205 358.867 446.11 359.375 cv
cp
1 1 1 rgb
f
445.547 369.138 mo
444.985 371.998 448.4 370.959 450.917 371.501 cv
450.78 371.823 450.552 372.017 450.2 372.062 cv
448.917 372.227 447.239 372.049 446.744 372.485 cv
445.787 372.108 444.54 371.431 445.547 369.138 cv
cp
.917647 .623529 .545098 rgb
f
421.76 350.16 mo
420.37 351.427 419.509 353.691 419.654 356.165 cv
419.866 359.764 422.126 362.446 424.702 362.156 cv
425.526 362.063 426.282 361.674 426.923 361.074 cv
426.184 362.648 424.995 363.693 423.6 363.774 cv
421.107 363.92 418.904 360.934 418.68 357.104 cv
418.489 353.826 419.812 351 421.76 350.16 cv
cp
f
425.698 359.691 mo
423.05 359.444 421.225 357.32 422.772 355.205 cv
424.928 352.255 424.941 355.535 424.599 356.125 cv
423.681 357.712 424.739 358.003 425.698 359.691 cv
cp
f
444.91 377.462 mo
444.745 378.056 444.188 378.742 443.857 379.476 cv
443.825 379.569 443.732 379.846 443.621 380.162 cv
443.508 380.03 443.405 379.282 443.495 378.681 cv
443.532 378.441 441.614 377.571 441.197 376.733 cv
441.586 376.991 444.035 378.124 444.91 377.462 cv
cp
f
424.212 372.412 mo
425.697 367.786 427.298 363.524 428.097 354.366 cv
428.097 354.366 429.767 362.175 429.318 368.113 cv
429.186 369.86 433.084 375.628 437.658 378.47 cv
438.085 377.785 438.797 376.522 439.483 374.763 cv
440.558 372.009 445.249 373.474 446.134 373.621 cv
446.537 373.688 446.201 375.301 445.529 375.166 cv
444.857 375.032 441.163 374.83 440.491 375.233 cv
439.989 375.535 438.849 377.749 438.305 378.849 cv
440.088 379.831 441.947 380.335 443.693 379.955 cv
444.891 381.407 443.108 386.655 439.474 386.342 cv
429.586 385.489 422.728 377.038 424.212 372.412 cv
cp
.196078 0 .00392157 rgb
f
425.546 400.311 mo
425.546 400.311 431.545 419.441 431.876 428.379 cv
432.207 437.317 424.662 447.082 422.675 457.013 cv
420.689 466.944 424.593 498.118 424.593 498.118 cv
378.027 510.698 li
378.027 510.698 376.58 480.014 375.783 438.352 cv
375.158 405.648 386.702 398.029 400.656 381.698 cv
406.614 385.008 425.546 400.311 425.546 400.311 cv
cp
0 .466667 .529412 rgb
f
380.842 509.938 mo
383.926 504.687 388.695 448.047 388.291 443.053 cv
387.935 438.656 386.938 418.543 388.134 414.239 cv
390.595 405.38 404.51 402.628 409.759 411.485 cv
413.246 417.369 415.466 430.549 418.557 436.613 cv
421.02 441.444 427.994 442.668 427.994 442.668 cv
425.938 447.359 423.645 452.166 422.675 457.013 cv
420.689 466.944 424.593 498.118 424.593 498.118 cv
380.842 509.938 li
cp
0 .403922 .447059 rgb
f
470.003 459.588 mo
474.522 461.346 481.004 459.759 483.253 458.171 cv
485.502 456.584 489.999 456.452 490.793 456.319 cv
491.587 456.187 494.1 453.012 488.015 451.16 cv
481.93 449.308 472.781 456.678 470.003 459.588 cv
cp
.917647 .631373 .54902 rgb
f
483.18 453.367 mo
484.801 451.662 486.307 452.711 487.43 453.02 cv
489.511 453.595 491.726 454.036 493.685 454.752 cv
494.277 454.969 495.384 457.43 496.412 459.478 cv
497.34 461.325 499.42 462.01 497.084 462.764 cv
495.894 463.148 493.797 461.037 493.533 460.067 cv
492.066 459.556 490.896 457.677 490.895 457.676 cv
490.61 457.266 487.959 456.992 487.449 456.794 cv
484.802 455.765 481.832 454.784 483.18 453.367 cv
cp
.886275 .584314 .513726 rgb
f
470.23 452.527 mo
480.387 448.003 480.565 447.388 483.385 447.942 cv
487.791 449.855 489.995 450.571 492.204 451.645 cv
492.867 451.968 495.498 454.711 497.177 456.934 cv
498.691 458.94 500.677 460.335 498.568 460.662 cv
497.494 460.829 495.024 460.139 494.511 458.066 cv
492.876 457.291 490.264 455.129 490.264 455.129 cv
490.264 455.129 486.611 454.712 484.047 454.137 cv
482.924 454.095 482.132 454.79 480.39 455.642 cv
476.646 457.472 474.689 459.465 470.671 458.227 cv
467.84 457.354 463.197 458.771 463.197 458.771 cv
463.197 458.771 463.267 458.925 462.474 455.562 cv
467.047 456.488 467.854 453.586 470.23 452.527 cv
cp
.917647 .631373 .54902 rgb
f
470.542 451.293 mo
481.058 447.148 482.781 447.842 484.671 448.838 cv
487.336 450.537 489.551 451.392 491.808 452.466 cv
492.486 452.789 492.803 454.586 494.519 456.809 cv
496.067 458.815 498.096 460.211 495.94 460.538 cv
494.843 460.704 492.842 459.818 492.318 457.745 cv
490.647 456.971 489.839 455.131 489.839 455.131 cv
489.839 455.131 487.663 455.526 485.043 454.95 cv
483.896 454.908 482.753 456.319 480.973 457.171 cv
477.147 459.001 475.03 460.993 470.923 459.756 cv
468.03 458.882 458.313 461.795 458.313 461.795 cv
458.313 461.795 455.392 457.169 454.582 453.806 cv
461.943 454.644 467.294 452.573 470.542 451.293 cv
cp
.968627 .701961 .611765 rgb
f
406.299 405.93 mo
399.519 401.82 392.641 402.349 388.672 411.344 cv
387.335 414.375 388.491 420.8 390.754 428.252 cv
392.905 448.294 401.988 456.937 405.428 466.285 cv
420.956 471.561 444.45 465.985 461.211 461.002 cv
459.966 456.24 458.766 454.002 457.006 453.936 cv
444.382 453.459 430.756 449.656 419.932 449.426 cv
417.542 449.994 421.742 451.028 410.895 425.895 cv
411.954 420.604 410.651 408.568 406.299 405.93 cv
cp
f
464.806 460.382 mo
464.806 460.382 464.727 453.028 463.342 453.028 cv
461.958 453.028 459.782 453.194 459.725 454.111 cv
459.682 454.803 460.358 461.255 460.704 461.333 cv
461.51 461.515 464.59 461.117 464.806 460.382 cv
cp
.2 .215686 .227451 rgb
f
458.194 453.151 mo
458.275 453.759 458.834 454.185 459.441 454.104 cv
464.164 453.473 li
464.772 453.391 465.198 452.833 465.117 452.226 cv
465.036 451.618 464.477 451.191 463.87 451.273 cv
459.147 451.904 li
458.54 451.985 458.113 452.543 458.194 453.151 cv
cp
f
465.117 452.226 mo
465.198 452.833 464.772 453.391 464.164 453.473 cv
459.441 454.104 li
458.834 454.185 458.275 453.759 458.194 453.151 cv
458.183 453.065 465.093 452.043 465.117 452.226 cv
cp
.0666667 .0941176 .109804 rgb
f
458.447 452.292 mo
458.619 452.088 458.862 451.942 459.147 451.904 cv
463.87 451.272 li
464.178 451.231 464.473 451.322 464.7 451.499 cv
464.542 451.561 458.65 452.392 458.447 452.292 cv
cp
.745098 .858824 .929412 rgb
f
396.221 428.253 mo
396.221 428.253 395.455 444.912 409.395 458.783 cv
409.395 458.783 411.002 462.637 412.044 463.453 cv
420.848 470.344 449.89 463.797 460.416 460.038 cv
460.561 461.028 li
443.799 466.011 420.956 471.561 405.428 466.285 cv
401.988 456.937 392.905 448.294 390.754 428.252 cv
389.5 424.124 388.589 420.314 388.25 417.218 cv
388.619 418.529 395.588 427.604 396.221 428.253 cv
cp
.917647 .631373 .54902 rgb
f
419.02 497.916 mo
419.02 497.916 441.675 497.801 461.27 500.414 cv
478.647 502.731 488.005 512.45 485.141 522.475 cv
482.549 531.544 483.952 537.348 482.113 545.55 cv
480.275 553.752 469.946 585.132 464.038 610.849 cv
463.653 612.527 465.346 620.839 469.523 626.411 cv
472.63 630.555 486.526 630.207 482.703 638.201 cv
468.806 638.201 463.383 638.354 454.906 628.817 cv
449.345 622.562 441.005 621.172 450.736 611.789 cv
454.691 607.974 454.772 599.462 455.948 586.767 cv
458.388 560.441 450.388 556.532 458.629 536.908 cv
464.051 523.997 458.129 525.963 451.179 528.048 cv
438.079 531.978 406.722 530.568 396.644 530.568 cv
386.566 530.568 375.712 527.491 378.144 508.03 cv
409.422 501.427 419.02 497.916 419.02 497.916 cv
cp
.968627 .701961 .611765 rgb
f
377.347 507.531 mo
408.625 500.928 419.809 497.505 419.809 497.505 cv
419.809 497.505 442.573 497.526 462.168 500.139 cv
479.545 502.456 491.285 511.464 488.42 521.489 cv
485.829 530.558 485.644 537.673 483.806 545.875 cv
482.643 551.063 476.794 565.2 472.105 581.636 cv
471.767 582.821 472.174 588.054 472.109 588.306 cv
471.989 588.771 469.133 592.547 468.526 594.779 cv
467.818 597.384 468.383 601.593 468.338 601.754 cv
468.199 602.252 465.189 607.72 465.072 608.154 cv
465.072 608.154 457.758 607.192 454.269 605.318 cv
454.269 605.318 453.142 600.939 453.036 598.187 cv
452.972 596.524 454.259 593.316 453.765 591.185 cv
453.765 591.185 452.912 585.117 452.923 584.961 cv
452.923 584.961 455.034 580.507 455.125 578.187 cv
455.886 558.692 453.224 550.856 456.467 540.778 cv
460.757 527.448 457.047 527.919 457.047 527.919 cv
443.946 531.849 406.929 532.515 396.85 532.515 cv
386.772 532.515 374.103 526.663 377.347 507.531 cv
cp
.0470588 .192157 .266667 rgb
f
378.35 507.319 mo
382.145 526.598 397.802 520.48 405.615 519.437 cv
410.089 518.84 440.134 530.815 460.202 517.118 cv
462.462 515.576 457.961 525.035 460.708 525.303 cv
462.241 525.452 471.369 517.17 472.913 517.165 cv
474.241 517.161 465.693 524.94 464.789 525.983 cv
462.483 528.642 466.396 528.333 471.405 532.784 cv
462.723 531.394 468.074 536.228 467.125 539.967 cv
464.981 548.409 458.784 555.374 457.362 589.069 cv
457.108 595.074 463.65 603.332 468.348 595.637 cv
467.931 598.216 468.378 601.61 468.338 601.754 cv
468.199 602.252 465.189 607.72 465.072 608.154 cv
465.072 608.154 457.758 607.192 454.269 605.318 cv
454.269 605.318 453.142 600.939 453.036 598.187 cv
452.972 596.524 454.259 593.316 453.765 591.185 cv
453.765 591.185 452.912 585.117 452.923 584.961 cv
452.923 584.961 455.034 580.507 455.125 578.187 cv
455.886 558.692 453.224 550.856 456.467 540.778 cv
460.757 527.448 457.047 527.919 457.047 527.919 cv
443.946 531.849 406.929 532.515 396.85 532.515 cv
386.772 532.515 373.631 526.38 377.688 507.459 cv
378.029 507.387 378.013 507.39 378.35 507.319 cv
cp
.054902 .137255 .188235 rgb
f
449.401 616.191 mo
449.401 616.191 445.398 615.697 444.447 621.28 cv
444.21 623.062 450.505 627.575 453.475 630.664 cv
456.445 633.752 464.824 640.286 468.862 640.286 cv
472.901 640.286 481.029 640.286 483.048 640.286 cv
485.067 640.286 485.677 637.595 484.398 637.595 cv
481.022 637.595 449.401 616.191 449.401 616.191 cv
cp
.211765 .266667 .298039 rgb
f
467.428 611.416 mo
462.86 611.954 li
452.413 609.472 li
452.413 609.472 447.602 611.576 446.675 617.02 cv
446.443 618.758 453.356 625.315 455.739 628.747 cv
459.098 633.584 465.735 638.432 469.673 638.432 cv
473.612 638.432 483.106 638.432 485.075 638.432 cv
485.306 638.432 487.129 633.664 484.038 631.134 cv
481.489 629.049 475.813 627.543 475.002 626.732 cv
471.479 625.261 467.428 611.416 467.428 611.416 cv
cp
.937255 .937255 .937255 rgb
f
472.836 622.804 mo
465.548 624.156 li
466.746 626.851 li
474.278 626.296 li
472.836 622.804 li
cp
471.003 617.324 mo
463.715 618.676 li
464.913 621.371 li
472.445 620.816 li
471.003 617.324 li
cp
470.483 615.741 mo
462.951 616.296 li
461.753 613.601 li
469.041 612.25 li
470.483 615.741 li
cp
1 1 1 rgb
f
453.683 347.068 mo
454.012 339.054 453.134 331.479 453.024 329.612 cv
452.914 327.746 440.619 316.219 424.7 318.415 cv
408.782 320.61 401.537 328.295 401.097 332.577 cv
400.658 336.858 401.756 349.812 402.634 353.764 cv
409.002 351.898 431.287 347.068 453.683 347.068 cv
cp
.113725 .231373 .239216 rgb
f
436.694 330.796 mo
436.188 326.37 425.519 318.323 425.519 318.323 cv
441.037 316.624 452.916 327.778 453.024 329.612 cv
453.134 331.479 454.012 339.054 453.683 347.068 cv
448.405 347.068 443.134 347.337 438.077 347.772 cv
438.085 347.487 436.953 333.066 436.694 330.796 cv
cp
.117647 .27451 .278431 rgb
f
401.097 332.577 mo
401.522 328.438 408.307 321.122 423.133 318.654 cv
423.165 319.028 415.656 329.905 415.704 330.417 cv
415.917 332.709 417.229 346.804 417.493 349.095 cv
405.836 351.853 406.215 351.244 402.408 352.36 cv
401.53 348.408 400.658 336.858 401.097 332.577 cv
cp
f
429.1 348.728 mo
419.606 354.281 398.55 363.636 393.893 362.382 cv
389.236 361.128 381.042 359.783 383.729 358.53 cv
386.416 357.276 417.635 346.4 429.1 348.728 cv
cp
.2 .215686 .227451 rgb
f
417.853 441.467 mo
414.36 443.885 396.089 451.677 394.477 451.677 cv
389.909 436.362 389.64 432.331 388.566 427.763 cv
387.491 423.195 383.192 405.73 396.358 402.775 cv
409.524 399.819 412.479 411.104 412.479 417.822 cv
414.621 425.078 417.853 441.467 417.853 441.467 cv
cp
0 .501961 .6 rgb
f
365.901 462.778 mo
365.901 531.245 li
365.901 538.334 371.669 544.102 378.758 544.102 cv
444.182 544.102 li
444.182 544.102 446.729 548.923 436.684 548.923 cv
414.586 548.923 378.758 548.923 378.758 548.923 cv
368.995 548.923 361.08 541.008 361.08 531.245 cv
361.08 531.245 361.08 488.35 361.08 470.843 cv
361.08 458.99 365.901 462.778 365.901 462.778 cv
cp
.113725 .231373 .239216 rgb
f
379.026 541.155 mo
379.026 543.374 380.825 545.173 383.044 545.173 cv
451.615 545.173 li
453.834 545.173 455.633 543.374 455.633 541.155 cv
455.633 535.53 li
455.633 533.311 453.834 531.513 451.615 531.513 cv
383.044 531.513 li
380.825 531.513 379.026 533.311 379.026 535.53 cv
379.026 541.155 li
cp
.827451 .258824 .00784314 rgb
f
442.264 560.573 mo
441.86 556.291 437.043 552.807 431.526 552.807 cv
386.526 552.807 li
381.01 552.807 376.193 556.291 375.789 560.573 cv
368.178 638.148 li
364.428 638.148 li
371.788 560.195 li
372.391 553.813 378.982 548.789 386.526 548.789 cv
431.526 548.789 li
439.071 548.789 445.661 553.813 446.264 560.195 cv
453.624 638.148 li
449.464 638.148 li
442.264 560.573 li
cp
.0784314 .172549 .176471 rgb
f
370.346 522.783 mo
370.573 524.841 372.426 526.326 374.484 526.099 cv
376.543 525.872 378.027 524.019 377.8 521.96 cv
366.814 422.386 li
366.587 420.327 364.734 418.843 362.675 419.07 cv
360.616 419.297 359.132 421.15 359.359 423.208 cv
370.346 522.783 li
cp
.827451 .258824 .00784314 rgb
f
716.871 467.245 mo
435.896 467.245 li
435.896 474.461 li
716.871 474.461 li
716.871 467.245 li
cp
.937255 .67451 .215686 rgb
f
484.592 652.474 mo
475.244 652.474 li
475.244 477.188 li
484.592 477.188 li
484.592 652.474 li
cp
f
650.158 652.474 mo
640.81 652.474 li
640.81 477.188 li
650.158 477.188 li
650.158 652.474 li
cp
f
701.613 474.304 mo
454.818 474.304 li
453.893 478.136 li
700.689 478.136 li
701.613 474.304 li
cp
1 .392157 .121569 rgb
f
460.183 464.439 mo
460.183 464.973 460.616 465.406 461.15 465.406 cv
532.875 465.406 li
533.409 465.406 533.843 464.973 533.843 464.439 cv
533.843 463.904 533.409 463.471 532.875 463.471 cv
461.15 463.471 li
460.616 463.471 460.183 463.904 460.183 464.439 cv
cp
.776471 .776471 .776471 rgb
f
536.796 463.906 mo
537.304 464.071 537.857 463.767 538.032 463.226 cv
561.453 390.643 li
561.628 390.102 561.357 389.53 560.849 389.365 cv
560.341 389.199 559.788 389.503 559.613 390.044 cv
536.192 462.627 li
536.017 463.168 536.288 463.74 536.796 463.906 cv
cp
0 .298039 .337255 rgb
f
536.151 464.322 mo
560.558 389.204 li
562.307 390.128 563.198 392.194 562.566 394.141 cv
540.419 462.303 li
539.858 464.028 538.273 465.121 536.556 465.152 cv
535.943 466.676 534.467 467.756 532.724 467.754 cv
461.054 467.671 li
459.007 467.668 457.319 466.18 456.983 464.23 cv
536.151 464.322 li
cp
.878431 .878431 .878431 rgb
f
524.998 465.959 mo
524.998 466.264 525.245 466.512 525.551 466.512 cv
532.046 466.512 li
532.351 466.512 532.599 466.264 532.599 465.959 cv
532.599 465.654 532.351 465.406 532.046 465.406 cv
525.551 465.406 li
525.245 465.406 524.998 465.654 524.998 465.959 cv
cp
.776471 .776471 .776471 rgb
f
515.462 465.959 mo
515.462 466.264 515.71 466.512 516.015 466.512 cv
522.51 466.512 li
522.816 466.512 523.063 466.264 523.063 465.959 cv
523.063 465.654 522.816 465.406 522.51 465.406 cv
516.015 465.406 li
515.71 465.406 515.462 465.654 515.462 465.959 cv
cp
f
462.394 465.959 mo
462.394 466.264 462.642 466.512 462.947 466.512 cv
469.442 466.512 li
469.748 466.512 469.995 466.264 469.995 465.959 cv
469.995 465.654 469.748 465.406 469.442 465.406 cv
462.947 465.406 li
462.642 465.406 462.394 465.654 462.394 465.959 cv
cp
f
692.215 340.056 mo
691.865 344.533 691.411 353.244 692.372 355.28 cv
693.231 356.946 695.636 357.622 695.521 360.004 cv
695.233 365.97 693.026 371.196 694.893 371.437 cv
696.76 371.677 698.062 371.315 698.549 372.106 cv
698.831 372.563 699.083 373.36 699.441 374.299 cv
699.547 374.575 699.27 375.698 700.326 376.093 cv
699.702 376.781 700.527 377.402 701.193 378.876 cv
702.131 381.578 703.072 383.769 704.795 384.545 cv
707.969 385.976 718.514 379.374 718.903 380.884 cv
719.527 382.889 721.881 387.619 722.849 391.736 cv
717.558 405.725 li
744.514 383.655 li
744.514 383.655 738.381 369.24 740.115 361.434 cv
741.849 353.629 744.537 345.215 738.281 337.111 cv
732.024 329.007 725.909 317.639 709.939 323.76 cv
693.97 329.88 692.441 337.165 692.215 340.056 cv
cp
.968627 .701961 .611765 rgb
f
720.3 398.576 mo
717.37 406.325 li
744.514 383.655 li
744.514 383.655 743.953 382.49 742.985 379.619 cv
738.885 382.864 725.065 395.564 720.3 398.576 cv
cp
.917647 .631373 .54902 rgb
f
722.784 391.913 mo
722.784 391.913 724.807 388.873 725.576 387.707 cv
726.728 385.958 724.151 376.19 724.151 376.19 cv
721.384 373.995 720.37 369.487 719.234 365.965 cv
718.589 363.966 717.195 357.47 717.451 353.15 cv
717.536 351.712 716.416 353.94 715.548 355.741 cv
715.548 355.741 715.558 368.618 716.514 373.241 cv
717.175 376.436 706.108 388.184 701.251 378.987 cv
701.97 380.667 703.559 383.988 704.795 384.545 cv
707.969 385.976 718.514 379.374 718.903 380.884 cv
719.527 382.889 721.881 387.619 722.849 391.736 cv
722.784 391.913 li
cp
f
699.918 353.426 mo
700.028 353.913 698.196 353.747 696.1 354.298 cv
694.004 354.85 692.467 355.903 692.328 355.424 cv
692.075 354.547 693.22 352.698 695.316 352.146 cv
697.412 351.595 699.703 352.479 699.918 353.426 cv
cp
.917647 .623529 .545098 rgb
f
699.529 352.738 mo
700.341 353.457 697.358 352.906 695.288 353.574 cv
693.218 354.241 692.845 355.876 692.033 355.157 cv
691.221 354.438 691.578 352.728 693.648 352.06 cv
695.718 351.392 698.716 352.019 699.529 352.738 cv
cp
.937255 .67451 .215686 rgb
f
699.272 359.367 mo
699.461 360.369 698.927 361.311 698.079 361.471 cv
697.231 361.63 696.391 360.947 696.202 359.945 cv
696.013 358.943 696.548 358.001 697.395 357.841 cv
698.243 357.682 699.083 358.365 699.272 359.367 cv
cp
.184314 .0117647 0 rgb
f
698.962 358.871 mo
699.057 359.376 698.788 359.851 698.361 359.931 cv
697.934 360.011 697.51 359.667 697.415 359.163 cv
697.32 358.658 697.589 358.183 698.016 358.103 cv
698.443 358.023 698.866 358.367 698.962 358.871 cv
cp
1 1 1 rgb
f
699.52 368.566 mo
700.078 371.407 696.687 370.375 694.188 370.913 cv
694.324 371.233 694.549 371.426 694.899 371.47 cv
696.173 371.634 697.84 371.457 698.331 371.891 cv
699.282 371.516 700.52 370.844 699.52 368.566 cv
cp
.917647 .623529 .545098 rgb
f
723.143 349.72 mo
724.523 350.978 725.378 353.226 725.234 355.684 cv
725.024 359.257 722.78 361.921 720.221 361.633 cv
719.403 361.54 718.652 361.155 718.015 360.559 cv
718.749 362.122 719.93 363.159 721.315 363.24 cv
723.791 363.385 725.979 360.419 726.201 356.616 cv
726.391 353.361 725.078 350.554 723.143 349.72 cv
cp
f
719.232 359.185 mo
721.861 358.939 723.674 356.831 722.138 354.73 cv
719.996 351.8 719.984 355.058 720.323 355.643 cv
721.236 357.219 720.184 357.509 719.232 359.185 cv
cp
f
700.153 376.833 mo
700.317 377.423 700.87 378.104 701.199 378.833 cv
701.231 378.925 701.323 379.2 701.433 379.514 cv
701.545 379.383 701.648 378.641 701.558 378.044 cv
701.522 377.806 703.426 376.941 703.84 376.109 cv
703.454 376.365 701.022 377.49 700.153 376.833 cv
cp
f
717.558 405.725 mo
717.558 405.725 713.425 418.522 713.096 427.398 cv
712.768 436.274 720.261 445.971 722.234 455.834 cv
724.206 465.696 720.329 496.655 720.329 496.655 cv
766.573 509.148 li
766.573 509.148 768.01 478.676 768.802 437.302 cv
769.423 404.824 757.958 397.257 744.101 381.04 cv
738.184 384.327 717.558 405.725 717.558 405.725 cv
cp
.0470588 .192157 .266667 rgb
f
765.779 506.525 mo
762.717 501.31 757.981 445.062 758.382 440.102 cv
758.735 435.736 759.725 415.763 758.538 411.488 cv
756.093 402.69 742.275 399.957 737.062 408.753 cv
733.599 414.596 731.394 427.685 728.324 433.708 cv
725.878 438.505 718.953 439.72 718.953 439.72 cv
720.995 444.378 723.272 449.152 724.235 453.966 cv
726.207 463.828 722.33 494.787 722.33 494.787 cv
765.779 506.525 li
cp
.0235294 .133333 .2 rgb
f
675.233 458.391 mo
670.745 460.137 664.308 458.561 662.075 456.984 cv
659.842 455.408 655.375 455.276 654.587 455.145 cv
653.799 455.014 651.303 451.861 657.346 450.022 cv
663.389 448.183 672.474 455.501 675.233 458.391 cv
cp
.917647 .631373 .54902 rgb
f
662.147 452.213 mo
660.537 450.52 659.042 451.561 657.927 451.869 cv
655.86 452.44 653.66 452.878 651.715 453.589 cv
651.127 453.804 650.028 456.248 649.007 458.281 cv
648.086 460.116 646.019 460.796 648.34 461.545 cv
649.521 461.926 651.604 459.83 651.866 458.867 cv
653.323 458.359 654.485 456.493 654.486 456.492 cv
654.769 456.085 657.402 455.813 657.908 455.616 cv
660.537 454.595 663.487 453.62 662.147 452.213 cv
cp
.886275 .584314 .513726 rgb
f
675.008 451.379 mo
664.922 446.887 664.745 446.276 661.944 446.825 cv
657.569 448.726 655.38 449.436 653.186 450.503 cv
652.527 450.824 649.915 453.548 648.247 455.756 cv
646.743 457.747 644.771 459.133 646.866 459.458 cv
647.933 459.623 650.385 458.938 650.895 456.88 cv
652.519 456.11 655.113 453.963 655.113 453.963 cv
655.113 453.963 658.74 453.549 661.287 452.977 cv
662.402 452.936 663.188 453.627 664.918 454.473 cv
668.636 456.29 670.58 458.268 674.57 457.04 cv
677.382 456.172 681.993 457.58 681.993 457.58 cv
681.993 457.58 681.923 457.733 682.71 454.393 cv
678.169 455.313 677.367 452.43 675.008 451.379 cv
cp
.917647 .631373 .54902 rgb
f
674.698 450.153 mo
664.255 446.037 662.544 446.726 660.667 447.715 cv
658.02 449.403 655.821 450.251 653.579 451.319 cv
652.906 451.639 652.591 453.424 650.887 455.632 cv
649.35 457.624 647.335 459.01 649.476 459.334 cv
650.566 459.499 652.552 458.62 653.072 456.561 cv
654.732 455.792 655.535 453.965 655.535 453.965 cv
655.535 453.965 657.695 454.357 660.298 453.785 cv
661.437 453.744 662.571 455.145 664.34 455.991 cv
668.139 457.808 670.241 459.786 674.319 458.558 cv
677.193 457.69 686.843 460.583 686.843 460.583 cv
686.843 460.583 689.743 455.988 690.548 452.649 cv
683.238 453.481 677.924 451.424 674.698 450.153 cv
cp
.968627 .701961 .611765 rgb
f
738.497 405.104 mo
745.23 401.022 752.061 401.548 756.002 410.481 cv
757.33 413.491 756.182 419.872 753.935 427.271 cv
751.798 447.176 742.778 455.758 739.362 465.041 cv
723.941 470.281 700.61 464.744 683.964 459.796 cv
685.201 455.066 686.393 452.844 688.14 452.778 cv
700.677 452.305 714.209 448.528 724.958 448.299 cv
727.332 448.864 723.16 449.89 733.932 424.931 cv
732.881 419.676 734.175 407.724 738.497 405.104 cv
cp
f
680.394 459.179 mo
680.394 459.179 680.473 451.877 681.848 451.877 cv
683.222 451.877 685.384 452.041 685.441 452.952 cv
685.484 453.639 684.811 460.046 684.468 460.124 cv
683.668 460.305 680.609 459.909 680.394 459.179 cv
cp
.2 .215686 .227451 rgb
f
686.961 451.999 mo
686.88 452.602 686.325 453.026 685.722 452.945 cv
681.032 452.318 li
680.429 452.237 680.005 451.683 680.086 451.08 cv
680.166 450.476 680.721 450.052 681.324 450.133 cv
686.014 450.76 li
686.617 450.841 687.041 451.395 686.961 451.999 cv
cp
f
680.086 451.08 mo
680.005 451.683 680.429 452.237 681.032 452.318 cv
685.722 452.945 li
686.325 453.026 686.88 452.602 686.961 451.999 cv
686.972 451.913 680.11 450.898 680.086 451.08 cv
cp
.0666667 .0941176 .109804 rgb
f
686.709 451.146 mo
686.539 450.943 686.298 450.798 686.014 450.76 cv
681.324 450.133 li
681.018 450.092 680.725 450.182 680.5 450.358 cv
680.657 450.42 686.507 451.245 686.709 451.146 cv
cp
.745098 .858824 .929412 rgb
f
748.505 427.273 mo
748.505 427.273 749.266 443.817 735.422 457.592 cv
735.422 457.592 733.827 461.419 732.792 462.229 cv
724.049 469.073 695.207 462.571 684.754 458.838 cv
684.61 459.822 li
701.256 464.77 723.941 470.281 739.362 465.041 cv
742.778 455.758 751.798 447.176 753.935 427.271 cv
755.18 423.172 756.085 419.388 756.421 416.314 cv
756.054 417.616 749.134 426.628 748.505 427.273 cv
cp
.917647 .631373 .54902 rgb
f
725.909 496.439 mo
725.909 496.439 703.398 496.329 684.224 498.83 cv
667.222 501.047 658.995 510.349 662.938 519.943 cv
666.506 528.623 665.75 534.178 668.474 542.028 cv
671.199 549.877 684.897 579.911 693.584 604.523 cv
694.151 606.129 693.381 614.084 689.843 619.417 cv
687.212 623.383 673.374 623.05 678.047 630.7 cv
691.848 630.7 697.25 630.847 704.623 621.72 cv
709.459 615.733 717.59 614.402 706.898 605.422 cv
702.551 601.772 701.538 593.625 698.977 581.475 cv
693.668 556.279 701.184 552.538 690.849 533.756 cv
684.049 521.4 690.145 523.282 697.276 525.277 cv
710.717 529.039 741.605 527.414 751.614 527.414 cv
761.622 527.414 771.156 524.182 766.606 505.557 cv
734.821 499.237 725.909 496.439 725.909 496.439 cv
cp
.968627 .701961 .611765 rgb
f
766.895 505.352 mo
735.11 499.032 725.08 496.045 725.08 496.045 cv
725.08 496.045 702.477 496.066 683.303 498.567 cv
666.301 500.784 655.629 509.406 659.573 519 cv
663.141 527.68 664.104 534.489 666.829 542.339 cv
668.553 547.304 675.911 560.834 682.37 576.565 cv
682.836 577.698 683.006 582.706 683.098 582.948 cv
683.268 583.393 686.517 587.006 687.365 589.143 cv
688.354 591.636 688.254 595.664 688.317 595.818 cv
688.509 596.295 692.098 601.528 692.262 601.943 cv
692.262 601.943 699.42 601.023 702.679 599.229 cv
702.679 599.229 703.319 595.039 703.122 592.405 cv
703.003 590.813 701.373 587.743 701.63 585.703 cv
701.63 585.703 701.812 579.896 701.784 579.746 cv
701.784 579.746 699.199 575.483 698.855 573.264 cv
695.961 554.605 697.746 547.106 693.42 537.46 cv
687.698 524.703 691.435 525.154 691.435 525.154 cv
704.875 528.915 741.71 529.552 751.719 529.552 cv
761.727 529.552 772.215 523.662 766.895 505.352 cv
cp
.788235 .223529 0 rgb
f
765.381 505.05 mo
763.726 523.502 749.454 518.034 741.581 517.036 cv
737.072 516.465 708.548 527.926 687.117 514.817 cv
684.704 513.341 690.21 522.393 687.512 522.65 cv
686.006 522.793 676.033 514.866 674.499 514.861 cv
673.18 514.857 682.522 522.303 683.534 523.301 cv
686.115 525.845 682.195 525.55 677.709 529.81 cv
686.179 528.48 681.395 533.106 682.747 536.684 cv
685.802 544.764 692.719 551.43 697.826 583.678 cv
698.736 589.426 693.146 597.329 687.636 589.964 cv
688.333 592.432 688.261 595.68 688.317 595.818 cv
688.509 596.295 692.098 601.528 692.262 601.943 cv
692.262 601.943 699.42 601.023 702.679 599.229 cv
702.679 599.229 703.319 595.039 703.122 592.405 cv
703.003 590.813 701.373 587.742 701.63 585.703 cv
701.63 585.703 701.812 579.896 701.784 579.746 cv
701.784 579.746 699.199 575.483 698.855 573.264 cv
695.961 554.605 697.746 547.106 693.42 537.46 cv
687.698 524.703 691.435 525.154 691.435 525.154 cv
704.875 528.915 741.71 529.552 751.719 529.552 cv
761.727 529.552 772.78 523.416 766.676 505.308 cv
766.329 505.24 765.723 505.118 765.381 505.05 cv
cp
.756863 .219608 .00784314 rgb
f
708.706 609.635 mo
708.706 609.635 712.627 609.162 714.183 614.506 cv
714.614 616.211 708.857 620.531 706.246 623.487 cv
703.636 626.443 696.031 632.695 692.021 632.695 cv
688.01 632.695 679.938 632.695 677.933 632.695 cv
675.928 632.695 675.027 630.12 676.297 630.12 cv
679.65 630.12 708.706 609.635 708.706 609.635 cv
cp
.211765 .266667 .298039 rgb
f
690.28 605.066 mo
694.875 605.58 li
704.978 603.205 li
704.978 603.205 709.987 605.219 711.504 610.429 cv
711.925 612.092 705.778 618.368 703.788 621.652 cv
700.983 626.281 694.923 630.922 691.012 630.922 cv
687.101 630.922 677.672 630.922 675.716 630.922 cv
675.487 630.922 673.154 626.358 675.947 623.937 cv
678.249 621.941 683.721 620.5 684.437 619.724 cv
687.774 618.316 690.28 605.066 690.28 605.066 cv
cp
.8 .8 .8 rgb
f
685.108 619.306 mo
692.649 619.838 li
693.543 617.258 li
686.158 615.965 li
685.108 619.306 li
cp
686.328 614.062 mo
693.869 614.593 li
694.763 612.014 li
687.378 610.72 li
686.328 614.062 li
cp
688.769 605.863 mo
696.155 607.157 li
695.26 609.736 li
687.72 609.205 li
688.769 605.863 li
cp
1 1 1 rgb
f
725.864 496.454 mo
725.864 496.454 703.366 496.34 683.906 498.935 cv
666.649 501.236 657.356 510.888 660.201 520.843 cv
662.774 529.849 661.381 535.613 663.207 543.758 cv
665.032 551.904 675.29 583.067 681.157 608.606 cv
681.54 610.272 679.858 618.527 675.71 624.061 cv
672.625 628.176 658.825 627.831 662.621 635.768 cv
676.422 635.768 681.808 635.921 690.226 626.45 cv
695.748 620.238 704.031 618.857 694.368 609.539 cv
690.439 605.751 690.359 597.298 689.191 584.69 cv
686.768 558.546 694.713 554.665 686.529 535.176 cv
681.144 522.354 687.025 524.307 693.927 526.378 cv
706.937 530.28 738.012 528.595 748.02 528.595 cv
758.029 528.595 769.387 525.549 766.971 506.223 cv
735.91 499.665 725.864 496.454 725.864 496.454 cv
cp
.968627 .701961 .611765 rgb
f
766.676 505.308 mo
735.615 498.751 725.08 496.045 725.08 496.045 cv
725.08 496.045 702.474 496.067 683.014 498.662 cv
665.758 500.963 654.099 509.909 656.943 519.864 cv
659.517 528.87 659.7 535.936 661.526 544.081 cv
662.68 549.233 668.489 563.273 673.146 579.595 cv
673.482 580.771 673.078 585.968 673.142 586.219 cv
673.261 586.68 676.097 590.43 676.7 592.647 cv
677.403 595.234 676.842 599.414 676.887 599.574 cv
677.025 600.068 680.014 605.498 680.13 605.929 cv
680.13 605.929 687.393 604.975 690.858 603.113 cv
690.858 603.113 691.978 598.765 692.083 596.032 cv
692.147 594.38 690.868 591.194 691.359 589.078 cv
691.359 589.078 692.206 583.052 692.195 582.897 cv
692.195 582.897 690.099 578.473 690.009 576.17 cv
689.253 556.81 691.897 549.028 688.675 539.019 cv
684.415 525.782 688.1 526.25 688.1 526.25 cv
701.11 530.153 737.871 530.814 747.88 530.814 cv
757.889 530.814 769.898 524.308 766.676 505.308 cv
cp
.909804 .317647 .0196078 rgb
f
766.253 505.792 mo
762.484 524.938 746.935 518.862 739.176 517.826 cv
734.733 517.233 704.896 529.126 684.966 515.523 cv
682.722 513.992 687.192 523.385 684.464 523.651 cv
682.941 523.8 673.877 515.574 672.344 515.57 cv
671.024 515.565 679.514 523.292 680.412 524.327 cv
682.701 526.967 678.815 526.66 673.841 531.081 cv
682.463 529.701 677.149 534.501 678.092 538.214 cv
680.221 546.598 686.375 553.514 687.787 586.977 cv
688.039 592.94 681.543 601.141 676.877 593.5 cv
677.291 596.061 676.847 599.43 676.887 599.574 cv
677.025 600.068 680.014 605.498 680.13 605.929 cv
680.13 605.929 687.393 604.975 690.858 603.113 cv
690.858 603.113 691.978 598.765 692.083 596.032 cv
692.147 594.38 690.868 591.194 691.359 589.078 cv
691.359 589.078 692.206 583.052 692.195 582.897 cv
692.195 582.897 690.099 578.473 690.009 576.17 cv
689.253 556.81 691.897 549.028 688.675 539.019 cv
684.415 525.782 688.1 526.25 688.1 526.25 cv
701.11 530.153 737.871 530.814 747.88 530.814 cv
757.889 530.814 770.939 524.721 766.91 505.931 cv
766.571 505.86 766.587 505.862 766.253 505.792 cv
cp
.827451 .258824 .00784314 rgb
f
695.693 613.911 mo
695.693 613.911 699.669 613.42 700.612 618.965 cv
700.848 620.734 694.596 625.217 691.647 628.284 cv
688.698 631.351 680.377 637.839 676.366 637.839 cv
672.355 637.839 664.284 637.839 662.279 637.839 cv
660.273 637.839 659.667 635.167 660.938 635.167 cv
664.291 635.167 695.693 613.911 695.693 613.911 cv
cp
.211765 .266667 .298039 rgb
f
677.791 609.169 mo
682.327 609.703 li
692.702 607.238 li
692.702 607.238 697.48 609.328 698.4 614.735 cv
698.63 616.46 691.765 622.972 689.398 626.38 cv
686.063 631.183 679.472 635.998 675.561 635.998 cv
671.649 635.998 662.221 635.998 660.265 635.998 cv
660.036 635.998 658.226 631.263 661.296 628.751 cv
663.827 626.68 669.464 625.185 670.269 624.379 cv
673.767 622.919 677.791 609.169 677.791 609.169 cv
cp
.937255 .937255 .937255 rgb
f
670.988 623.946 mo
678.467 624.497 li
679.657 621.821 li
672.42 620.479 li
670.988 623.946 li
cp
672.809 618.504 mo
680.288 619.055 li
681.478 616.379 li
674.241 615.037 li
672.809 618.504 li
cp
676.188 609.997 mo
683.426 611.339 li
682.236 614.016 li
674.756 613.464 li
676.188 609.997 li
cp
1 1 1 rgb
f
725.583 448.481 mo
726.367 450.928 728.566 464.01 731.142 467.696 cv
735.521 467.71 742.909 467.212 743.287 466.189 cv
747.823 450.98 755.04 431.323 756.108 426.786 cv
757.175 422.25 761.444 404.906 748.369 401.971 cv
735.294 399.035 732.359 410.243 732.359 416.913 cv
728.166 437.994 724.516 445.146 725.583 448.481 cv
cp
.0470588 .192157 .266667 rgb
f
778.615 461.559 mo
778.615 529.552 li
778.615 536.593 772.888 542.321 765.847 542.321 cv
700.875 542.321 li
700.875 542.321 698.347 547.108 708.322 547.108 cv
730.267 547.108 765.847 547.108 765.847 547.108 cv
775.543 547.108 783.403 539.248 783.403 529.552 cv
783.403 529.552 783.403 486.954 783.403 469.568 cv
783.403 457.798 778.615 461.559 778.615 461.559 cv
cp
.113725 .231373 .239216 rgb
f
765.581 539.394 mo
765.581 541.598 763.795 543.384 761.591 543.384 cv
693.494 543.384 li
691.29 543.384 689.504 541.598 689.504 539.394 cv
689.504 533.808 li
689.504 531.605 691.29 529.818 693.494 529.818 cv
761.591 529.818 li
763.795 529.818 765.581 531.605 765.581 533.808 cv
765.581 539.394 li
cp
.521569 .345098 .729412 rgb
f
702.781 558.678 mo
703.182 554.425 707.966 550.965 713.444 550.965 cv
758.133 550.965 li
763.611 550.965 768.395 554.425 768.796 558.678 cv
776.354 635.716 li
780.078 635.716 li
772.769 558.303 li
772.17 551.965 765.625 546.975 758.133 546.975 cv
713.444 546.975 li
705.952 546.975 699.407 551.965 698.808 558.303 cv
691.499 635.716 li
695.63 635.716 li
702.781 558.678 li
cp
.0784314 .172549 .176471 rgb
f
774.202 521.149 mo
773.976 523.193 772.136 524.667 770.092 524.442 cv
768.047 524.216 766.573 522.376 766.798 520.332 cv
777.709 421.446 li
777.935 419.402 779.775 417.927 781.819 418.153 cv
783.863 418.379 785.338 420.219 785.112 422.263 cv
774.202 521.149 li
cp
.521569 .345098 .729412 rgb
f
725.498 448 mo
725.406 447.464 716.559 448.467 714.891 449.134 cv
715.091 454.938 717.159 466.412 718.026 467.212 cv
719.761 467.479 729.3 468.013 731.368 467.612 cv
729.434 462.809 726.632 451.736 725.498 448 cv
cp
.0235294 .133333 .2 rgb
f
692.051 342.401 mo
692.051 342.401 698.725 340.242 703.172 338.819 cv
702.639 342.911 705.93 345.401 705.93 345.401 cv
711.089 344.69 li
711.089 344.69 715.739 354.518 716.082 357.876 cv
717.671 355.007 717.451 353.15 717.451 353.15 cv
717.451 353.15 717.493 349.671 721.228 349.137 cv
724.964 348.603 728.344 354.118 729.589 357.676 cv
730.835 361.234 736.171 365.681 737.417 365.681 cv
740.085 365.147 740.085 365.147 740.085 365.147 cv
740.085 365.147 742.175 351.138 743.286 345.532 cv
744.977 338.33 743.252 322.857 729.377 317.52 cv
722.617 310.227 697.391 312.491 688.674 326.545 cv
679.958 340.598 678.179 337.218 677.645 337.04 cv
678.179 339.709 684.935 345.603 692.051 342.401 cv
cp
.847059 .615686 .145098 rgb
f
728.3 318.451 mo
727.766 313.781 706.819 311.113 696.546 320.852 cv
686.273 330.592 682.137 339.798 678.268 337.93 cv
683.071 342.466 693.611 334.327 699.481 328.324 cv
705.352 322.32 716.159 317.25 727.099 319.785 cv
721.095 320.319 709.221 317.784 695.612 335.528 cv
698.948 333.794 703.617 330.992 717.092 332.993 cv
730.568 334.995 733.77 328.324 731.635 323.654 cv
733.77 325.122 733.77 341.399 741.908 347.803 cv
743.776 343.267 745.11 322.453 728.3 318.451 cv
cp
.937255 .67451 .215686 rgb
f
722.763 346.202 mo
718.627 346.202 li
718.627 341.465 li
722.763 341.465 li
722.763 346.202 li
cp
.917647 .917647 .917647 rgb
f
709.674 356.072 mo
709.674 349.773 714.781 344.666 721.08 344.666 cv
727.38 344.666 732.486 349.773 732.486 356.072 cv
732.486 362.372 727.38 367.478 721.08 367.478 cv
714.781 367.478 709.674 362.372 709.674 356.072 cv
cp
.988235 .988235 .988235 rgb
f
712.302 355.872 mo
712.302 351.024 716.232 347.094 721.08 347.094 cv
725.929 347.094 729.859 351.024 729.859 355.872 cv
729.859 360.72 725.929 364.651 721.08 364.651 cv
716.232 364.651 712.302 360.72 712.302 355.872 cv
cp
.521569 .345098 .729412 rgb
f
725.54 339.546 mo
725.54 341.02 724.345 342.214 722.871 342.214 cv
718.441 342.214 li
716.968 342.214 715.773 341.02 715.773 339.546 cv
715.773 314.537 li
715.773 313.063 716.968 311.868 718.441 311.868 cv
722.871 311.868 li
724.345 311.868 725.54 313.063 725.54 314.537 cv
725.54 339.546 li
cp
.988235 .988235 .988235 rgb
f
724.755 337.628 mo
724.755 339.101 723.752 340.296 722.515 340.296 cv
718.797 340.296 li
717.561 340.296 716.558 339.101 716.558 337.628 cv
716.558 312.618 li
716.558 311.145 717.561 309.95 718.797 309.95 cv
722.515 309.95 li
723.752 309.95 724.755 311.145 724.755 312.618 cv
724.755 337.628 li
cp
.521569 .345098 .729412 rgb
f
684.866 463.743 mo
684.866 464.274 684.436 464.704 683.905 464.704 cv
612.676 464.704 li
612.146 464.704 611.716 464.274 611.716 463.743 cv
611.716 463.213 612.146 462.783 612.676 462.783 cv
683.905 462.783 li
684.436 462.783 684.866 463.213 684.866 463.743 cv
cp
.776471 .776471 .776471 rgb
f
608.783 463.214 mo
608.278 463.378 607.729 463.076 607.555 462.539 cv
584.296 390.458 li
584.123 389.921 584.391 389.352 584.896 389.188 cv
585.4 389.024 585.95 389.326 586.123 389.863 cv
609.383 461.944 li
609.556 462.481 609.287 463.05 608.783 463.214 cv
cp
0 .298039 .337255 rgb
f
609.424 463.627 mo
585.185 389.029 li
583.448 389.946 582.563 391.998 583.191 393.931 cv
605.185 461.622 li
605.741 463.336 607.315 464.421 609.021 464.452 cv
609.629 465.965 611.096 467.037 612.827 467.035 cv
684.001 466.953 li
686.033 466.95 687.71 465.473 688.043 463.536 cv
609.424 463.627 li
cp
.878431 .878431 .878431 rgb
f
620.499 465.253 mo
620.499 465.556 620.253 465.802 619.95 465.802 cv
613.5 465.802 li
613.197 465.802 612.951 465.556 612.951 465.253 cv
612.951 464.95 613.197 464.704 613.5 464.704 cv
619.95 464.704 li
620.253 464.704 620.499 464.95 620.499 465.253 cv
cp
.776471 .776471 .776471 rgb
f
629.969 465.253 mo
629.969 465.556 629.723 465.802 629.42 465.802 cv
622.969 465.802 li
622.666 465.802 622.421 465.556 622.421 465.253 cv
622.421 464.95 622.666 464.704 622.969 464.704 cv
629.42 464.704 li
629.723 464.704 629.969 464.95 629.969 465.253 cv
cp
f
682.67 465.253 mo
682.67 465.556 682.424 465.802 682.121 465.802 cv
675.671 465.802 li
675.367 465.802 675.122 465.556 675.122 465.253 cv
675.122 464.95 675.367 464.704 675.671 464.704 cv
682.121 464.704 li
682.424 464.704 682.67 464.95 682.67 465.253 cv
cp
f
986.821 516.091 mo
977.724 516.091 li
977.724 588.47 li
986.821 588.47 li
986.821 516.091 li
cp
.0784314 .172549 .176471 rgb
f
1027.3 581.77 mo
1027.3 584.509 1025.08 586.728 1022.35 586.728 cv
937.728 586.728 li
934.99 586.728 932.77 584.509 932.77 581.77 cv
932.77 574.829 li
932.77 572.091 934.99 569.871 937.728 569.871 cv
1022.35 569.871 li
1025.08 569.871 1027.3 572.091 1027.3 574.829 cv
1027.3 581.77 li
cp
f
941.337 597.018 mo
942.25 593.022 948.191 589.838 954.6 589.838 cv
1006.88 589.838 li
1013.28 589.838 1019.23 593.022 1020.14 597.018 cv
1041.58 688.978 li
1047.16 688.978 li
1024.84 596.662 li
1023.41 590.752 1015.28 586.234 1006.61 586.234 cv
954.868 586.234 li
946.193 586.234 938.068 590.752 936.639 596.662 cv
914.314 688.978 li
920.51 688.978 li
941.337 597.018 li
cp
f
1031.9 521.596 mo
1029.8 535.156 1014.57 545.349 997.731 545.349 cv
964.931 545.349 li
948.092 545.349 932.864 535.156 930.766 521.596 cv
922.36 467.28 li
919.223 447.015 935.321 428.934 958.63 428.934 cv
1004.03 428.934 li
1027.34 428.934 1043.44 447.015 1040.3 467.28 cv
1031.9 521.596 li
cp
.0392157 .0980392 .0980392 rgb
f
1031.11 517.372 mo
1029.04 530.179 1014.05 539.806 997.476 539.806 cv
965.186 539.806 li
948.609 539.806 933.618 530.179 931.552 517.372 cv
923.277 466.074 li
920.189 446.935 936.036 429.858 958.983 429.858 cv
1003.68 429.858 li
1026.63 429.858 1042.47 446.935 1039.39 466.074 cv
1031.11 517.372 li
cp
.0784314 .172549 .176471 rgb
f
932.77 577.5 mo
932.77 581.77 li
932.77 584.508 934.99 586.728 937.728 586.728 cv
1022.35 586.728 li
1025.08 586.728 1027.3 584.508 1027.3 581.77 cv
1027.3 577.5 li
932.77 577.5 li
cp
.0392157 .0980392 .0980392 rgb
f
942.604 597.2 mo
943.038 593.221 948.548 589.979 954.887 589.979 cv
1006.59 589.979 li
1012.93 589.979 1018.44 593.221 1018.87 597.2 cv
1026.95 668.232 li
1031.19 668.232 li
1023.46 596.85 li
1022.82 590.915 1015.28 586.234 1006.61 586.234 cv
954.868 586.234 li
946.193 586.234 938.654 590.915 938.011 596.85 cv
930.284 668.232 li
934.99 668.232 li
942.604 597.2 li
cp
.0784314 .172549 .176471 rgb
f
997.826 417.603 mo
964.48 417.603 li
964.48 408.037 li
997.826 408.037 li
997.826 417.603 li
cp
.8 .8 .8 rgb
f
1009.94 536.096 mo
1011.54 481.948 1019.42 444.921 1019.42 444.921 cv
944.131 444.921 li
944.131 444.921 952.351 493.484 953.611 536.096 cv
1009.94 536.096 li
cp
f
979.583 444.921 mo
979.583 536.059 li
982.864 536.059 li
982.864 444.921 li
979.583 444.921 li
cp
.937255 .937255 .937255 rgb
f
959.703 472.749 mo
1003.85 472.749 li
1024.84 465.426 1025.22 442.139 1028.77 429.256 cv
1028.98 428.261 1000.1 416.338 1000.1 416.338 cv
982.35 415.156 li
982.35 415.08 li
981.776 415.118 li
981.202 415.08 li
981.202 415.156 li
963.449 416.338 li
963.449 416.338 933.861 428.161 934.877 429.434 cv
938.431 442.316 938.944 464.8 959.703 472.749 cv
cp
f
981.855 415.156 mo
981.855 415.08 li
981.371 415.118 li
980.887 415.08 li
980.887 415.156 li
979.197 415.29 li
979.197 472.749 li
983.061 472.749 li
983.061 415.251 li
981.855 415.156 li
cp
1 1 1 rgb
f
964.48 408.037 mo
981.151 434.17 li
965.61 435.086 li
960.146 416.705 li
964.48 408.037 li
cp
f
997.822 408.037 mo
981.151 434.17 li
997.998 435.734 li
1002.16 416.705 li
997.822 408.037 li
cp
f
982.143 436.081 mo
982.143 436.688 981.65 437.181 981.043 437.181 cv
980.435 437.181 979.942 436.688 979.942 436.081 cv
979.942 435.473 980.435 434.98 981.043 434.98 cv
981.65 434.98 982.143 435.473 982.143 436.081 cv
cp
.0823529 .117647 .00392157 rgb
f
982.143 453.337 mo
982.143 453.945 981.65 454.438 981.043 454.438 cv
980.435 454.438 979.942 453.945 979.942 453.337 cv
979.942 452.73 980.435 452.237 981.043 452.237 cv
981.65 452.237 982.143 452.73 982.143 453.337 cv
cp
f
982.143 470.594 mo
982.143 471.202 981.65 471.694 981.043 471.694 cv
980.435 471.694 979.942 471.202 979.942 470.594 cv
979.942 469.986 980.435 469.493 981.043 469.493 cv
981.65 469.493 982.143 469.986 982.143 470.594 cv
cp
f
982.143 487.85 mo
982.143 488.458 981.65 488.951 981.043 488.951 cv
980.435 488.951 979.942 488.458 979.942 487.85 cv
979.942 487.243 980.435 486.75 981.043 486.75 cv
981.65 486.75 982.143 487.243 982.143 487.85 cv
cp
f
982.143 505.107 mo
982.143 505.715 981.65 506.207 981.043 506.207 cv
980.435 506.207 979.942 505.715 979.942 505.107 cv
979.942 504.499 980.435 504.007 981.043 504.007 cv
981.65 504.007 982.143 504.499 982.143 505.107 cv
cp
f
982.143 524.403 mo
982.143 525.011 981.65 525.504 981.043 525.504 cv
980.435 525.504 979.942 525.011 979.942 524.403 cv
979.942 523.796 980.435 523.303 981.043 523.303 cv
981.65 523.303 982.143 523.796 982.143 524.403 cv
cp
f
989.153 449.815 mo
989.153 453.846 li
998.691 459.353 li
1008.23 453.846 li
1008.23 449.815 li
989.153 449.815 li
cp
1 1 1 rgb
f
999.859 455.868 mo
999.859 456.476 999.366 456.969 998.758 456.969 cv
998.151 456.969 997.658 456.476 997.658 455.868 cv
997.658 455.261 998.151 454.768 998.758 454.768 cv
999.366 454.768 999.859 455.261 999.859 455.868 cv
cp
.0823529 .117647 .00392157 rgb
f
989.153 453.846 mo
998.691 459.267 li
1008.23 453.846 li
998.735 458.27 li
989.153 453.846 li
cp
.8 .8 .8 rgb
f
953.956 449.815 mo
953.956 453.846 li
963.494 459.353 li
973.033 453.846 li
973.033 449.815 li
953.956 449.815 li
cp
1 1 1 rgb
f
964.662 455.868 mo
964.662 456.476 964.169 456.969 963.561 456.969 cv
962.954 456.969 962.461 456.476 962.461 455.868 cv
962.461 455.261 962.954 454.768 963.561 454.768 cv
964.169 454.768 964.662 455.261 964.662 455.868 cv
cp
.0823529 .117647 .00392157 rgb
f
953.956 453.846 mo
963.494 459.267 li
973.033 453.846 li
963.538 458.27 li
953.956 453.846 li
cp
.8 .8 .8 rgb
f
935.1 429.256 mo
928.946 432.171 927.449 442.353 921.173 453.547 cv
914.378 465.667 882.246 495.622 905.261 506.987 cv
924.623 516.549 939.192 464.112 949.807 466.722 cv
940.671 458.027 935.1 429.256 935.1 429.256 cv
cp
.937255 .937255 .937255 rgb
f
949.807 466.722 mo
949.431 466.399 943.1 461.698 935.985 433.908 cv
937.541 453.655 943.753 462.25 944.774 464.127 cv
938.296 469.525 930.695 483.923 927.068 488.958 cv
923.251 494.258 900.51 517.243 897.355 492.18 cv
896.302 498.176 898.141 503.471 905.26 506.987 cv
921.722 515.117 935.248 476.532 945.698 468.169 cv
945.878 468.025 948.25 466.141 949.807 466.722 cv
cp
.8 .8 .8 rgb
f
973.051 485.379 mo
975.642 484.408 978.727 480.915 975.974 478.162 cv
973.863 476.051 968.849 482.534 965.448 484.64 cv
965.448 484.64 969.082 486.868 973.051 485.379 cv
cp
.976471 .72549 .635294 rgb
f
971.109 503.963 mo
973.36 503.933 974.845 501.611 974.959 501.005 cv
976.961 500.752 978.714 497.927 978.618 496.895 cv
979.888 496.342 981.101 495.188 980.852 492.926 cv
980.643 491.026 980.778 488.387 978.911 487.153 cv
977.045 485.918 971.235 482.223 969.676 481.813 cv
968.118 481.402 963.69 484.473 957.454 486.4 cv
951.776 488.154 950.337 494.846 946.953 495.983 cv
935.517 496.271 925.956 483.906 916.479 482.895 cv
904.663 481.634 898.431 489.901 899.377 497.846 cv
900.372 506.208 911.174 509.089 918.649 508.001 cv
946.859 503.895 937.774 506.128 946.919 504.636 cv
950.624 504.032 951.382 504.403 951.382 504.403 cv
951.382 504.403 955.354 506.736 958.877 504.113 cv
962.4 501.491 964.895 500.143 965.106 500.135 cv
966.338 500.372 967.358 500.105 967.358 500.105 cv
967.358 500.105 966.934 501.139 967.415 502.235 cv
966.606 503.004 965.162 504.304 965.162 504.304 cv
965.162 504.304 966.411 506.95 967.74 506.488 cv
969.068 506.025 970.011 506.318 971.109 503.963 cv
cp
1 .780392 .690196 rgb
f
978.618 496.895 mo
977.907 493.907 977.524 492.018 977.005 489.766 cv
976.698 488.433 971.964 486.091 970.098 484.857 cv
971.945 486.741 975.501 488.155 976.476 490.4 cv
977.372 492.462 977.784 494.917 978.618 496.895 cv
cp
1 .823529 .760784 rgb
f
974.955 500.925 mo
976.73 500.898 976.268 496.55 975.364 494.245 cv
974.857 492.953 968.826 489.489 966.96 488.254 cv
968.806 490.138 974.036 492.626 974.752 494.945 cv
975.535 497.481 975.162 500.048 974.955 500.925 cv
cp
f
971.109 503.963 mo
971.109 503.963 972.227 499.175 971.833 497.96 cv
971.44 496.745 966.322 492.864 966.13 492.732 cv
968.458 493.927 972.344 497.062 972.526 497.774 cv
972.709 498.486 972.351 502.09 971.109 503.963 cv
cp
f
969.002 503.455 mo
968.483 502.64 967.617 501.278 968.715 499.816 cv
965.983 499.286 963.372 498.185 961.488 500.013 cv
954.056 507.221 951.082 499.711 952.126 496.189 cv
954.573 487.936 967.35 483.122 968.93 481.82 cv
966.943 482.178 962.885 484.721 957.454 486.4 cv
952.103 488.053 950.516 494.09 947.518 495.731 cv
942.64 499.788 955.232 502.545 926.908 502.02 cv
894.204 501.413 901.578 488.988 904.49 485.748 cv
899.959 489.092 899.045 495.649 899.377 497.846 cv
900.51 505.345 911.174 509.089 918.649 508.001 cv
946.859 503.895 937.774 506.128 946.919 504.636 cv
950.624 504.032 951.382 504.403 951.382 504.403 cv
951.382 504.403 955.354 506.736 958.877 504.113 cv
962.4 501.491 964.895 500.143 965.106 500.135 cv
966.338 500.372 967.358 500.105 967.358 500.105 cv
967.358 500.105 966.934 501.139 967.415 502.235 cv
966.606 503.004 965.162 504.304 965.162 504.304 cv
965.162 504.304 965.305 504.604 965.542 504.982 cv
965.544 504.985 li
966.375 503.788 967.241 502.855 969.002 503.455 cv
cp
.976471 .72549 .635294 rgb
f
1028.77 429.256 mo
1034.92 432.171 1036.42 442.353 1042.7 453.547 cv
1049.49 465.667 1081.62 495.622 1058.61 506.987 cv
1039.25 516.549 1024.68 464.112 1014.06 466.722 cv
1023.2 458.027 1028.77 429.256 1028.77 429.256 cv
cp
.937255 .937255 .937255 rgb
f
1014.06 466.722 mo
1014.44 466.399 1020.77 461.698 1027.89 433.908 cv
1026.33 453.655 1020.12 462.25 1019.1 464.127 cv
1025.57 469.525 1033.18 483.923 1036.8 488.958 cv
1040.62 494.258 1063.36 517.243 1066.52 492.18 cv
1067.57 498.176 1065.73 503.471 1058.61 506.987 cv
1042.15 515.117 1028.62 476.532 1018.17 468.169 cv
1017.99 468.025 1015.62 466.141 1014.06 466.722 cv
cp
.8 .8 .8 rgb
f
990.82 485.379 mo
988.229 484.408 985.144 480.915 987.897 478.162 cv
990.008 476.051 995.022 482.534 998.423 484.64 cv
998.423 484.64 994.789 486.868 990.82 485.379 cv
cp
.976471 .72549 .635294 rgb
f
992.762 503.963 mo
990.51 503.933 989.026 501.611 988.912 501.005 cv
986.91 500.752 985.157 497.927 985.253 496.895 cv
983.983 496.342 982.77 495.188 983.019 492.926 cv
983.228 491.026 983.093 488.387 984.959 487.153 cv
986.826 485.918 992.636 482.223 994.194 481.813 cv
995.753 481.402 1000.18 484.473 1006.42 486.4 cv
1012.09 488.154 1013.53 494.846 1016.92 495.983 cv
1028.35 496.271 1037.91 483.906 1047.39 482.895 cv
1059.21 481.634 1065.44 489.901 1064.49 497.846 cv
1063.5 506.208 1052.7 509.089 1045.22 508.001 cv
1017.01 503.895 1026.1 506.128 1016.95 504.636 cv
1013.25 504.032 1012.49 504.402 1012.49 504.402 cv
1012.49 504.402 1008.52 506.736 1004.99 504.113 cv
1001.47 501.491 998.976 500.143 998.765 500.135 cv
997.533 500.371 996.513 500.105 996.513 500.105 cv
996.513 500.105 996.937 501.139 996.456 502.235 cv
997.265 503.004 998.709 504.304 998.709 504.304 cv
998.709 504.304 997.459 506.95 996.131 506.488 cv
994.803 506.025 993.86 506.318 992.762 503.963 cv
cp
1 .780392 .690196 rgb
f
985.253 496.895 mo
985.964 493.907 986.347 492.018 986.866 489.766 cv
987.173 488.433 991.906 486.091 993.773 484.857 cv
991.926 486.741 988.37 488.155 987.394 490.4 cv
986.499 492.462 986.087 494.917 985.253 496.895 cv
cp
1 .823529 .760784 rgb
f
988.916 500.925 mo
987.141 500.898 987.603 496.55 988.507 494.245 cv
989.014 492.953 995.045 489.488 996.911 488.254 cv
995.065 490.138 989.835 492.626 989.119 494.945 cv
988.336 497.481 988.709 500.048 988.916 500.925 cv
cp
f
992.762 503.963 mo
992.762 503.963 991.643 499.175 992.037 497.96 cv
992.431 496.745 997.549 492.864 997.741 492.732 cv
995.413 493.927 991.527 497.062 991.344 497.774 cv
991.162 498.486 991.52 502.09 992.762 503.963 cv
cp
f
994.869 503.455 mo
995.388 502.64 996.254 501.278 995.156 499.816 cv
997.888 499.286 1000.5 498.185 1002.38 500.013 cv
1009.81 507.221 1012.79 499.711 1011.74 496.189 cv
1009.3 487.936 996.521 483.122 994.941 481.82 cv
996.928 482.178 1000.99 484.721 1006.42 486.4 cv
1011.77 488.053 1013.35 494.09 1016.35 495.731 cv
1021.23 499.787 1008.64 502.545 1036.96 502.02 cv
1069.67 501.413 1062.29 488.988 1059.38 485.748 cv
1063.91 489.092 1064.83 495.649 1064.49 497.846 cv
1063.36 505.345 1052.7 509.089 1045.22 508.001 cv
1017.01 503.895 1026.1 506.128 1016.95 504.636 cv
1013.25 504.032 1012.49 504.402 1012.49 504.402 cv
1012.49 504.402 1008.52 506.736 1004.99 504.113 cv
1001.47 501.491 998.976 500.143 998.765 500.135 cv
997.533 500.371 996.513 500.105 996.513 500.105 cv
996.513 500.105 996.937 501.139 996.456 502.235 cv
997.265 503.004 998.709 504.304 998.709 504.304 cv
998.709 504.304 998.566 504.604 998.329 504.982 cv
998.326 504.985 li
997.496 503.788 996.63 502.855 994.869 503.455 cv
cp
.976471 .72549 .635294 rgb
f
969.045 396.033 mo
965.894 410.138 li
981.151 434.17 li
996.419 410.184 li
993.258 396.033 li
969.045 396.033 li
cp
1 .780392 .690196 rgb
f
969.045 396.033 mo
965.894 410.138 li
981.151 434.17 li
981.263 416.914 li
995.19 404.685 li
993.258 396.033 li
969.045 396.033 li
cp
.858824 .631373 .552941 rgb
f
1010.87 362.441 mo
1010.08 362.294 1009.25 362.509 1008.46 363.016 cv
1008 345.779 1004.42 328.282 980.931 328.282 cv
958.556 328.282 953.774 345.88 953.394 363.206 cv
952.519 362.564 951.599 362.277 950.708 362.441 cv
947.865 362.966 946.39 367.879 947.412 373.414 cv
948.434 378.95 951.567 383.012 954.409 382.487 cv
955.263 382.329 955.992 381.774 956.568 380.927 cv
956.568 394.082 970.364 409.565 980.931 409.565 cv
991.427 409.565 1005.2 394.551 1005.2 381.185 cv
1005.74 381.886 1006.41 382.346 1007.17 382.487 cv
1010.01 383.012 1013.15 378.95 1014.17 373.414 cv
1015.19 367.879 1013.72 362.966 1010.87 362.441 cv
1 .780392 .690196 rgb
f
1005.3 381.184 mo
1005.84 381.886 1006.51 382.346 1007.27 382.487 cv
1010.01 382.992 1013.01 379.25 1014.14 374.035 cv
1011.91 378.529 1008.41 381.905 1006.13 377.911 cv
1005.97 377.617 1006.61 364.819 1006.28 364.775 cv
1006.4 364.368 1008.45 363.396 1008.56 362.983 cv
1008.27 352.367 1006.79 341.658 1000.21 335.002 cv
1002.07 341.915 1003.14 349.949 1003.14 358.521 cv
1003.14 384.414 993.403 405.405 981.388 405.405 cv
969.374 405.405 959.634 384.414 959.634 358.521 cv
959.634 349.825 960.734 341.684 962.648 334.704 cv
956.289 340.811 954.101 350.515 953.593 360.443 cv
953.846 361.721 955.797 363.916 956.145 365.15 cv
955.816 365.194 956.653 377.092 956.52 377.404 cv
955.395 380.029 952.183 381.966 948.852 377.736 cv
950.304 380.9 952.479 382.861 954.507 382.487 cv
955.361 382.329 956.09 381.774 956.666 380.927 cv
956.666 394.082 970.462 409.564 981.029 409.564 cv
991.525 409.564 1005.3 394.551 1005.3 381.184 cv
cp
.858824 .631373 .552941 rgb
f
996.335 361.519 mo
996.32 362.222 993.91 361.384 990.904 361.441 cv
987.898 361.498 985.475 362.428 985.449 361.726 cv
985.402 360.441 987.564 358.289 990.57 358.232 cv
993.576 358.175 996.364 360.149 996.335 361.519 cv
cp
f
964.949 361.812 mo
965.073 362.505 967.482 361.431 970.487 361.432 cv
973.492 361.433 975.799 362.519 975.831 361.815 cv
975.942 359.441 973.498 357.9 970.493 357.899 cv
967.488 357.898 964.564 359.649 964.949 361.812 cv
cp
f
996.331 360.957 mo
996.357 362.338 993.805 360.255 990.799 360.312 cv
987.792 360.369 985.471 362.545 985.445 361.164 cv
985.419 359.783 987.813 357.492 990.819 357.435 cv
993.825 357.378 996.305 359.576 996.331 360.957 cv
cp
.196078 0 .00392157 rgb
f
964.94 360.957 mo
964.913 362.338 967.466 360.255 970.472 360.312 cv
973.478 360.369 975.799 362.545 975.825 361.164 cv
975.852 359.783 973.457 357.492 970.451 357.435 cv
967.445 357.378 964.966 359.576 964.94 360.957 cv
cp
f
974.843 373.443 mo
974.843 374.824 973.723 375.944 972.342 375.944 cv
970.961 375.944 969.842 374.824 969.842 373.443 cv
969.842 372.062 970.961 370.942 972.342 370.942 cv
973.723 370.942 974.843 372.062 974.843 373.443 cv
.184314 .0117647 0 rgb
f
974.339 372.706 mo
974.339 373.401 973.775 373.965 973.08 373.965 cv
972.384 373.965 971.82 373.401 971.82 372.706 cv
971.82 372.01 972.384 371.446 973.08 371.446 cv
973.775 371.446 974.339 372.01 974.339 372.706 cv
1 1 1 rgb
f
993.098 373.443 mo
993.098 374.824 991.978 375.944 990.597 375.944 cv
989.216 375.944 988.096 374.824 988.096 373.443 cv
988.096 372.062 989.216 370.942 990.597 370.942 cv
991.978 370.942 993.098 372.062 993.098 373.443 cv
.184314 .0117647 0 rgb
f
992.756 372.706 mo
992.756 373.401 992.192 373.965 991.496 373.965 cv
990.801 373.965 990.237 373.401 990.237 372.706 cv
990.237 372.01 990.801 371.446 991.496 371.446 cv
992.192 371.446 992.756 372.01 992.756 372.706 cv
1 1 1 rgb
f
991.152 380.661 mo
986.227 380.661 982.22 377.065 982.22 372.644 cv
982.22 371.878 982.34 371.125 982.579 370.395 cv
999.726 370.395 li
999.964 371.125 1000.08 371.878 1000.08 372.644 cv
1000.08 377.065 996.077 380.661 991.152 380.661 cv
970.682 380.661 mo
965.757 380.661 961.75 377.065 961.75 372.644 cv
961.75 371.878 961.87 371.125 962.109 370.395 cv
979.256 370.395 li
979.494 371.125 979.614 371.878 979.614 372.644 cv
979.614 377.065 975.608 380.661 970.682 380.661 cv
1009.94 362.446 mo
1009.03 361.694 li
1002.67 371.794 li
1001.04 371.794 li
1000.95 370.956 1000.74 370.151 1000.42 369.395 cv
981.887 369.395 li
981.557 370.17 981.341 370.998 981.258 371.859 cv
980.576 371.859 li
980.493 370.998 980.278 370.17 979.948 369.395 cv
961.417 369.395 li
961.095 370.151 960.881 370.956 960.794 371.794 cv
959.165 371.794 li
952.801 361.694 li
951.896 362.446 li
958.528 372.97 li
960.759 372.97 li
960.948 377.799 965.318 381.662 970.682 381.662 cv
976.023 381.662 980.378 377.834 980.604 373.036 cv
981.23 373.036 li
981.457 377.834 985.811 381.662 991.152 381.662 cv
996.517 381.662 1000.89 377.799 1001.08 372.97 cv
1003.31 372.97 li
1009.94 362.446 li
.215686 .207843 .211765 rgb
f
985.953 396.621 mo
975.7 396.621 li
974.423 396.621 973.387 395.586 973.387 394.308 cv
973.387 393.031 974.423 391.995 975.7 391.995 cv
985.953 391.995 li
987.23 391.995 988.266 393.031 988.266 394.308 cv
988.266 395.586 987.23 396.621 985.953 396.621 cv
cp
1006.27 366.989 mo
1003.23 393.831 994.517 391.87 985.855 388.744 cv
985.766 388.776 985.669 388.797 985.56 388.797 cv
976.256 388.797 li
967.632 390.887 959.239 395.572 956.394 368.607 cv
956.011 369.539 956.241 381.467 956.241 381.467 cv
957.508 398.872 970.823 410.816 980.931 410.816 cv
990.941 410.816 1005.78 398.712 1005.78 381.707 cv
1006.4 376.575 1006.7 367.697 1006.27 366.989 cv
cp
.203922 .00784314 .0117647 rgb
f
970.682 380.661 mo
970.682 380.661 li
969.457 380.661 968.289 380.438 967.225 380.036 cv
971.473 375.788 li
971.743 375.889 972.037 375.944 972.342 375.944 cv
973.723 375.944 974.843 374.824 974.843 373.443 cv
974.843 373.137 974.788 372.844 974.688 372.573 cv
976.866 370.395 li
979.256 370.395 li
979.494 371.125 979.614 371.878 979.614 372.644 cv
979.614 377.065 975.608 380.661 970.682 380.661 cv
.960784 .909804 .87451 rgb
f
972.342 375.944 mo
972.037 375.944 971.743 375.889 971.473 375.788 cv
973.318 373.943 li
973.822 373.846 974.22 373.448 974.317 372.944 cv
974.688 372.573 li
974.788 372.844 974.843 373.137 974.843 373.443 cv
974.843 374.824 973.723 375.944 972.342 375.944 cv
.635294 .603922 .6 rgb
f
973.318 373.943 mo
974.317 372.944 li
974.22 373.448 973.822 373.846 973.318 373.943 cv
.960784 .996078 1 rgb
f
965.7 379.293 mo
965.239 379.014 964.807 378.697 964.412 378.347 cv
969.913 372.846 li
969.867 373.037 969.842 373.237 969.842 373.443 cv
969.842 373.931 969.981 374.386 970.223 374.771 cv
965.7 379.293 li
973.67 371.324 mo
973.285 371.082 972.83 370.942 972.342 370.942 cv
972.137 370.942 971.937 370.967 971.746 371.014 cv
972.365 370.395 li
974.599 370.395 li
973.67 371.324 li
.960784 .909804 .87451 rgb
f
970.223 374.771 mo
969.981 374.386 969.842 373.931 969.842 373.443 cv
969.842 373.237 969.867 373.037 969.913 372.846 cv
971.746 371.014 li
971.937 370.967 972.137 370.942 972.342 370.942 cv
972.83 370.942 973.285 371.082 973.67 371.324 cv
973.482 371.512 li
973.356 371.469 973.22 371.446 973.08 371.446 cv
972.384 371.446 971.82 372.01 971.82 372.706 cv
971.82 372.846 971.843 372.982 971.886 373.108 cv
970.223 374.771 li
.635294 .603922 .6 rgb
f
971.886 373.108 mo
971.843 372.982 971.82 372.846 971.82 372.706 cv
971.82 372.01 972.384 371.446 973.08 371.446 cv
973.22 371.446 973.356 371.469 973.482 371.512 cv
971.886 373.108 li
.960784 .996078 1 rgb
f
963.318 377.174 mo
963.193 377.011 963.075 376.843 962.963 376.671 cv
969.239 370.395 li
970.097 370.395 li
963.318 377.174 li
.960784 .909804 .87451 rgb
f
991.152 380.661 mo
991.129 380.661 991.105 380.661 991.082 380.661 cv
991.067 380.661 991.052 380.661 991.037 380.661 cv
991.004 380.66 990.972 380.66 990.939 380.659 cv
988.558 380.609 986.405 379.718 984.834 378.306 cv
988.437 374.703 li
988.87 375.445 989.675 375.944 990.597 375.944 cv
991.978 375.944 993.098 374.824 993.098 373.443 cv
993.098 372.521 992.599 371.716 991.857 371.283 cv
992.745 370.395 li
999.726 370.395 li
999.964 371.125 1000.08 371.878 1000.08 372.644 cv
1000.08 377.065 996.077 380.661 991.152 380.661 cv
.952941 .929412 .905882 rgb
f
990.597 375.944 mo
989.675 375.944 988.87 375.445 988.437 374.703 cv
990.25 372.89 li
990.339 373.498 990.863 373.965 991.496 373.965 cv
992.192 373.965 992.756 373.401 992.756 372.706 cv
992.756 372.072 992.289 371.548 991.68 371.459 cv
991.857 371.283 li
992.599 371.716 993.098 372.521 993.098 373.443 cv
993.098 374.824 991.978 375.944 990.597 375.944 cv
.705882 .698039 .698039 rgb
f
991.496 373.965 mo
990.863 373.965 990.339 373.498 990.25 372.89 cv
991.68 371.459 li
992.289 371.548 992.756 372.072 992.756 372.706 cv
992.756 373.401 992.192 373.965 991.496 373.965 cv
.952941 .996078 1 rgb
f
991.152 380.661 mo
991.129 380.661 991.105 380.661 991.082 380.661 cv
991.105 380.661 991.129 380.661 991.152 380.661 cv
996.077 380.661 1000.08 377.065 1000.08 372.644 cv
1000.08 372.644 li
1000.08 377.065 996.077 380.661 991.152 380.661 cv
991.037 380.661 mo
991.004 380.66 990.971 380.66 990.939 380.659 cv
990.972 380.66 991.004 380.66 991.037 380.661 cv
.717647 .756863 .760784 rgb
f
983.748 377.124 mo
983.747 377.123 983.745 377.121 983.744 377.119 cv
983.737 377.109 983.729 377.099 983.722 377.089 cv
983.722 377.089 983.721 377.088 983.721 377.088 cv
983.441 376.712 983.201 376.311 982.994 375.895 cv
988.494 370.395 li
990.478 370.395 li
989.801 371.072 li
989.06 371.32 988.474 371.906 988.226 372.647 cv
983.748 377.124 li
.952941 .929412 .905882 rgb
f
988.226 372.647 mo
988.474 371.906 989.06 371.32 989.801 371.072 cv
988.226 372.647 li
.705882 .698039 .698039 rgb
f
983.748 377.124 mo
983.747 377.123 983.745 377.121 983.744 377.119 cv
983.745 377.121 983.747 377.123 983.748 377.124 cv
983.748 377.124 li
983.722 377.089 mo
983.722 377.089 983.721 377.088 983.721 377.088 cv
983.721 377.088 983.722 377.089 983.722 377.089 cv
.717647 .756863 .760784 rgb
f
975.389 386.707 mo
975.825 387.741 978.201 388.531 981.068 388.531 cv
983.934 388.531 986.31 387.741 986.747 386.707 cv
975.389 386.707 li
cp
.858824 .631373 .552941 rgb
f
988.019 393.273 mo
987.858 392.952 987.624 392.673 987.338 392.459 cv
974.314 392.459 li
974.029 392.673 973.795 392.952 973.633 393.273 cv
988.019 393.273 li
cp
988.084 395.21 mo
987.732 396.039 986.91 396.621 985.953 396.621 cv
975.7 396.621 li
974.742 396.621 973.92 396.039 973.569 395.21 cv
988.084 395.21 li
cp
f
1009.5 535.065 mo
956.157 535.065 li
956.157 535.065 li
953.35 535.065 li
953.35 535.065 927.282 538.159 926.766 562.393 cv
926.669 566.944 927.374 570.531 928.609 573.356 cv
1028.86 573.356 li
1030.1 570.531 1036.18 566.944 1036.08 562.393 cv
1035.56 538.159 1009.5 535.065 1009.5 535.065 cv
cp
.0235294 .133333 .2 rgb
f
927.106 567.931 mo
927.416 569.992 927.927 571.796 928.609 573.356 cv
1028.86 573.356 li
1029.54 571.792 1031.71 569.995 1033.49 567.931 cv
927.106 567.931 li
cp
.0156863 .105882 .14902 rgb
f
973.68 665.991 mo
973.68 665.991 976.308 661.092 976.23 660.832 cv
975.223 657.474 970.096 653.629 969.824 651.868 cv
961.74 565.601 li
959.857 554.025 951.137 545.326 941.787 545.326 cv
934.675 545.326 925.18 553.031 925.864 564.357 cv
943.388 652.672 li
942.93 656.269 942.511 661.97 942.511 661.97 cv
943.555 664.453 945.362 667.366 945.362 667.366 cv
945.314 667.995 943.57 672.667 942.741 673.185 cv
945.908 679.215 li
947.572 692.859 li
972.31 693.654 li
972.825 678.686 li
976.31 672.233 li
973.68 665.991 li
cp
.0235294 .133333 .2 rgb
f
973.937 708.563 mo
973.937 705.315 973.807 697.065 972.419 690.628 cv
957.826 686.346 946.851 689.176 946.056 694.048 cv
940.645 697.499 929.947 703.523 933.725 708.693 cv
973.937 708.563 li
cp
.458824 .556863 .054902 rgb
f
973.157 708.563 mo
972.192 698.656 968.74 692.159 966.851 690.469 cv
961.158 688.009 952.173 687.672 947.676 689.822 cv
947.676 689.822 946.644 691.803 945.276 694.048 cv
939.866 697.499 929.168 703.523 932.945 708.693 cv
973.157 708.563 li
cp
.615686 .752941 .180392 rgb
f
975.004 710.151 mo
975.004 711.124 974.215 711.912 973.242 711.912 cv
932.851 711.912 li
931.878 711.912 931.089 711.124 931.089 710.151 cv
931.089 709.178 931.878 708.389 932.851 708.389 cv
973.242 708.389 li
974.215 708.389 975.004 709.178 975.004 710.151 cv
cp
.878431 .878431 .878431 rgb
f
966.563 693.562 mo
966.312 692.557 965.997 691.578 965.709 690.593 cv
964.103 689.995 962.313 689.506 960.395 689.173 cv
955.407 688.309 950.77 688.696 947.829 689.992 cv
947.396 690.965 946.982 691.948 946.606 692.942 cv
949.389 691.188 954.889 691.162 960.566 692.146 cv
962.908 692.552 964.97 693.296 966.711 694.218 cv
966.617 693.778 966.617 693.778 966.563 693.562 cv
cp
f
966.926 694.639 mo
965.32 694.041 961.196 693.115 959.278 692.782 cv
954.29 691.918 949.241 692.226 946.3 693.521 cv
944.753 695.068 li
947.536 693.314 961.769 694.123 967.699 697.389 cv
967.883 696.895 966.926 694.639 966.926 694.639 cv
cp
f
993.109 636.794 mo
993.109 636.794 996.514 631.156 997.087 629.36 cv
1001.76 569.449 li
1002.71 555.626 1008.75 540.461 1020 540.461 cv
1032.97 541.121 1038 550.724 1036.33 564.741 cv
1016.32 628.372 li
1016.46 628.503 1016.54 628.575 1016.54 628.575 cv
1014.84 634.22 1018.18 637.622 1017.2 639.835 cv
1011.38 646.221 li
1009.4 657.752 li
1009.4 657.752 1002.72 660.293 994.083 654.856 cv
993.975 650.466 995.632 642.413 995.632 642.413 cv
993.109 636.794 li
cp
.0235294 .133333 .2 rgb
f
1009.7 676 mo
1010.15 668.087 1010.06 662.17 1009.4 657.752 cv
1009.4 657.752 1002.45 660.241 994.113 654.698 cv
993.527 661.189 991.857 666.496 988.259 674.523 cv
983.173 685.871 980.403 690.71 994.846 693.594 cv
1009.4 696.5 1008.98 688.415 1009.7 676 cv
cp
.423529 .486275 .0509804 rgb
f
1003.21 684.625 mo
998.561 683.378 993.782 682.458 988.967 682.184 cv
987.775 682.116 986.448 682.04 985.104 682.061 cv
982.782 688.796 979.61 692.655 994.442 695.617 cv
1009.78 698.68 1007.72 693.131 1008.85 686.389 cv
1006.99 685.744 1005.12 685.137 1003.21 684.625 cv
cp
.878431 .878431 .878431 rgb
f
1003.21 684.625 mo
998.561 683.378 993.782 682.458 988.967 682.184 cv
987.775 682.116 986.448 682.04 985.104 682.061 cv
982.782 688.796 983.984 691.425 994.846 693.594 cv
1004.91 695.604 1007.72 693.131 1008.85 686.389 cv
1006.99 685.744 1005.12 685.137 1003.21 684.625 cv
cp
.568627 .666667 .14902 rgb
f
1007.77 660.239 mo
1002.89 661.458 995.786 658.209 995.786 658.209 cv
995.786 658.209 995.38 659.427 995.177 660.239 cv
1002.89 664.909 1008.17 662.676 1008.17 662.676 cv
1008.17 662.676 1008.17 662.676 1007.77 660.239 cv
cp
.878431 .878431 .878431 rgb
f
1008.13 665.066 mo
1003.26 666.284 994.962 662.42 994.962 662.42 cv
994.962 662.42 994.33 664.148 994.127 664.961 cv
1001.84 669.631 1008.53 667.503 1008.53 667.503 cv
1008.53 667.503 1008.53 667.503 1008.13 665.066 cv
cp
f
1007.96 670.91 mo
1003.08 672.128 993.43 668.824 993.43 668.824 cv
993.43 668.824 992.798 670.552 992.595 671.364 cv
1000.31 676.034 1008.36 673.347 1008.36 673.347 cv
1008.36 673.347 1008.36 673.347 1007.96 670.91 cv
cp
f
1012.79 359.624 mo
1012.79 359.432 1012.81 359.243 1012.81 359.05 cv
1012.81 339.281 998.579 323.256 981.029 323.256 cv
963.479 323.256 949.252 339.281 949.252 359.05 cv
949.252 359.184 949.261 359.316 949.262 359.45 cv
951.888 359.45 li
954.19 342.461 966.357 329.496 981.029 329.496 cv
995.751 329.496 1007.95 342.549 1010.2 359.624 cv
1012.79 359.624 li
cp
.596078 .866667 .419608 rgb
f
1015.22 359.83 mo
1015.22 358.107 1013.83 356.71 1012.12 356.71 cv
1010.41 356.71 1009.02 358.107 1009.02 359.83 cv
1009.02 361.553 1010.41 362.95 1012.12 362.95 cv
1013.83 362.95 1015.22 361.553 1015.22 359.83 cv
cp
949.769 362.95 mo
948.056 362.95 946.668 361.553 946.668 359.83 cv
946.668 358.107 948.056 356.71 949.769 356.71 cv
951.481 356.71 952.869 358.107 952.869 359.83 cv
952.869 361.553 951.481 362.95 949.769 362.95 cv
cp
.878431 .878431 .878431 rgb
f
955.816 375.613 mo
955.699 380.191 953.608 381.709 951.128 381.812 cv
948.649 381.914 946.559 380.045 946.46 377.637 cv
945.964 365.48 li
945.866 363.072 947.797 361.037 950.276 360.935 cv
952.756 360.833 955.337 362.786 955.246 366.353 cv
955.816 375.613 li
cp
.968627 .968627 .968627 rgb
f
948.982 376.035 mo
949.057 377.877 948.214 379.408 947.099 379.454 cv
945.984 379.5 945.02 378.044 944.945 376.202 cv
944.566 366.901 li
944.491 365.059 945.334 363.528 946.448 363.482 cv
947.563 363.436 948.528 364.892 948.603 366.734 cv
948.982 376.035 li
cp
.596078 .866667 .419608 rgb
f
1006.26 375.45 mo
1006.24 380.03 1008.28 381.61 1010.76 381.786 cv
1013.23 381.962 1015.38 380.155 1015.55 377.751 cv
1016.4 365.615 li
1016.57 363.211 1014.7 361.12 1012.22 360.943 cv
1009.75 360.767 1007.11 362.643 1007.1 366.211 cv
1006.26 375.45 li
cp
.968627 .968627 .968627 rgb
f
1012.21 376.05 mo
1012.08 377.889 1012.88 379.444 1013.99 379.524 cv
1015.11 379.603 1016.11 378.176 1016.24 376.336 cv
1016.9 367.051 li
1017.02 365.212 1016.23 363.657 1015.11 363.577 cv
1014 363.498 1012.99 364.925 1012.87 366.765 cv
1012.21 376.05 li
cp
.596078 .866667 .419608 rgb
f
1012.79 359.624 mo
1012.79 359.432 1011.1 359.242 1011.08 359.05 cv
1009.36 336.256 992.999 326.376 981.029 326.376 cv
966.303 326.376 950.802 342.67 950.802 359.05 cv
950.802 359.184 949.261 359.316 949.262 359.45 cv
951.888 359.45 li
954.19 342.461 966.357 329.496 981.029 329.496 cv
995.751 329.496 1007.95 342.549 1010.2 359.624 cv
1012.79 359.624 li
cp
.878431 .878431 .878431 rgb
f
424.213 473.574 mo
419.526 506.225 li
419.429 506.753 418.611 507.171 417.697 507.171 cv
406.559 507.171 li
405.644 507.171 404.826 506.753 404.73 506.225 cv
400.042 473.574 li
424.213 473.574 li
cp
.909804 .317647 .0196078 rgb
f
424.213 472.247 mo
419.526 465.898 li
419.429 465.795 418.611 465.714 417.697 465.714 cv
406.559 465.714 li
405.644 465.714 404.826 465.795 404.73 465.898 cv
400.042 472.247 li
424.213 472.247 li
cp
1 .392157 .121569 rgb
f
413.965 471.62 mo
401.284 471.62 li
405.118 466.427 li
405.346 466.388 405.858 466.34 406.559 466.34 cv
413.965 466.34 li
413.965 471.62 li
cp
.909804 .317647 .0196078 rgb
f
398.686 472.997 mo
398.686 473.645 399.211 474.171 399.86 474.171 cv
424.761 474.171 li
425.41 474.171 425.936 473.645 425.936 472.997 cv
425.936 472.348 425.41 471.822 424.761 471.822 cv
399.86 471.822 li
399.211 471.822 398.686 472.348 398.686 472.997 cv
cp
.878431 .878431 .878431 rgb
f
401.067 472.364 mo
414.069 472.364 li
414.069 473.629 li
401.067 473.629 li
400.717 473.629 400.434 473.346 400.434 472.997 cv
400.434 472.647 400.717 472.364 401.067 472.364 cv
cp
1 1 1 rgb
f
418.889 475.119 mo
423.327 475.119 li
418.983 505.377 li
418.894 505.866 418.136 506.253 417.289 506.253 cv
416.383 506.253 li
418.889 475.119 li
cp
1 .392157 .121569 rgb
f
410.118 475.119 mo
411.058 506.253 li
406.967 506.253 li
406.12 506.253 405.362 505.866 405.272 505.377 cv
400.928 475.119 li
410.118 475.119 li
cp
.768627 .235294 0 rgb
f
403.361 496.694 mo
401.504 483.754 li
422.752 483.754 li
420.894 496.694 li
403.361 496.694 li
cp
.203922 .00784314 .0117647 rgb
f
418.105 483.754 mo
422.021 483.754 li
420.141 496.694 li
417.126 496.694 li
418.105 483.754 li
cp
.266667 .0313726 .0431373 rgb
f
410.245 483.754 mo
410.901 496.694 li
404.01 496.694 li
402.288 483.754 li
410.245 483.754 li
cp
.156863 .00392157 .0117647 rgb
f
423.443 440.968 mo
423.965 440.734 424.775 441.725 423.965 442.169 cv
421.445 443.552 412.689 447.964 412.689 447.964 cv
412.689 465.733 li
411.019 465.733 li
411.019 446.815 li
411.019 446.815 419.998 442.482 423.443 440.968 cv
cp
.878431 .878431 .878431 rgb
f
1102.21 473.574 mo
1097.53 506.225 li
1097.43 506.753 1096.61 507.171 1095.7 507.171 cv
1084.56 507.171 li
1083.64 507.171 1082.83 506.753 1082.73 506.225 cv
1078.04 473.574 li
1102.21 473.574 li
cp
.909804 .317647 .0196078 rgb
f
1102.21 472.247 mo
1097.53 465.898 li
1097.43 465.795 1096.61 465.714 1095.7 465.714 cv
1084.56 465.714 li
1083.64 465.714 1082.83 465.795 1082.73 465.898 cv
1078.04 472.247 li
1102.21 472.247 li
cp
1 .392157 .121569 rgb
f
1091.96 471.62 mo
1079.28 471.62 li
1083.12 466.427 li
1083.35 466.388 1083.86 466.34 1084.56 466.34 cv
1091.96 466.34 li
1091.96 471.62 li
cp
.909804 .317647 .0196078 rgb
f
1076.69 472.997 mo
1076.69 473.645 1077.21 474.171 1077.86 474.171 cv
1102.76 474.171 li
1103.41 474.171 1103.94 473.645 1103.94 472.997 cv
1103.94 472.348 1103.41 471.822 1102.76 471.822 cv
1077.86 471.822 li
1077.21 471.822 1076.69 472.348 1076.69 472.997 cv
cp
.878431 .878431 .878431 rgb
f
1079.07 472.364 mo
1092.07 472.364 li
1092.07 473.629 li
1079.07 473.629 li
1078.72 473.629 1078.43 473.346 1078.43 472.997 cv
1078.43 472.647 1078.72 472.364 1079.07 472.364 cv
cp
1 1 1 rgb
f
1096.89 475.119 mo
1101.33 475.119 li
1096.98 505.377 li
1096.89 505.866 1096.14 506.253 1095.29 506.253 cv
1094.38 506.253 li
1096.89 475.119 li
cp
1 .392157 .121569 rgb
f
1088.12 475.119 mo
1089.06 506.253 li
1084.97 506.253 li
1084.12 506.253 1083.36 505.866 1083.27 505.377 cv
1078.93 475.119 li
1088.12 475.119 li
cp
.768627 .235294 0 rgb
f
1081.36 496.694 mo
1079.5 483.754 li
1100.75 483.754 li
1098.89 496.694 li
1081.36 496.694 li
cp
.203922 .00784314 .0117647 rgb
f
1096.1 483.754 mo
1100.02 483.754 li
1098.14 496.694 li
1095.13 496.694 li
1096.1 483.754 li
cp
.266667 .0313726 .0431373 rgb
f
1088.24 483.754 mo
1088.9 496.694 li
1082.01 496.694 li
1080.29 483.754 li
1088.24 483.754 li
cp
.156863 .00392157 .0117647 rgb
f
1101.44 440.968 mo
1101.97 440.734 1102.77 441.725 1101.97 442.169 cv
1099.44 443.552 1090.69 447.964 1090.69 447.964 cv
1090.69 465.733 li
1089.02 465.733 li
1089.02 446.815 li
1089.02 446.815 1098 442.482 1101.44 440.968 cv
cp
.878431 .878431 .878431 rgb
f
588.925 516.091 mo
579.828 516.091 li
579.828 588.47 li
588.925 588.47 li
588.925 516.091 li
cp
.0784314 .172549 .176471 rgb
f
629.407 581.77 mo
629.407 584.509 627.187 586.728 624.449 586.728 cv
539.832 586.728 li
537.094 586.728 534.874 584.509 534.874 581.77 cv
534.874 574.829 li
534.874 572.091 537.094 569.871 539.832 569.871 cv
624.449 569.871 li
627.187 569.871 629.407 572.091 629.407 574.829 cv
629.407 581.77 li
cp
f
543.441 597.018 mo
544.353 593.022 550.295 589.838 556.703 589.838 cv
608.979 589.838 li
615.388 589.838 621.329 593.022 622.242 597.018 cv
643.679 688.978 li
649.265 688.978 li
626.94 596.662 li
625.51 590.752 617.386 586.234 608.711 586.234 cv
556.971 586.234 li
548.297 586.234 540.172 590.752 538.743 596.662 cv
516.418 688.978 li
522.614 688.978 li
543.441 597.018 li
cp
f
634 521.596 mo
631.902 535.156 616.674 545.349 599.835 545.349 cv
567.035 545.349 li
550.196 545.349 534.968 535.156 532.869 521.596 cv
524.463 467.28 li
521.327 447.015 537.425 428.934 560.734 428.934 cv
606.136 428.934 li
629.445 428.934 645.543 447.015 642.406 467.28 cv
634 521.596 li
cp
.0392157 .0980392 .0980392 rgb
f
633.214 517.372 mo
631.148 530.179 616.156 539.806 599.579 539.806 cv
567.29 539.806 li
550.713 539.806 535.722 530.179 533.656 517.372 cv
525.381 466.074 li
522.293 446.935 538.14 429.858 561.087 429.858 cv
605.783 429.858 li
628.729 429.858 644.576 446.935 641.489 466.074 cv
633.214 517.372 li
cp
.0784314 .172549 .176471 rgb
f
534.874 577.5 mo
534.874 581.77 li
534.874 584.508 537.094 586.728 539.832 586.728 cv
624.449 586.728 li
627.187 586.728 629.407 584.508 629.407 581.77 cv
629.407 577.5 li
534.874 577.5 li
cp
.0392157 .0980392 .0980392 rgb
f
544.708 597.2 mo
545.142 593.221 550.652 589.979 556.99 589.979 cv
608.692 589.979 li
615.031 589.979 620.541 593.221 620.975 597.2 cv
629.052 668.232 li
633.295 668.232 li
625.567 596.85 li
624.925 590.915 617.386 586.234 608.711 586.234 cv
556.971 586.234 li
548.297 586.234 540.758 590.915 540.115 596.85 cv
532.388 668.232 li
537.094 668.232 li
544.708 597.2 li
cp
.0784314 .172549 .176471 rgb
f
613.154 531.346 mo
614.73 478.049 622.486 441.603 622.486 441.603 cv
548.379 441.603 li
548.379 441.603 556.47 489.403 557.71 531.346 cv
613.154 531.346 li
cp
.0156863 .105882 .14902 rgb
f
608.811 418.101 mo
560.487 418.101 li
551.994 421.598 537.866 427.589 538.568 428.469 cv
542.065 441.149 542.571 463.279 563.004 471.103 cv
606.456 471.103 li
627.119 463.896 627.488 440.974 630.986 428.294 cv
631.131 427.606 617.144 421.608 608.811 418.101 cv
cp
.0235294 .133333 .2 rgb
f
538.529 428.38 mo
532.472 431.249 530.998 441.271 524.821 452.289 cv
521.177 458.788 512.897 483.967 510.795 484.071 cv
482.893 485.449 482.092 507.263 494.528 507.263 cv
497.514 507.263 520.983 507.353 522.545 507.353 cv
535.635 507.353 542.557 462.688 553.004 465.257 cv
544.013 456.699 538.529 428.38 538.529 428.38 cv
cp
.886275 .266667 .203922 rgb
f
539.658 432.872 mo
541.189 452.309 547.304 460.769 548.309 462.617 cv
541.933 467.93 536.133 487.125 532.563 492.081 cv
531.063 494.163 522.66 495.532 515.223 493.628 cv
511.968 494.543 511.855 499.582 509.118 499.433 cv
509.312 507.263 li
510.868 507.263 520.185 507.353 521.397 507.353 cv
535.176 507.353 538.932 474.827 549.219 466.595 cv
549.396 466.453 551.73 464.599 553.263 465.17 cv
552.892 464.853 546.662 460.226 539.658 432.872 cv
cp
.00784314 .0627451 .0862745 rgb
f
630.986 428.294 mo
637.043 431.163 638.517 441.185 644.694 452.203 cv
651.382 464.133 683.009 493.616 660.356 504.803 cv
641.298 514.215 626.958 462.601 616.51 465.17 cv
625.502 456.613 630.986 428.294 630.986 428.294 cv
cp
.0156863 .105882 .14902 rgb
f
616.51 465.17 mo
616.881 464.853 623.111 460.226 630.115 432.872 cv
628.584 452.309 622.469 460.769 621.464 462.617 cv
627.84 467.93 635.321 482.102 638.891 487.057 cv
642.649 492.274 665.032 514.898 668.138 490.229 cv
669.174 496.13 667.364 501.343 660.356 504.803 cv
644.154 512.805 630.841 474.827 620.554 466.595 cv
620.377 466.453 618.043 464.599 616.51 465.17 cv
cp
.00392157 .0509804 .0666667 rgb
f
593.632 483.535 mo
591.081 482.579 588.044 479.141 590.754 476.431 cv
592.832 474.353 597.767 480.735 601.115 482.807 cv
601.115 482.807 597.538 485 593.632 483.535 cv
cp
.976471 .72549 .635294 rgb
f
595.543 501.827 mo
593.327 501.797 591.866 499.512 591.753 498.915 cv
589.783 498.666 588.057 495.885 588.152 494.87 cv
586.901 494.325 585.707 493.19 585.953 490.963 cv
586.159 489.093 586.026 486.495 587.863 485.28 cv
589.7 484.066 595.419 480.428 596.953 480.024 cv
598.487 479.62 602.845 482.642 608.984 484.539 cv
614.572 486.266 615.988 492.853 619.319 493.972 cv
630.576 494.256 639.986 482.085 649.314 481.089 cv
660.944 479.848 667.078 487.986 666.148 495.805 cv
665.169 504.036 654.536 506.872 647.178 505.801 cv
619.412 501.759 628.354 503.957 619.353 502.489 cv
615.706 501.894 614.959 502.259 614.959 502.259 cv
614.959 502.259 611.05 504.556 607.582 501.975 cv
604.115 499.393 601.66 498.066 601.451 498.059 cv
600.239 498.292 599.235 498.029 599.235 498.029 cv
599.235 498.029 599.652 499.047 599.179 500.126 cv
599.975 500.883 601.396 502.163 601.396 502.163 cv
601.396 502.163 600.166 504.767 598.859 504.312 cv
597.552 503.857 596.624 504.144 595.543 501.827 cv
cp
1 .780392 .690196 rgb
f
588.152 494.87 mo
588.851 491.928 589.229 490.07 589.74 487.853 cv
590.042 486.54 594.701 484.236 596.538 483.021 cv
594.72 484.875 591.22 486.267 590.26 488.477 cv
589.378 490.506 588.973 492.923 588.152 494.87 cv
cp
1 .823529 .760784 rgb
f
591.758 498.836 mo
590.01 498.81 590.465 494.53 591.355 492.262 cv
591.854 490.99 597.79 487.58 599.627 486.365 cv
597.809 488.219 592.662 490.668 591.957 492.951 cv
591.186 495.447 591.554 497.973 591.758 498.836 cv
cp
f
595.543 501.827 mo
595.543 501.827 594.442 497.114 594.83 495.918 cv
595.217 494.722 600.254 490.902 600.444 490.772 cv
598.152 491.948 594.327 495.034 594.148 495.735 cv
593.968 496.436 594.32 499.983 595.543 501.827 cv
cp
f
597.617 501.327 mo
598.127 500.525 598.98 499.184 597.899 497.744 cv
600.588 497.223 603.158 496.139 605.013 497.939 cv
612.328 505.033 615.255 497.642 614.227 494.175 cv
611.819 486.051 599.242 481.313 597.688 480.031 cv
599.644 480.384 603.638 482.887 608.984 484.539 cv
614.25 486.166 615.812 492.109 618.763 493.724 cv
623.564 497.717 611.17 500.431 639.049 499.914 cv
671.239 499.316 663.981 487.087 661.114 483.897 cv
665.574 487.189 666.474 493.643 666.148 495.805 cv
665.033 503.187 654.536 506.872 647.178 505.801 cv
619.412 501.759 628.354 503.957 619.353 502.489 cv
615.706 501.894 614.959 502.259 614.959 502.259 cv
614.959 502.259 611.05 504.556 607.582 501.975 cv
604.115 499.393 601.66 498.066 601.451 498.059 cv
600.239 498.292 599.235 498.029 599.235 498.029 cv
599.235 498.029 599.652 499.047 599.179 500.126 cv
599.975 500.883 601.396 502.163 601.396 502.163 cv
601.396 502.163 601.256 502.458 601.022 502.83 cv
601.02 502.833 li
600.203 501.655 599.35 500.736 597.617 501.327 cv
cp
.976471 .72549 .635294 rgb
f
515.11 494.32 mo
516.268 488.518 511.936 483.814 505.436 483.814 cv
498.936 483.814 492.729 488.518 491.571 494.32 cv
490.414 500.123 494.745 504.827 501.245 504.827 cv
507.745 504.827 513.953 500.123 515.11 494.32 cv
cp
f
486.731 490.757 mo
483.153 492.403 479.771 494.597 479.388 495.916 cv
479.006 497.234 477.416 503.212 477.749 504.031 cv
478.081 504.849 480.305 505.967 481.508 504.713 cv
482.294 503.894 482.297 501.631 482.411 501.516 cv
483.622 500.302 483.606 498.827 483.59 498.091 cv
485.549 498.318 494.106 494.345 494.106 494.345 cv
494.106 494.345 488.843 489.785 486.731 490.757 cv
cp
.858824 .631373 .552941 rgb
f
487.463 490.186 mo
485.107 492.124 482.808 492.944 482.003 494.701 cv
481.199 496.458 477.693 504.423 477.751 505.513 cv
477.808 506.604 479.614 508.093 481.199 506.422 cv
482.233 505.332 482.976 502.316 483.125 502.164 cv
484.704 500.546 485.171 498.58 485.395 497.6 cv
487.234 497.903 496.888 492.609 496.888 492.609 cv
496.888 492.609 489.732 488.319 487.463 490.186 cv
cp
1 .780392 .690196 rgb
f
493.026 490.697 mo
492.922 490.104 489.015 487.403 484.704 494.357 cv
484.591 496.049 483.785 497.575 481.53 500.082 cv
481.53 500.119 li
481.055 502.509 480.173 504.9 478.826 506.962 cv
479.493 507.302 480.375 507.291 481.199 506.422 cv
482.233 505.332 482.976 502.316 483.125 502.164 cv
484.704 500.545 485.909 498.52 486.134 497.54 cv
487.973 497.843 496.888 492.609 496.888 492.609 cv
496.888 492.609 495.099 491.536 493.026 490.697 cv
cp
.976471 .72549 .635294 rgb
f
509.725 507.263 mo
509.918 506.625 510.019 505.965 510.019 505.289 cv
510.019 499.844 503.46 495.429 495.37 495.429 cv
487.279 495.429 480.72 499.844 480.72 505.289 cv
480.72 505.965 480.822 506.625 481.014 507.263 cv
509.725 507.263 li
cp
1 1 1 rgb
f
512.634 495.966 mo
513.094 490.506 513.116 491.739 512.993 489.601 cv
512.567 482.251 499.644 482.953 494.127 486.018 cv
488.61 489.083 487.375 490.485 487.003 492.824 cv
486.634 495.145 485.707 500.017 485.579 501.999 cv
485.458 503.877 489.318 504.966 491.27 502.879 cv
493.129 500.891 492.597 496.209 493.2 495.638 cv
494.553 495.33 496.96 495.407 497.428 495.601 cv
496.93 498.094 496.351 500.103 496.351 502.172 cv
496.428 504.318 501.409 505.62 503.248 502.431 cv
504.048 501.043 503.934 499.536 504.112 497.635 cv
506.815 498.869 508.708 500.745 509.377 502.632 cv
510.45 506.54 516.427 506.923 516.58 502.785 cv
516.636 501.277 512.375 499.044 512.634 495.966 cv
cp
1 .780392 .690196 rgb
f
497.577 495.449 mo
497.405 495.104 497.696 491.396 498.787 489.456 cv
497.101 490.356 495.484 491.384 493.645 491.978 cv
492.009 492.506 492.155 492.664 492.157 494.459 cv
492.159 495.763 492.131 497.028 491.943 498.32 cv
491.423 501.911 488.589 503.451 485.625 502.409 cv
486.038 504.022 489.465 504.808 491.27 502.879 cv
493.129 500.891 492.597 496.209 493.2 495.638 cv
493.928 495.473 496.705 495.433 497.577 495.449 cv
cp
.976471 .72549 .635294 rgb
f
512.24 503.807 mo
510.587 502.641 509.565 501.009 509.004 499.06 cv
508.16 496.123 506.429 494.959 506.952 491.11 cv
505.85 492.609 503.19 492.803 503.267 493.437 cv
503.448 494.931 503.403 497.791 502.556 499.83 cv
501.324 502.797 498.951 503.785 496.416 502.535 cv
496.997 504.453 501.515 505.436 503.248 502.431 cv
504.048 501.043 503.934 499.536 504.112 497.635 cv
506.815 498.869 508.708 500.745 509.377 502.632 cv
510.295 505.975 514.791 506.728 516.17 504.288 cv
514.869 504.721 513.496 504.692 512.24 503.807 cv
cp
f
612.009 531.522 mo
559.508 531.522 li
559.508 531.522 li
556.745 531.522 li
556.745 531.522 531.087 534.567 530.579 558.421 cv
530.484 562.9 531.177 566.43 532.393 569.211 cv
631.07 569.211 li
632.286 566.43 638.203 561.371 638.107 556.892 cv
637.6 533.038 612.009 531.522 612.009 531.522 cv
cp
.6 .392157 .8 rgb
f
530.914 563.872 mo
531.219 565.901 531.722 567.676 532.393 569.211 cv
631.07 569.211 li
631.743 567.672 633.875 565.903 635.63 563.872 cv
584.32 557.53 li
530.914 563.872 li
cp
.333333 .223529 .486275 rgb
f
575.311 634.209 mo
575.311 634.209 580.081 628.928 581.057 627.141 cv
598.32 564.557 li
602.166 550.092 611.688 535.247 623.619 537.558 cv
637.24 540.922 640.601 552.14 635.954 566.665 cv
601.657 630.042 li
601.781 630.21 601.848 630.303 601.848 630.303 cv
598.888 635.941 601.734 640.235 600.237 642.381 cv
592.75 647.958 li
588.29 659.784 li
588.29 659.784 580.674 661.105 572.635 653.565 cv
573.422 648.887 576.834 640.686 576.834 640.686 cv
575.311 634.209 li
cp
.6 .392157 .8 rgb
f
601.657 630.042 mo
601.657 630.042 581.745 641.197 597.646 567 cv
581.057 627.141 li
580.081 628.928 575.311 634.209 575.311 634.209 cv
576.834 640.686 li
576.834 640.686 573.422 648.887 572.635 653.565 cv
580.674 661.105 588.29 659.784 588.29 659.784 cv
592.75 647.958 li
600.237 642.381 li
601.734 640.235 598.888 635.941 601.848 630.303 cv
601.848 630.303 601.781 630.21 601.657 630.042 cv
cp
.521569 .345098 .729412 rgb
f
567.481 700.476 mo
565.201 700.476 568.565 696.812 565.227 695.446 cv
559.028 692.909 554.509 694.156 553.684 691.33 cv
552.602 687.624 556.791 680.014 561.033 674 cv
561.855 672.833 li
567.512 664.783 570.177 659.649 572.037 653.213 cv
572.359 652.102 li
573.183 652.913 li
578.911 658.556 584.767 659.166 587.018 659.166 cv
587.754 659.166 588.182 659.102 588.187 659.102 cv
589.014 658.979 li
588.978 659.814 li
588.762 664.662 587.631 671.058 585.521 679.368 cv
585.341 680.076 585.168 680.771 584.998 681.451 cv
582.762 690.404 580.795 701.341 573.377 701.341 cv
567.481 700.476 li
cp
.8 .8 .8 rgb
f
584.854 679.198 mo
586.961 670.899 588.076 664.603 588.29 659.783 cv
588.29 659.783 580.406 660.996 572.699 653.404 cv
570.745 660.167 567.883 665.454 562.419 673.229 cv
554.694 684.22 550.762 688.783 565.488 694.808 cv
580.324 700.879 581.547 692.219 584.854 679.198 cv
cp
.0156863 .105882 .14902 rgb
f
576.201 687.013 mo
571.526 684.736 566.647 682.779 561.596 681.499 cv
560.346 681.182 558.955 680.829 557.524 680.576 cv
553.678 687.242 548.528 692.919 563.652 699.107 cv
579.291 705.506 579.241 696.962 581.817 690.042 cv
579.979 688.976 578.119 687.948 576.201 687.013 cv
cp
.8 .8 .8 rgb
f
557.524 680.576 mo
553.678 687.242 554.413 690.277 565.488 694.808 cv
575.75 699.007 579.241 696.962 581.817 690.042 cv
575.708 678.525 558.657 679.472 557.524 680.576 cv
cp
.878431 .878431 .878431 rgb
f
586.042 662.085 mo
580.623 662.376 573.753 657.471 573.753 657.471 cv
573.753 657.471 573.072 658.68 572.69 659.5 cv
579.914 666.037 585.972 664.753 585.972 664.753 cv
585.972 664.753 585.972 664.753 586.042 662.085 cv
cp
.8 .8 .8 rgb
f
585.435 667.279 mo
580.016 667.57 572.014 661.768 572.014 661.768 cv
572.014 661.768 570.989 663.472 570.607 664.291 cv
577.831 670.829 585.365 669.947 585.365 669.947 cv
585.365 669.947 585.365 669.947 585.435 667.279 cv
cp
f
584.053 673.442 mo
578.634 673.733 569.074 668.245 569.074 668.245 cv
569.074 668.245 568.049 669.949 567.667 670.768 cv
574.891 677.306 583.983 676.11 583.983 676.11 cv
583.983 676.11 583.983 676.11 584.053 673.442 cv
cp
f
592.602 636.202 mo
592.602 636.202 587.767 630.98 586.77 629.205 cv
568.742 566.838 li
564.719 552.42 555.016 537.694 543.114 540.15 cv
529.536 543.681 526.313 554.938 531.137 569.406 cv
566.207 632.358 li
566.085 632.528 566.019 632.621 566.019 632.621 cv
569.048 638.223 566.254 642.552 567.777 644.679 cv
575.333 650.164 li
579.937 661.934 li
579.937 661.934 587.568 663.162 595.515 655.525 cv
594.67 650.857 591.159 642.698 591.159 642.698 cv
592.602 636.202 li
cp
.6 .392157 .8 rgb
f
607.367 675.817 mo
606.53 674.659 li
600.774 666.678 595.448 655.364 595.448 655.364 cv
590.914 659.609 586.598 662.524 579.937 661.934 cv
579.837 666.469 580.771 673.342 582.945 681.483 cv
583.134 682.189 583.316 682.882 583.494 683.561 cv
585.826 692.435 588.732 702.92 596.034 702.92 cv
598.341 702.92 600.046 698.747 603.434 697.312 cv
609.602 694.699 614.818 694.793 615.608 691.957 cv
616.644 688.239 611.682 681.778 607.367 675.817 cv
cp
.8 .8 .8 rgb
f
583.611 681.305 mo
581.402 673.032 580.21 666.751 579.937 661.934 cv
579.937 661.934 587.835 663.049 595.448 655.364 cv
597.486 662.103 600.412 667.354 605.971 675.062 cv
613.83 685.957 617.817 690.472 603.166 696.677 cv
588.405 702.929 587.076 694.285 583.611 681.305 cv
cp
.0235294 .133333 .2 rgb
f
592.358 689.014 mo
597.005 686.679 601.86 684.662 606.894 683.321 cv
608.141 682.989 609.528 682.619 610.955 682.348 cv
614.882 688.967 621.068 694.113 606.021 700.485 cv
590.462 707.075 589.441 698.998 586.78 692.111 cv
588.604 691.022 590.452 689.972 592.358 689.014 cv
cp
.8 .8 .8 rgb
f
592.358 689.014 mo
597.005 686.679 601.86 684.662 606.894 683.321 cv
608.141 682.989 609.528 682.619 610.955 682.348 cv
614.882 688.967 614.185 692.01 603.166 696.677 cv
592.956 701.001 589.441 698.998 586.78 692.111 cv
588.604 691.022 590.452 689.972 592.358 689.014 cv
cp
.878431 .878431 .878431 rgb
f
582.213 664.208 mo
587.635 664.433 594.445 659.444 594.445 659.444 cv
594.445 659.444 595.141 660.644 595.533 661.459 cv
588.389 668.085 582.316 666.874 582.316 666.874 cv
582.316 666.874 582.316 666.874 582.213 664.208 cv
cp
f
582.883 669.394 mo
588.305 669.619 596.236 663.719 596.236 663.719 cv
596.236 663.719 597.282 665.41 597.674 666.225 cv
590.53 672.851 582.986 672.061 582.986 672.061 cv
582.986 672.061 582.986 672.061 582.883 669.394 cv
cp
f
584.341 675.539 mo
589.763 675.764 599.255 670.16 599.255 670.16 cv
599.255 670.16 600.301 671.851 600.693 672.666 cv
593.549 679.291 584.443 678.206 584.443 678.206 cv
584.443 678.206 584.443 678.206 584.341 675.539 cv
cp
f
572.376 399.628 mo
569.274 413.511 li
560.487 418.101 li
584.292 437.166 li
608.811 418.101 li
599.319 413.556 li
596.208 399.628 li
572.376 399.628 li
cp
1 .780392 .690196 rgb
f
572.376 399.628 mo
569.274 413.511 li
560.487 418.101 li
584.292 437.166 li
584.402 420.18 li
598.11 408.144 li
596.208 399.628 li
572.376 399.628 li
cp
.858824 .631373 .552941 rgb
f
613.128 367.436 mo
612.342 367.291 611.534 367.503 610.755 368.002 cv
610.298 351.036 606.773 333.813 583.656 333.813 cv
561.633 333.813 556.926 351.135 556.552 368.189 cv
555.691 367.557 554.786 367.274 553.908 367.436 cv
551.11 367.953 549.658 372.789 550.664 378.237 cv
551.67 383.685 554.753 387.683 557.551 387.167 cv
558.391 387.012 559.109 386.465 559.676 385.631 cv
559.676 398.58 573.255 413.819 583.656 413.819 cv
593.987 413.819 607.544 399.042 607.544 385.885 cv
608.08 386.575 608.734 387.028 609.485 387.167 cv
612.283 387.683 615.367 383.685 616.373 378.237 cv
617.379 372.789 615.926 367.953 613.128 367.436 cv
cp
1 .780392 .690196 rgb
f
607.54 385.89 mo
608.076 386.581 608.729 387.033 609.481 387.172 cv
612.173 387.669 615.129 383.986 616.245 378.853 cv
614.047 383.277 610.601 386.599 608.362 382.668 cv
608.197 382.379 608.833 369.782 608.509 369.739 cv
608.622 369.338 610.647 368.381 610.75 367.975 cv
610.466 357.526 609.012 346.986 602.533 340.433 cv
604.367 347.238 605.419 355.145 605.419 363.583 cv
605.419 389.069 595.832 409.731 584.006 409.731 cv
572.18 409.731 562.593 389.069 562.593 363.583 cv
562.593 355.024 563.676 347.011 565.56 340.14 cv
559.301 346.151 556.721 355.906 556.452 368.194 cv
556.87 368.486 559.159 370.108 559.159 370.108 cv
558.835 370.151 559.66 381.862 559.528 382.169 cv
558.421 384.753 555.26 386.66 551.981 382.496 cv
553.41 385.61 555.551 387.541 557.547 387.172 cv
558.387 387.017 559.105 386.47 559.672 385.637 cv
559.672 398.585 573.251 413.824 583.652 413.824 cv
593.983 413.824 607.54 399.047 607.54 385.89 cv
cp
.858824 .631373 .552941 rgb
f
599.237 365.656 mo
599.223 366.348 596.85 365.523 593.891 365.579 cv
590.932 365.636 588.547 366.551 588.522 365.86 cv
588.476 364.595 590.604 362.477 593.563 362.421 cv
596.522 362.365 599.265 364.308 599.237 365.656 cv
cp
f
568.345 365.944 mo
568.466 366.626 570.837 365.569 573.795 365.57 cv
576.753 365.571 579.024 366.64 579.056 365.948 cv
579.164 363.61 576.759 362.094 573.801 362.092 cv
570.843 362.091 567.965 363.815 568.345 365.944 cv
cp
f
599.233 365.103 mo
599.259 366.462 596.746 364.412 593.787 364.468 cv
590.829 364.524 588.544 366.665 588.518 365.306 cv
588.492 363.947 590.849 361.693 593.808 361.636 cv
596.767 361.58 599.207 363.744 599.233 365.103 cv
cp
.196078 0 .00392157 rgb
f
568.335 365.103 mo
568.309 366.462 570.821 364.412 573.78 364.468 cv
576.739 364.524 579.024 366.665 579.05 365.306 cv
579.076 363.947 576.719 361.693 573.76 361.636 cv
570.801 361.58 568.361 363.744 568.335 365.103 cv
cp
f
577.919 374.446 mo
577.919 375.805 576.817 376.907 575.458 376.907 cv
574.098 376.907 572.996 375.805 572.996 374.446 cv
572.996 373.087 574.098 371.985 575.458 371.985 cv
576.817 371.985 577.919 373.087 577.919 374.446 cv
cp
.184314 .0117647 0 rgb
f
577.423 373.72 mo
577.423 374.405 576.868 374.96 576.183 374.96 cv
575.499 374.96 574.944 374.405 574.944 373.72 cv
574.944 373.036 575.499 372.48 576.183 372.48 cv
576.868 372.48 577.423 373.036 577.423 373.72 cv
cp
1 1 1 rgb
f
597.357 374.828 mo
597.357 376.188 596.255 377.29 594.896 377.29 cv
593.537 377.29 592.435 376.188 592.435 374.828 cv
592.435 373.469 593.537 372.367 594.896 372.367 cv
596.255 372.367 597.357 373.469 597.357 374.828 cv
cp
.184314 .0117647 0 rgb
f
597.021 374.102 mo
597.021 374.787 596.466 375.342 595.781 375.342 cv
595.096 375.342 594.541 374.787 594.541 374.102 cv
594.541 373.418 595.096 372.863 595.781 372.863 cv
596.466 372.863 597.021 373.418 597.021 374.102 cv
cp
1 1 1 rgb
f
578.62 390.449 mo
579.05 391.466 581.388 392.244 584.21 392.244 cv
587.031 392.244 589.37 391.466 589.8 390.449 cv
578.62 390.449 li
cp
.858824 .631373 .552941 rgb
f
583.4 408.669 mo
577.46 408.617 569.84 403.888 568.949 392.314 cv
562.789 387.834 560.339 378.298 559.265 369.98 cv
558.923 369.98 li
558.748 373.555 559.405 385.994 559.405 385.994 cv
560.637 403.125 573.959 414.178 583.795 414.178 cv
593.536 414.178 608.444 402.264 608.444 385.527 cv
608.838 382.225 608.987 372.486 609.009 369.312 cv
608.884 369.31 608.756 369.316 608.631 369.313 cv
607.925 378.995 603.675 390.522 598.41 392.986 cv
596.073 403.151 592.362 408.746 583.4 408.669 cv
cp
.203922 .00784314 .0117647 rgb
f
613.343 384.326 mo
612.997 385.711 611.919 386.633 610.935 386.387 cv
609.95 386.142 609.432 384.82 609.778 383.436 cv
610.124 382.051 611.202 381.129 612.187 381.374 cv
613.171 381.62 613.689 382.942 613.343 384.326 cv
cp
.215686 .207843 .211765 rgb
f
554.548 384.326 mo
554.894 385.711 555.972 386.633 556.957 386.387 cv
557.941 386.142 558.459 384.82 558.113 383.436 cv
557.767 382.051 556.689 381.129 555.705 381.374 cv
554.72 381.62 554.203 382.942 554.548 384.326 cv
cp
f
575.506 395.65 mo
578.893 395.995 581.707 394.272 583.946 395.191 cv
586.759 394.445 589.239 396.503 592.615 395.823 cv
588.883 397.258 577.803 396.741 575.506 395.65 cv
cp
.858824 .631373 .552941 rgb
f
577.114 397.453 mo
579.029 399.275 584.061 401.162 590.663 398.923 cv
587.85 398.808 580.845 399.003 577.114 397.453 cv
cp
f
560.548 345.939 mo
559.652 341.683 555.844 334.514 563.83 328.61 cv
566.966 326.145 576.903 316.591 577.127 315.471 cv
580.487 317.711 582.695 319.425 582.919 320.098 cv
582.919 319.314 582.311 317.606 581.415 316.486 cv
586.846 317.343 588.879 319.074 591.017 321.744 cv
590.345 319.728 590.121 319.056 590.121 319.056 cv
590.121 319.056 595.497 323.088 603.787 328.017 cv
612.076 332.946 606.251 342.579 606.027 345.267 cv
601.77 343.251 593.033 343.251 584.072 345.267 cv
577.127 343.475 569.734 342.579 560.548 345.939 cv
cp
.203922 .00784314 .0117647 rgb
f
583.773 341.608 mo
579.292 335.634 562.714 334.887 567.941 328.913 cv
573.169 322.939 576.903 319.205 577.201 317.263 cv
578.994 322.341 575.409 327.569 575.409 329.809 cv
575.409 332.049 582.727 335.186 583.773 341.608 cv
cp
.278431 .0156863 .0313726 rgb
f
585.715 340.413 mo
586.013 336.53 584.968 334.14 582.13 331.452 cv
579.292 328.764 581.234 324.731 581.831 322.789 cv
582.578 326.971 584.221 328.614 587.806 330.705 cv
591.39 332.796 587.955 337.128 585.715 340.413 cv
cp
f
558.054 531.522 mo
584.664 543.407 li
613.215 531.648 li
612.454 531.55 612.009 531.522 612.009 531.522 cv
559.508 531.522 li
559.508 531.522 li
558.054 531.522 li
cp
.521569 .345098 .729412 rgb
f
601.557 505.873 mo
601.557 506.695 600.89 507.363 600.067 507.363 cv
513.27 507.363 li
512.447 507.363 511.78 506.695 511.78 505.873 cv
511.78 505.05 512.447 504.382 513.27 504.382 cv
600.067 504.382 li
600.89 504.382 601.557 505.05 601.557 505.873 cv
cp
.8 .8 .8 rgb
f
519.071 505.892 mo
519.071 506.598 518.499 507.17 517.793 507.17 cv
503.668 507.17 li
502.962 507.17 502.39 506.598 502.39 505.892 cv
502.39 505.187 502.962 504.614 503.668 504.614 cv
517.793 504.614 li
518.499 504.614 519.071 505.187 519.071 505.892 cv
cp
1 1 1 rgb
f
324.374 516.091 mo
315.277 516.091 li
315.277 588.47 li
324.374 588.47 li
324.374 516.091 li
cp
.0784314 .172549 .176471 rgb
f
364.856 581.77 mo
364.856 584.509 362.636 586.728 359.898 586.728 cv
275.281 586.728 li
272.543 586.728 270.323 584.509 270.323 581.77 cv
270.323 574.829 li
270.323 572.091 272.543 569.871 275.281 569.871 cv
359.898 569.871 li
362.636 569.871 364.856 572.091 364.856 574.829 cv
364.856 581.77 li
cp
f
278.889 597.018 mo
279.802 593.022 285.743 589.838 292.152 589.838 cv
344.428 589.838 li
350.837 589.838 356.778 593.022 357.691 597.018 cv
379.128 688.978 li
384.713 688.978 li
362.389 596.662 li
360.959 590.752 352.835 586.234 344.16 586.234 cv
292.42 586.234 li
283.745 586.234 275.621 590.752 274.191 596.662 cv
251.867 688.978 li
258.063 688.978 li
278.889 597.018 li
cp
f
369.449 521.596 mo
367.35 535.156 352.122 545.349 335.283 545.349 cv
302.484 545.349 li
285.645 545.349 270.417 535.156 268.318 521.596 cv
259.912 467.28 li
256.776 447.015 272.873 428.934 296.182 428.934 cv
341.585 428.934 li
364.894 428.934 380.991 447.015 377.855 467.28 cv
369.449 521.596 li
cp
.0392157 .0980392 .0980392 rgb
f
368.663 517.372 mo
366.597 530.179 351.605 539.806 335.028 539.806 cv
302.739 539.806 li
286.162 539.806 271.17 530.179 269.105 517.372 cv
260.829 466.074 li
257.742 446.935 273.589 429.858 296.536 429.858 cv
341.232 429.858 li
364.178 429.858 380.025 446.935 376.938 466.074 cv
368.663 517.372 li
cp
.0784314 .172549 .176471 rgb
f
270.323 577.5 mo
270.323 581.77 li
270.323 584.508 272.543 586.728 275.281 586.728 cv
359.898 586.728 li
362.636 586.728 364.856 584.508 364.856 581.77 cv
364.856 577.5 li
270.323 577.5 li
cp
.0392157 .0980392 .0980392 rgb
f
280.156 597.2 mo
280.591 593.221 286.101 589.979 292.439 589.979 cv
344.141 589.979 li
350.479 589.979 355.989 593.221 356.424 597.2 cv
364.501 668.232 li
368.744 668.232 li
361.016 596.85 li
360.374 590.915 352.835 586.234 344.16 586.234 cv
292.42 586.234 li
283.745 586.234 276.206 590.915 275.564 596.85 cv
267.836 668.232 li
272.543 668.232 li
280.156 597.2 li
cp
.0784314 .172549 .176471 rgb
f
199.671 476.606 mo
201.691 475.408 203.1 474.418 204.811 472.716 cv
206.947 470.591 208.181 471.254 209.375 471.617 cv
211.319 472.208 213.784 472.635 215.291 473.223 cv
218.184 474.351 220.087 475.242 220.53 475.42 cv
221.265 475.714 221.161 479.924 217.657 479.223 cv
214.277 478.547 213.516 477.617 213.516 477.617 cv
212.932 477.492 208.915 477.427 208.361 477.11 cv
207.333 478.725 204.829 480.01 204.389 480.744 cv
206.151 479.863 209.454 478.044 211.657 478.631 cv
212.973 478.982 215.465 480.455 218.317 480.877 cv
220.277 481.167 221.021 481.908 222.897 482.214 cv
224.55 482.483 224.139 486.825 220.615 486.237 cv
219.05 485.977 218.031 485.7 216.598 484.988 cv
213.471 484.566 210.775 483.871 210.305 484.294 cv
209.572 484.953 204.622 488.174 204.475 488.027 cv
207.559 487.734 210.776 486.722 211.657 486.575 cv
212.21 486.483 217.093 487.912 217.47 488.006 cv
218.834 488.347 221.317 488.693 222.136 488.857 cv
223.751 489.151 223.842 495.004 216.558 491.815 cv
213.432 491.731 212.028 491.358 211.741 491.477 cv
208.642 492.761 205.797 493.901 206.237 493.901 cv
206.678 493.901 211.67 492.286 212.698 492.433 cv
213.726 492.58 217.341 493.744 218.131 493.754 cv
220.806 493.788 221.88 494.538 221.717 495.335 cv
221.122 498.238 217.488 497.815 216.22 497.139 cv
214.948 497.384 212.974 497.015 211.826 496.717 cv
209.982 497.448 207.642 499.731 206.256 500.779 cv
206.256 500.779 202.397 500.902 201.303 497.739 cv
200.677 495.931 198.03 493.412 198.278 491.452 cv
198.601 488.908 197.324 487.538 197.543 484.885 cv
197.786 481.961 196.277 478.619 199.671 476.606 cv
cp
.717647 .447059 .152941 rgb
f
227.743 473.479 mo
229.076 472.705 230.219 472.451 230.886 473.452 cv
233.132 476.821 230.158 479.853 227.796 480.37 cv
227.436 480.449 227.083 480.481 226.736 480.491 cv
227.743 473.479 li
cp
.65098 .376471 .141176 rgb
f
221.131 494.336 mo
220.066 497.013 218.587 497.139 216.432 496.463 cv
214.361 496.59 211.592 495.784 211.044 495.913 cv
210.136 496.125 205.178 501.158 202.487 499.505 cv
202.774 499.818 203.648 500.342 204.28 500.478 cv
204.954 500.647 205.458 500.768 206.256 500.779 cv
207.192 500.023 li
208.602 498.893 210.171 497.373 211.826 496.717 cv
212.974 497.014 214.948 497.384 216.22 497.139 cv
217.488 497.815 221.122 498.238 221.717 495.335 cv
221.763 495.107 221.526 494.656 221.131 494.336 cv
cp
f
216.558 491.815 mo
213.432 491.731 212.028 491.358 211.741 491.477 cv
209.066 492.585 206.587 493.584 206.239 493.838 cv
206.164 491.477 209.375 491.942 211.784 490.083 cv
214.403 490.97 215.111 490.568 216.911 490.776 cv
220.736 492.739 222.009 490.505 222.604 489.139 cv
223.681 490.332 223.041 494.653 216.558 491.815 cv
cp
f
220.615 486.237 mo
219.05 485.977 218.031 485.7 216.598 484.988 cv
213.471 484.566 210.775 483.871 210.305 484.294 cv
209.643 484.889 205.546 487.57 204.654 487.973 cv
204.389 488.181 204.086 487.498 204.051 487.209 cv
203.863 485.689 205.848 485.36 207.389 484.589 cv
209.164 483.702 209.225 483.128 210.093 481.927 cv
210.989 482.78 212.039 483.094 213.347 483.406 cv
215.291 483.871 216.051 483.829 217.137 483.527 cv
217.657 484.294 218.502 484.927 220.023 485.308 cv
221.843 485.763 222.497 483.828 223.321 482.401 cv
224.629 484.04 223.253 486.677 220.615 486.237 cv
cp
f
208.016 474.625 mo
208.961 475.042 211.192 476.688 213.989 476.035 cv
214.741 477.406 216.178 477.913 217.657 477.871 cv
219.159 477.828 220.17 476.956 220.838 475.939 cv
221.107 477.118 220.505 479.792 217.657 479.223 cv
214.277 478.547 213.516 477.617 213.516 477.617 cv
212.932 477.492 208.915 477.427 208.361 477.11 cv
207.483 478.49 205.215 479.984 204.389 480.744 cv
203.915 479.731 205.271 478.636 205.91 477.871 cv
206.723 476.897 207.34 475.686 208.016 474.625 cv
cp
f
228.066 471.228 mo
223.007 506.466 li
222.903 507.036 222.02 507.487 221.033 507.487 cv
209.013 507.487 li
208.025 507.487 207.143 507.036 207.039 506.466 cv
201.979 471.228 li
228.066 471.228 li
cp
.352941 .729412 .109804 rgb
f
228.066 469.795 mo
223.007 462.943 li
222.903 462.832 222.02 462.744 221.033 462.744 cv
209.013 462.744 li
208.025 462.744 207.143 462.832 207.039 462.943 cv
201.979 469.795 li
228.066 469.795 li
cp
.596078 .866667 .419608 rgb
f
217.005 469.119 mo
203.319 469.119 li
207.458 463.514 li
207.703 463.472 208.256 463.42 209.012 463.42 cv
217.005 463.42 li
217.005 469.119 li
cp
.741176 .956863 .596078 rgb
f
200.515 470.604 mo
200.515 471.304 201.083 471.872 201.783 471.872 cv
228.658 471.872 li
229.358 471.872 229.925 471.304 229.925 470.604 cv
229.925 469.904 229.358 469.336 228.658 469.336 cv
201.783 469.336 li
201.083 469.336 200.515 469.904 200.515 470.604 cv
cp
.878431 .878431 .878431 rgb
f
203.085 469.922 mo
217.118 469.922 li
217.118 471.286 li
203.085 471.286 li
202.708 471.286 202.403 470.981 202.403 470.604 cv
202.403 470.227 202.708 469.922 203.085 469.922 cv
cp
1 1 1 rgb
f
222.319 472.894 mo
227.11 472.894 li
222.422 505.55 li
222.325 506.078 221.507 506.496 220.592 506.496 cv
219.615 506.496 li
222.319 472.894 li
cp
.596078 .866667 .419608 rgb
f
212.854 472.894 mo
213.868 506.496 li
209.453 506.496 li
208.538 506.496 207.72 506.078 207.624 505.55 cv
202.936 472.894 li
212.854 472.894 li
cp
f
205.562 496.179 mo
203.557 482.214 li
226.489 482.214 li
224.484 496.179 li
205.562 496.179 li
cp
.203922 .00784314 .0117647 rgb
f
221.474 482.214 mo
225.7 482.214 li
223.671 496.179 li
220.417 496.179 li
221.474 482.214 li
cp
.156863 .00392157 .0117647 rgb
f
212.991 482.214 mo
213.699 496.179 li
206.262 496.179 li
204.403 482.214 li
212.991 482.214 li
cp
.329412 .0313726 .0470588 rgb
f
227.235 436.038 mo
227.798 435.784 228.672 436.855 227.798 437.333 cv
225.078 438.825 215.629 443.587 215.629 443.587 cv
215.629 462.764 li
213.826 462.764 li
213.826 442.348 li
213.826 442.348 223.517 437.672 227.235 436.038 cv
cp
.878431 .878431 .878431 rgb
f
346.239 533.548 mo
347.774 481.64 355.328 446.143 355.328 446.143 cv
283.151 446.143 li
283.151 446.143 291.032 492.698 292.239 533.548 cv
346.239 533.548 li
cp
.521569 .345098 .729412 rgb
f
298.08 472.821 mo
340.4 472.821 li
360.525 465.801 360.884 443.476 364.291 431.127 cv
364.492 430.173 336.809 418.742 336.809 418.742 cv
319.79 417.61 li
319.79 417.536 li
319.24 417.573 li
318.69 417.536 li
318.69 417.61 li
301.671 418.742 li
301.671 418.742 273.306 430.076 274.28 431.297 cv
277.687 443.647 278.179 465.2 298.08 472.821 cv
cp
.6 .392157 .8 rgb
f
274.494 431.127 mo
268.594 433.921 267.159 443.682 261.143 454.413 cv
254.629 466.032 223.825 494.748 245.888 505.643 cv
264.45 514.81 278.417 464.541 288.592 467.043 cv
279.835 458.708 274.494 431.127 274.494 431.127 cv
cp
.521569 .345098 .729412 rgb
f
288.592 467.043 mo
288.232 466.734 282.163 462.227 275.342 435.586 cv
276.833 454.517 282.789 462.756 283.768 464.556 cv
277.558 469.73 270.271 483.533 266.794 488.36 cv
263.134 493.44 241.334 515.476 238.309 491.449 cv
237.3 497.196 239.063 502.273 245.888 505.643 cv
261.669 513.437 274.635 476.448 284.654 468.431 cv
284.826 468.292 287.1 466.486 288.592 467.043 cv
cp
.333333 .223529 .486275 rgb
f
242.417 483.555 mo
231.533 481.955 217.274 490.801 204.577 487.479 cv
204.08 487.198 203.667 486.814 203.296 486.366 cv
202.831 489.305 202.151 492.251 201.19 495.118 cv
201.48 495.224 201.783 495.338 202.114 495.467 cv
211.903 499.286 202.395 494.8 232.735 506.123 cv
240.774 509.124 253.68 509.355 257.209 501.91 cv
260.561 494.838 255.986 485.55 242.417 483.555 cv
cp
.717647 .447059 .152941 rgb
f
254.99 489.389 mo
257.309 493.156 261.958 506.581 225.234 498.402 cv
193.427 491.318 208.297 492.14 204.018 487.097 cv
203.753 486.884 203.52 486.632 203.297 486.362 cv
202.831 489.302 202.152 492.25 201.19 495.118 cv
201.48 495.224 201.783 495.338 202.114 495.467 cv
211.903 499.286 202.395 494.8 232.735 506.123 cv
240.774 509.124 253.775 508.522 257.209 501.91 cv
258.215 499.974 259.088 493.684 254.99 489.389 cv
cp
.65098 .376471 .141176 rgb
f
364.291 431.127 mo
370.191 433.921 371.626 443.682 377.642 454.413 cv
384.156 466.032 414.96 494.748 392.897 505.643 cv
374.335 514.81 360.368 464.541 350.193 467.043 cv
358.95 458.708 364.291 431.127 364.291 431.127 cv
cp
.521569 .345098 .729412 rgb
f
350.193 467.043 mo
350.553 466.734 356.622 462.227 363.443 435.586 cv
361.952 454.517 355.996 462.756 355.017 464.556 cv
361.227 469.73 368.514 483.533 371.991 488.36 cv
375.65 493.44 397.451 515.476 400.475 491.449 cv
401.484 497.196 399.722 502.273 392.897 505.643 cv
377.116 513.437 364.15 476.448 354.131 468.431 cv
353.959 468.292 351.685 466.486 350.193 467.043 cv
cp
.333333 .223529 .486275 rgb
f
327.91 484.929 mo
325.426 483.998 322.468 480.649 325.107 478.01 cv
327.131 475.986 331.938 482.202 335.198 484.22 cv
335.198 484.22 331.714 486.356 327.91 484.929 cv
cp
.65098 .376471 .141176 rgb
f
329.771 502.744 mo
327.613 502.715 326.19 500.49 326.08 499.909 cv
324.161 499.666 322.48 496.958 322.573 495.968 cv
321.355 495.438 320.192 494.332 320.431 492.164 cv
320.631 490.342 320.502 487.812 322.291 486.629 cv
324.08 485.446 329.65 481.903 331.145 481.51 cv
332.639 481.116 336.884 484.06 342.862 485.907 cv
348.305 487.589 349.684 494.004 352.928 495.094 cv
363.892 495.371 373.057 483.517 382.142 482.547 cv
393.469 481.338 399.444 489.264 398.537 496.88 cv
397.584 504.897 387.228 507.658 380.062 506.615 cv
353.018 502.679 361.728 504.82 352.961 503.389 cv
349.409 502.81 348.682 503.166 348.682 503.166 cv
348.682 503.166 344.875 505.403 341.497 502.889 cv
338.12 500.374 335.729 499.082 335.526 499.075 cv
334.345 499.301 333.367 499.046 333.367 499.046 cv
333.367 499.046 333.774 500.037 333.313 501.088 cv
334.088 501.825 335.472 503.072 335.472 503.072 cv
335.472 503.072 334.274 505.608 333.001 505.165 cv
331.728 504.721 330.824 505.002 329.771 502.744 cv
cp
.717647 .447059 .152941 rgb
f
322.573 495.968 mo
323.254 493.104 323.622 491.294 324.119 489.135 cv
324.414 487.856 328.951 485.611 330.74 484.428 cv
328.97 486.234 325.561 487.59 324.626 489.742 cv
323.767 491.719 323.372 494.072 322.573 495.968 cv
cp
.65098 .376471 .141176 rgb
f
326.084 499.832 mo
324.383 499.806 324.826 495.638 325.693 493.428 cv
326.178 492.19 331.96 488.868 333.749 487.685 cv
331.979 489.491 326.965 491.876 326.279 494.1 cv
325.528 496.531 325.886 498.991 326.084 499.832 cv
cp
f
329.771 502.744 mo
329.771 502.744 328.699 498.154 329.077 496.989 cv
329.454 495.825 334.36 492.104 334.544 491.977 cv
332.313 493.123 328.587 496.129 328.412 496.811 cv
328.238 497.494 328.581 500.949 329.771 502.744 cv
cp
f
331.791 502.258 mo
332.288 501.476 333.119 500.17 332.066 498.768 cv
334.685 498.261 337.188 497.205 338.995 498.957 cv
346.119 505.867 348.97 498.668 347.969 495.292 cv
345.624 487.38 333.374 482.765 331.86 481.517 cv
333.765 481.86 337.655 484.298 342.862 485.907 cv
347.992 487.492 349.512 493.28 352.386 494.853 cv
357.063 498.741 344.991 501.385 372.144 500.881 cv
403.496 500.299 396.427 488.389 393.635 485.282 cv
397.979 488.488 398.856 494.774 398.537 496.88 cv
397.451 504.069 387.228 507.658 380.062 506.615 cv
353.018 502.679 361.728 504.82 352.961 503.389 cv
349.409 502.81 348.682 503.166 348.682 503.166 cv
348.682 503.166 344.875 505.403 341.497 502.889 cv
338.12 500.374 335.729 499.082 335.526 499.075 cv
334.345 499.301 333.367 499.046 333.367 499.046 cv
333.367 499.046 333.774 500.037 333.313 501.088 cv
334.088 501.825 335.472 503.072 335.472 503.072 cv
335.472 503.072 335.335 503.359 335.108 503.722 cv
335.106 503.724 li
334.31 502.577 333.479 501.682 331.791 502.258 cv
cp
f
345.814 532.56 mo
294.68 532.56 li
294.68 532.56 li
291.989 532.56 li
291.989 532.56 266.999 535.526 266.504 558.759 cv
266.411 563.121 267.087 566.559 268.271 569.268 cv
364.378 569.268 li
365.562 566.559 371.391 563.121 371.298 558.759 cv
370.804 535.526 345.814 532.56 345.814 532.56 cv
cp
.8 .678431 .431373 rgb
f
266.83 564.067 mo
267.127 566.043 267.617 567.772 268.271 569.268 cv
364.378 569.268 li
365.033 567.769 367.109 566.046 368.819 564.067 cv
318.783 555.303 li
266.83 564.067 li
cp
.776471 .631373 .376471 rgb
f
340.973 633.304 mo
340.973 633.304 335.438 628.64 334.159 626.976 cv
305.125 566.473 li
298.549 552.469 286.608 538.841 275.974 542.747 cv
263.985 547.936 263.177 559.64 270.511 573.597 cv
315.573 632.63 li
315.493 632.815 315.45 632.916 315.45 632.916 cv
319.373 638.181 317.611 642.868 319.45 644.822 cv
327.578 649.422 li
334.179 660.695 li
334.179 660.695 341.546 661.008 347.473 652.372 cv
345.771 647.783 340.896 640.007 340.896 640.007 cv
340.973 633.304 li
cp
.827451 .709804 .447059 rgb
f
340.896 640.007 mo
340.974 633.304 li
340.974 633.304 335.438 628.64 321.36 600.304 cv
308.627 573.769 li
324.782 616.083 317.148 620.496 313.582 630.021 cv
315.574 632.63 li
315.492 632.815 315.45 632.916 315.45 632.916 cv
319.373 638.18 317.611 642.868 319.45 644.822 cv
327.578 649.422 li
334.179 660.695 li
334.179 660.695 341.546 661.008 347.473 652.372 cv
345.771 647.783 340.896 640.007 340.896 640.007 cv
cp
.776471 .631373 .376471 rgb
f
341.399 679.72 mo
337.718 671.672 335.377 665.503 334.179 660.695 cv
334.179 660.695 341.773 660.862 347.38 652.219 cv
350.6 658.745 354.36 663.669 361.058 670.744 cv
370.528 680.745 375.135 684.801 362.667 692.807 cv
350.105 700.873 347.174 692.346 341.399 679.72 cv
cp
.521569 .345098 .729412 rgb
f
351.076 686.411 mo
354.958 683.503 359.097 680.89 363.536 678.933 cv
364.635 678.449 365.858 677.909 367.137 677.465 cv
372.1 683.643 376.684 686.542 363.879 694.764 cv
350.638 703.267 350.304 696.798 346.472 690.197 cv
347.963 688.883 349.483 687.604 351.076 686.411 cv
cp
.878431 .878431 .878431 rgb
f
351.076 686.411 mo
354.958 683.503 359.097 680.89 363.536 678.933 cv
364.635 678.449 365.858 677.909 367.137 677.465 cv
372.1 683.643 372.043 686.786 362.667 692.807 cv
353.978 698.386 350.304 696.798 346.472 690.197 cv
347.963 688.883 349.483 687.604 351.076 686.411 cv
cp
.6 .392157 .8 rgb
f
336.75 662.706 mo
341.857 662.277 347.24 656.44 347.24 656.44 cv
347.24 656.44 348.125 657.562 348.65 658.334 cv
343.275 665.856 337.367 665.373 337.367 665.373 cv
337.367 665.373 337.367 665.373 336.75 662.706 cv
cp
.0784314 .172549 .176471 rgb
f
338.39 667.837 mo
343.497 667.408 349.75 660.521 349.75 660.521 cv
349.75 660.521 351.057 662.094 351.582 662.865 cv
346.207 670.387 339.007 670.505 339.007 670.505 cv
339.007 670.505 339.007 670.505 338.39 667.837 cv
cp
f
340.953 673.837 mo
346.06 673.408 353.828 666.629 353.828 666.629 cv
353.828 666.629 355.136 668.202 355.661 668.974 cv
350.286 676.496 341.57 676.505 341.57 676.505 cv
341.57 676.505 341.57 676.505 340.953 673.837 cv
cp
f
328.934 405.894 mo
331.764 416.543 li
339.785 420.733 li
318.058 438.133 li
295.781 420.731 li
304.342 416.584 li
307.182 405.894 li
328.934 405.894 li
cp
.65098 .376471 .141176 rgb
f
328.934 405.894 mo
331.764 416.543 li
340.378 420.572 li
318.058 438.133 li
317.957 422.63 li
305.412 412.558 li
307.182 405.894 li
328.934 405.894 li
cp
.607843 .329412 .121569 rgb
f
291.739 376.218 mo
292.456 376.086 293.194 376.279 293.905 376.735 cv
294.322 361.25 297.539 345.531 318.638 345.531 cv
338.739 345.531 343.034 361.34 343.376 376.905 cv
344.162 376.328 344.988 376.07 345.789 376.218 cv
348.343 376.69 348.543 380.961 347.625 385.934 cv
346.707 390.906 345.017 394.698 342.464 394.226 cv
341.697 394.085 341.042 393.585 340.524 392.825 cv
340.524 404.643 328.131 416.883 318.638 416.883 cv
309.209 416.883 296.835 405.065 296.835 393.056 cv
296.346 393.686 295.75 394.1 295.064 394.226 cv
292.51 394.698 291.186 390.906 290.267 385.934 cv
289.349 380.961 289.185 376.69 291.739 376.218 cv
.717647 .447059 .152941 rgb
f
296.839 393.356 mo
296.35 393.986 295.753 394.399 295.068 394.526 cv
292.61 394.98 291.286 390.913 290.267 386.228 cv
292.273 390.266 294.045 394.003 296.089 390.415 cv
296.24 390.151 295.659 378.654 295.955 378.615 cv
295.852 378.249 294.004 377.375 293.91 377.005 cv
294.169 367.468 295.496 357.847 301.409 351.867 cv
299.735 358.078 298.775 365.295 298.775 372.996 cv
298.775 396.258 307.829 411.338 318.623 411.338 cv
329.417 411.338 337.862 396.258 337.862 372.996 cv
337.862 365.184 336.874 357.871 335.154 351.599 cv
340.867 357.086 343.221 365.99 343.467 377.204 cv
343.085 377.471 340.996 378.952 340.996 378.952 cv
341.292 378.991 340.54 389.68 340.659 389.959 cv
341.67 392.318 344.025 392.713 347.017 388.913 cv
346.085 392.965 344.289 394.862 342.468 394.526 cv
341.701 394.384 341.046 393.885 340.528 393.125 cv
340.528 404.943 328.135 416.872 318.642 416.872 cv
309.213 416.872 296.839 405.364 296.839 393.356 cv
.65098 .376471 .141176 rgb
f
301.002 374.953 mo
301.016 375.585 303.942 374.817 307.584 374.851 cv
311.226 374.884 314.157 375.705 314.192 375.074 cv
314.256 373.919 311.649 371.999 308.007 371.966 cv
304.365 371.932 300.976 373.722 301.002 374.953 cv
cp
f
301.011 374.448 mo
300.971 375.689 304.076 373.802 307.718 373.836 cv
311.361 373.869 314.16 375.81 314.2 374.569 cv
314.24 373.328 311.353 371.284 307.711 371.251 cv
304.068 371.218 301.051 373.208 301.011 374.448 cv
cp
.196078 0 .00392157 rgb
f
336.008 374.953 mo
335.995 375.585 333.069 374.817 329.426 374.851 cv
325.784 374.884 322.854 375.705 322.819 375.074 cv
322.754 373.919 325.361 371.999 329.003 371.966 cv
332.645 371.932 336.034 373.722 336.008 374.953 cv
cp
.65098 .376471 .141176 rgb
f
335.999 374.448 mo
336.039 375.689 332.934 373.802 329.292 373.836 cv
325.65 373.869 322.85 375.81 322.81 374.569 cv
322.77 373.328 325.658 371.284 329.3 371.251 cv
332.942 371.218 335.96 373.208 335.999 374.448 cv
cp
.196078 0 .00392157 rgb
f
326.493 384.386 mo
326.493 385.626 327.499 386.632 328.74 386.632 cv
329.98 386.632 330.986 385.626 330.986 384.386 cv
330.986 383.145 329.98 382.139 328.74 382.139 cv
327.499 382.139 326.493 383.145 326.493 384.386 cv
.184314 .0117647 0 rgb
f
326.946 383.723 mo
326.946 384.348 327.452 384.855 328.077 384.855 cv
328.702 384.855 329.209 384.348 329.209 383.723 cv
329.209 383.098 328.702 382.592 328.077 382.592 cv
327.452 382.592 326.946 383.098 326.946 383.723 cv
1 1 1 rgb
f
308.752 384.735 mo
308.752 385.975 309.757 386.981 310.998 386.981 cv
312.239 386.981 313.245 385.975 313.245 384.735 cv
313.245 383.494 312.239 382.488 310.998 382.488 cv
309.757 382.488 308.752 383.494 308.752 384.735 cv
.184314 .0117647 0 rgb
f
309.059 384.072 mo
309.059 384.697 309.565 385.204 310.19 385.204 cv
310.815 385.204 311.322 384.697 311.322 384.072 cv
311.322 383.447 310.815 382.941 310.19 382.941 cv
309.565 382.941 309.059 383.447 309.059 384.072 cv
1 1 1 rgb
f
322.743 397.373 mo
322.421 398.664 320.667 399.65 318.552 399.65 cv
316.436 399.65 314.683 398.664 314.361 397.373 cv
322.743 397.373 li
cp
.65098 .376471 .141176 rgb
f
323.683 405.335 mo
323.288 406.022 321.142 406.547 318.552 406.547 cv
315.962 406.547 313.815 406.022 313.421 405.335 cv
323.683 405.335 li
cp
f
293.283 376.407 mo
293.283 376.407 292.034 359.442 297.514 350.831 cv
296.06 345.015 299.465 334.419 310.1 334.277 cv
307.973 335.27 306.555 337.538 306.555 337.538 cv
306.555 337.538 315.519 329.806 326.926 334.391 cv
322.565 334.95 321.16 336.546 321.16 336.546 cv
321.16 336.546 332.071 332.155 339.594 339.807 cv
337.751 339.524 335.761 340.43 335.761 340.43 cv
335.761 340.43 343.925 343.114 343.254 353.962 cv
341.464 351.054 338.892 350.048 338.892 350.048 cv
338.892 350.048 345.691 359.517 343.848 376.959 cv
341.466 378.777 li
341.466 378.777 337.751 358.667 334.206 356.965 cv
325.414 360.652 311.518 362.07 301.875 355.547 cv
298.897 358.667 296.061 378.802 296.061 378.802 cv
293.283 376.407 li
cp
.184314 .0117647 0 rgb
f
299.304 351.725 mo
299.304 351.725 304.672 357.093 313.283 357.764 cv
321.894 358.435 327.374 357.541 329.834 356.534 cv
332.294 355.528 337.662 353.515 339.787 358.323 cv
339.899 354.968 336.432 348.818 325.808 351.837 cv
315.184 354.857 306.796 355.751 299.304 351.725 cv
cp
.227451 .054902 .00784314 rgb
f
299.192 350.719 mo
304.001 352.844 311.382 354.633 321.558 350.607 cv
331.735 346.581 339.563 346.134 342.695 352.173 cv
342.806 348.93 339.563 340.989 332.294 342.331 cv
325.025 343.673 310.039 354.186 299.192 350.719 cv
cp
f
298.633 350.188 mo
298.633 350.188 308.082 351.031 316.135 345.83 cv
323.366 341.16 329.75 336.6 338.137 339.116 cv
334.699 337.019 327.456 333.857 319.113 339.265 cv
310.587 344.791 309.368 347.671 298.633 350.188 cv
cp
f
324.298 334.251 mo
319.601 333.748 315.491 336.097 312.052 340.29 cv
308.614 344.484 303.246 347.839 298.465 349.768 cv
301.904 347.588 305.091 343.394 307.439 339.703 cv
309.788 336.013 315.911 331.819 324.298 334.251 cv
cp
f
297.962 349.852 mo
298.716 348.594 302.323 345.658 302.826 342.22 cv
303.33 338.781 304.923 336.348 307.439 335.342 cv
304.672 336.013 302.155 337.103 299.891 341.381 cv
297.626 345.658 297.962 349.852 297.962 349.852 cv
cp
f
334.793 389.916 mo
332.301 391.643 325.232 392.488 322.951 388.71 cv
321.736 386.697 320.394 383.313 321.457 380.131 cv
322.082 378.653 335.956 377.156 336.807 378.789 cv
338.707 382.256 337.022 388.372 334.793 389.916 cv
314.333 388.71 mo
312.053 392.488 304.984 391.643 302.491 389.916 cv
300.262 388.372 298.577 382.256 300.478 378.789 cv
301.329 377.156 315.202 378.653 315.827 380.131 cv
316.891 383.313 315.548 386.697 314.333 388.71 cv
342.23 376.72 mo
338.894 376.768 322.194 378.294 318.642 378.297 cv
315.091 378.294 298.39 376.768 295.054 376.72 cv
295.054 376.72 294.355 378.45 296.706 379.01 cv
297.888 379.292 298.58 380.015 298.672 380.876 cv
298.888 382.904 299.223 385.97 300.31 387.959 cv
302.938 392.768 307.827 392.1 311.158 391.526 cv
314.01 391.034 315.395 388.344 316.179 385.951 cv
316.677 384.431 317.646 383.651 318.642 383.585 cv
319.638 383.651 320.607 384.431 321.105 385.951 cv
321.889 388.344 323.275 391.034 326.126 391.526 cv
329.457 392.1 334.346 392.768 336.974 387.959 cv
338.061 385.97 338.397 382.904 338.612 380.876 cv
338.704 380.015 339.396 379.292 340.578 379.01 cv
342.929 378.45 342.23 376.72 342.23 376.72 cv
1 1 1 rgb
f
308.257 391.38 mo
305.97 391.38 303.696 390.751 302.491 389.916 cv
300.941 388.842 299.654 385.558 299.653 382.491 cv
299.652 381.229 299.87 380.003 300.377 378.983 cv
299.021 381.71 299.739 385.905 301.158 388.341 cv
310.877 378.621 li
308.715 378.293 306.221 378.079 304.213 378.079 cv
303.567 378.079 302.972 378.101 302.453 378.149 cv
302.973 378.101 303.571 378.079 304.219 378.079 cv
308.634 378.079 315.395 379.109 315.827 380.131 cv
316.097 380.939 316.212 381.76 316.213 382.568 cv
316.217 384.943 315.24 387.208 314.333 388.71 cv
313.155 390.662 310.699 391.38 308.257 391.38 cv
310.998 382.488 mo
309.757 382.488 308.752 383.494 308.752 384.735 cv
308.752 385.975 309.757 386.981 310.998 386.981 cv
312.239 386.981 313.245 385.975 313.245 384.735 cv
313.245 383.494 312.239 382.488 310.998 382.488 cv
.886274 .556863 .380392 rgb
f
310.998 386.981 mo
309.757 386.981 308.752 385.975 308.752 384.735 cv
308.752 383.494 309.757 382.488 310.998 382.488 cv
312.239 382.488 313.245 383.494 313.245 384.735 cv
313.245 385.975 312.239 386.981 310.998 386.981 cv
310.19 382.941 mo
309.565 382.941 309.059 383.447 309.059 384.072 cv
309.059 384.697 309.565 385.204 310.19 385.204 cv
310.815 385.204 311.322 384.697 311.322 384.072 cv
311.322 383.447 310.815 382.941 310.19 382.941 cv
.67451 .384314 .321569 rgb
f
310.19 385.204 mo
309.565 385.204 309.059 384.697 309.059 384.072 cv
309.059 383.447 309.565 382.941 310.19 382.941 cv
310.815 382.941 311.322 383.447 311.322 384.072 cv
311.322 384.697 310.815 385.204 310.19 385.204 cv
1 .780392 .721569 rgb
f
300.377 378.982 mo
300.388 378.961 300.398 378.939 300.409 378.918 cv
300.398 378.939 300.388 378.961 300.377 378.982 cv
300.41 378.917 mo
300.415 378.907 300.42 378.896 300.426 378.886 cv
300.42 378.896 300.415 378.907 300.41 378.917 cv
300.428 378.883 mo
300.433 378.873 300.438 378.863 300.443 378.854 cv
300.438 378.863 300.433 378.873 300.428 378.883 cv
300.444 378.852 mo
300.449 378.843 300.454 378.833 300.459 378.823 cv
300.454 378.833 300.449 378.843 300.444 378.852 cv
300.462 378.817 mo
300.467 378.808 300.473 378.798 300.478 378.789 cv
300.478 378.789 li
300.478 378.789 li
300.473 378.798 300.467 378.808 300.462 378.817 cv
.886274 .556863 .380392 rgb
f
329.028 391.38 mo
326.585 391.38 324.129 390.662 322.951 388.71 cv
322.044 387.208 321.067 384.943 321.071 382.568 cv
321.071 382.4 321.076 382.232 321.087 382.063 cv
320.967 383.994 321.539 385.882 322.244 387.384 cv
331.512 378.116 li
330.132 378.178 328.639 378.315 327.236 378.502 cv
329.186 378.242 331.311 378.079 333.066 378.079 cv
335.039 378.079 336.544 378.285 336.807 378.789 cv
337.159 379.431 337.388 380.165 337.513 380.943 cv
337.313 383.147 337.03 385.253 336.671 387.255 cv
336.168 388.454 335.509 389.421 334.793 389.916 cv
333.588 390.751 331.314 391.38 329.028 391.38 cv
328.74 382.139 mo
327.499 382.139 326.493 383.145 326.493 384.386 cv
326.493 385.626 327.499 386.632 328.74 386.632 cv
329.98 386.632 330.986 385.626 330.986 384.386 cv
330.986 383.145 329.98 382.139 328.74 382.139 cv
f
336.671 387.255 mo
337.03 385.253 337.313 383.147 337.513 380.943 cv
337.594 381.445 337.632 381.965 337.631 382.491 cv
337.631 384.143 337.257 385.857 336.671 387.255 cv
.858823 .529412 .376471 rgb
f
328.74 386.632 mo
327.499 386.632 326.493 385.626 326.493 384.386 cv
326.493 383.145 327.499 382.139 328.74 382.139 cv
329.98 382.139 330.986 383.145 330.986 384.386 cv
330.986 385.626 329.98 386.632 328.74 386.632 cv
328.077 382.592 mo
327.452 382.592 326.946 383.098 326.946 383.723 cv
326.946 384.348 327.452 384.855 328.077 384.855 cv
328.702 384.855 329.209 384.348 329.209 383.723 cv
329.209 383.098 328.702 382.592 328.077 382.592 cv
.67451 .384314 .321569 rgb
f
328.077 384.855 mo
327.452 384.855 326.946 384.348 326.946 383.723 cv
326.946 383.098 327.452 382.592 328.077 382.592 cv
328.702 382.592 329.209 383.098 329.209 383.723 cv
329.209 384.348 328.702 384.855 328.077 384.855 cv
1 .780392 .721569 rgb
f
329.028 391.38 mo
326.585 391.38 324.129 390.662 322.951 388.71 cv
322.044 387.208 321.067 384.943 321.071 382.568 cv
321.067 384.943 322.044 387.208 322.951 388.71 cv
324.129 390.662 326.585 391.38 329.028 391.38 cv
331.314 391.38 333.588 390.751 334.793 389.916 cv
335.509 389.421 336.168 388.454 336.671 387.255 cv
337.257 385.857 337.631 384.143 337.631 382.491 cv
337.63 385.558 336.343 388.842 334.793 389.916 cv
333.588 390.751 331.314 391.38 329.028 391.38 cv
f
321.087 382.062 mo
321.087 382.053 321.088 382.043 321.089 382.034 cv
321.088 382.043 321.087 382.053 321.087 382.062 cv
321.089 382.03 mo
321.091 382.004 321.093 381.978 321.095 381.952 cv
321.093 381.978 321.091 382.004 321.089 382.03 cv
321.095 381.939 mo
321.096 381.933 321.096 381.927 321.097 381.921 cv
321.096 381.927 321.096 381.933 321.095 381.939 cv
321.098 381.904 mo
321.099 381.898 321.099 381.893 321.1 381.887 cv
321.099 381.893 321.099 381.898 321.098 381.904 cv
321.101 381.867 mo
321.102 381.863 321.102 381.858 321.103 381.854 cv
321.102 381.858 321.102 381.863 321.101 381.867 cv
321.106 381.82 mo
321.106 381.818 321.106 381.815 321.106 381.813 cv
321.106 381.815 321.106 381.818 321.106 381.82 cv
321.109 381.785 mo
321.109 381.782 321.109 381.779 321.11 381.776 cv
321.109 381.779 321.109 381.782 321.109 381.785 cv
321.112 381.749 mo
321.113 381.746 321.113 381.743 321.113 381.74 cv
321.113 381.743 321.113 381.746 321.112 381.749 cv
321.117 381.709 mo
321.117 381.708 321.117 381.707 321.117 381.705 cv
321.117 381.707 321.117 381.708 321.117 381.709 cv
321.125 381.631 mo
321.125 381.631 li
321.125 381.631 321.125 381.631 321.125 381.631 cv
321.13 381.595 mo
321.13 381.594 321.13 381.593 321.13 381.592 cv
321.13 381.593 321.13 381.594 321.13 381.595 cv
321.375 380.393 mo
321.375 380.392 321.376 380.391 321.376 380.39 cv
321.376 380.391 321.375 380.392 321.375 380.393 cv
321.386 380.357 mo
321.386 380.356 321.387 380.354 321.387 380.353 cv
321.387 380.354 321.386 380.356 321.386 380.357 cv
321.397 380.319 mo
321.398 380.318 321.398 380.318 321.398 380.317 cv
321.398 380.318 321.398 380.318 321.397 380.319 cv
321.42 380.245 mo
321.421 380.243 321.422 380.24 321.423 380.238 cv
321.422 380.24 321.421 380.243 321.42 380.245 cv
321.431 380.21 mo
321.432 380.207 321.433 380.204 321.434 380.201 cv
321.433 380.204 321.432 380.207 321.431 380.21 cv
321.443 380.174 mo
321.444 380.171 321.445 380.169 321.446 380.165 cv
321.445 380.168 321.444 380.172 321.443 380.174 cv
321.46 380.125 mo
321.46 380.125 321.46 380.124 321.461 380.123 cv
321.46 380.124 321.46 380.125 321.46 380.125 cv
321.462 380.12 mo
321.463 380.119 321.463 380.118 321.464 380.117 cv
321.463 380.118 321.463 380.119 321.462 380.12 cv
321.465 380.114 mo
321.466 380.113 321.466 380.112 321.466 380.111 cv
321.466 380.112 321.466 380.113 321.465 380.114 cv
321.468 380.108 mo
321.468 380.107 321.469 380.106 321.469 380.106 cv
321.469 380.107 321.468 380.107 321.468 380.108 cv
321.471 380.103 mo
321.471 380.102 321.472 380.101 321.472 380.1 cv
321.472 380.101 321.471 380.102 321.471 380.103 cv
321.474 380.097 mo
321.475 380.096 321.475 380.095 321.475 380.094 cv
321.475 380.095 321.475 380.096 321.474 380.097 cv
321.477 380.091 mo
321.478 380.09 321.478 380.089 321.479 380.089 cv
321.478 380.089 321.478 380.09 321.477 380.091 cv
321.486 380.077 mo
321.486 380.077 321.487 380.076 321.487 380.075 cv
321.487 380.076 321.486 380.077 321.486 380.077 cv
321.49 380.072 mo
321.49 380.071 321.49 380.07 321.491 380.07 cv
321.49 380.07 321.49 380.071 321.49 380.072 cv
321.493 380.066 mo
321.494 380.065 321.494 380.065 321.495 380.064 cv
321.494 380.064 321.494 380.065 321.493 380.066 cv
321.497 380.06 mo
321.498 380.059 321.498 380.059 321.499 380.058 cv
321.498 380.059 321.498 380.059 321.497 380.06 cv
321.502 380.054 mo
321.502 380.054 321.502 380.053 321.503 380.052 cv
321.502 380.053 321.502 380.054 321.502 380.054 cv
321.506 380.048 mo
321.506 380.048 321.507 380.047 321.507 380.047 cv
321.507 380.047 321.506 380.048 321.506 380.048 cv
321.511 380.041 mo
321.511 380.041 321.511 380.041 321.511 380.041 cv
321.511 380.041 321.511 380.041 321.511 380.041 cv
321.526 380.023 mo
321.526 380.023 321.526 380.023 321.526 380.023 cv
321.526 380.023 321.526 380.023 321.526 380.023 cv
321.531 380.017 mo
321.531 380.017 321.531 380.017 321.531 380.017 cv
321.531 380.017 321.531 380.017 321.531 380.017 cv
321.536 380.011 mo
321.536 380.011 321.536 380.011 321.537 380.011 cv
321.536 380.011 321.536 380.011 321.536 380.011 cv
321.542 380.006 mo
321.542 380.005 321.542 380.005 321.542 380.005 cv
321.542 380.005 321.542 380.005 321.542 380.006 cv
327.189 378.508 mo
327.191 378.508 327.191 378.508 327.192 378.507 cv
327.191 378.508 327.19 378.508 327.189 378.508 cv
327.216 378.504 mo
327.218 378.504 327.219 378.504 327.221 378.504 cv
327.22 378.504 327.218 378.504 327.216 378.504 cv
.886274 .556863 .380392 rgb
f
300.377 378.983 mo
300.377 378.983 300.377 378.983 300.377 378.982 cv
300.377 378.982 300.377 378.983 300.377 378.983 cv
1 1 1 rgb
f
300.409 378.918 mo
300.41 378.918 300.41 378.917 300.41 378.917 cv
300.41 378.917 300.41 378.917 300.409 378.918 cv
f
300.426 378.886 mo
300.426 378.885 300.427 378.884 300.428 378.883 cv
300.427 378.884 300.426 378.885 300.426 378.886 cv
f
300.443 378.854 mo
300.443 378.853 300.443 378.853 300.444 378.852 cv
300.443 378.853 300.443 378.853 300.443 378.854 cv
f
300.459 378.823 mo
300.46 378.821 300.461 378.819 300.462 378.817 cv
300.461 378.819 300.46 378.821 300.459 378.823 cv
f
300.478 378.789 mo
300.654 378.45 301.391 378.246 302.453 378.149 cv
301.391 378.246 300.654 378.45 300.478 378.789 cv
f
301.158 388.341 mo
299.739 385.905 299.021 381.71 300.377 378.983 cv
300.377 378.983 300.377 378.982 300.377 378.982 cv
300.388 378.961 300.398 378.939 300.409 378.918 cv
300.41 378.917 300.41 378.917 300.41 378.917 cv
300.415 378.907 300.42 378.896 300.426 378.886 cv
300.426 378.885 300.427 378.884 300.428 378.883 cv
300.433 378.873 300.438 378.863 300.443 378.854 cv
300.443 378.853 300.443 378.853 300.444 378.852 cv
300.449 378.843 300.454 378.833 300.459 378.823 cv
300.46 378.821 300.461 378.819 300.462 378.817 cv
300.467 378.808 300.473 378.798 300.478 378.789 cv
300.478 378.789 li
300.654 378.45 301.391 378.246 302.453 378.149 cv
302.972 378.101 303.567 378.079 304.213 378.079 cv
306.221 378.079 308.715 378.293 310.877 378.621 cv
301.158 388.341 li
.913725 .662745 .529412 rgb
f
321.087 382.063 mo
321.087 382.063 321.087 382.062 321.087 382.062 cv
321.087 382.063 321.087 382.063 321.087 382.063 cv
1 1 1 rgb
f
321.089 382.034 mo
321.089 382.032 321.089 382.031 321.089 382.03 cv
321.089 382.031 321.089 382.032 321.089 382.034 cv
f
321.095 381.952 mo
321.095 381.947 321.095 381.943 321.095 381.939 cv
321.095 381.943 321.095 381.947 321.095 381.952 cv
f
321.1 381.887 mo
321.1 381.88 321.101 381.874 321.101 381.867 cv
321.101 381.874 321.1 381.88 321.1 381.887 cv
f
321.103 381.854 mo
321.104 381.843 321.105 381.831 321.106 381.82 cv
321.104 381.832 321.104 381.842 321.103 381.854 cv
f
321.106 381.813 mo
321.107 381.803 321.108 381.794 321.109 381.785 cv
321.108 381.794 321.107 381.803 321.106 381.813 cv
f
321.11 381.776 mo
321.111 381.767 321.112 381.758 321.112 381.749 cv
321.112 381.758 321.111 381.767 321.11 381.776 cv
f
321.113 381.74 mo
321.114 381.73 321.116 381.719 321.117 381.709 cv
321.116 381.719 321.114 381.73 321.113 381.74 cv
f
321.117 381.705 mo
321.12 381.681 321.122 381.656 321.125 381.631 cv
321.122 381.656 321.12 381.681 321.117 381.705 cv
f
321.125 381.631 mo
321.127 381.619 321.128 381.607 321.13 381.595 cv
321.128 381.607 321.127 381.619 321.125 381.631 cv
f
321.13 381.592 mo
321.179 381.192 321.259 380.791 321.375 380.393 cv
321.259 380.791 321.179 381.192 321.13 381.592 cv
f
321.376 380.39 mo
321.379 380.379 321.382 380.368 321.386 380.357 cv
321.382 380.368 321.379 380.379 321.376 380.39 cv
f
321.387 380.353 mo
321.391 380.341 321.394 380.33 321.397 380.319 cv
321.394 380.33 321.391 380.341 321.387 380.353 cv
f
321.398 380.317 mo
321.405 380.293 321.413 380.269 321.42 380.245 cv
321.413 380.269 321.405 380.293 321.398 380.317 cv
f
321.423 380.238 mo
321.425 380.229 321.428 380.219 321.431 380.21 cv
321.428 380.219 321.425 380.229 321.423 380.238 cv
f
321.434 380.201 mo
321.437 380.192 321.44 380.183 321.443 380.174 cv
321.44 380.183 321.437 380.192 321.434 380.201 cv
f
321.446 380.165 mo
321.45 380.154 321.453 380.142 321.457 380.131 cv
321.454 380.142 321.45 380.154 321.446 380.165 cv
f
321.457 380.131 mo
321.458 380.129 321.459 380.127 321.46 380.125 cv
321.459 380.127 321.458 380.129 321.457 380.131 cv
f
321.461 380.123 mo
321.461 380.122 321.462 380.121 321.462 380.12 cv
321.462 380.121 321.461 380.122 321.461 380.123 cv
f
321.464 380.117 mo
321.464 380.116 321.465 380.115 321.465 380.114 cv
321.465 380.115 321.464 380.116 321.464 380.117 cv
f
321.466 380.111 mo
321.467 380.11 321.467 380.109 321.468 380.108 cv
321.467 380.109 321.467 380.11 321.466 380.111 cv
f
321.469 380.106 mo
321.47 380.105 321.47 380.104 321.471 380.103 cv
321.47 380.104 321.47 380.105 321.469 380.106 cv
f
321.472 380.1 mo
321.473 380.099 321.474 380.098 321.474 380.097 cv
321.474 380.098 321.473 380.099 321.472 380.1 cv
f
321.475 380.094 mo
321.476 380.093 321.477 380.092 321.477 380.091 cv
321.477 380.092 321.476 380.093 321.475 380.094 cv
f
321.479 380.089 mo
321.481 380.085 321.483 380.081 321.486 380.077 cv
321.483 380.081 321.481 380.085 321.479 380.089 cv
f
321.487 380.075 mo
321.488 380.074 321.489 380.073 321.49 380.072 cv
321.489 380.073 321.488 380.074 321.487 380.075 cv
f
321.491 380.07 mo
321.492 380.068 321.492 380.067 321.493 380.066 cv
321.492 380.067 321.492 380.068 321.491 380.07 cv
f
321.495 380.064 mo
321.496 380.062 321.497 380.061 321.497 380.06 cv
321.497 380.061 321.496 380.063 321.495 380.064 cv
f
321.499 380.058 mo
321.5 380.057 321.501 380.055 321.502 380.054 cv
321.501 380.056 321.5 380.057 321.499 380.058 cv
f
321.503 380.052 mo
321.504 380.051 321.505 380.05 321.506 380.048 cv
321.505 380.05 321.504 380.051 321.503 380.052 cv
f
321.507 380.047 mo
321.508 380.045 321.51 380.043 321.511 380.041 cv
321.51 380.043 321.509 380.045 321.507 380.047 cv
f
321.511 380.041 mo
321.516 380.035 321.521 380.029 321.526 380.023 cv
321.521 380.029 321.516 380.035 321.511 380.041 cv
f
321.526 380.023 mo
321.528 380.021 321.529 380.019 321.531 380.017 cv
321.529 380.019 321.528 380.021 321.526 380.023 cv
f
321.531 380.017 mo
321.533 380.015 321.535 380.013 321.536 380.011 cv
321.535 380.013 321.533 380.015 321.531 380.017 cv
f
321.537 380.011 mo
321.538 380.009 321.54 380.007 321.542 380.006 cv
321.54 380.007 321.538 380.009 321.537 380.011 cv
f
321.542 380.005 mo
322.065 379.435 324.451 378.876 327.189 378.508 cv
324.452 378.876 322.065 379.435 321.542 380.005 cv
f
327.192 378.507 mo
327.2 378.506 327.208 378.505 327.216 378.504 cv
327.208 378.505 327.2 378.506 327.192 378.507 cv
f
327.221 378.504 mo
327.226 378.503 327.231 378.502 327.236 378.502 cv
327.231 378.502 327.226 378.503 327.221 378.504 cv
f
322.244 387.384 mo
321.539 385.882 320.967 383.994 321.087 382.063 cv
321.087 382.063 321.087 382.063 321.087 382.062 cv
321.087 382.053 321.088 382.043 321.089 382.034 cv
321.089 382.032 321.089 382.031 321.089 382.03 cv
321.091 382.004 321.093 381.978 321.095 381.952 cv
321.095 381.947 321.095 381.943 321.095 381.939 cv
321.096 381.933 321.096 381.927 321.097 381.921 cv
321.097 381.915 321.098 381.909 321.098 381.904 cv
321.099 381.898 321.099 381.893 321.1 381.887 cv
321.1 381.88 321.101 381.874 321.101 381.867 cv
321.102 381.863 321.102 381.858 321.103 381.854 cv
321.104 381.842 321.104 381.832 321.106 381.82 cv
321.106 381.818 321.106 381.815 321.106 381.813 cv
321.107 381.803 321.108 381.794 321.109 381.785 cv
321.109 381.782 321.109 381.779 321.11 381.776 cv
321.111 381.767 321.112 381.758 321.112 381.749 cv
321.113 381.746 321.113 381.743 321.113 381.74 cv
321.114 381.73 321.116 381.719 321.117 381.709 cv
321.117 381.708 321.117 381.707 321.117 381.705 cv
321.12 381.681 321.122 381.656 321.125 381.631 cv
321.125 381.631 321.125 381.631 321.125 381.631 cv
321.127 381.619 321.128 381.607 321.13 381.595 cv
321.13 381.594 321.13 381.593 321.13 381.592 cv
321.179 381.192 321.259 380.791 321.375 380.393 cv
321.375 380.392 321.376 380.391 321.376 380.39 cv
321.379 380.379 321.382 380.368 321.386 380.357 cv
321.386 380.356 321.387 380.354 321.387 380.353 cv
321.391 380.341 321.394 380.33 321.397 380.319 cv
321.398 380.318 321.398 380.318 321.398 380.317 cv
321.405 380.293 321.413 380.269 321.42 380.245 cv
321.421 380.243 321.422 380.24 321.423 380.238 cv
321.425 380.229 321.428 380.219 321.431 380.21 cv
321.432 380.207 321.433 380.204 321.434 380.201 cv
321.437 380.192 321.44 380.183 321.443 380.174 cv
321.444 380.172 321.445 380.168 321.446 380.165 cv
321.45 380.154 321.454 380.142 321.457 380.131 cv
321.457 380.131 li
321.457 380.131 li
321.458 380.129 321.459 380.127 321.46 380.125 cv
321.46 380.125 321.46 380.124 321.461 380.123 cv
321.461 380.122 321.462 380.121 321.462 380.12 cv
321.463 380.119 321.463 380.118 321.464 380.117 cv
321.464 380.116 321.465 380.115 321.465 380.114 cv
321.466 380.113 321.466 380.112 321.466 380.111 cv
321.467 380.11 321.467 380.109 321.468 380.108 cv
321.468 380.107 321.469 380.107 321.469 380.106 cv
321.47 380.105 321.47 380.104 321.471 380.103 cv
321.471 380.102 321.472 380.101 321.472 380.1 cv
321.473 380.099 321.474 380.098 321.474 380.097 cv
321.475 380.096 321.475 380.095 321.475 380.094 cv
321.476 380.093 321.477 380.092 321.477 380.091 cv
321.478 380.09 321.478 380.089 321.479 380.089 cv
321.481 380.085 321.483 380.081 321.486 380.077 cv
321.486 380.077 321.487 380.076 321.487 380.075 cv
321.488 380.074 321.489 380.073 321.49 380.072 cv
321.49 380.071 321.49 380.07 321.491 380.07 cv
321.492 380.068 321.492 380.067 321.493 380.066 cv
321.494 380.065 321.494 380.064 321.495 380.064 cv
321.496 380.063 321.497 380.061 321.497 380.06 cv
321.498 380.059 321.498 380.059 321.499 380.058 cv
321.5 380.057 321.501 380.056 321.502 380.054 cv
321.502 380.054 321.502 380.053 321.503 380.052 cv
321.504 380.051 321.505 380.05 321.506 380.048 cv
321.506 380.048 321.507 380.047 321.507 380.047 cv
321.509 380.045 321.51 380.043 321.511 380.041 cv
321.511 380.041 321.511 380.041 321.511 380.041 cv
321.516 380.035 321.521 380.029 321.526 380.023 cv
321.526 380.023 321.526 380.023 321.526 380.023 cv
321.528 380.021 321.529 380.019 321.531 380.017 cv
321.531 380.017 321.531 380.017 321.531 380.017 cv
321.533 380.015 321.535 380.013 321.536 380.011 cv
321.536 380.011 321.536 380.011 321.537 380.011 cv
321.538 380.009 321.54 380.007 321.542 380.006 cv
321.542 380.005 321.542 380.005 321.542 380.005 cv
322.065 379.435 324.452 378.876 327.189 378.508 cv
327.19 378.508 327.191 378.508 327.192 378.507 cv
327.2 378.506 327.208 378.505 327.216 378.504 cv
327.218 378.504 327.22 378.504 327.221 378.504 cv
327.226 378.503 327.231 378.502 327.236 378.502 cv
328.639 378.315 330.132 378.178 331.512 378.116 cv
322.244 387.384 li
.913725 .662745 .529412 rgb
f
312.023 414.51 mo
309.706 413.858 309.125 405.452 310.773 404.635 cv
312.417 404.064 315.395 403.224 318.734 403.224 cv
322.212 403.224 324.98 404.008 326.531 404.577 cv
328.198 405.341 327.433 413.896 324.928 414.633 cv
323.342 415.08 321.187 415.498 318.65 415.498 cv
316.081 415.498 313.724 415 312.023 414.51 cv
cp
327.813 404.443 mo
327.771 404.359 li
327.016 401.975 322.861 401.016 318.706 401.016 cv
314.884 401.016 310.423 402.337 309.582 404.442 cv
309.568 404.443 li
309.498 404.663 li
309.485 404.702 li
308.752 407.072 308.809 412.778 309.469 414.285 cv
309.488 414.302 li
310.301 416.7 314.783 419.496 318.622 419.496 cv
322.453 419.496 326.285 417.437 327.452 415.029 cv
327.47 415.015 li
328.855 412.786 328.634 406.634 327.813 404.443 cv
cp
.196078 0 .00392157 rgb
f
311.974 657.679 mo
311.974 657.679 310.239 653.062 310.35 652.815 cv
311.779 649.631 317.122 645.958 317.633 644.29 cv
335.167 560.06 li
336.806 558.032 349.22 538.826 357.939 538.763 cv
364.571 538.715 373.694 550.461 371.402 561.184 cv
342.166 644.872 li
342.068 648.272 341.626 653.664 341.626 653.664 cv
340.29 656.02 338.18 658.789 338.18 658.789 cv
338.133 659.384 339.077 663.793 339.774 664.278 cv
335.941 670.005 li
332.397 682.927 li
309.213 683.847 li
310.918 669.687 li
308.611 663.604 li
311.974 657.679 li
cp
.827451 .709804 .447059 rgb
f
333.634 693.715 mo
333.481 690.155 333.128 685.786 332.331 682.048 cv
318.35 677.914 307.823 680.605 307.05 685.273 cv
301.856 688.571 291.588 694.324 295.199 699.288 cv
327.859 699.252 li
329.766 697.389 331.667 695.517 333.634 693.715 cv
cp
.521569 .345098 .729412 rgb
f
332.358 694.753 mo
331.028 687.79 328.497 683.236 326.993 681.885 cv
321.541 679.515 312.928 679.173 308.612 681.225 cv
308.612 681.225 307.619 683.122 306.303 685.272 cv
301.109 688.569 290.841 694.322 294.452 699.286 cv
327.069 699.25 li
328.787 697.703 330.559 696.212 332.358 694.753 cv
cp
.6 .392157 .8 rgb
f
321.423 702.372 mo
323.034 701.206 324.723 700.156 326.383 699.062 cv
294.362 698.994 li
293.429 698.992 292.671 699.747 292.669 700.68 cv
292.667 701.612 293.422 702.37 294.354 702.372 cv
321.349 702.43 li
321.423 702.372 li
cp
.878431 .878431 .878431 rgb
f
326.71 684.849 mo
326.471 683.886 326.171 682.947 325.898 682.001 cv
324.36 681.425 322.645 680.952 320.806 680.629 cv
316.026 679.79 311.58 680.152 308.758 681.389 cv
308.341 682.321 307.942 683.263 307.58 684.215 cv
310.251 682.538 315.524 682.525 320.965 683.48 cv
323.209 683.874 325.184 684.591 326.851 685.479 cv
326.762 685.056 326.762 685.056 326.71 684.849 cv
cp
.0784314 .172549 .176471 rgb
f
327.056 685.882 mo
325.518 685.306 321.566 684.41 319.728 684.087 cv
314.948 683.248 310.108 683.533 307.286 684.769 cv
305.799 686.249 li
308.471 684.573 322.114 685.377 327.792 688.52 cv
327.969 688.047 327.056 685.882 327.056 685.882 cv
cp
f
318.693 541.784 mo
324.376 538.52 342.077 535.665 345.181 532.56 cv
294.68 532.56 li
294.68 532.56 li
292.206 532.56 li
318.693 541.784 li
cp
.827451 .709804 .447059 rgb
f
317.384 699.058 mo
323.832 699.058 333.622 692.049 333.506 690.844 cv
334.36 692.165 334.865 693.486 333.816 695.04 cv
331.019 698.731 324.493 702.46 320.491 702.46 cv
316.49 702.46 317.384 699.058 317.384 699.058 cv
cp
.878431 .878431 .878431 rgb
f
1135.35 507.524 mo
47.1775 507.524 li
47.1775 515.435 li
1135.35 515.435 li
1135.35 507.524 li
cp
.937255 .67451 .215686 rgb
f
100.563 710.589 mo
90.3147 710.589 li
90.3147 518.424 li
100.563 518.424 li
100.563 710.589 li
cp
f
1062.21 710.589 mo
1051.96 710.589 li
1051.96 518.424 li
1062.21 518.424 li
1062.21 710.589 li
cp
f
1118.62 515.262 mo
67.9217 515.262 li
66.9082 519.464 li
1117.61 519.464 li
1118.62 515.262 li
cp
1 .392157 .121569 rgb
f
103.611 505.873 mo
103.611 506.695 104.278 507.363 105.101 507.363 cv
191.898 507.363 li
192.721 507.363 193.388 506.695 193.388 505.873 cv
193.388 505.05 192.721 504.382 191.898 504.382 cv
105.101 504.382 li
104.278 504.382 103.611 505.05 103.611 505.873 cv
cp
.8 .8 .8 rgb
f
186.097 505.892 mo
186.097 506.598 186.669 507.17 187.375 507.17 cv
201.5 507.17 li
202.206 507.17 202.778 506.598 202.778 505.892 cv
202.778 505.187 202.206 504.614 201.5 504.614 cv
187.375 504.614 li
186.669 504.614 186.097 505.187 186.097 505.892 cv
cp
1 1 1 rgb
f
943.578 505.952 mo
943.713 507.826 945.081 509.304 946.767 509.304 cv
1041.07 509.304 li
1042.75 509.304 1044.12 507.826 1044.26 505.952 cv
943.578 505.952 li
cp
.0980392 .0745098 .0745098 rgb
f
1039.38 504.34 mo
1038.96 506.178 1036.8 507.646 1034.54 507.645 cv
955.139 507.645 li
952.884 507.645 950.778 506.178 950.43 504.34 cv
941.494 457.163 li
940.964 454.365 943.369 452.598 946.222 452.598 cv
1046.7 452.598 li
1049.56 452.598 1050.81 454.365 1050.17 457.163 cv
1039.38 504.34 li
cp
f
1039.1 505.555 mo
1038.69 507.372 1036.54 508.823 1034.29 508.823 cv
955.339 508.823 li
953.097 508.823 951.004 507.372 950.66 505.554 cv
941.837 458.974 li
941.314 456.215 943.179 453.935 946.012 453.935 cv
1045.78 453.935 li
1048.61 453.935 1050.39 456.215 1049.76 458.974 cv
1039.1 505.555 li
cp
.439216 .435294 .435294 rgb
f
1004.46 485.195 mo
1004.74 480.449 1000.55 476.457 995.1 476.457 cv
989.646 476.457 985.316 480.449 985.424 485.195 cv
985.527 489.756 989.721 493.323 994.793 493.323 cv
999.866 493.323 1004.19 489.756 1004.46 485.195 cv
cp
1 1 1 rgb
f
268.889 508.097 mo
268.875 507.387 269.128 506.812 269.454 506.813 cv
300.445 506.914 li
300.772 506.916 301.048 507.492 301.062 508.202 cv
301.077 508.913 300.824 509.487 300.498 509.486 cv
269.506 509.385 li
269.18 509.384 268.904 508.807 268.889 508.097 cv
cp
.439216 .435294 .435294 rgb
f
391.111 503.201 mo
390.843 504.925 389.22 506.351 387.487 506.386 cv
297.086 509.456 li
295.353 509.491 294.165 508.122 294.434 506.398 cv
302.806 452.276 li
303.074 450.552 304.696 449.125 306.43 449.09 cv
394.986 447.287 li
396.719 447.252 399.631 448.2 399.19 451.019 cv
391.111 503.201 li
cp
.0784314 0 .00392157 rgb
f
390.869 506.429 mo
390.607 508.115 388.99 509.509 387.256 509.545 cv
298.594 509.456 li
296.86 509.491 295.668 508.154 295.93 506.469 cv
304.323 453.508 li
304.585 451.823 306.203 450.428 307.936 450.393 cv
396.492 448.59 li
398.225 448.555 399.418 449.892 399.156 451.577 cv
390.869 506.429 li
cp
.439216 .435294 .435294 rgb
f
355.811 478.092 mo
356.587 473.104 353.151 469.144 348.136 469.246 cv
343.122 469.348 338.428 473.474 337.652 478.462 cv
336.876 483.449 340.313 487.41 345.327 487.308 cv
350.342 487.206 355.036 483.08 355.811 478.092 cv
cp
1 1 1 rgb
f
741.691 494.233 mo
741.359 497.42 738.878 500.004 736.14 500.004 cv
600.654 500.004 li
597.349 500.004 594.957 497.15 595.323 493.63 cv
605.102 399.62 li
605.468 396.1 608.435 393.432 611.717 393.66 cv
746.23 403.004 li
748.949 403.193 750.877 405.929 750.545 409.116 cv
741.691 494.233 li
cp
.0784314 0 .00392157 rgb
f
743.413 494.233 mo
743.082 497.42 740.601 500.004 737.862 500.004 cv
602.377 500.004 li
599.072 500.004 596.679 497.15 597.045 493.63 cv
606.824 399.62 li
607.191 396.1 610.158 393.432 613.439 393.66 cv
747.953 403.004 li
750.672 403.193 752.599 405.929 752.268 409.116 cv
743.413 494.233 li
cp
.878431 .878431 .878431 rgb
f
610.339 398.943 mo
610.339 398.943 623.371 441.444 599.08 497.248 cv
598.262 495.181 599.888 476.236 602.217 453.845 cv
607.858 399.62 607.838 402.781 610.339 398.943 cv
cp
1 1 1 rgb
f
746.863 404.471 mo
746.863 404.471 685.592 410.672 611.844 395.515 cv
614.833 394.679 643.257 396.942 674.472 399.094 cv
705.168 401.209 737.979 403.782 746.863 404.471 cv
cp
f
698.115 444.59 mo
697.479 450.697 692.96 456.452 687.138 457.622 cv
680.043 459.047 673.78 453.351 674.691 444.59 cv
675.602 435.829 683.05 430.133 689.848 431.558 cv
695.427 432.727 698.75 438.482 698.115 444.59 cv
cp
f
693.809 466.59 mo
674.045 465.607 li
673.529 465.607 671.202 497.356 655.064 505.359 cv
627.839 505.359 li
626.888 505.359 626.117 506.13 626.117 507.081 cv
626.139 507.34 li
689.848 507.34 li
695.618 507.34 694.395 466.59 693.809 466.59 cv
cp
f
693.982 466.59 mo
674.74 465.491 li
674.224 465.491 672.739 498.454 655.172 506.204 cv
627.442 506.377 li
626.49 506.377 626.117 506.13 626.117 507.081 cv
626.139 507.34 li
690.021 507.34 li
695.79 507.34 694.568 466.59 693.982 466.59 cv
cp
.8 .8 .8 rgb
f
421.447 494.233 mo
421.778 497.42 424.259 500.004 426.998 500.004 cv
562.484 500.004 li
565.789 500.004 568.181 497.15 567.815 493.63 cv
558.036 399.62 li
557.67 396.1 554.703 393.432 551.421 393.66 cv
416.908 403.004 li
414.189 403.193 412.261 405.929 412.593 409.116 cv
421.447 494.233 li
cp
.0784314 0 .00392157 rgb
f
419.725 494.233 mo
420.056 497.42 422.537 500.004 425.275 500.004 cv
560.761 500.004 li
564.066 500.004 566.459 497.15 566.093 493.63 cv
556.313 399.62 li
555.947 396.1 552.98 393.432 549.699 393.66 cv
415.185 403.004 li
412.466 403.193 410.539 405.929 410.87 409.116 cv
419.725 494.233 li
cp
.878431 .878431 .878431 rgb
f
552.798 398.943 mo
552.798 398.943 539.766 441.444 564.058 497.248 cv
564.876 495.181 563.25 476.236 560.921 453.845 cv
555.28 399.62 555.3 402.781 552.798 398.943 cv
cp
1 1 1 rgb
f
416.275 404.471 mo
416.275 404.471 477.546 410.672 551.294 395.515 cv
548.305 394.679 519.881 396.942 488.666 399.094 cv
457.97 401.209 425.159 403.782 416.275 404.471 cv
cp
f
465.023 444.59 mo
465.659 450.697 470.178 456.452 476 457.622 cv
483.095 459.047 489.358 453.351 488.447 444.59 cv
487.535 435.829 480.088 430.133 473.29 431.558 cv
467.711 432.727 464.388 438.482 465.023 444.59 cv
cp
f
469.329 466.59 mo
489.093 465.607 li
489.609 465.607 491.936 497.356 508.073 505.359 cv
535.299 505.359 li
536.25 505.359 537.021 506.13 537.021 507.081 cv
536.998 507.34 li
473.29 507.34 li
467.52 507.34 468.742 466.59 469.329 466.59 cv
cp
f
469.156 466.59 mo
488.398 465.491 li
488.914 465.491 490.398 498.454 507.966 506.204 cv
535.696 506.377 li
536.647 506.377 537.021 506.13 537.021 507.081 cv
536.998 507.34 li
473.117 507.34 li
467.347 507.34 468.57 466.59 469.156 466.59 cv
cp
.8 .8 .8 rgb
f
766.888 494.233 mo
767.22 497.42 769.701 500.004 772.439 500.004 cv
907.925 500.004 li
911.23 500.004 913.623 497.15 913.257 493.63 cv
903.477 399.62 li
903.111 396.1 900.144 393.432 896.863 393.66 cv
762.349 403.004 li
759.63 403.193 757.703 405.929 758.034 409.116 cv
766.888 494.233 li
cp
.0784314 0 .00392157 rgb
f
765.166 494.233 mo
765.498 497.42 767.978 500.004 770.717 500.004 cv
906.203 500.004 li
909.508 500.004 911.9 497.15 911.534 493.63 cv
901.755 399.62 li
901.389 396.1 898.422 393.432 895.14 393.66 cv
760.627 403.004 li
757.908 403.193 755.98 405.929 756.312 409.116 cv
765.166 494.233 li
cp
.878431 .878431 .878431 rgb
f
898.24 398.943 mo
898.24 398.943 885.208 441.444 909.499 497.248 cv
910.318 495.181 908.691 476.236 906.362 453.845 cv
900.721 399.62 900.741 402.781 898.24 398.943 cv
cp
1 1 1 rgb
f
761.716 404.471 mo
761.716 404.471 822.988 410.672 896.735 395.515 cv
893.746 394.679 865.322 396.942 834.107 399.094 cv
803.411 401.209 770.601 403.782 761.716 404.471 cv
cp
f
810.465 444.59 mo
811.1 450.697 815.62 456.452 821.441 457.622 cv
828.536 459.047 834.799 453.351 833.888 444.59 cv
832.977 435.829 825.53 430.133 818.731 431.558 cv
813.152 432.727 809.83 438.482 810.465 444.59 cv
cp
f
814.77 466.59 mo
834.535 465.607 li
835.051 465.607 837.377 497.356 853.515 505.359 cv
880.74 505.359 li
881.691 505.359 882.462 506.13 882.462 507.081 cv
882.44 507.34 li
818.731 507.34 li
812.961 507.34 814.184 466.59 814.77 466.59 cv
cp
f
814.598 466.59 mo
833.839 465.491 li
834.355 465.491 835.84 498.454 853.408 506.204 cv
881.138 506.377 li
882.089 506.377 882.462 506.13 882.462 507.081 cv
882.44 507.34 li
818.559 507.34 li
812.789 507.34 814.011 466.59 814.598 466.59 cv
cp
.8 .8 .8 rgb
f
64.3589 494.233 mo
64.6904 497.42 67.1713 500.004 69.9098 500.004 cv
205.396 500.004 li
208.701 500.004 211.093 497.15 210.727 493.63 cv
200.948 399.62 li
200.582 396.1 197.614 393.432 194.333 393.66 cv
59.8195 403.004 li
57.1006 403.193 55.1731 405.929 55.5046 409.116 cv
64.3589 494.233 li
cp
.0784314 0 .00392157 rgb
f
62.6365 494.233 mo
62.9681 497.42 65.449 500.004 68.1874 500.004 cv
203.673 500.004 li
206.978 500.004 209.371 497.15 209.005 493.63 cv
199.225 399.62 li
198.859 396.1 195.892 393.432 192.611 393.66 cv
58.0971 403.004 li
55.3783 403.193 53.4508 405.929 53.7823 409.116 cv
62.6365 494.233 li
cp
.878431 .878431 .878431 rgb
f
195.71 398.943 mo
195.71 398.943 182.678 441.444 206.97 497.248 cv
207.788 495.181 206.162 476.236 203.833 453.845 cv
198.192 399.62 198.212 402.781 195.71 398.943 cv
cp
1 1 1 rgb
f
59.1866 404.471 mo
59.1866 404.471 120.458 410.672 194.206 395.515 cv
191.216 394.679 162.793 396.942 131.578 399.094 cv
100.882 401.209 68.0711 403.782 59.1866 404.471 cv
cp
f
107.935 444.59 mo
108.57 450.697 113.09 456.452 118.912 457.622 cv
126.007 459.047 132.27 453.351 131.358 444.59 cv
130.447 435.829 123 430.133 116.201 431.558 cv
110.623 432.727 107.3 438.482 107.935 444.59 cv
cp
f
112.241 466.59 mo
132.005 465.607 li
132.521 465.607 134.848 497.356 150.985 505.359 cv
178.211 505.359 li
179.162 505.359 179.933 506.13 179.933 507.081 cv
179.91 507.34 li
116.202 507.34 li
110.432 507.34 111.654 466.59 112.241 466.59 cv
cp
f
112.068 466.59 mo
131.31 465.491 li
131.826 465.491 133.31 498.454 150.878 506.204 cv
178.608 506.377 li
179.559 506.377 179.933 506.13 179.933 507.081 cv
179.91 507.34 li
116.029 507.34 li
110.259 507.34 111.482 466.59 112.068 466.59 cv
cp
.8 .8 .8 rgb
f
909.766 79.9203 mo
903.417 79.9203 898.27 74.7736 898.27 68.4248 cv
898.27 62.0761 903.417 56.9294 909.766 56.9294 cv
916.114 56.9294 921.261 62.0761 921.261 68.4248 cv
921.261 74.7736 916.114 79.9203 909.766 79.9203 cv
cp
927.911 65.0146 mo
927.57 63.0855 928.497 61.2303 930.09 60.2896 cv
929.279 58.2114 928.16 56.2885 926.787 54.5767 cv
925.177 55.4836 923.108 55.3579 921.609 54.0996 cv
920.108 52.8399 919.625 50.8217 920.242 49.0767 cv
918.331 48.0282 916.246 47.2586 914.041 46.8204 cv
913.392 48.5532 911.725 49.789 909.766 49.789 cv
907.806 49.789 906.139 48.5532 905.49 46.8204 cv
903.285 47.2586 901.2 48.0282 899.289 49.0767 cv
899.906 50.8217 899.423 52.8399 897.922 54.0996 cv
896.423 55.3579 894.354 55.4836 892.744 54.5767 cv
891.371 56.2885 890.252 58.2114 889.441 60.2896 cv
891.034 61.2303 891.961 63.0855 891.62 65.0146 cv
891.281 66.9414 889.778 68.3667 887.963 68.7081 cv
888.013 70.9775 888.41 73.1603 889.102 75.2079 cv
890.927 74.9048 892.83 75.7302 893.809 77.4266 cv
894.787 79.1215 894.552 81.1797 893.38 82.6082 cv
894.837 84.265 896.537 85.7023 898.43 86.8561 cv
899.633 85.4492 901.622 84.8576 903.464 85.5279 cv
905.305 86.1982 906.449 87.93 906.466 89.7808 cv
907.542 89.9441 908.644 90.0293 909.766 90.0293 cv
910.887 90.0293 911.989 89.9441 913.065 89.7808 cv
913.082 87.93 914.226 86.1982 916.067 85.5279 cv
917.909 84.8576 919.898 85.4492 921.101 86.8561 cv
922.994 85.7023 924.694 84.265 926.151 82.6082 cv
924.979 81.1797 924.744 79.1215 925.722 77.4266 cv
926.701 75.7302 928.604 74.9048 930.429 75.2079 cv
931.121 73.1603 931.518 70.9775 931.568 68.7081 cv
929.753 68.3667 928.25 66.9414 927.911 65.0146 cv
cp
.94902 .94902 .94902 rgb
f
875.07 99.538 mo
869.614 99.538 865.19 95.1146 865.19 89.6581 cv
865.19 84.2016 869.614 79.7782 875.07 79.7782 cv
880.527 79.7782 884.95 84.2016 884.95 89.6581 cv
884.95 95.1146 880.527 99.538 875.07 99.538 cv
cp
893.386 89.8678 mo
892.272 89.6809 891.33 88.5088 891.103 87.2198 cv
890.772 85.3452 li
890.545 84.0561 891.029 82.6324 892.012 82.076 cv
893.581 81.1874 li
892.913 79.6892 892.071 78.2876 891.077 77.0074 cv
889.383 78.004 li
888.41 78.5766 886.935 78.2843 885.932 77.443 cv
884.474 76.2195 li
883.471 75.3781 882.927 73.976 883.322 72.9183 cv
883.961 71.2078 li
882.515 70.4993 880.972 69.9596 879.358 69.6104 cv
878.692 71.4885 li
878.314 72.5526 876.996 73.2769 875.687 73.2769 cv
873.784 73.2769 li
872.475 73.2769 871.157 72.5526 870.78 71.4885 cv
870.161 69.7454 li
868.56 70.1421 867.034 70.7296 865.608 71.4816 cv
866.313 73.3698 li
866.708 74.4276 866.164 75.8296 865.161 76.671 cv
863.703 77.8945 li
862.7 78.7359 861.225 79.0282 860.252 78.4556 cv
858.647 77.5111 li
857.694 78.8205 856.895 80.2477 856.274 81.7677 cv
858.04 82.7678 li
859.022 83.3242 859.507 84.7479 859.279 86.037 cv
858.949 87.9116 li
858.722 89.2006 857.779 90.3727 856.666 90.5596 cv
854.829 90.8678 li
854.946 92.5259 855.259 94.129 855.751 95.6533 cv
857.743 95.285 li
858.853 95.0797 860.14 95.8589 860.794 96.9925 cv
861.746 98.641 li
862.4 99.7745 862.432 101.278 861.699 102.137 cv
860.499 103.543 li
861.632 104.71 862.903 105.741 864.287 106.61 cv
865.562 105.064 li
866.28 104.194 867.766 103.964 868.996 104.411 cv
870.785 105.062 li
872.015 105.51 873.006 106.641 872.997 107.77 cv
872.981 109.601 li
873.662 109.67 874.353 109.706 875.052 109.706 cv
876.003 109.706 876.937 109.635 877.853 109.509 cv
877.837 107.53 li
877.828 106.401 878.819 105.27 880.049 104.822 cv
881.837 104.171 li
883.067 103.723 884.553 103.953 885.272 104.824 cv
886.423 106.219 li
887.774 105.303 889.008 104.227 890.099 103.02 cv
888.826 101.529 li
888.093 100.67 888.125 99.1662 888.779 98.0326 cv
889.731 96.3841 li
890.385 95.2506 891.671 94.4714 892.782 94.6766 cv
894.548 95.0031 li
894.987 93.4655 895.25 91.8544 895.311 90.191 cv
893.386 89.8678 li
cp
f
907.565 115.09 mo
906.365 111.795 li
906.803 111.537 907.19 111.203 907.515 110.814 cv
910.559 112.571 li
909.787 113.644 908.76 114.515 907.565 115.09 cv
cp
903.72 115.857 mo
903.201 115.829 902.699 115.749 902.213 115.627 cv
903.404 112.356 li
903.556 112.38 903.711 112.397 903.869 112.406 cv
904.23 112.425 904.582 112.396 904.922 112.333 cv
906.118 115.619 li
905.355 115.816 904.549 115.902 903.72 115.857 cv
cp
897.757 112.613 mo
900.756 110.881 li
901.093 111.269 901.497 111.596 901.95 111.848 cv
900.764 115.106 li
899.561 114.536 898.529 113.674 897.757 112.613 cv
cp
898.463 102.489 mo
900.687 105.139 li
900.354 105.542 900.089 106.003 899.913 106.51 cv
896.518 105.911 li
896.871 104.599 897.553 103.432 898.463 102.489 cv
cp
903.338 100.118 mo
903.338 103.595 li
902.808 103.688 902.308 103.873 901.858 104.138 cv
899.636 101.49 li
900.711 100.74 901.976 100.257 903.338 100.118 cv
cp
908.596 101.45 mo
906.346 104.132 li
905.901 103.873 905.407 103.687 904.878 103.595 cv
904.878 100.111 li
906.256 100.239 907.522 100.715 908.596 101.45 cv
cp
911.753 105.853 mo
908.29 106.464 li
908.114 105.973 907.849 105.524 907.52 105.129 cv
909.777 102.439 li
910.702 103.383 911.391 104.552 911.753 105.853 cv
cp
902.113 107.861 mo
902.172 106.759 903.114 105.914 904.216 105.973 cv
905.318 106.033 906.163 106.974 906.103 108.076 cv
906.044 109.178 905.102 110.023 904 109.964 cv
902.898 109.905 902.053 108.963 902.113 107.861 cv
cp
896.256 107.542 mo
896.268 107.431 li
899.67 108.031 li
899.677 108.568 899.778 109.084 899.962 109.561 cv
896.977 111.285 li
896.451 110.151 896.184 108.877 896.256 107.542 cv
cp
912.035 108.394 mo
911.98 109.409 911.729 110.366 911.331 111.239 cv
908.286 109.481 li
908.431 109.081 908.521 108.654 908.545 108.208 cv
908.546 107.983 li
912.016 107.371 li
912.042 107.708 912.053 108.048 912.035 108.394 cv
cp
918.761 108.925 mo
917.88 108.728 917.178 107.751 917.052 106.712 cv
916.869 105.201 li
916.743 104.162 917.191 103.046 918 102.644 cv
919.291 102.002 li
918.822 100.777 918.21 99.6215 917.472 98.5565 cv
916.076 99.2793 li
915.275 99.6945 914.109 99.3976 913.345 98.6826 cv
912.233 97.6428 li
911.469 96.9278 911.095 95.7848 911.456 94.9572 cv
912.04 93.6189 li
910.915 92.9909 909.707 92.4935 908.433 92.1451 cv
907.82 93.616 li
907.473 94.4494 906.389 94.971 905.344 94.9146 cv
903.824 94.8326 li
902.779 94.7762 901.758 94.141 901.502 93.2751 cv
901.084 91.8566 li
899.788 92.1043 898.544 92.5077 897.373 93.0467 cv
897.855 94.5849 li
898.124 95.4465 897.63 96.5425 896.793 97.1712 cv
895.576 98.0853 li
894.739 98.7139 893.548 98.8837 892.796 98.3846 cv
891.555 97.5613 li
890.738 98.5658 890.038 99.6709 889.477 100.858 cv
890.844 101.733 li
891.604 102.219 891.93 103.377 891.693 104.396 cv
891.348 105.879 li
891.111 106.898 890.308 107.794 889.411 107.895 cv
887.931 108.062 li
887.953 109.391 888.134 110.685 888.461 111.923 cv
890.067 111.715 li
890.963 111.599 891.956 112.276 892.43 113.21 cv
893.119 114.567 li
893.593 115.5 893.553 116.702 892.931 117.356 cv
891.913 118.427 li
892.766 119.408 893.737 120.286 894.804 121.039 cv
895.889 119.86 li
896.5 119.196 897.697 119.076 898.66 119.487 cv
900.06 120.084 li
901.023 120.494 901.765 121.44 901.709 122.341 cv
901.618 123.803 li
902.159 123.887 902.709 123.945 903.267 123.975 cv
904.026 124.016 904.775 124 905.513 123.939 cv
905.585 122.358 li
905.626 121.456 906.466 120.595 907.467 120.291 cv
908.924 119.848 li
909.925 119.544 911.102 119.791 911.638 120.518 cv
912.497 121.681 li
913.615 121.008 914.646 120.202 915.57 119.285 cv
914.617 118.039 li
914.069 117.322 914.159 116.123 914.731 115.246 cv
915.562 113.971 li
916.133 113.094 917.194 112.527 918.072 112.739 cv
919.468 113.075 li
919.885 111.867 920.164 110.591 920.285 109.266 cv
918.761 108.925 li
cp
f
638.179 273.179 mo
630.698 269.345 627.741 260.174 631.574 252.693 cv
635.407 245.212 644.579 242.256 652.06 246.089 cv
659.541 249.922 662.498 259.094 658.665 266.575 cv
654.831 274.055 645.659 277.012 638.179 273.179 cv
cp
668.559 266.571 mo
669.323 264.093 671.535 262.467 673.98 262.32 cv
674.279 259.382 674.122 256.44 673.537 253.594 cv
671.092 253.69 668.731 252.294 667.724 249.906 cv
666.716 247.515 667.366 244.846 669.146 243.162 cv
667.527 240.773 665.535 238.607 663.201 236.759 cv
661.39 238.409 658.68 238.859 656.371 237.675 cv
654.062 236.492 652.845 234.03 653.126 231.596 cv
650.263 230.781 647.341 230.429 644.456 230.511 cv
644.13 232.939 642.343 235.026 639.813 235.604 cv
637.287 236.181 634.774 235.08 633.424 233.039 cv
630.772 234.227 628.293 235.817 626.082 237.777 cv
627.391 239.847 627.363 242.592 625.797 244.66 cv
624.234 246.725 621.603 247.497 619.258 246.803 cv
617.947 249.508 617.096 252.319 616.676 255.15 cv
619.009 255.895 620.752 258.016 620.882 260.606 cv
621.012 263.194 619.492 265.477 617.248 266.453 cv
617.964 269.284 619.1 272.004 620.634 274.507 cv
622.901 273.575 625.602 274.079 627.367 275.981 cv
629.133 277.883 629.434 280.614 628.337 282.805 cv
629.506 283.647 630.753 284.413 632.075 285.09 cv
633.397 285.767 634.746 286.332 636.113 286.789 cv
637.25 284.619 639.643 283.269 642.218 283.591 cv
644.793 283.913 646.78 285.811 647.347 288.195 cv
650.275 287.979 653.146 287.312 655.863 286.239 cv
655.344 283.848 656.31 281.281 658.486 279.875 cv
660.664 278.467 663.404 278.643 665.371 280.102 cv
667.424 278.108 669.209 275.775 670.639 273.132 cv
668.706 271.633 667.796 269.047 668.559 266.571 cv
cp
f
646.589 309.48 mo
646.896 307.019 li
647.255 306.998 647.606 306.912 647.937 306.772 cv
649.286 308.861 li
648.454 309.287 647.526 309.504 646.589 309.48 cv
cp
643.921 308.723 mo
643.604 308.538 643.313 308.325 643.047 308.092 cv
644.851 306.417 li
644.94 306.481 645.031 306.542 645.128 306.598 cv
645.349 306.727 645.58 306.822 645.814 306.892 cv
645.507 309.346 li
644.963 309.224 644.428 309.018 643.921 308.723 cv
cp
641.214 304.757 mo
643.66 304.635 li
643.747 304.987 643.896 305.323 644.1 305.628 cv
642.302 307.297 li
641.729 306.549 641.358 305.674 641.214 304.757 cv
cp
644.924 298.612 mo
645.469 300.998 li
645.129 301.144 644.814 301.349 644.54 301.611 cv
642.596 300.139 li
643.241 299.427 644.047 298.912 644.924 298.612 cv
cp
648.757 298.692 mo
647.636 300.881 li
647.272 300.769 646.897 300.724 646.529 300.745 cv
645.984 298.362 li
646.903 298.237 647.855 298.34 648.757 298.692 cv
cp
651.637 301.227 mo
649.356 302.189 li
649.16 301.882 648.908 301.606 648.605 301.378 cv
649.729 299.185 li
650.555 299.71 651.198 300.418 651.637 301.227 cv
cp
652.204 305.017 mo
649.828 304.284 li
649.875 303.918 649.853 303.55 649.773 303.195 cv
652.061 302.23 li
652.34 303.123 652.396 304.081 652.204 305.017 cv
cp
645.488 303.171 mo
645.881 302.496 646.747 302.268 647.421 302.661 cv
648.096 303.054 648.324 303.919 647.931 304.594 cv
647.538 305.268 646.673 305.497 645.998 305.104 cv
645.324 304.711 645.095 303.845 645.488 303.171 cv
cp
641.905 301.082 mo
641.948 301.015 li
643.896 302.49 li
643.727 302.83 643.625 303.188 643.586 303.548 cv
641.151 303.67 li
641.186 302.787 641.429 301.899 641.905 301.082 cv
cp
651.562 306.707 mo
651.2 307.328 650.734 307.85 650.202 308.271 cv
648.852 306.182 li
649.072 305.977 649.267 305.738 649.426 305.464 cv
649.499 305.323 li
651.881 306.057 li
651.788 306.277 651.686 306.495 651.562 306.707 cv
cp
655.625 309.211 mo
655.134 308.802 655.007 307.961 655.263 307.267 cv
655.635 306.256 li
655.891 305.562 656.533 305.004 657.172 305.012 cv
658.192 305.024 li
658.292 304.102 658.279 303.177 658.158 302.268 cv
657.046 302.273 li
656.408 302.276 655.77 301.713 655.52 301.017 cv
655.155 300.003 li
654.905 299.307 655.038 298.467 655.532 298.062 cv
656.331 297.408 li
655.826 296.65 655.225 295.947 654.536 295.317 cv
653.676 296.045 li
653.188 296.458 652.338 296.437 651.698 296.064 cv
650.768 295.522 li
650.128 295.149 649.69 294.42 649.809 293.793 cv
650.003 292.765 li
649.107 292.503 648.194 292.356 647.283 292.317 cv
647.09 293.441 li
646.982 294.07 646.317 294.6 645.588 294.726 cv
644.526 294.909 li
643.797 295.035 642.993 294.758 642.68 294.201 cv
642.165 293.282 li
641.326 293.651 640.529 294.121 639.793 294.687 cv
640.371 295.678 li
640.693 296.23 640.525 297.064 640.047 297.629 cv
639.351 298.451 li
638.873 299.016 638.079 299.321 637.482 299.095 cv
636.496 298.723 li
636.081 299.567 635.778 300.44 635.584 301.324 cv
636.663 301.712 li
637.264 301.927 637.671 302.674 637.668 303.415 cv
637.664 304.491 li
637.661 305.232 637.249 305.975 636.646 306.187 cv
635.659 306.532 li
635.881 307.425 636.208 308.29 636.637 309.109 cv
637.7 308.717 li
638.299 308.496 639.091 308.807 639.565 309.375 cv
640.254 310.203 li
640.728 310.772 640.89 311.607 640.564 312.156 cv
640.035 313.046 li
640.348 313.274 640.676 313.488 641.017 313.687 cv
641.482 313.958 641.959 314.189 642.443 314.388 cv
642.998 313.417 li
643.315 312.862 644.121 312.591 644.85 312.723 cv
645.909 312.914 li
646.638 313.045 647.299 313.58 647.402 314.211 cv
647.567 315.22 li
648.488 315.157 649.398 314.982 650.274 314.703 cv
650.077 313.612 li
649.963 312.983 650.407 312.257 651.049 311.89 cv
651.984 311.355 li
652.626 310.987 653.477 310.973 653.961 311.389 cv
654.731 312.051 li
655.384 311.425 655.971 310.712 656.474 309.917 cv
655.625 309.211 li
cp
f
821.537 150.571 mo
804.655 150.571 790.97 159.984 790.97 171.595 cv
790.97 177.322 794.305 182.513 799.706 186.304 cv
787.149 213.174 li
807.725 190.347 li
811.874 191.796 816.565 192.618 821.537 192.618 cv
838.418 192.618 852.104 183.205 852.104 171.595 cv
852.104 159.984 838.418 150.571 821.537 150.571 cv
cp
f
495.713 244.797 mo
512.595 244.797 526.28 253.908 526.28 265.148 cv
526.28 270.693 522.945 275.717 517.544 279.388 cv
530.101 305.399 li
509.525 283.302 li
505.376 284.704 500.685 285.5 495.713 285.5 cv
478.832 285.5 465.146 276.388 465.146 265.148 cv
465.146 253.908 478.832 244.797 495.713 244.797 cv
cp
f
285.515 88.8932 mo
264.559 88.8932 li
264.559 92.5714 li
285.515 92.5714 li
285.515 88.8932 li
cp
261.215 88.8932 mo
240.26 88.8932 li
240.26 92.5714 li
261.215 92.5714 li
261.215 88.8932 li
cp
282.394 96.027 mo
277.489 96.027 li
277.489 99.7052 li
282.394 99.7052 li
282.394 96.027 li
cp
274.814 96.027 mo
263.667 96.027 li
263.667 99.7052 li
274.814 99.7052 li
274.814 96.027 li
cp
260.769 96.027 mo
249.623 96.027 li
249.623 99.7052 li
260.769 99.7052 li
260.769 96.027 li
cp
244.941 96.027 mo
211.302 96.027 li
211.302 99.7052 li
244.941 99.7052 li
244.941 96.027 li
cp
238.476 88.8932 mo
211.302 88.8932 li
211.302 92.5714 li
238.476 92.5714 li
238.476 88.8932 li
cp
216.317 82.8741 mo
202.608 82.8741 li
202.608 86.5523 li
216.317 86.5523 li
216.317 82.8741 li
cp
281.948 74.8797 mo
263.691 74.8797 li
263.691 78.5579 li
281.948 78.5579 li
281.948 74.8797 li
cp
284.304 67.4919 mo
276.024 67.4919 li
276.024 71.1701 li
284.304 71.1701 li
284.304 67.4919 li
cp
273.476 67.4919 mo
263.691 67.4919 li
263.691 71.1701 li
273.476 71.1701 li
273.476 67.4919 li
cp
261.215 67.4919 mo
228.468 67.4919 li
228.468 71.1701 li
261.215 71.1701 li
261.215 67.4919 li
cp
261.215 74.6257 mo
252.098 74.6257 li
252.098 78.3038 li
261.215 78.3038 li
261.215 74.6257 li
cp
249.623 74.6257 mo
240.506 74.6257 li
240.506 78.3038 li
249.623 78.3038 li
249.623 74.6257 li
cp
236.693 74.6257 mo
211.302 74.6257 li
211.302 78.3038 li
236.693 78.3038 li
236.693 74.6257 li
cp
225.011 67.4919 mo
211.302 67.4919 li
211.302 71.1701 li
225.011 71.1701 li
225.011 67.4919 li
cp
216.317 65.1509 mo
202.608 65.1509 li
202.608 61.4728 li
216.317 61.4728 li
216.317 65.1509 li
cp
f
346.59 214.564 mo
354.171 214.564 li
356.778 214.564 359.054 213.171 360.312 211.092 cv
341.164 212.078 li
342.481 213.599 344.421 214.564 346.59 214.564 cv
cp
360.942 208.835 mo
340.302 209.898 li
340.091 209.911 339.897 210.006 339.756 210.164 cv
339.616 210.323 339.545 210.527 339.558 210.738 cv
339.583 211.156 339.931 211.484 340.349 211.484 cv
361.04 210.419 li
361.251 210.406 361.445 210.312 361.586 210.153 cv
361.726 209.995 361.796 209.791 361.784 209.579 cv
361.758 209.162 361.413 208.835 360.942 208.835 cv
cp
365.429 171.995 mo
364.874 171.995 li
355.353 193.973 li
357.178 193.973 li
365.429 171.995 li
cp
347.657 179.533 mo
356.687 167.665 li
356.278 172.656 li
365.059 170.964 li
358.288 170.964 li
359.24 160.173 li
351.025 171.363 li
351.624 155.413 li
336.231 171.281 li
346.757 166.309 li
347.657 179.533 li
cp
345.668 193.973 mo
336.147 171.995 li
335.592 171.995 li
343.844 193.973 li
345.668 193.973 li
cp
367.437 181.503 mo
367.445 181.503 li
363.822 185.65 361.586 190.779 360.966 196.183 cv
340.218 196.183 li
339.598 190.779 337.362 185.65 333.74 181.503 cv
333.748 181.503 li
330.307 177.568 328.218 172.422 328.218 166.785 cv
328.218 154.428 338.235 144.41 350.592 144.41 cv
362.949 144.41 372.967 154.428 372.967 166.785 cv
372.967 172.422 370.877 177.568 367.437 181.503 cv
cp
339.408 197.615 mo
339.408 198.955 li
361.353 197.627 li
361.353 197.615 li
339.408 197.615 li
cp
350.592 218.569 mo
352.518 218.569 354.173 217.423 354.923 215.777 cv
346.262 215.777 li
347.011 217.423 348.666 218.569 350.592 218.569 cv
cp
361.476 198.256 mo
338.769 199.629 li
338.558 199.642 338.364 199.737 338.224 199.895 cv
338.083 200.054 338.013 200.258 338.025 200.469 cv
338.051 200.887 338.398 201.215 338.816 201.215 cv
361.569 199.84 li
362.005 199.814 362.339 199.437 362.313 199 cv
362.287 198.583 361.942 198.256 361.476 198.256 cv
cp
340.264 209.265 mo
360.905 208.201 li
361.041 208.193 361.171 208.21 361.297 208.238 cv
361.331 207.957 361.353 207.673 361.353 207.383 cv
361.353 205.567 li
339.408 206.894 li
339.408 207.383 li
339.408 208.09 339.515 208.771 339.705 209.417 cv
339.874 209.331 340.063 209.277 340.264 209.265 cv
cp
339.408 201.816 mo
339.408 204.033 li
361.353 202.705 li
361.353 200.489 li
339.408 201.816 li
cp
362.313 204.078 mo
362.339 204.515 362.005 204.892 361.569 204.918 cv
338.816 206.293 li
338.398 206.293 338.051 205.965 338.025 205.547 cv
338.013 205.335 338.083 205.132 338.224 204.973 cv
338.364 204.814 338.558 204.72 338.769 204.707 cv
361.476 203.334 li
361.942 203.334 362.287 203.661 362.313 204.078 cv
cp
f
442.422 147.632 mo
450.178 147.632 456.265 151.363 459.996 155.585 cv
455.381 160.788 li
452.043 157.155 447.92 154.799 442.521 154.799 cv
430.249 154.799 422.198 164.813 422.198 180.816 cv
422.198 197.015 429.954 207.225 442.127 207.225 cv
448.313 207.225 452.829 204.672 456.952 200.058 cv
461.566 205.065 li
456.461 210.956 450.178 214.392 441.931 214.392 cv
425.732 214.392 413.755 202.022 413.755 181.012 cv
413.755 160.297 425.929 147.632 442.422 147.632 cv
cp
.917647 .956863 .764706 rgb
f
473.542 148.811 mo
510.651 148.811 li
510.651 155.683 li
481.69 155.683 li
481.69 175.907 li
506.135 175.907 li
506.135 182.878 li
481.69 182.878 li
481.69 206.243 li
511.633 206.243 li
511.633 213.214 li
473.542 213.214 li
473.542 148.811 li
cp
f
525.277 148.811 mo
533.719 148.811 li
556.987 189.259 li
563.958 202.61 li
564.35 202.61 li
563.958 196.131 563.369 188.866 563.369 182.092 cv
563.369 148.811 li
571.125 148.811 li
571.125 213.214 li
562.681 213.214 li
539.316 172.667 li
532.345 159.414 li
531.953 159.414 li
532.444 165.893 533.033 172.765 533.033 179.54 cv
533.033 213.214 li
525.277 213.214 li
525.277 148.811 li
cp
f
602.144 155.683 mo
582.706 155.683 li
582.706 148.811 li
629.83 148.811 li
629.83 155.683 li
610.391 155.683 li
610.391 213.214 li
602.144 213.214 li
602.144 155.683 li
cp
f
641.412 148.811 mo
678.522 148.811 li
678.522 155.683 li
649.56 155.683 li
649.56 175.907 li
674.005 175.907 li
674.005 182.878 li
649.56 182.878 li
649.56 206.243 li
679.503 206.243 li
679.503 213.214 li
641.412 213.214 li
641.412 148.811 li
cp
f
701.295 179.343 mo
712.094 179.343 li
722.109 179.343 727.705 175.22 727.705 166.875 cv
727.705 158.432 722.109 155.388 712.094 155.388 cv
701.295 155.388 li
701.295 179.343 li
cp
728.49 213.214 mo
712.978 186.019 li
701.295 186.019 li
701.295 213.214 li
693.147 213.214 li
693.147 148.811 li
713.273 148.811 li
726.428 148.811 735.853 153.523 735.853 166.875 cv
735.853 176.889 730.159 182.976 721.421 185.135 cv
737.718 213.214 li
728.49 213.214 li
cp
f
337.185 52.6349 mo
344.94 52.6349 351.027 56.3658 354.758 60.587 cv
350.144 65.7906 li
346.806 62.1578 342.683 59.8019 337.283 59.8019 cv
325.011 59.8019 316.961 69.8155 316.961 85.818 cv
316.961 102.017 324.717 112.227 336.89 112.227 cv
343.075 112.227 347.591 109.675 351.715 105.061 cv
356.329 110.067 li
351.224 115.958 344.94 119.394 336.694 119.394 cv
320.495 119.394 308.518 107.024 308.518 86.0148 cv
308.518 65.2994 320.691 52.6349 337.185 52.6349 cv
cp
f
408.262 85.7198 mo
408.262 69.7174 400.703 59.8019 389.216 59.8019 cv
377.73 59.8019 370.17 69.7174 370.17 85.7198 cv
370.17 101.821 377.73 112.227 389.216 112.227 cv
400.703 112.227 408.262 101.821 408.262 85.7198 cv
cp
361.727 85.7198 mo
361.727 65.1031 373.017 52.6349 389.216 52.6349 cv
405.415 52.6349 416.803 65.2013 416.803 85.7198 cv
416.803 106.435 405.415 119.394 389.216 119.394 cv
373.017 119.394 361.727 106.435 361.727 85.7198 cv
cp
f
423.476 53.8131 mo
431.919 53.8131 li
438.693 88.8614 li
439.871 95.8321 441.246 102.704 442.423 109.675 cv
442.816 109.675 li
444.289 102.704 445.86 95.734 447.333 88.8614 cv
456.266 53.8131 li
463.728 53.8131 li
472.662 88.8614 li
474.232 95.6359 475.803 102.704 477.374 109.675 cv
477.767 109.675 li
478.945 102.704 480.123 95.734 481.399 88.8614 cv
488.173 53.8131 li
496.027 53.8131 li
482.675 118.216 li
472.858 118.216 li
463.139 79.4366 li
461.96 74.4298 460.979 69.8155 459.997 64.8087 cv
459.604 64.8087 li
458.623 69.8155 457.444 74.4298 456.364 79.4366 cv
446.841 118.216 li
437.122 118.216 li
423.476 53.8131 li
cp
f
549.431 85.7198 mo
549.431 69.7174 541.872 59.8019 530.385 59.8019 cv
518.899 59.8019 511.339 69.7174 511.339 85.7198 cv
511.339 101.821 518.899 112.227 530.385 112.227 cv
541.872 112.227 549.431 101.821 549.431 85.7198 cv
cp
502.896 85.7198 mo
502.896 65.1031 514.186 52.6349 530.385 52.6349 cv
546.584 52.6349 557.972 65.2013 557.972 85.7198 cv
557.972 106.435 546.584 119.394 530.385 119.394 cv
514.186 119.394 502.896 106.435 502.896 85.7198 cv
cp
f
579.959 84.3453 mo
590.758 84.3453 li
600.773 84.3453 606.369 80.2223 606.369 71.8771 cv
606.369 63.4342 600.773 60.3907 590.758 60.3907 cv
579.959 60.3907 li
579.959 84.3453 li
cp
607.154 118.216 mo
591.642 91.0216 li
579.959 91.0216 li
579.959 118.216 li
571.811 118.216 li
571.811 53.8131 li
591.937 53.8131 li
605.092 53.8131 614.517 58.5255 614.517 71.8771 cv
614.517 81.8912 608.823 87.9781 600.085 90.1378 cv
616.382 118.216 li
607.154 118.216 li
cp
f
628.848 53.8131 mo
636.997 53.8131 li
636.997 86.1129 li
637.292 86.1129 li
664.093 53.8131 li
673.321 53.8131 li
653.196 78.357 li
676.462 118.216 li
667.333 118.216 li
648.09 84.7384 li
636.997 97.7955 li
636.997 118.216 li
628.848 118.216 li
628.848 53.8131 li
cp
f
685.688 53.8131 mo
693.836 53.8131 li
693.836 118.216 li
685.688 118.216 li
685.688 53.8131 li
cp
f
711.506 53.8131 mo
719.95 53.8131 li
743.216 94.2613 li
750.187 107.613 li
750.58 107.613 li
750.187 101.133 749.598 93.8683 749.598 87.0944 cv
749.598 53.8131 li
757.354 53.8131 li
757.354 118.216 li
748.911 118.216 li
725.545 77.6695 li
718.575 64.4161 li
718.182 64.4161 li
718.673 70.8956 719.262 77.7677 719.262 84.5421 cv
719.262 118.216 li
711.506 118.216 li
711.506 53.8131 li
cp
f
800.939 52.6349 mo
809.775 52.6349 815.666 56.6603 819.396 60.587 cv
814.782 65.7906 li
811.542 62.3541 807.517 59.8019 801.038 59.8019 cv
788.078 59.8019 779.733 69.8155 779.733 85.818 cv
779.733 102.017 787.391 112.227 801.135 112.227 cv
805.75 112.227 810.167 110.755 812.72 108.399 cv
812.72 91.6105 li
799.074 91.6105 li
799.074 84.8365 li
820.181 84.8365 li
820.181 111.933 li
815.959 116.253 808.891 119.394 800.251 119.394 cv
783.366 119.394 771.291 107.024 771.291 86.0148 cv
771.291 65.2994 783.758 52.6349 800.939 52.6349 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (\700\755\762\756\755) ()
%%Title: (coworking center 7.eps)
%%CreationDate: 2/9/2015 9:04 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj27oej')FhUf0M6_%!rFEL=6J4`:!;%[ag0I-ZC+c.)la7J<jfq1-$G</E3pYMJEmMq6kr+4EkC/)+9Ep$334_W@aXi#P`
%5KfH`iF`pY5\,P0@E/39O#qQW1q)_`;a_h1FXW@"b:5_1802<,o"rTp+Zbii[b._m:?nt\<juA:pNhO:Zeb"#B*pjRXj$CZ+ad20
%]WX8`mCtFPAu0e^ATA`9YM<gBbO+^hV4TJFO$L6GKjXSI'NBUt'5mP&:&s"Ip\W<#W13Xr]q/"X#q5brIJdW(n]>P;aXSD3<q*Tt
%A?Fe)2?*.8pWrT=RbWYVAp<O29"35eZs1o(EX&Bg1C#"6MY2VET\8N-A;4(QC]AhfX-h5Glla`O;?f0*kf7a/r%AZ#5kMB2nGbk]
%ZbPJfIR[o`\$NJB`&;ui0O@4_pt0co`0gf@RA3O:m-`G#3mC:3:(+._b_EKlYb]q`(\fNq'niuh6:1KN'd/26?LS"E'F$%f4G<2k
%CZ7ZJ^8V'FeGi^t4K2Csor_Nu>dqJspb+2)&DG;-O#_T7d&_Fu[i0[^9Wfi*ja#^ceXJff/739qL`$h8VuJf8h+IFGh?Uc42[?iR
%bF-/(5'o"DfrY+Q,G,=paNI>l[G--t4^D$k4/<+hAT^I5.l0J)U'65?B8#`om>8>AX9'o.Wj]EN>JRd&]8a]tCKZ;t[SpiZ;m1Ba
%[38=M583O9BFri>nL':p\A#i$qu(gklFcW\$I9Bt_ok7$_59l->+p@rCXBtKk3LA#fJ:_FU&/s,&,H^7(j+P8#hXLOL'!>M<rD,&
%0DMk]DlYmK&(eG\6"cs8d/NWt\Ql8M?dHBa=8VA;XD0?YErR*Vj*kV.PP"fLdWhC[Jj2`o+71ceRoI6OQ.j:)1]2g0mK50pW:8[_
%E6U5j6JZX.fh/#\In]$5cFWZWIgTcOTCDRUrgfoKL]NT<_[8S!cfb:8^T9B\RhdspjTYa8)[X9s+0./%=/kkfhJ@D?rTMj,V,b^O
%X`QX=qQeYQZmsl?IIIcZEYAet4Bq%c-a?e)Ap?'"+'==7-XNpEd.1f/#P=kp*0R>VYU_c=AlOS"iZX7,8:6Z%WCm0re4mVVli$D]
%&s`pR`8KN6U6"JfRnD/9SY%;,m:N,;6N%P"0?Lc&/uTr.)rGKR0CCVt"i&JdaX$S:i3#opN?<u#E6D+\5#^A^Q,Bs6SV]FoEdmoY
%DX1kl-b;D'*G'EKmH-X*CgRYu!6p7.^h=L>/!0qA2k2d!.fh\^47n#4">TG]g3_d(YOrn@qV4B:E7TBfqa..4C`IUKSYJ[Ih]76>
%OLL@rPmIo">i-co,U.M]l/42XD^p<<V4DXQPTo,VK]JkW>95M6'HV6>E)\*dglseSD^46%o.6O_3n*/tlDP@ZR8U-fp<*W>n5>^G
%^FK3I;.d/>hlUu>oeD=/RJNT(!olAK1MHFHCmKq*Bi1"5G>lB46R=_=E?SH%dI=F#Eh_Q%2tS/YQV$dgEUh@>6mge`R[<?r9!&-F
%l#LD(FfSM&!P@mK5oF#s7H_Nq*W)7PmE\!\rqXSa<,+fD6MSZZ]I:Qk;3^":m!HHs+5`F!JfjAa5CfBQcbWE60>LB20DT1o/3PH?
%a+mMAWW2ku7VZ=q!W7W?PEU8pO@Apn.1^l\!iu21[I%8n5N2G18(%n_oecUapp"-jImWqPH$T7MLDgP,OoCTYP46,iJ1:[]hCoZ1
%,W$RMX[8:S79*5sW7';5[9@@@_(4+t?-l#GdUd)_(a"L-NA9";->2o=;_UX=11fcShh$6[g):q.q1l@9YW82^"^?SNEo=ceaZp"j
%0L69&+JcG/C;,o_Kr"cuCrqp7Xcb/*q!he\]olGJ(J@3p?_Ni?k27U<#4Q,\cuMu"(!^F=0>^o/BZomDqX]aL&/P\-4T+9u-S,Di
%"+;Vc!fX%Mb2m=#AQ>&cj-N1PkG__'rtS01prQIL6L*1USdF[bZ>\7)5Q<^n5O>)<*kFNFgFc%T*)Z4rja7Al(\7BL/g'5.]S2d(
%H'O_A5;-D-bIJ6b?-),K\QkL0i5atR:?PSO!XFUQ(RCbi`BXA.Md[dQLUf)IK@%Jr$$E2.o0OPpg9n%<GP:T5id*6clQ'/N:H_f:
%oF*U51MOpM6l4XfkW&tZ^Z(#<=jOmd;$)2*1'=&#[@reopTIP^mpWE4^hTLbq#M1;7lD%sMVp-iK;;,7.LZjqQ%>A*iQ4K[rc(rj
%UO7&0M]u:[f"De>J%5)^^"d;p0jq7#s.3AJJ%^3Cq4_/qe*k7F'k7W:ma!U0X^pSnF4+m@LPm;.]8cbT^CIEg!YFM*h9'H#l;=<Z
%ldf9.iFeH75k`/=id^ehd=$ZYk@";Xgs7P=5c(U#;5,.tk.jjmeYr/%/g*M!92s7=8%12&K/oqj%ZgH87M?A/C,fo3o:H`Wps4$m
%iFe#kr1)OREZ9@5Q$\Xuc";t+p;H`g2/4RpL.%4D>FP\2M9u4r0cc?(UDRd(_2V8EU`7I`M9,[h]0Bu[>LiTFg#5h=V^8Kn+p7DV
%O/"QlH!0N9IalgtEftZF@qrDqq@2q/`Xf1AFEf3rAo&^A'9f.n:QHUMI\g+!GO+,k^oD*Zl7)R$%1]l!pq_+=]g4H6dZ+T3$CctM
%/2$8[GTg5I*@EZVID1*k-aG.F825"Dm7t?!l*n8R(1g#t.5'@h&%^<f3leI&B^Ueu5GG\me%TT9Xc$`gkW&Ksn!?B<Usna/GU^UT
%q+\OF@qC#mQAY?fbf\/9S%?G[4M0hr_A2b1eBG8r^Z!idF=Z:Y1gdU/^$F\4V;U0tD`:t9?&CnqbdEqNFu.`fk1\'b]:!F>UX<BP
%PO?j.H97BE9[HPc*']^kW1jtrJ'[6,GV1XB\/_V!bpgf!1QH'j6M#]HNpkOpg-8J;n1`F*\g_>gDT06\::$,GXJo*u2)(dc`JB8E
%PI'4PBnfTh%Sd4Qb9Y?*'#]tP(8e8U1g1\G[h1^2;m5hOK/?V/Jp($ZlZJYU1i$-o1okl7-H2p<Ulu^]aG:Sgb6SRWoeQ#L"b)6A
%=7D7#pp&8NBr#K332pnX;uOg$(Ua0mqEKG`NRCU;KU(\,Q(KL[#>SdDdS8t41?HHAdn;Ee=t9>FS##+91Q;;/@4Fdkd7r,EWO*Qk
%WDq:[HM]Tpd&^9Ls(Kcee5T;O,l(uAr`ldN<4N2cs*jRV?2Y99AQ(^]?h(fV)8B:W%!oTVV3Sf?<7<E$Y$Jt!-%AYdY5dV!jf_)M
%-8M<1'^C$*\4BA#iP>Js"YuuM$D[qE*aa#8Qs:%FR[@ZS@LO&ArC4dL->;M=(djaOIQYGpSn8Bdbo#LE*QW,nIrnTWV\-UD8j!$@
%&AB>l1:<s.V0$7*IIr"i8RBAgLgOEA?eKdi>gqm/mU7+`F-7o\gl'i'o'?e\IsHd=ii^et%!d#NI,:+3cB)[OaT'<,ORWIaOs3kL
%V9Y/oF5eXSn#`D8U9eq$ft$Y>gj"![r3m[)ft$Y>h"ZKKbg)3gpfk(Gj51g;B9(XGUF_B20L@oO-MpB<ac@NI'<_ZD_."-$&5P$l
%dfh(1%\tc_)@$M"?G4^'Ja(TT,9"jlR$dQ;688q\#N5QXjiUHk.@5J3Y)s]r>U-)0H:7eA?CEcp0T2%;,%S"cfdoIUf#1`Pm+1L)
%'i8`>'j/;l@=.*+UYW$G=1\(Y9"S;A?$Ml`'glW5m)<-*C`;>HH58_,4cihEm%:D68T?4VDo07e7aD^S'AFj"MD8-1gGg(HH;Q5j
%S8ajmfH?5u1YpMg$bs"mjCi?j4`Vk%?DLs@r$EaE.(d5*I5kGAEk3In!)*@VJ3Em)!ur)ES7?Z')ga/GA$b[P</6O/I5'(G,L[u=
%B7ZCPi+3[KR0?npXVZ^p3:Pq%0GK#)"^YelQW`6X(3l5N?=nbTADh$>!rMiTq+OK_Bu`50=#tqTm2i>'-'rf?*VAZ@)g<b5%_kXZ
%bT<k$VC21I7@JuEVZ">g2!Zj_%p#JD_sG3sM<^>ko722aN5=c1O3L.DX4"NI$u;^[Vc]Td]5jFTjtn+$EV>jM'J%5r!dO#'i\,Vp
%=%5-o??*P_Y;lKt]$=W$R_@W9.5hq;3dnh[Wkhr.06gb:fAJ/cdgb;/I*&Gh8S[9,qD/!D(VU0P%=G)g58Ao+JLR5k`g=NKHT')S
%AGa[/!4ui]J>N&3e1:I\`UsPAc(;Tc,@W!6C0p^K02b>l=rPXkS"T%A1PR`D]/Dt"I8*VngBRtsH67>u[pD^QE.2@d(D#s1#d9S]
%NG#iAej6XuY&Os<np[oC4^Q5aeF$;9NW.780:U+uq3g[%$e%h-mo$%Z?C?5+E]dE7)jQQUY2h4HG3NXR3U8`+d490jE366phGL-#
%ri:"OAD>Y[)n;JXqYbQ$lAF<G]saHJSXVe,2nP:P>D=kZddLPl8^jOGbVd$a,u]V`X*.Y2?iCh08X`FRF'Ip54L^M@F'e+_G(/C1
%Te#rmc?2'NB;XKaRs%_Mqeb&?lHCZf)Fi,u-Ml=U1:oh9N?S5Q%J"4ni(o%:SHZXO>FOks8T&^(Ho`n%c#/V=Z%fo/$*LTRj>5mW
%%0CD#Q/h38q/e%*fa[L$<fXL*j>5V:F`l_EN$//6>fH>^DitM*CH'A5D.S0W/A+%0nQU?[,rstX>H.<Hbnob:)Lm[gNTH).qPt09
%ST:9n-3p2$3-bh2p`n=9oh".7%B@t8kr8IhM[nK20'"/2DPNV7Ca7Gn)I1idES@p0l.*u5qY*:h<D@NJnJ(qt`jRtmmLPc5LD7Vb
%WnD2ua#;b:r1jDEV0LVM9#tt6n_DH9^W":hd9`6EnbAB?2>'RW*D6&Ya_89&;M)(C4MP^99t-M"hN*%h(T[$!hh[c_*kLo\A1V&B
%7ktiYR&O$a9#g=X1/2:=0E4Q:@4/V_YOEbMf.OQ#(C[]e\Tb3l+UK29i1SF_\:2<QC*sULCml:a=4*Q;26NEpfoR1KMVEecD&6K'
%KDIXn+lp%T#PDuFd@F\CA(jtn?eJ5]\lU(:l"<m6b0Y[rU^]PK:et2^PR">Up6?=:f87VT2WJAO4.E@ufPJuP-Eb*;b>0rTKNoM0
%B><3'[!Dsk^4B]"H2cNO5(:aMRsM.,Qg]H0M80@WC9j/t/G*r=l;5W-Y1]=j3.I9%B.9.]-cPX8p#'#%GnPNWN3Ma9@$LQ>(]6mm
%'ZT(tgKq&#\%Q%abhq^#r0;E2K\oqLDi2AVBhj5^BYn]\2k?7.m9m*oS#>*=8c)!bJIa6u,2<*]->ZFtkLgQLX.;_"[AR8Y*-Bp_
%C"@pX-8gs(^!j'Ya^D:$C5m]&69ZB7D(R**SFUEk),dk'3#OP'C&Ic=i^jT[dAk_-)QcslE5KKC/,`qGe)_kBUk[H:[-Enj02tt&
%c0FnD)UC<-3iPEAYoo5-(q'?p7PUJ\8*MBYb"D9/b0Pu>^JUc$?g4Gp3gaqc6ddE<;bOO+C2QsE/f[i)2,7&+\DJ*Y\`t!=Y2)ZA
%.^OHTh<s1q0&tJBA=/'Ga"n'V:4<&WD#@d'HtqajBmfp.Co-YP[j;\)akrtTJ!@F/inhb!G<l05(XOM>iI3d%F117\o:ASe,.R&f
%0#\OKp=sK1?+f?>.p7r-Rdp0_;!WAp?1bY_s.M$1@LB]3>%<ZV<$NTWPV$-U>S>&fWa<hdHmEp1fbs0pkG[3Q+/V"sRRt5C?1ODO
%j@_321W_S>Ho&l'rK9r)n'6.^q5[@cofYm,DGk;CDD4TRFC.*D'2E:%Mgh,RUj7&mP&HAV)FU%lQjMonY^HLpJbD*TdO+>_c$"`I
%HQ8W55-ScT9mYMN2\p#O:L/[lOEBCKGh"EO>kqUpfAY8Z1h2pH8#NN3f:NQ1Bto+Dr<bbE2>^G?/,l[%UYe8KSFT=UHi9T$^&a\e
%-8i<d='AD-9ZLEmq`=%?Nt_LOIQmb#@Oh@=6-!-+)TB(qs!$9.U^mH!d`0pS2eLrN4\L\1LOsd9<Q]I^`p26d<DT.gR!g,j@LTRr
%jS\CT\0tcuA.3L!A%8sSaEcUUXnihjrRC/Qff*r3<K:/.$3$2\n!-KER!fY2'jcsYg5B)td(c%6n6;(nAe.:(X3sOYX)jT,0lcN#
%QDu[)qL+[00h^'l/I).>HblkkHhMg#b3nQ)"k0n8fCeFIbZDE"^=r7k]-4B0h$p&V$tnjh2pr,o9&/5>NG/75YCb%D)UiG6V7<Kc
%MeGf>f9o&aVU?.gY!GH#bnt%)NN)SrYM,S?75STgNG2Ub=[Za8dC:Y<%IZ>H1f=eFb!\(h_-7W*js:Al4aDmf:^I&+b@-(A(k/U0
%g40!j^0.7A>4&Nm\0o^ghiC+#`_K03q6YHcZS0:<A"/W7`U^2#[pn=i\pj)4m!BJEl_6d./t;].cg7,9B)^Z2hjaFg1OnkCmdI!V
%^h3T&Fn#..iKlR&a?H2@I+.3IV-($k_`)Z3Ae*_BiL;iT1P]mDM!O-k?*i_VY=$<MW[51g5+gu(k0_Mm^QiimbP:PZNU6Zi?Co68
%86):1f?WG!2nCW@fY8j_F'?WTDh%T&n$5?2nXGSO@VdC2I`#ccG2`+`!]JLgQC77=+8HW&i=<tPf\S(4Su]34-h,Yo^MAI/iNHRu
%L<!u,3,@7BHAZe1fiasegQ\33VD.PDkZQhm)Xle1.%YqanUoM7k20L&'ULV%BtmP[_V_23*HY&VSMC'rHLIb>X/dJIY/:F?>`'c*
%_GR/[W],.ec$D6Qbiil*8W@XM`OXs2O7-nI$#?#>UXs3\WqDR%X8fi\\WSH*U]T)C3,6&<SrT.oIPPPb'dLJR+#*Y^`nHFYVck9>
%]rFd=;nG(O.`GeuMFCgd0/.g'R?3eRq3L0DFKa\V?`A9dl?@Z6W6WrHp&FS_MlW5:EmUr?s-k3MHI-=`dq.l&-b#`tf!F7/@hZ6t
%2hi%+n"AE!8[B1#2Q:\<lXX^j+&/S4C\/Q1db(QedRfFueS_3$;RJPF)-i>60J]R0nYCoiCp`Jm'JIs9/'[ANG+&Z*&u:^0<!k-!
%\Rn_!05(pWQYht9;M2&-s/Q"0aQXRBb5FpkV,h3NM+R4O_l9JXOHZXjk1Z[L`d[k?Q-&4Q-L+`5>)e_F&oHTOp#$`NaLZUJ?8K8!
%N_K+,AYPt<bZ+sVbVE%m.6a5YZ_i/SM\O"f=Xo:JgQ\M.>iUU\Wn/[9--]i#MX%b3\L8n#b:Aa6E\4XnWgtmC\L?"oP`(]:0XG#K
%=Y@ks6JK_);5VRh)3]Sk4`aIu8]7T0[FZiD--]i#MFB\O76+j\:IQm..NY)U?%8Dc;:5m8WpKS3o9AAek1$21b?rn-P?c;3rP_p=
%1;%3LEV1BN\2k#f>C/*H*aGaI%I(\eWVM*_HE>BjXtO1oMAe'@%.L:0rDW/k]QLFCdm)IW$R1)ffpS8$qe(L5`E00KG<qR)$>+m-
%-Ko&n%KtUYgkP=l9!)8Jn-IJKmCd2B[\/pM<4'1!n2t<f-9q=tNu&i5/E"j_RKN?R96sVSAQ>kG?dIfFKAKJfH)4M$"HiPd>D#,"
%q_5p[(+RR@j,f\JOm][4bpE/RTR(_*a%Q._=k=f6`+X@D_pC%"+-,9R*o^gW(u_NSn3$Q"5<^/ar;5:\q6O>8^XN59XS6*]4DVA)
%C=0e89?cL$m8bS+25VI'/j/NgS]47!=c\EPbY._,edJSQ%<aSo#D(6RILUugb2P)."@g6]pi"JhhGpeUE9AkBIcA,6_Je<3q[8.M
%H(Oj,fuqnEKFbP[oN_nEhl=I7O@+daq,EtNI^6h>ZJ&hQ=X2lAL&ZZfn@O5^PR"s=p]H"Mo6K]DihI[piGN.\Z:7qH@/sG?6Y/S(
%RduGle]J't>/S16B_\//!a&J?9^\7e/M8)'/KcTj@en%8_,dC8n+Z-1XK?mj#>Bg>L1(-T^NdJR_[&D6Pj9bnX"S]EQ-Ze:?l#m&
%^S;ZH)J547lbC(JBaan8a&_lGfq/(O]ndY/d,Kq?M#-Qm!nZaBY1GXn(o_j45Fg&Eep_I'D)Q_=^VQ"EQ^0/uS%B[$3.8=.o45Vl
%`2`gOUjPC\?IXQG>-V?Ri1Y>!dYBiqZaUVL\6n`t,IRXR#t*^BO"])-5TFS%s&CrV;C`Ptn2ku`g-9fTk3f[(HTs"9hTAsd#Dho&
%Z)29kS)3?nYP_Ae2s=]HnV;?S$WFW8n#*_n76O8+020>m;r(+M\n8R#>T`:N;,8CaJ!2>\q*\J&jPJQ_\(6P]IYr5\lpdGoSbV4E
%\klN.O^9R]m;t$BNjCe1p"Lim+T?g?M_=`RBP4%L"[S?D;u[[2AnV&?SH!_]Y1H_B*W.bur-\_oH*>o"?6:mSK_@/og\"21Os-b"
%AhE;dn@Q(T5I;OM5I,B<ZULEUI*pO+a0mBa<pNS@*T5Qi3:=_l$k(W;X8Kbl*S8r:-2$9\P`-"$.Go#M2P0kj+"WAqqEb-m[uo[%
%5'?"(TrBan84mp`SA)(?3iiWaE`:AHPBsuA"#K7MkY1c44*.Ib@O8!u/jW3./7\:rHG,'Gpa/kKo]"2<)e%mjT\gXZ1Y\1$^YWi*
%QSMGpg\"mb3J`kt@=Il?U$)+*dC:BA+.q/#NPS3GPL#*Ej>M\4`$$;.h$0ED\I"b#hPtcU>MXV/hTmH0CD"'Z4g3dUV0+br*7coM
%mEVBb8n]<b<a7&s<4`&,G,8Ed<&#CRj(Ak6om"a$&pIh%fOul0`M=]a5Fh)FeL"tKKliHM3%ZCm,i`X17b//##=62)S;_$'Vc'Q)
%R=s\Z8YpWY=sir(mJ^h29!aX6*HN0fgn<PbR@o"tS<bU5bfk(->s3'-T,i+0nH)u]gAlDro]n1gFUHooV%,;P8dDl%f:WqDL-4WH
%VQes[[!J98(N9+9Z],lba5%`IL;0tJ8N%2N"u7Nc\?o(HrM]@3L<YX=OV>'FJ(-9dp&FY?V-9X$fl&\drL`9@kM:;/\Xc5TgdZoE
%q6>rD?>m:H/'[I-B@,ukp3!)S2R>4'FJ(;#bhJls/ATFNokk"E];Ja=B>JFbgrcf)($oaKZi6`V4L\C;;MrS6%=)7SHTT#[Hps]6
%X'`g2VmPM[^%nJPLC)gR="@"0'0RO!?`1onctL,);&l9(I_L`#,W6Z;hp>ceWcrf\H5.MC>6f'"UT#mEVa$EXQOoo'*hc=!^6^j9
%"X!(CI"a*"#?Eg>e0IR8XaVJs;dYBijd].M0:TV?FI_)6&":b!&)TXU?r#\0F-cj=?M+*Mp2OoI>XVk72EJ&]0Mq9]fJnZ56r_)7
%GKraA/r>S,+*7`@",pBVldhC\dttM)46"GW4G%:N[_&qnm2YQ9/A5`k7mE'eD\K^EF8L6XGb2&OIKi3r3[Sj>CoXjW:ALG]G9^jf
%95WZ&6M4<8p@dTo'gt?%CZj:gj'l_+qdgd/DB_5FiR6)Q?2E./cgEag-P]mjd14+.:===r:QDdY-n!^R#?`sX,M@DerCNi4gcIkV
%cKWVfon-Qk`_B@1G?LiD+:5A!roJ*#-0]aSB"$0fSUfd9-EOM2lV+nMkB.RkXORh2K4Z4j*SWK-6&1[ce62%.4)N>hirg,WgJ*Xl
%g_g2df7clL/Zu>8m\FS]3VG^pCj7,baNT]Z]a;";rl+5[KKMniR/A35INPoXlo1d:4.5VWr/PCc>:71\3PttfN9P?arq;a68tXSS
%RoH:i:[l?bUZV**E:bH8e94V5NFUtsFQ[Po>.rNICfNt!l5<3oO:80g#1r,)83H?&0D!VHM6_QVB\(WD<dH<"0'd#RRlqW-''CnU
%<]IZrc`O,!DLntTUH*_T305st9)Hk*p%U<%DCsW2U4==IgH^#a](N#XrU8+'4.!%tmPW#+=`4!gH^'753pRC7Kk0g:86jnO_B38W
%g8fCceXr1a,poY#HC+4c%KP(S=m72%H>[SJYd0Jl`T=L52?6W1i0K"eWJr.g@@kK8gdu%lUA[PG%4+ZVj;,o7qEiF5Or\DOUb'6a
%X4;+bZE6#aXlG3u+P7U7KD%8cZl['IXGk(05[IrDZ2lt%:`q89F5_=QSP7TeIG'"^5S/RWL+b_U]e;"qpH3D:8+nIh95T>Zb@4E[
%NM@Ppb]-)Pb*732IEb@NT#,qKF?9[!YhLU_a4V=8Xa[_09ZZMjQ@k#Th1Kn:;AkF8]to0d;T#@:L+1i^OVrR29lngH4c]`Z*V>RL
%(Z7R2WZP:$\#M*\%Wl)o$rKr2X-I@KnpGurKY=-QXkp0e2Hr^Pn"XgOJl)rSm+hG4O\s#/CA^jTgHB'8g[k%P:nD_&oE>sNT'&A/
%8*KSe_J)2Pq2l6<knjc*o#^L:][_2'HC7##$?X\;6Q]/]kL\6'gKJH5M:DbD4Vtj.$_oZN7Rd.;Mc![p`?kJc1IJcT,n+8K,n+5Y
%r?AcZm>`os]!ZE/Kl/0AK0cPa))j=5$OO`kH%+(q[aJou0B7oSa`q<X.N3FQHJ@c]bXSR>6tjf=T+r/VSJ/53PLf,H9*[j5iu>,D
%N-)(V"!I"1;8%>PQm0uDaj9!?a%$%YX-h:%"W*TF<8q.NSk2>idY:lL2rgCP.#`KJ)IePZ'&8MbnQ%eV)G/(kr>7oQ4)T/UU2O=L
%d3Dp5F@N`@Dq!6hb=U(oM4XN-4k3?_q\roi,pukAj5-p30`%&KZmb3oVLNu62"o:M,#agK[#B_Y1!Yi"`n[L,9?-1o`WF-[$SDXn
%4V@kh:=Hq!dDaoREIC$qc:A'n),;G45(6U[_f<Wmkr@Z.mE<se__``?(g0Kr>=^np]"$$Yk3FSgprQpTb@\Z(Yh%X:>'!5UHHq](
%k[=a:X7;g.F0".\W)lb&Z.#E9*<!GPI66oUlVp]d"'!OO:%)&1e=VA5gjnY4SJ!2t-Y1nD*B/=nfU7@o#"SQ2UNN*CSG2*1S9#V!
%BB=r0LfNlKd8mN2Y$8Nek9V/)Ha(7@0DV@g(YJf[.u)iJ,WkJIkk(D5[,R1g;SE_P4h"ABfEcR2L0p][.sKM'QZk[>YJ,F0Dl*#B
%iMjKeE\Y>[>sC>Q5&B&">/%6qGH]AlA:(f1lR+!"CO,=?qP36=nabh?HdC<TK;pMir9(m:U!t[?lP7/L%i;n5CF`bt&(Xbt3k_rX
%1Of_"=^0Rld>b)rp@F&8?>ZjIWqoJanaKD`R*FJL4O_knm6*:>Mrd%Dp;;3kq!E-/I99aqS[:>&Yi,JTq+'SuTNkI*hr_[2n%FEe
%M?i"erGubdD8QJQk1.LJ\_TUGc,He3l'=Q;XWEfnY:]LS-hG<24+m+ZHL1^$U%p0fh0V.1*diEPo?F]*]B+\C;87'\5DYF>q0KMP
%'q=+4<Zg4Gb8!=@H\F,.?eY#(h=&=Bg;]-M@drc.DJ/K?M`^I3;B%kWiO?AnC8n4?bnZ8ghTBU$Nk@HGJ$JKcI][SXFh(<j4F$M\
%l)g_GC:/)@^GY.H#Fe6=[.'A2[bJ=jFh.&(BeA5ToD%0OGQ-&6\%-SS3tC3Jg<.kh$-ej&2kS]BXm3T`q1m9tQL)_kLCJ$cH3Z4W
%X_rsjj(/g(=Y2i)]n)TXpZhISoP2R/_GUOQ=Zh0n\%#8\2so0&O5^'"S[H>SlE.OlKi$h&U>j0_F6er?[(jhg^8ZNcp@iKRVKs>l
%m_Fo*R0U3?=[&:`k#Deel;@QU^0,OdqPL^cM9iZ&(RHVPGKVr-5BO.JK-,K7>)3<Mnb-m=./M!^U[kG^D=qc1):KB;8mf+es1Q/J
%*;n*OJ+T\Hi"mIW5'.OQICQjdqtB"WX_-?uW:+;(8'M$6rb:/AcbhAk\VJp1<EFk<)u8J79m<l!H`YEro<"J9/Uj0B*\9JO?E-um
%h9MMgf<<&n47?M=?5E*9`Ij`$pU0I^QOfdX]R%?)`tS<ce39,j`;H+;HC&t]/q//Z=(lt;9.L5pG7MfMK*MJ?nBk<Q[qkA>K>Gk-
%P@qFmRh)*UMt_#5G]ogljt2*7d-kLPbs-YUq9D?RA:htXb&75kDYIjpE-?2u-9!Xmd:0cShMA2cJK=BgJ9R)I+)6!0rNE8_MdH5.
%RNt(!rOQ/b!foHGR*W7Z0;mE;FE3S')_D9#cf:eWJE@/.PFSYNS*RVuVh4\UFhY3Q[6/[&/=Z63G<blsDgtpOSrCsN)/P*$o%`'H
%rPF]M4tb)uB$3PjKmiI)9u:M?<'s,\KACZj(C#*LIc9dpe?^[Uf@r=__1-fX*O_Orhi(N`F1nrjYTKIG/E(UI=TOu5m67_uK<TV8
%(A"$aO3d,FOXB;ChqJ7c4=/nVf@BK!m*jiAhqr1OP`,Bj5Q>Eq/)J\m%LpEX4XcYSg?-Z>b;U\nZJruq"_tHToX495s/fWiaZ!FB
%g:?%7GIO9+BCg*HS^Kk%KjVR+BKtXf&!$'DYnqUM(!\[Uhf'U$(CT@%rM:E(oRt#5inrAVXFC_*^32FGO+Q3"pR\R<RO_u?kk:'7
%VS4hC]ltQlMdLB5<=DKNR%RPsIf-_,^%JNm']HDM+BVj5`7jQA*JC9Snb9Y5^:#,fr4MMtPgIZqqqt_2m].]gEkD<o(+/kEK5g-o
%rdEbkEH-t&m6Bo$/FPI&rS5]VG,)FZ>FL1Q^AV;a[W,e)rcBT$kl,1>'<%LbWf[UMkjR,qbs-Y=s2AjtgcP.g*]1=Erg25t`=mSO
%0,E[W&&nP,a#1-lG-E3kVH;hSf*e(/`5[`/[TN!G/'r4]$l1<?8lca($;C;,D/iitXB)h"T?I"D.&n@`d4a[L[eN'oAQ\H:hH8"t
%?Q[A%^NX^:bqD7@H,T_6J'REmL<WQVl`]3J-CUV<;VsB)NE=p#I]&@H%R0"Z@3DV"Z1]<\[2!'A*rEniO#e6.?H/udMsB$`>hf_s
%M5R"eGF+emJ^hDW\&FQtNKU6s50OBg(3d;T,-Kg-HGpWg/5^W\""'^j6<,jV1cP!sbJ_UnD7t$9`"m#k_tL,M&'B`OTRK3T[R>;H
%q1=KL#HtlWWE!cso'TF(7ck(jpop&[Zp=Yj]ktJUOGjYZRi*7(l+ppQI,/n0,N&"'@X!PoLNQn?AtGXW^@f`f@`pMa'6><ujEg6o
%KYb>m(8pS!*E[U*Je)-===c1-ln$^(1\>WC;/sW[_e.27qW;KEV>3ndp#QS-'/m`;e+s^K`[q#]p./Y]B`L-1DD]bd`1>+V"p`#_
%**rLG^UQHB&fa"b0q8@lU!_fFL<M`.$;QX(3:]pu)7XCVMq]V65)61nr&AMNVdMK=0<\I:'%%-VY&)SD-[EK`>ZuQ-SE?.ZX?(q9
%o+!d:-8"AL-au1Vj:8bWa[ZLA1%Zld%lZ`\!Ha2XL[nh$KoeT1:-0tc+!uY$$ZW7,1&LLX7oJ9Ua?Ih%W*jf!pM;&ZH?l1n/k'[g
%p!'8`l:!=1C'G!(f&,8-\^p/oI4A5%[fSCTms7d]Klm__gj>B;ouXgOgt4=<_5l9BQhTq*3'pXBTQmtks"W8lcGD0`cm]rWXNlnK
%<];[Nq\F)\NOht-4J2+"7=L<#h/Bdj(CIS<UJKuLYl/)l,eNVUZ^at@bjl-=Ck2-Pk2AiehQ=1EpZC%"o.Sh*-b$N+Y+5>FheZ>6
%k3^48QrR79qXDMl;spHf"@"J#)=]["F#+>EdI-a-@ndk&q>J3?rBY.e>[)%,gcDIi>C#nm?\o1_"7Go'G(+"Pq8f9B>[H`>O'\mK
%kAMH+eK*jCf3E!3PCJeEnAa0_jrY)qb/L7!HVa;ir+Fi$7+VBeqa*fi23ZUXL`)H^a+!gkHJun\It+kI\'X2OX`n[NX6&'Wn^kj4
%8f2S]>bOQ&J&C:d:(/#L^WYXW:<_D!\]Ef9"Rf7WTB":G..)A^%uU$tGJU=u4^<iqX#-=ogc$lFT6r+PbF<jo./3IM"*jh*om>'j
%8BflN/l88ikc3k*-Keuc7CF2V^V4dU[_fZQbMrBgSN9m;Y?&d;oa[;F[SM%2]W.6V?MgDBkVWc.f(heok[WR8FRf1YTgt3CpP]48
%RQeB0KWREg0"lW&(d<2P+Rd$hqoX?@^?aJ4_>]b0q/!eJ6>Y%6[D+De(2pGmn+"P%oT9L;6!2cY/22;Z"7G6BjOGCAM1sQpfM2@8
%KsgaO,o<^H>Dte&Goe"'h$8()Wac4W,^e,uY5>A->C#rA-L?>Z)_lgo@g)",DJ-ZVXh7h`f_*j&h[%m9?b!fAn_r9=YNMPEhEBd-
%d%,o'BVpDo[ek`b/^:io[C5],@ai]JH**^jFL6Zp*\.#NNE`XK0:s?A.[O=kYPt*^,T'Q'f]qVJr2ZqW1nadDmn[78f&>/;SN"K3
%mXr"+,d4Si\D/]Q'V"QA6!c/*FpkK\QRZ>QkN>KVhE?_*J%`Vr@HhR>4SN[*JZJh#HWp8PE7$s3N'r9WI/"lbA>e[d#JS=9/af\9
%c?XFj>^UXt2S+m3<Q3]0=l@`!SC!/R[dfR#im[=JYNKb4'V-I13RO8D6&5C#hGFuW86!-kDjnS)_sK@@(bS&G([%aFOiVB[-SKr(
%VHH>;"Ti2G=.4VH%Yd#[Z*TesZM*F(^X"J+nCd7(i_io3EPMWHG%"jc99BpE@ZA_"@<JerPGX5&s3f0B`DKi-Q\u5`ITZe4?Bjon
%hs)Rhf\>+X63hbKpMY--]CVXe?VQ:sgOXj%9@h*,S:_<,XMXFT]XIoHFjNi4F%8/rWkQ(E&;,ZO.'^PRad&F/`U_i](PLn>_7f_C
%bf4@sBD])WWH_bO\$#*6TCuSCX;j@U5?qEA]C\"j><I:pZ_%cs-O^hm0P5HFXh,D[^]J5a7?Xe$rpIH)Vo%8m>>&A*CdLR_T'mBF
%hle%7T0:pDq8MHA-T65YRhr\\DsrqbDVb6m$^oIV>CAO\B")Q6CWeBF*L"2V2?QTaDO+K1(T;N0k2Q-+PnL=UX$O#[jOTm?#OPN1
%R\T!$*9pa36Wht;LP<X`_u6+lhq2B?$<4pr[7QO]E4%QX7'D+8H4EN6D_Bk='+_<8hI%a)@sCM]QqKC08hY[T362DqZb1sH..bsn
%DP#D,rmHSI3=GsI-87)0ZT@QCXk_+]d^-?HHm`>_3jpFfgg=:]r-A`c>ATp;LN!`*Aa@OnWk%Y>ANc-eZ$#CK12,`'crKqRGh<.q
%o.4,B;VBaGD',:k9/h[s!o7.-9BSh-Z$EfbGYr]1L1\!^f\rB2i/R4Q88.Z5R+Au!.<+e!5A+$Yg?R[W:3$6onJd_%@DYEas*Pa9
%$cJ)bipK1+*Z@%L'bX:sVi<A;m$fqpO4RDSFc%<e<eAbTlMcQ,IslD(-L@T*iL9.\DqB&#cW0e\rSrt%Op"9*mnc?/f-e9-LJL,C
%:"kZeENZ[<Zf1U$kbn)l\S#jPcVN'lr,V*JY5\%jaid3No!(5%D2.cABLQ:E/b&p=lW$cM>Kb(7;E\/fHh6T0"2r=?-X]r"JmmM&
%Z@YU(:LLdThH9[S\69sd2ULs,5q^gY*%&*7mT\Fo4r:<X.6WcL-$]2YhXNKfY-0mtpgenMJR3TG]gm9j*d1U$hQPpiA9db2<i>`Z
%l+unRLS'f\RW&+*F,eu+a%)bB4+l@?1Z6J-Y>hVf')C\!g2Xd$6#NU2[Zl+V*X7>]foMf'k4TKD/P>4PhgS\C4h<na($ekt[uio=
%hcj<5Ge=Dgi,N.Bhd!`+If!I)7P4KP*M5@rP"Ybc)`OK`^P6:S^4&u*D7:VTjn-R85+T!=qM76EX&"V"q:5AOmo7,4o^81&\+XCD
%OSaE-/j*GpM+nkU7V6=X3JRM=;KEM;d<^T,\*gqRk;@l;/O"u:=Dkf9B;aS/fq#`NM[-d*fG4^=$%I3`XdND63W8%17W.O8ok!Z7
%j8H*dbrhWAmAR_k;ftJCh!O9JDAAc*>#-2e0<^\B_m8VuS_^\`2u<mTa2\I5lqr3.ps$,EF`Xtcm.7A2ca@,:;qa%OSRA,i[PLe9
%M<Se03F3.1>78'J=821bCl7(YEF\%bD=fZR`VSkdS%2T2QJUP.a"=ZhKPo$f'o/P%$!2?V`ALY%4+-hkPcK:7O2!l/[`\=X(:K^H
%=->aL!@-_93L&=CP?YS*;;<*FTPh^F+kAU-9_2;)IOWnN2>hdZ*!NYSqdAh=.^9N:78kg%IhQ3GB3?Ri$LY)6lehWV"`#.u)W1#D
%$0^^0`MY@j_XltfHP.dsf4Q4k8$FO]n$8hB$VtXUDlk8noM_l0eV_mU].Y<g5q^WP\[tu=8.$^;;)ZPEa!(+#&&pNC4f^\;YU)uV
%/2Y*&Z`qn;^BXCOi<_K:[@=E8f_SEmN]Qc1DYNPcD"6cfXd]V734(B3]be'gdJ9M;XIY"P,<S0qJplnDmJP*(h-,)BX37s>L]Jga
%O0(>l'LuoBX'6\4maigZjl.CaEedCc5C^G<NKNCAU1_-![K&ujPnFEd^Uj/ID<96q&hN)%TY-fL^,a?2pX\et+1qZCG&JP=\?`D&
%b%*#15d!GempE8,Y/<c:<1<W[I5R&q]>*jK$H54LK-3;?jL1QSm5ZJ"g69jJh;Uok<PS<NDQ_1gl*".FTE1l=\SQ543#'Ku$p?'.
%ofk*qfC%15a]*2%*h4H_Hd5jM\i]q2D=K$qD7:;3f09DMT0QK=hA-Xph+"Pqo^]iF)2U?tP#7?d)Tjn7r(>/?>'60r0/1Q6pMt.e
%Xg@r<2e\8`+NAdFiHDJ0W#QTq1mY.b<L2pH%gO&M3;>uh4(,D]@(<h]k4L5I"gU)7H!68hD3Jaq>)lWoYuko*StcaE5C^>O]'/51
%8<k<res`NMCVr7KBP+&Hi!b%K]Mtm_(W!M)H*fX'l0^-ll$3&2diL6)^>D.MKK3b8oCl9E9+.B`2k[7%6;`akO@o,P\hNp/J<CG7
%(AH_:\+ALk4aOF5I]r?ce0[:@qa5MC$cI31$knTB1-1,6=SoUQE:<=&R#LM0A@GmiouhCqPu[F%X1#sPnrB(>8,Up26Lj<""7Id\
%8!l6m%rs4;mVLTgWYpfNZ]u'DG<[(UM?iOpo+^IL2iR.=qK**7Qk(lq^:QSMG/!%/ICL@-=TG2spI`uP9m!.^QVZ[[-l8JXPkPsM
%/<;V)=0u1H_qnaJIu<(AMS=]>?bQb,\/h)@!Eh<$Z^tr^mk()?#*_B,/f]K,mQF[$>']^e34U7GoV%4g!k)^G!X;m0[RDGd0gM7F
%^"L/+WpVOi0[fpP@4+#&ip,tI&%iFR,Oq2JG&??aiW*8B4\ug"]:c;C/%Ki+?68emNXj4Bg^8q2]PVNPMW3g:cT[hZXu6h3W'UiN
%<>b53pH,M9=Nbp?2`no.X6bhXi>Z9u2@e""iqj78l,I1]l)7TL2sPR2ppLS/I=eXFj@,b^j5[i$r.F;/U3Csh7=f*"U[UO!1NGh1
%D1<RYQ?S#[Iuf=5LniXR7=([T<MC]aro5"JQ`:n[P;7N8<E&a'Au"$!d$:YT2oE+6J&b9a3PNF#pLV#HG7(B/3cVE*O'XkT68cDu
%9@n5\pK76OMQ69Xf3!XEXJ</Hqp^O53Q#u<qfXq]X5!jar7u=#Up2i<3p$la1;<E3i`Z2UREGYs(t/dcD;BDW7i+%I8lXkh-dr=\
%qmVZ,pQaPc;NHqHX@t1"&oM`a)^.8275l)6,#5A)ntJ2kd7%e'l8?!j--=/61u]$IL[,m^i+PEOgY#Oo-?qqh"kH7'=NCn,ELCTI
%#NOBL'\olc@a`eGE(Nsm(l_%s78;;],;Z)r_rH('7>R6ZY0'E0![otB@H27bI;E(F)Gd_inS]*2_s%>!nl'R'Bot(/qW,N3Chh;R
%I>N@j0/V7Rr)7Z.*1FQ+8>'AF.[KhE4frlHSM=3Y0G>D)bEZE6D12FYU]/jkpGO41If?@p3_htfqQ671H9lK"j@:hXSjuH6g[/$&
%SbV'j"[,[='CK"\bAMWdNbir]o7D:f#<VkkW2&cl=0J?5GIriukBM>0"mo@PYeDi4UN]CUGEZ*ba3`sE4b7Q\0=L2%aUV[d_?G-p
%1Y9>4RdN^2[`@02NTQTM;8^G.>5^%emtJ>kX5.SsHDNcr9Qsbm+k#it.+gD28r"L@C=FoOIi28Z]\R=(O1O_BHEmEMMk:MDo+9-V
%pG.6WM4Vob1s\Xbh5VdY,e.[i5RP;7l.5UMS;idS;5o5FEI!sh^0pq]bU)c;_U-gmjK[P"$[rnV\FabfF%InJh9+'\n4)rS7Vdsu
%i)83(V-i+C)P$0'.ZJ&/D<pUFm3WlE9-M8\pZaRK]?(9kHp)@@5[I5m?b)D@G6[rXHGA6Qos\p4dnB`u0kBjnXIXR=4"1B,rmMCZ
%NS=p*]ZYHnpdn&IRXd6Lk)9k.>4XE"Zbt@KF0U9,alN0Mn\+O8DsPHTNuj*+K?O>KpfAD:rR/^m:(+1/[G0QAoJ\9bl`j&]W?g!h
%4Fd/t7i2-J5VL^h0M.*Zh8=AbCPoR@^'o.81u,%GnhpsrQepXps1m@aGN[;EX>=U!/H;<V5em+aq'f/ETC]J6jC=kZ!o9F8Bi9*<
%U`k6eCKi6aOlg6pT-!3e<e?[CoQf.SWBMpTkUE3Ffdh-AB0#(SZ0?Df5M:tjEDOBHIGOD0j`0:)UK%KplrVd$e.a9rk+Xe\:>=cH
%P:rW3AEMf+h@>6!bS#DM2?oE@nul!La)hR$d0]9orgEO^.$EQe<FWgno9dTMMN!]9?Xuh1s4.Hnmf3+'>SDt_B/Ws.N.SGsmihY]
%)o^$A-DKUXQF@+;YN,?mZ&a8,I9uPoBCGiro8`qN?Y"2JiHN:e.T?biREH7%nMbpk=:k7*TC^5ZIW:kh1<:s,Kpgnhk9kcY&\mWq
%6oU;X@60X/-E=QU:=aE(dDWR5)>q`4bPRb2dJ,Vjo[To^?N?]:aQkQj#r?Ys1[j3"q8\*g/N'W2p4KI=@1a<@0=&TT&:4^haTbe#
%$$6hX5:aE$8>$7IgUmgf^^e/Q#[&gf$n5Q+9EE>:XL1)YiO;NN_Z1$@NAgE>K\FfI):_3t$pfot<t5Lh:]6"O!"<'d63FoSP#<7s
%Z8mL/+_h)?:`k-@_IPfs7n,U:>(WONL':+8Va-#8Kn+n;A4-Oc)m7OuQ.6JK!#-TY@-ngeRN[<UE?i>a;2rT)6%m+X-:g]?'+0J9
%&48KWje@=uUS:cl6l/14%#N>$aC`,1%O?.ORglYiRh/GdorX"o#1/*tZ2m_1-:lc#kJ[G%/#.@V!oQghGcm#/&[]ZYB=s=-;ud`M
%U0t/6&^%2*[PR[oV8275)1q[?\3[_AL>RYsJPa5?P/LTdX,KL0!hPK^$lN5YjB,N%bGYhtjr*(G:2m/pB/ER.8h%7^cS>PpXLQG]
%13$rSS(4*i5]Fn**>nWj?\CmWBa\\s,e(oV];InU;.PQgh6`d`Of,a%R"!gpTuO8q%&3FupE*7d?f/qq<PS^1L5(Bfh2l_$!KpRn
%lbnVLBR,,8?q#Jb.*RlS`:X,JWYuho#,EiPT82<?8?F9Z"H43W/6F&[P[#Xi.^6X>4[I%50Y-c1P2lB?7bnLoF+B#'i_!gB+m)9i
%&k[5;PX9P4/8&AAR1dQ`S1+PV8GUVoEEbqZ^_U0(L^mu9CBH@IV%aO&@>>.&9#Oq:ioX\!2q"BXE2<a90;=--+Nt49&C\b2D&@a*
%9:AV?auZb%3WqPb&=nAo<<`da/e0RS[4AC_O:Vg]2%gj/\/L%*g5.<o#D@BF3(sQ\\4)"[%9]]WftctYJjh(.>P_[)GaWuhoH7-3
%#ZJ6Q=o@PuW(<rE`g3;,@WheR'>m-G@2ZS$6PM)iO<d8.=""8\Fo<.++NI-:i4SLagLL^p@>H)b3ORg&i&SE,pDiESfQJ/=,j5FT
%YeW^O9KK11NG>!WIXj`nGHV?>F!.*R!5thcYf@Ia(EOiX-m,5jY`;c"QNlQS$;jX:?o;sl!;g\3KBead-kIsr4OCHL+.3.Y_m4g0
%2UI7X)j1L0&>G(d_Fdqo!1+.CL2<f`U<&IIq9Tk<h-+RW*Ngpl#31@H92LQcQPIVN=T^8`JhH[PUXk)laP0C@q;C4$5Y-Z21$"+_
%]j+\O`)rc95*3#H7-IQN@,(t>N$'($B``'^<8=Xb.'X)des-\t6UDXkN^eB2b#-8G7B"Yc&^o/P"P/3X*0KcA6/nViEMs-e3j_0Y
%6N+fSFb%n[_9d>LTK[#,MlI,,gn_!nHCAs\UH1l^1PE!K7XJb-JLX<.LpGBo\25V%"Eb2*4'lW/"!q[$6eI@KN>,4*P8OGf/&?le
%S/Ka3DZ[Q=433/2HORP&.L-kqIZQ_0$QOhWp'9'gQjuoo#XNn*+K62U@19E&6WB.%Lmq,;!6]\i4:)?(mQ,kLeHYlp)TOdeJa-f#
%KU$+(@QE)d^=KG0g3s1@IUmLb_TW4uUU)#`&HlMk6qka=iE9,CcpNnp^`79S&9a9LQ;J1ZHnGoK6kE6hTP$LsCbhuF9Lp;m7hMH/
%VVQh>B,L+j<D$3M+?0Ku+]tCpbJJ^-L2CC5-<-[+[AVZ[_S,/3ha)=8PpN.WJb^0;$LKN\@D\uFK2O+.iI[PSOAL3R>:_6pD1"1J
%fVF-h1`?(E8fb3g01.EIBeTb2J4;Yq$GVId('dYY"VsJI?rb:0<B+`D<6-'_nV>nQm==&Fq5)Y.DkVmd]ajb*8!$01V+KsPOSIO_
%B_&Fl"BGN=MM)bb&pPt4%=Ztf5e%#kV%EcE:a[@ufneoLFQ?)S5[KPJ.WA7!8N[(^6I\j3/88IQ6D2?G2H;0WM&@OoR`1ut8JGeU
%[*;-Ej<Q>U;e86%"<_rQKRSa7L.u61JT*bK[tLRI@JN_m4.@'t[NTW&TcgO95ar>k-8_O31/\m9:Z$+9+\6i]FO8Zk1%m/u"j]CO
%J;W"a^[f7i,$PRG"UH++1M:C\\tahO4YW-gm<B"t5"gP%^hDb?J.Fs<_$E18'[ic$(N@^--W&4&*T]l/*V[q/6B/-*DG;4r_Aimu
%&JF44pUs)fR1WggAq("ZKS!B<83'!S;GW*@7$(k$m*Y+'YdOaq"qULM.4TG[:hp',IG/$6Bt*C2RVRY22/F3^GbW!ud&[^&Be$>8
%PU2`Sg(k\r.LW0]S.5b2m5#p=fEC0BV\>l:.mAh)eiADpU'cST+Y7r\V@Ffk<MmR[MbEWBON#*hJFTd%-=Ht_?4[alKdgEZ1+Fb?
%*eoGVD+K=f>"^b5'IlbMU/?K/P/;2BJ7,F@Kg^qRO<Jh0Y!UMgW$De5jWs14=A7=ToGk6EUqf;q9W7m1hSKRD816tSV,QX\73Uo(
%YgimI4@.OR!d:glV'41k,*@bC'e4M1/eUStE$nfqf$,-mGlcT"*dVMI*YRgN/L#ZnM4Q3`K#!I>"O&O(cQ:fge3SjTs'Vrp):A(:
%&?8[1A*ab+BHV)roV)O$!cM*bH@kg`Zr3^c'73t-j7k2*P%^6Ua?7AS#-<:ce7]sW@Xgs9.LkO"+;Zm<#q99%'IYNsHXo=85kW5d
%`-r)j&tjh^m+g5!HB2onhQUgY7tdP41ciBZ[tDO)iO:(c&L*;09EGCpbEk[D$,N1A(l.rB63q$6'NR[PZq(8?Ss;c@5bSR`fq7ub
%d';@1=OWGg`B^2`9TH8BgE"UK!(B6fp_DNpA2D=-q:/@^Tp=gT#$<a`/t@D1@^H;9"3_1,0WC5P1/Keqm>m>poaVO&bLf0_.&VU#
%To2CG!P-=N7[n-)3=,W*$pjt!;udQph1r@X52+R[K9Fbi*Ju-5pCTc"Q68i*+G;$0'J2=j`WZ+bqLVU!$<tjkZW#AP;!`dce#46n
%"r7FJSlI2lnNkZgP+kbrRZC8Z3ppL%V*X,N)?U9PD:.F,G31B8W26.$U4JB-!Yc"&I=sqO;dbHUekl\R>@Rqnb+`==M%DQLC`X]-
%0`$<8+`RRVIgEmOA*;46_Y>.:%FEE2(^7fHAJd0W"M_Y57VG7;`_0#;:hQTDm3*p!#7U;1l!T&V=qVH)"Bs/?7rBoW&7@,p%m[Y_
%BF0:EctL80"9HMN#fT=9#V+UW(**F+0ObHZ?\KbMOU=#ZG\pE'"BC$gHkM.D7T#'TbnVE(qg_3KTO["l\'UUe'dcaQWi3c?L&!tM
%8R^6g_kMU1hd-EE)Os5=&h3oZKci<.VDCW>6<kon=rd6?B]M]'6caD)C)fNZE]+ehrM:A@_'5]7ReA6@g/VfW`utM9NpV-HFd/."
%P!f;HJeKPWTmVrk'T;T3Q7"t9$U6BJ0hd6aWC/%"VM%>\:;$&S`^F#7TTIAOKG9/MS1!A'"buJ+@]<1<'5Io2h>gZ)StTg:=Dbc`
%\O!/@!Q1kp(as3*D&d1<+&*rOliGm%5"2Ug6%ZHj(r#4G"[f>R!`hL1p.VF,k`VSsWG-,!3lHRG6$%PWr;]Ps6nJQb&>HZG6%R'Q
%i%kph0!(!KfnkASS15^MCQ]g8*CMB7+D9m<BLtQ8(h0k-+:@<DKU*rO+9lB[L!HcPh%`asd75DckD@Gr_[r2gP+[m>+uj<W=!W+r
%,OQ90a2!3q-6Xi`&rN>d,jm7;@%JQ&KJ=Ft/iom5=tekkoQD7N*ManlB$h$.76PZj&.Od!YpY*u==EAZ!L=`l]X$biGu9W2N"hUF
%<2+ii!p:/T/h.3G5!b&MIL,0\11Cj7D9AfPj,bl;Q4-WD]SOXtW2-fKd2B<q#SL!G-Ic:iDeNi^Ip3ES!9fOU.P\4Ii6h[n_hnbT
%^sb4F.IokP.UXr!\LaaB5@cT=`J5#=30+X?]+%+_s,?'UU;li]?knFB6:O=2AiI`F!nK&5Y=UK'6P@r_$ltFQ-F-$n(PJl_^kd#S
%\&ZNMBK"d?)f5N#,6l+`MK2t\TbC436^3lP+D[p*!!Ue:-:HUL+CdG*8#V7M9dh!TN!Lk98WX`ciUg)Pl@h>R(l@e)Xp#Kc0HmH<
%EW\VL9!VZo/D5g(Vh/Md,9"*(+]+4#6_JBU6&Hl+#bgi]7<(>h"$KV(jL9hjb2?]1>E`P&hOnBb9L%D+*es^&,6U5`%;uU*il&_=
%;WNn=d!(Si8uO/0O(jCGJRHOKo0R(i#a?.(+$a"$B4rE[<EZ_[5)Lm(BipM5"qI.\"$B#GArdEV!.gP7>a-GuL/D[4Y!dt7YqC]W
%0FSfhUpGZ3a5JAPT7`6m)sFRr3WhJd3hGms?j\4jg8&W;"--M.#_n9!FYnZd%\m%CV`&5P=[Ko@FJgb67Rc97SippE:a8N7_[%P1
%pje4!#Qbl0&<=T4Bh^"JgL>PVW9D@iZQ=f2,LFfY/=sl!Jg7'B9qTCaj-*!qclbY"CP5M'UG=S)"AbB'O>0EVndErXfrFd0iYUNq
%Ah:0fB[Ro2Bei1(c):976U<sbj]DX1iAgdb5c:7r0!TQ]#hg&9TS>N8j2/`;dL[+e*to2rBZ:aS!8?gg7"'i*A93L<#Vpulg/p0e
%#f<.lX;4Kq!#."[%,Kqe[)DHt6MDFbPcPWpp'F(DnSrpWcW(Ep0;4j$%)l(M64?=1!?kg0TodTsd=[`Kq'LUr*[uH\0gJ5G,)#s*
%mh!M\'FG5BU))!q3dL7T.nYR%<#b]l3!`VCmP.6K,986;=UH)/]'CGS?S6+Vi?1pSW7b$eP<k0DJ.`^K<j"K@P9<7$7(kt471c$!
%\GF!?$"Hq(_b^Y+L?Kb=+[7U&kA#ffhZX;]#Rqps3C,Fc$E<3'1jsIb-cgnG1sM\&["H!s$AF,J@<'j2-6$&G&eDYqKY[5BbW_\B
%'L>?2T03M_]&S,h\L=\M0eQiE^\a^74ph(!%-f0uclbZk6IH?4cO-?g%"/ACV?ZqO__W*\PYgn\MPjtf7Wd@,;P>=2Lp[g,XF4&G
%i-??<-mK>pksPRrmF,2BStPjr,(M9*ZCGpod*N@SEsA@[97gu-RNq'%`M"o5:ME5"gK(k^6-nk1=YrJ][3p#d'MTlQ-U:b,%6V[)
%RR4)XU%BA["G()S#,0dFT]K_NNeGRB#p%H&Q0.ZLmL4+q#5GP<_G-]$fH*;);j4:J)5qpHEOCBe)g\"s/2:V6=JAt]8p90?3lkB]
%qK+Kj0Y`>tP!%6ZB`9DBE+M:+5!m9\L4FOO`1d5:/;%qLYkafbZm\[+\Kl(PX`0&AR&/_2HPl*1(or\&CD7\8R"p8@2aXh>`8_T)
%O"(Pf>+PbQbQNl_5n:l.1;L7.kV+(I=<SQfd4pDB`asTBa';Id)FO"S&=+@\%ti+0C#`[\J-H%taq07f2e(Ri\qaE/Y,k:\_2=eQ
%W^BJREd7m5\mlH"UHBW=/J'Y(^;>j:9JrM(7Ni][QFn`Mn][Br":kTf6_n]-*_oR00Wfbp!KC,0/d=d:I0V4n*tcprT:hCiAs4QO
%`fErK9M8D4mi[VdQk@ZSjmaWeG3C>Q;Y6.+5a.Q:::u-SFt7%"^nW"uVM=%Y@!!=J;nNLo5ro08s%"*Pe)Z.>839(UFqmbDTP\ed
%*85)#9L-WfBQLE=`/'(SiLhkE6^-jAdGZ.@JR]dY()0+e"p/nj"9tVl<#P"(!&fq\Y]pZ63eDf>'L`:0.6s4eG;tB*dkD1T<(Wgj
%DDfd5#oQSqWo#d'"*tM^iK=R#*F#3(_9lZ791"JfAe:fKENYKZZ#SiM3m)/'%?AF\8I0o)(-s>SBNe4?q_F0Oq.q^W9d!,#eunPM
%,7Mqh6),)%/!j`\WZ\T86VBH^%jWj8Jo"nUIYYd2,Am^=/D6.&ns%3!"_S3HcY$5SFE@OM:Ik_EDV>1d-=*ETD&=:Oql$[&=Z!G3
%-fsr3i]Vgn69c<N8*KFQ,O!-.m=NU`1-.j8_(Y@n?ceCq!tTGB"S/'fRHcJW:!lNQ-,'M,-3Z1!"B"Z(.BekCm1]U[GWs+YT&+J&
%<emK2"*EN[]-)iU5055>WdmhLN2@R?Mnr_Y\jD0(#MK31M.3Y[j2j3=*2Be?`\>ff+MD8N_NQ3q6#=`PU%^.5W-B^^>$2]OYS;9k
%ADg'pN%F!]-qX+?<e^g'Pts@J+(n\<pV=&.lEDNFYVqI+,%Oj==q&$T#e6%[\VFf#>.QMR)!-qgFW/4U*a!,e.gdk;A<]iNh#U(K
%Ttt0'.1,2DV3!q(V:%beaC/thpkU._gBKgL"Q\P+Q9.Hid/]IS&)]B:;9>`L\00]Pb63##X80^"&QC`VNAt8_,lr6a\1m"/_7%3S
%/^fu]f->C$;(u/;?qK>:KbQVR4DE3j&;D":/4c?U\aTY;96u7&Fq99J'9L.?J^'.D;c0d:OID+<ZnS_Z3QWI+p7`Cf'In)dk(6Xb
%cqu\*NBBs(7l9l&<*u:da)!6RI+X7Pd&gjA92H<:O,/d7L,Yd@XjhI6i?ErNO3E@j9d`4MT-kru]27cp3bu]5GD1>N+>>:DgBq4j
%DE"5BVW`gBij&StOl4?W$+Oe:)6u(,(^35SoI/n<6Z^YnI1FBE7E6&M5n8s-'W2,N%>NRQN?<<S6,qqnW/EP0DUHl#8#$S<_l&0d
%$Tp$k4YlhPM=?&OPuU_n75q/D."-[6)\i4DA]V1/M^ddcrZ(3=[f8]g)&=4+"Ui1[#\5<l$Tc1jL&$\NL7WO@dEk3\AU("ZkY1g]
%k8/A9E13Op*2%9%M*j_i1(69=!@,\G6[&s1\_)?BE:+JGA>SnJ0Tnq=^Q`h*REQKOPR]I9k"QD,.Rkb=MgkMeL$%q@I#pleB.R\E
%@8Jaj6u[=#i`nP]s*(jWZ6@RkV-G(!I"iWhkHe[b(7p:NZ%()D,q\[2L$M<!dAX\`ZI+ctRYct%>GZq-cu97tbIBTPbir@Ro37J;
%4I]_898\mfF<ZO<*3>q[Lf,6Bd0"K@@qIj_UkBHk^i<BW.&e=5e=d8]K8o5r_"WoQ`:m9%3b!a*P_DH?e9%X;Sl1J:q#kt?m`m8q
%L`".XZ3b0kKEF$g,Qc'm"^Qsn?:N!U!$jhg5S/nm+WI_Ek(=6*.eGH`S;mUOjn,h:""f-sllsm3^58TGltZeH-SD*G$[fPD!>$R)
%;YGe5S?3@aHD-fu)'9+gB]YsV$:?Eqp^R>$#&3*mq.18]5cI)>K@Gg_35Xd^>E4dlHd\HmO/OBd]!8/5'-6\s&N*#_?U9oa&GR<m
%+,kgjnM0%=q>q<9JuCUBa3o(i-#-TdJ]l=O_G/RBqpABmDRLh0i,Fe]XY2r2;-Y-_&Bf-UEBI=PQnYh6']"8S=KUa/.4@ALHkA>U
%&RH<@*MSo5GD`FTX7Qgm<MMWGn[5)>"$<1)02?Z*>;_j%'a9sOk!tbdI)VG#!mlZg7JYsJ"_WAN$`,:X4eN`a8I-nZC-;T,,QNm_
%'2UrV8Fgg7-luT&.R\f<<(f\:hJU.XCOgeC37Gf3YauW<OWWciC=2Z$N>k5-<<>ilj/?]`)[C\ALE.Na'R>jD*>(@"6\a4VSJJGV
%P4+qm!eMl;!Da-[Y7"."*p,\KYbCY(m5#+CXCed=$kZIDQ7hQ$k*AM$#50!WU&?)7i;bS7N_V6;'Pb!'as[l[/?U\KOOKVl7dpQ)
%,J,8e%Furf<(dYhUS"g5W8ZfFoNm*F&:n.,Qg'9,#7q4kCl]_Dh^TRFa9n//E"*X.1BerOmLCua`5]Pl-r4Lp2'&#lYK70gZ5>gB
%S4agYjM9CUfGTFe@TJ1p0LUnO[40D`,Spf2^SOmf8g?:Y@'UWWR"n<^rlN]sR&nNL)aP2D0.;<*#l3$iU-9Th@J[$[\abu+QoXsU
%4a5O9=C]DYHC"-r8.]!Ilnr?,>/%uVIX)\r#9'FpKLrJ:_dmKG+p\P`3bq@9Ok!!kE<tN@,I8MEE5Y+#6m\uaLB,m-[Q!KB$W'K/
%@?sd'2rSOA4Ue23AB?@>$+"lkO<C1*#5peN$Qr9!@L+``:BQ%IWH(!nklF.,4L!6rEs>QFPF]Z#@YTY"7+!9aDVJPDll)OZ6/)Sd
%.ER#^is#^?D$6@:MoqZEcj3fMj<Il&)5>TCnjP!3aG'ghc'a;M$8icfV7TNV>0QrLkfjAcMoi];HOu>@k:K<OIA=(\=imAa/YW?Z
%e`Ua<&&gIoYYd`AJ8]iglJn->c&%OR8!>5Y=b^k2i5S,TC6BN"#%H8m7oW<:'4$P_+^mNXPB.<<7s%65+\RAD^6$BMa5GW!c)C9]
%G1%7\-^f@_!qSc6hp,WRL@\1emPQVQp:#.2`7.tD/6UtsW=</N6$*s'8Dmr$#\l_s-nuGL04,nk:,YE?-NYG[((*A@F3%Th8NI>Y
%3d3p3=!V`5!Q/qR3&ZRi6AalR<#0E)ngt<`#)!dcnK+jV2^X[RUQQiY1;bDEKf#ap.,PN:?SIfHnaKkUALgZ`_h+PECmO'e%lMa+
%9(Q*I+F4&3m\0jH.7j/r^uiJF=J7NMnO1GpWYlc-BLuDp2!8QTU9.W,bV+%_MWLU,KObq0U)#P+#SLt&;bSi^<`"Mc)U]ZJTd&QC
%f%m%i't#!j(^QPpRaY=L"`GSm<+-cp:f86D&u4"[]8Pf-Y^FEQm^UV(&dVaTCI/rZ#?D;<cT6)V1jXLdd/o9q>6ZO>!$3rQLST8H
%kh(F`Jhc:dajA9ENQX[8ATW2&:l@%rKTmgOJe8e-e0F&BLg^'t+C2$m1G4LOPFtL+&>`%i`=oo0K9-RP4j4eq#h&)V<lK<LC,#P7
%1G02&^f1DhaB'Yn`^Q';Y^'!15qol%n<!dr\tTAFEsmru+_9drLi/^cS:Z]26UU.^p`,1Dj@Q",4Ar0:ol/AG&F$_*0E8]DiW7pT
%Mbo-fWEJ_EMYC@#aIn&p3/IeaPSE?#q\IfhWXuQ^9rnF+mc2*,Wf$4P)G/%VX>;t\W,W"f/f.)>M[<;&/pP-dXYL:,!f[O<W[qKr
%6-Vl?J@BbokG#u4lShq-F.VncN/%Yl+?$!qA1$7%NK'ZF8qnomPes1QUFCc5h7/T_VuWOM9stM.$<*F_dXr9E>'#YI:b5JS`<\I!
%'>]2f5FP&h0PJh;o<hds6g\>:`-6na$-m4snj,/Z?:L**Ze,iD"n'g%epL]Ti+\G=X>Gjg/d,X`4Hj67Up:R>dQfK<*If::MsAMU
%\sI(aeQI[17R(u*"9@]nktKB!E,ZJ\?t:LkSHPCWKOS\JEI.q\YS[fq.8dZI&$k%/=tY#)/AusNckPPVO1;aVabN1R%MK5KFb=iH
%eqiH/$W2no`A"=uq38pt.3Ac*7Z`V."<QW)\ZAi-DfA-aUCc%hL(0S>THDOT&M/5Vqhn)CR)9t!C,!e_OO&,3;3mpB6V)JRhT3Mi
%;-A'U&QK#=%764r\G:NN6kI=m&b;)rh-AuW7`/fFORDh7Zma3Oh:Z2Sdr@rR8!/$C(LYfE6$,_RON#.QJli6*_0Ar-\9Bc+@0K>:
%!knYeBe]WiB)Ur=V:#B;-q6pa>3uT<%)Mpa:_6"3U/;k%7<C;r32nS<M]cl3Aj&@"XCY$.Zd(nh4WAN>#&\SYGb-RjEGc/X@=2E\
%n\PJS+ql+Y)Q3oCBqh>bJMM+N4s!-+V#<!!KQ^16$e9HfBgDqgeU0"u^uKTS<afU6@[k1:`7UH$j14YfJ1$L:;.n63&Daube=+0Y
%Si)*ZL!k8f,k3huToa10dM:NPFjS'FX<?iXi%Q%rGF,3p1jK[rPX\"6WR3tRAa(1uDCPB<$)%_oUVWoaVLsum(od][6sGV-,"b1e
%:fR>qOXD@;%TD:.g&_DVa;,'Wb,V,Hjb>;tB>T;CY:r_,er*%$OVIK*M\aU:dk2Pi$I>r)#r?/K)&&SN)Tk<$;:NZcc<N5OLd`^u
%<<q&l0L*t3EO<^S,;:2Xs5]9hTbg7AkD8*1I6OLF$hmQ'n).'+!XME[O]`bd:O$nN=5l\S.O?r"#%B7r$<^$<RrcuQ?V(<`-L<j6
%UccY%1rV:A:uAr.U[V#]-q':A(^^WBSW@g^\qlT7;LpujU)V#EM_L6QScWX`cU:R%TVlHoodTW9$KWY!^'l^%.md)aO\4c6;G[@D
%)E7<<M[cE5RaZH.g%4hALQWX55u`+,P!so1M'NrYL4U\<P,Zgi7'"7PdA&P@7>K"WnW\A[8)b*j6M,F&5?EDU0nTs;r4J&oDA/-O
%(;4-"aCmh0M'*uVXt1r\1DNOg\eH/Sn(d\%'De5kM(a>q1:RCP,X[[>&QqL^SK*P;4s3;@Rcn`4J[ZEAddoes"QWKILeim7&W=,4
%$bVkD$XF`Nit7JZ@UDNa(4jO8G_uCG]i9RAE*Qi(.=r/nl!]:g]pdti;Xl)<._a6q,q1o-!]a><ikfNo(j\2oDQX.RN^ujn'+"q'
%Q]EL#2Ml<,W\AHV6nMtn7"cJ<15#_?s+=-]pn!VEMu5&\:q#0leV4=2d)*Rp'8EJL[jU\%Qh:H&7`*(rTl=5WWGEf+-\:jVF4!BL
%5G^D2:l-AsNUH(?AEj4qj'`qbo!]=EVL$X=o!.p+NNk+LJmu/(diVTJOtab7YH;4UcrrJ&`+sV5b8/P8\0U/T5Y9bjP#AQlc]JYD
%_4lQRVZCH2iF/(l99Yg9E)C_P?P,],MAJ,*!NDmqVP+P\51Y;T-A)AMjFsDYd"!7XR0+)Jj7piPd#aE.0Wp3Q$UU<>FFoqQnF!]\
%P`7AcBV3f_Tpu?=kuJ<R@Ot/D&AFjrZI\%E#S2tlA5q-#[]o5kj:M`PFLO"m9T:3O'a[?h/B\(ZZZI&@et<=gRg1%-;Ba;K90GR3
%)I=FQ2l1mk"eHcEN7R0>(jbu`bTZ%h/bu(Y4='"C84)R7!(8,Z%CC+71D1jQed0]-71d(Ea=C:0LMBf7(lJiUW&fM+Q,9l$G"Ga,
%N!m%O.-5V[1);FP,NNt/OREXm5scZ3kPC-`T$Qq42Wd"W&AsA"=eK$.=FeGs'XuV?HeNV3e2';RiOab/8fG)Y(d9R-fOir><E.W/
%l+472!519`Vfkoq+3"@A&4so=R(O!?d(5!6AiLSF%nT)VKUg&8a#3Y%#pME0N_"1G#=g.Ir=mQO8.N1P5s"U'8Gf"@hVnPm22ULL
%@1\!UX;]'UN]9ORY6%(L_AG5H^>a37'2l]<Rj3Ib.5[2M^/U"\ZP<6C8Jjk!JS@7Urc+A8hNYqL?R-=J<1bq9%@7Ng9:dpV:8)i.
%7enZBODG#P4::j.'O[ge?>1YHYsB(G'^c_F0b7Tei>AG44Q.fr!:_+cEO2gT$YEd+<KJMY;USGC&/D'8r:_nW%qe[Qh^*hXcI/Fp
%Y:j/cZaDCu9aU+g#oO@3q7Jh7<Dl<PK<KgPZ'n0a+:L!!i651pA0KEadVaah)gH`6cXLe,;=9a&5`ZW@HUo:iKJ6>U%QA3gnZI77
%Ekm[oM'udr`9=.r]EdI0R`UE+I2BCD%Sg'7%;K-CWfOtc6\NVYm]M-O6#IjA7Go:qF"kD'1.Ig$Q<BLsJr\[^jMlkqp"EkU!Hf_a
%auAbI&r3Iib)eQ8.'i(C7>s8ghiA<`7Sjph*:ZPHjmI8am1\F%W&QN''FI3Z:S*857A[;?o(itK1_KT33#(4b+[j>+&5c#Fg5&SI
%F,E%(8n+^Q]a,Ka*0lD.N;(8EM,A0.pbCd?U,)#;`sM*GU]`/>?k:X6ggi7K8k1Cbm-LM+(gRF;/R(?OkIGpf*eko=/*JcY2dkk6
%-\S;Mc"J:n/k]V7jpRON7;*OE&B\!<fNCND'.aGEJV,XjWPA\&M/M<D<3cp('go]fr#ql2Z6j<Qj4umSjnMP=\sq`";%rL3nE;\C
%;1HD#OGneA@$sh\)=\=KCkT1Sr+-:WF$>3AZE)C2*hhO#hj(#O6%jo#-Bf/7E]quW8"ark$a'(H#UL*e,FfcG7@ib%QE/>Z+Yf`n
%&Kr#'gakpQam.F!<G/)cie`YPZi/;&[hsVS4AicXJ/;&0cAP)c`t++AUndet*aW)!84e"u_F(ep+A)n`=b[ds<A)I=&F"?>D@hKr
%1,`G*P$HLHK,1jU^*cK@nS24B6Bl?g=aC17Fq7nK_[*QE.h&,`M'`tp=0QdIn%61L!bV`](#QP-dH@FSYPeEgH^A#4ZK+XH<R*u4
%8LV4Fr?@5gTj`m*W5'AZ<-/pBTTUl<X9/1jno$,7rqhOn17?*25cOl@,?MDTm_5m5c'Br>P`$F?.F?KQ>)AXK-.?*P-l(FVpgRbP
%,htjtEH]<NRSa@.6E54eK_X_QjoCjuV#mY:?fT]q`!1f!RZjA+A&#O^$21+H-,PfSQ$U01OH6i%,XI?_$`EQPYE]/mrt6$6E`bD7
%7,NU!)tX1BD*'gf:]bEN&2:8IT2$.q6Na.t05shJ5%>"q`ioe@2%-#,>=CR,E_BcohG51/Bj5p_@;ua.Y+lm@ZN?m6T7DVb#0.Ab
%]u]W5f!O45lNqZ7B?EP6p*!V*]JU,IZRZLsb4-h^Kj+OJU2`4^Y7g6F@7GVjZ:-;38f`2?drsDURYUKn%++!'O)[BN[Bkr2$?.TH
%-R"m?1!P]#Ehdt"leIp%SLgl6NFp&_c@I!hXu-s\2BaYqUjL7CVM&LE7UiVX'dOCo1hmHsek7:AetBecXnh#hkEn"RI]RLOnru]n
%I<[i`VC<b?3@+mqHm?V&Efu<Xes_f`W#$?KB(j_0:TcQq#V8S.3B=`UXR@od&E_]$,\sIb%CP&-E5EiO,1AuGF&"d)%f0/DH,_Wa
%9430/[=2Qf:L2O'Gt\2T2`]6-Hn'm91(e7n41.I34OcERgmkteD\V>0e"LeCXa[BS]USI%L/IcP"A.X27"*HkI8p`T75M2l9CNCp
%bD7B;-d<2)aPu'lr/hjMW6DU7Rh]kGql+G0I3>s,61.)_bK]7UP%d78@/<X?+7\6LfBCa]4bHj_I*NHS9Jh>Z[G;Ec^+c^@b.0""
%n,`nrqRo_lA0CSY6^\$+:h6j6Kf)\N.$.#*JUZbb^#NT/D,jnR"A`3&`Mii-A3Su^0OI([4@7fj'U743N%"?1WCCEf#ULEhOQDQ,
%@5\1H[LO#6H%kl@_#TiB0IqG/XAfZ$2QkHfO/P^3`%!*eVu'3H\on.,q-43e97n!%)3Tg)6E@\T,L_NoAdGgIZ=b9\<+eH/cP7^H
%<D[AR$FTFliEXTiU'p#464hlf.;p<,XEC,gPl*'h/`0a6,#lG&.9bF'F4.;kB#iTI/$r'iN#,Q4*-%:/AG\3o0r=,4BCG#g&g0Wj
%BJI#V=Qot%Pk`n<1s!a&@s@t4Vb1^cTNt?!')<4E@6lQ@`9\G#H^fV+W81!"5bBCDCkXj&]3#N(,`VjnEWfYTeD^WE%'8liC3aIO
%)SO^84S;i$=P3@rYD(Il]*8hKd12sP!,/A%OqOJ.\Q9])7XK-m1`;j9EcN\>o4r3]&P044;N_#33Q@:?nUU65K&dCUKX#sFP[YXj
%*@J%DH8X<M7UY<2l/G/&[duh!45YVWQ:H=`<_8g7J>Uap"m+Cq6&3BR,\C-;_Q?ZXRTR5m.deFD=C1a)-(,q'*(,!uglcPQ2%:+?
%RIPsHbkU<lT<'FCWWcMQXV0eE01E$8*22VOqP`T6]M^kf%F%'L7X)Ld*LcU5?Os)oIc"@2NOP#Q*Dj(E"V>K46/IeK^kH@?_GX$W
%$0(rK@]Y>&H/$HacQ#*@eT*nK:*jEV7>tQ7[>]XKr[9"c"a"Y;p"ZJ[-W\X%N[C%(OBu^6S0BVrp,_MbO\i.,FVa)iDC>acm7Yfb
%G1n>le^-%7YsnrZa;->-HQ7['h$_'#2;;t).NMWiXACp(7H_858e0a5[QL0Ig-<@I?6,O;KeP'VSpPZFpU7R]*P2Fqb)AE%*"U0;
%e3NNaambSI?-o1PH[b8`%4]*fKH2:QUW>0'6q9ln+cL^fSN-_hANe4#`\eI&"Ygj%lZ=Uea&5*_+>Pi8PQ=J2E^1"MhBX=aa,PGk
%\?S-BE1t],gUb[VW^']WM4onSTQ4orMc+S7RtWNk\g<,DOV8C7.ARf;+p*aF3ZA3sG;2/K`(^O?T6hA(IohQe.@Q!7SIr_@?:HR^
%0D>$lC\^skH07"<hA?R)>u1ui(/Sds(@h2\.h?[c;Eu7jk0&,X.35(40u:OZKut_*9%b"UnK39lCr5M#c_AK^*)-TtBDVoGdD1!p
%3>)jQW_O>6GU1:/UsTk!,+K[-qE\uZ6:nn(dj/KH8>?*T?aZM1\&?"aD36Nt22Wb/!"Tg',.?_bl.]\2>0UoJ8H39+g;JW9@bD5Y
%SM[<]'EnpW8E(;o(K*^bp?J!<lV%O8,k)CX!#"6nO<bBZCU['Pcq6,2W&-.-O>j'KkIMHUC;dUnHXp``F2k=4T!2'&R1L7I7hfs*
%)Vp#OjQ]3mcKC9RR\q@J)`@jtKO_[<bu2j#B=;X&8"csn"\8e>k+'ic<J"*2\L>MC=?^e-K49ClZcHn#Js9A=XP'`CEUI,s/DJms
%JZauU)%pLm6<<_u?TdZ';X9.'C$X0e&Odf%lrm%Q[uI:Kn-f[7`8tg/m-eoc/TJh^b:K1+2G<T;X2T?$.V25W8+2/$5RC$&g<+F_
%^p.lr%uc`])?HdtE&*+!mj=XQ0TGp4r\<qf_jZLKOmKKgj2*\(:2&Y/PlOHGY+^.<*/HH%g!@?)<=;&BWsR/@IcK]9a](HWN^sLh
%\U+=)35Z7p_E(Ne#pDlr[0eDJga]/2\5u[IY\8*u:If#!CtgN59P!84bqOKCfXNC?'mFhl,='8)40RN2HSj90!1HqW"*>*aP39a!
%*GC+;NN*3VU8hnVJ9hPqB&uQe6CBUPgTD?Y'X!Dmi[2*e&n_E^;`+$P^P+T2Pk.fKs0<+X6-'P+MV/jr1NH9W<:tZ=kq#/b?,G$2
%B[(;lAA'QFTFhs31:Ul?in@_+L7;&DP6HMRr/^c))JUWF)>p=WdPBnD3[AIF)Ccpk&B6giV.EdQH+6\&VQnc[TEFKmW*?g:k-HY`
%,E7Kfcb77VD66,W7R_/T6Vh@amdpkZi!`D@WYg/(\'E^E1Y'k?!"u3dO:E@S@.>CF6"$>T0MLg^,i)#5E]#t]8?PNUd&C`"@r@IK
%SYMMs@BR]9G1;@:\`$(A=r5g7b+3=*Y)/BN4pYhGJgJt_VZbgkKd2_8Pu9!HlNenp^.ZK]3SR&H*]R!$4ND$aAE`94'Y>2]DfF?W
%EM1MoLfYrsj7o\&VCEUr?PTYL$@'p1$XNGkonYUX3!h@Wqa((PSZf*(@2A+b;mUO&(ZY<:BCa5=M8S:)oCt>3/"okG1(cL1NZa>f
%0t*=!YF?Q);iY1GCU<=_.B)J,-'D.G%P%1dJob.!`d^&>8H0eKqQei816iLa,k9o4WTSXqKiPf6DD%hIBF9V7"uB7Q+EdpdMdR!Q
%Lm5_%&TMtt_e:Mmg'QgOSWfhU[GP-8a5ej%1k?d?8i[8mX;ZBSMMV^=%]qMEH]&00cuGiB>dt9.hnHiRr&-mb6"PfhMWF@pQC4Fm
%dbsT(?nqc;.-AkQpZj%f,"2?/qkq2H*V"I()E+t^f9D[OaGH4b^QJ_RQ?\fEcaTPl%+*.V_uiu4/8fTi5Oi\sgq$:@!?74P(?_,J
%W5;$N$5ST[b"@%J`CQ*9:.gR&QUY_)h,$1n%'oM*9MT.oE&gUkd42CgacWZR=ZSe%eD(X=DGlX:&HLC7U<ECR&ftXXD/lIek;`6s
%^D61Y;U1$H&%Ru!;BCeF_FoC@6qUs)p$ZoF#M.MpLO%IqlNQt)[,=lFaK`_'!YUtj:c4Y<X9N<q$rmUJHCM"aK0\-a:rYA<SAWn9
%#>!-;UL8a[71e=EcEbRq3P7Uf0dLE<R^0YHL"j.2m:Qd*Sd?BF7g,@RE3U1VL>[.&&$D*YbgE#iri8-Qg8H36"#E*UBfuWO3#_^:
%r:H_i/<->#eQsGdU/Y1ri\@ccSKp1/.8Nl)7'WXf87"Ti^f@OK!F["o"G(lTFfAMgl#B=n`.cq=\qj:.c20PC'h\r2R'%Hunh"s!
%<0BX%V%8L[2m)_9.*[()=3`;!b_Gsf98C]fHAt^V@rH_Nqouqoa_F$nKUpg`pdVj+8q(Y%S`n.B63Z0jnJ?KgQKrfF\]/uRRXh;F
%b.74tjDXY:IA,a$[1[3!q<6@k-YN`5HBa^l&:&^al>Bn"72ktc!W*TE8_DLLlk@r3d'3C0#GVF6Xrm*r)iSQ1>YRWKRpL%+pl:=Q
%K">_X`Q+8W95YJ!2]Jl%Smm)G1-ok*,WXYQBukJNWY)P_]sX1$77d5@,e0oC.+>Y/,Wc]ebIP$7$;kfQKW(@:#=b;79,kbZ(-p(+
%^2BX4AW8=(+l@l"m#Db#AY;PVQEo\aFXT!n[:>boW`0g&#:R(V!["*]O5%sN;]=-k+'_UokHaO"Ke.D1Sm"Lh+P2"MY?fGHe^5D1
%,B(qe!Xa=.jDU7nIc"9Z1rS'2Y&ZZJp],>5W'+0029e2M>J'K^;1q?+;,A4*eWA@>-FXCZJh?M=XAUDk^m%@^]hQF9'`tDLePno8
%G3==8LSiXU`8p&<JXoJf-)-TXN0:I!2V?";JYZ8IXEkP"YOh%0Y]g-UrMdO*h)X$)DicX=0p\j78s3VO-15pG,Ah,kp"U@`4HT$*
%9god]6u*cHH&F-1>X]-N4U+0XW/W3.qpd+[=lN2YH0fY9B^:%)rPl`8i.SB3lE>3Z"0FR1nOhLh$eZ(4Yfj"Q70RhSM1?mbhie)7
%0I+6L'aDPJKapOWNReMt2"J2b.rZq1@``I>b9QF4K=6X?+u<^*C_HJ;(Lem=!r1W;rO)-K;FJL*`aNc7*>?SXOq*P_7DR6klq#bC
%oDKAH8qG:9I@W75=FRU:0R:`;d6dG^3b9mZh/h+jAfDjB=Q[u%W6523m%8g&P@PEB/8ie]:0"2iJrD*XbC6AR.n2j]:%Plk?mkbu
%qcf;h3_M1Hnqu4IaWh*AVl6?t[HNU@$/._c1%%bG*YW^3J>2Us6;jk@"j(D1Te"fmFa%#1R7ie\n[DX(7&b'5QWJ5\U'0+4G7M)'
%B,90#5j9Q<VpYEXI31>HSB(TXCGH(I`pt(l$g<5+=(juC//<nZ)%:]%EMWKR4\n0$H4GI>7juZZ6n-=.Js?`/\mn()K1XTd.'/pR
%iV[L<(FDki3>o6=;nMj?FNMF>6uaQO1,J`dEm?&0OAEbEX#?'F$t*!L9+/!klQsqh/<"_NilmVU2Q)fKV9!069"^[);(UL91Q^DZ
%a20RXX!hJ&;R&NSS=r9(V;jjHH4[@'(25Lr.^O,gA<*`fkXjnAq[I[!7::RHH]o82K??jr#s6]$G%]hMUPn[X5i(e7-/linW1"c_
%Dm>)1$"s]H/Z_qQk-!ZGbk?o/f9BU)7IrK=JaO8a=IfSQ\Q/;r8lWr=ia.oaBqR(QI?-6l=S.OkrG"il7:-QrP>nfBg6.A7^Oq7u
%JA8V]!^5],fCrs`"[;$mb$g.To4m;>IomQ93^;7a6SM@8+Q8Ko*p@+@TeA.t4%,\%C6-bt;>Kl$eZj]9MXq&`3ai(h<>3D"e%m"%
%@'rg./>kf3mNQYZ_q2)VD0eICJRkr]%og*Am<RMeeT`Mf4OAcb0&!H&cC-%JSU+=n?Ad<XOR&\-<[=_0/gD+]fhI%qNltVE*E;e7
%*[VB6XO:5!E$VLi1fS@l.pX:YI`:<rd8i:tek/Zu<d;,?eQG`*7[N;o"mS@b(#Z(0_-'cVSS)'VCsi%4o%rtln8S^TL?tg(IL^7X
%."M'*`79"3I6E)ds5)'\iV,=4Vui;8:1amYah^)TS-1pr9DEh^E7R,U__k'J&WU[P!k;iqgJ9@^M1[*7Vc?6X&IJB07L2oV%RCl-
%Y,_Ec@lGBoWlo]NK$\?)SKl':RT4FgesTcO'5<Z2T*/;D$0X.F%Fom0ZJAYhg,`!f@[0r[]B\Pb?Mt>f"cX[[Ft8*ba)8.ZQ$L-1
%nlire/BnC5VTLs#i=^+8B%8M=67bIF6$e,?HALSprbt<'@Fmu/F@;i+]3?6>29s9N*9..0/BUT3]@s_;,*beCO(k4I:lAMiE&_&<
%<;j?uSV3d^!K^_aa@TLtg+=_s[;G5'AKP5CVij;Gq$Mq)Zht!eh1\B)p32Uq]oEg4ifda5,Cs#A7!ir=8'`hnW$7k"G;pu_f4@C6
%-e/(EO#JFS>V'LW\o>Rj7P?'OE$m%`e$A9T]t)OV+/kn%JNir5qA+;/qtTTrHs_\8WA(so4<iM&AqJDE(Lff=M-@DkZ-tA]>hp'l
%^$_urmp3h/8FCJ1JX\2OJ8I;ulTpODl;7ZkrCE"_]*'k["M'mK;"D><K#'_d[K04XIcJS$pW"$c$Ra6WfA09BT#)@J'8!783ZuG:
%+D#9i9bt4J2nM&\aTT3ClJcWUP6iljSHmY`E>qUWKeY#?`@g[rU.5Spf$K?7$#smJY(l:.ihdjg]qkj">+D8HHHa>5@bj\RjV"k;
%U9+_/aWNT'L8!jOa,+oNmd70tN7$Fh0=7%71f\]R<),=41A6-3*q=k/W@KF^ZK"!BG8P)b-;on]HWLVRaE5P-I-j#GO@Y>E.WbjK
%m&rKDgtB[qEEPHVThl@uBIc[:i4aCT<PipoE=Q9Oe4r@[cmk0q&CrPH@\I"/4Xk[CJ0narDECWMYo1Q0YP_Kl><e+[DC?FV-%#m,
%7"W#*)_VrHF3K7h('S%?_8/^u(2n@UgWLJX.uJb*AsDU`oi,>;<R0JCCZ@[`fadc^8lElV!FP9N<bXp9]W$[b8h+I69>&ge$%TZ[
%1-G:fc?d#hfp%po?+OisS!70h\oAe;(AUS5Xa@%,><,i5hQ@J$V)=`T8um,)Fk6p].u4=B5t=)=JEIFQ-%=Fo;&W0-SZdG8p9\%_
%A5b$qENb[u!YQRCL9aq9')"dL<qf5C:6#s-oWDPs]]KiN(.V-9F=lg_=;Bu?Nc]i`.Y'!]U;0aT<Y9<js2<p0"uNHg<kB(eFYB#4
%GA+`^kIGP`ED>u'h+i^3d!!dXg(%)`?_pALbk\)'8,3u9h2[79Qe[lO@pk62a=lMC82/)0"?`2<6PP;jL`i[h@,un]>G`n!hgU>_
%7Am0(Kd(ZV]2G:PQ-d"`Usss#mi<$.Z^\4#.!&cBH7BGG*%C5NF%;V.@\4@#h45e9Tj"P/[tGg;bYRe(b04K1<LoK"8/7po@U#H_
%r]sb'+cr$^F9>,k[-Kbq(((6&G,SlP@\]"-l7JVcP9XAPMeB<N=.ng[>luWgcmg^F4'u*Jjk%GCDfK4!Tlf^>&L&GboB"c],K<bS
%mVuMCq6^P9hG>=Hfo7PeVA#OGZskH(;nJ>m5qSala6R%j1K%gY>!qR!Q!]pK-J"q2nj2X>?3ep"%?!_9/hBKU%G=@-(qEs3)Of;;
%IUnF.DN]P0FhJ:I*QruJZl1Me0t9YQ5S?&9-BEL"??>O/4dOf)U(\d.MkQ,C>ECTbAQ>Y^cb7<S;:$Ad<,+H*FbL!a(3.sgJlEXM
%(5!\Ya5^5ZO&,<!143jq8RW_d;""T`bE#*7Vn"1<1(pGG#?+/ioG:X?okrfSXK@:f>`8F<AI>FflLogG,"XH7.8dZ8/2:*5f8'fq
%JKS1,B[<hiroIV:+f88<G[`hqpF7YR2<*7OA6`)STgr4KUW:&$oPn+a8u:'un2Uh-1g(C#OEmC7@ifYd.5S!qfj=*$l8jZHmNtgI
%*<4,=1\m3#6!_VVE6=u>Ke(F$USL#=o7`'d7^g-ldgIG_'<7C^-BCm-`;!.;=LWnE(i^S%C0VV9Os!RD!C.KZ4&pMQN/+GqM(OBI
%@Mc4Bbu?h'\hg(q7H9*EVGLW$b5l51kls%Fh*hQs.cP"2Rp=_H;tSa_RH-Q86_C+!?e@@AL-Gp.rb<Hp=T-?!kXD4aDtkIr=_1[.
%7&J6=(=d\18s5:V&`cf_Ub!%ZS?o+i;MMesQJ&$0;U.T$IMGJtjd*24Kp$K5VdSS\:f>:u)<"pCXOJ@=3D_l?Mkp[&;n47G]Wu=o
%<4fpm@A_9->LArl%?9Tgp/o>R&/e$,N+GfEU.80i3&E^9j=h&IWB,(/ho3'fp!P(V;m8I8:?l+r[p@0@8?+]n@.?WVPcQ.%)Vgg=
%2(2"PbCjb$eHU&1kZ)g2bXqd`lc7/Fb>MQbhC3I-cibP31YVfWAM%LjN!2R\99I,;DJaAjk7i7"3Y)RM_pA]"Fj>tuCs05$e)T6L
%;g_NZk$2RX=1,Y#TQl[I5r<gm:U2MPSR:,1PiLA-Z>b8cq*t+6$a2aCs)R`1fP*dsAn;:6YAY!WC@nl+$m-e90^cB*fXE]u2/qLW
%QikmI<B!2*$uO0+V+5LibTdj*M*f(ohmYcq?@b?*ZLPMbgc^be#2`/a#H>`TXjnEEX]3&PU[pOSkf.)3)eLMXB/krB%Vk$_Q!iEI
%+*);&+m>)/&_8FBd"'c96e&K13^aW.a&olig:%<UQ2VNM])?Er$(YH?OkS]4@>T#kT[H`hm1T?S@Dc8YN(Y`gbIM?JKCt=kKo*B'
%1EBb`dOZIDZlN*3@Q[`,H#ji]S&Jh(B%+%sZU)-+nJmCk25=Zb"#dd,n;%k).1R3/48W:#&#Piae[&'"TW@sgM`nSZIo14/fQJ/F
%e3L)!;+$@hVW9j'3ULtcDF0b?`GVYp4U6*P)jbB)f7:q'j-IT:j*]'S)iCS(>A7)qm0_sQY/<b=SYf@d$[6?:NWM%9aq%&;dN*CV
%GN#dmrHfqWn,3mnL*)Dq?%W\:3BfUFhr@^=cgA:N8C,7`eXe0`]lSOEYL5OUI"'pF$Af.0*-=i!;n#Zqn7m4pUoeU:Q1!;\0$Y2V
%JWu5=F1k)<?GQ0P)gn"TWuU<JVr2ZV?%q.6SA*fp.T\n]gg*'6MVt=2ccCm0aH<OD=cLugH*p6W.rcKo\55a.gLh"mW-(0I&bT`o
%+=)eh1,K\;g!VUe`lU@%RM6H^Yn>+Z,rEVQYnY]iMA79*+AplZ]bDaT.;b?d*dS=\Uharg[rY*\G0_eH!p0uMmM*,?*@u!VF6Y%9
%WQMDW05[DZ#\Y]?pg6IV[2prTXp!p!2hdCD,-M"Oc$0Vj`UJjn>sRo%K9UM]aZIp?HnH&15*HfM9ob7=8?Q4K_\/[HIc';9ne_Ug
%60giWgI=REmqQ:P&"=Ut8+4pE3ocF3$En(aQFE(2M>eRe#1A2gW*UG>6.eVm&^kch4d4kL6BQn-3T?K2UT=n;+"bW;-lt<971B2p
%U?_+6FBQOrMMQb#b0H+Yf3GKJGA_!>fc]m?n-YG0:T^:E*$qMOV?[b!^A]fSLKuPuSkRAfrPCNY.5AKJ0XLiIE&bUlG+8j^k7q+&
%aENMDbO0g225(ha(T;XPR\6S4Tu!!i*?eEO`/L!KlWlQ6;d>LVe>'rkO`&![JE.%#OFJK>l0XcEKcY3k7m>F"l'snuaMDK"hdF?g
%LD9<=Pj(L_IsPFU'Inqho]\Q^N@[`ta[0,CP!tW#7JBurcmpO>-j^Q(:l;ai3`%qi5Z2-In85Z:Pk8+X=:g@I"R7Or6M1Le"_bV=
%ed3P$S%[rf5a?T%8>gZO>B0&"ZX%0!m?oGL:;((a,i0'lg#Bq;p"_Pt=(XRM+3PG!St?KM4\DT&$s0[hNi""^QX#nY(#a>kW([i'
%Qkj3ST`-D#MQ0rAAf,\dE`!`eS4Y&`"$!5*a*<:^?6e@++?KQl=iDd7K@;q-=_LtJD4Cb]PhZ?K$rD//mBanDk&dJb/\Qc+?``[I
%nY22Q0$F5]`M6'oRe>6@)@.Bp;]_Tcah82:LFSlb'b_fnZi-]W^WnARM33VZZSG_eM9;1SpO3>ZKKMaGOd.AiX+p5nM'Gsjq,C,.
%rLLgD<EsofVp"P3)VVPi,g\Jp.Z0BN;](sRIH\`jb;jhgc!X:F/_i>h6BodYH6V$5%;B$<:b0Y2D4CJ0P"DMRUiG'YOYmJDbiKl3
%oii8*8JGaP$,J4s,/sC%Zb@Am4%R.=$D7Jr`/Ihf[4;sCYdoj5c^C!L,<Q!$LNKO<*6uCG+a@'4'=O(ULR4^$8:'(]6jP<*\VUd?
%Z%U:G$^4R)UgX!HUV5gB#e:I7+mYC9.e6%2M3VAQ<#EasT,"h$nM-_gp2K";.1k)]//:=-0pB]^j?Da$P/0#-\qJ8Q3KfJORkC1L
%]p8IsLhSG@]8:>pdJpuG`a\J0U'gV*/Gm+Q[qc?sQ+1g>ZR)1[P$*;T5($LH`@Q&(FA7g?=O@f*Fju(9jTS'/$mDEs0-$nQQhI_N
%VfF@@75GtQ>s7IMJSYDE$Vud\Pf;F^5AYJop=!7\]jNS-[G7D`c4WTaST@JmkhB)[-*".M-#u?]E"S#S#NuBW=Wg-$Mu.%Z=6VB#
%fEVj`$Pt6f)RjJ'5a:3MRo0ZnKksXuR:"#ubg8#ccp1Wg\l9;5MJ@;9gJL[K^++fNPk/%:e8pK"9^C(&V8%Zm64ol=IRoqbLt3.%
%2E<<^r(:TSks.Nt>[#K@/8ClG99m]/6PjOh*2ONu@-D&KR@-B+ajOLWE0[p>.onlp-#3NOYmmNAYO\t$asMbI^P)_k,&?dr(MBi[
%f0Hce<qfHnbGqj;eP^g;=%XUG_iPEr%rJb#9^J9N8A`V'c%kf,92//bP>'aV0/k(4H\@r&O>ORX&s7\n2%cF,/t&D?bk\I_n[`0k
%D`;$Xk7+SjLeQJ\b&HokVmL^EY.X397Hm+.a]$%[;jFHKkFL7U,k",5k24a?6d$)OYS:V,&1+#tdj_9a'pg3f`*pg!f1j_G$7$%F
%UNX,@IY8^!!>^(KYaosu'MIqb5`LaF[cM?Y4GQ)S9PiQ866KY7g%@9M&m.H+J[$aWbE6aIEK!$a>72Y$NaF8H=tB5'_Gj?7.h"d%
%9l('5XQ1>?;pR1/$8ELdO5?X1gTn;JCq$PjO&(Rs@jjI85pTY0S!;5la;_Q*pCYV6'akq*mAQ@U<IjX'G]9L;kY\rCCW225NWVaR
%-7kJJr+c]CA#&:83/,ecpf+?m6qEQLQJ^r4WOuAd;0,B<]tpX+^q8n;WtX3B1dj]`ZB2sg,iL5:/u2B-G,Fr%`/gStQ&7RmRBr8+
%1*f=0)Pgkg2W?;dX`+T1@e^S&b80Q"*3T,jC]`?^gS`[6VW0Ga)8\^4>h4\Q"lVBK.Fc(!euh)?;ei@tgk?UW6G&6.glc+Q(#7Kd
%d)5Eh/+dj0r_*a-@@^hi+g2F3;Y1E+>:iS&Ai7@m]M#P!ia;#W/Ypp?IOU#%(q;H[CJpg"1.FcW\21Y(l>m,L*Dua3ck=@#m!F;@
%ZA=BtjtLTW1mZG-UjbElmiY,5QA@"'U?691'rJH:I_IjPb@q];dg?*Me]%5E@#\6;>U<e.)_'r6f16."Q3FRS,-uC[BU09LOFo\F
%cW1N1lV,)5V5;tnALW^d?9O:Pjf44Q(keOjO*k/"5In]9*9OOnS9K>KJH/]Ol^V3XS(=<q6&BS]iCEhr=C7``1-TFh=9.CjJMbZp
%TdO)J%3Zq+8puFY@UG>O8a[me8pm&tK8!]2JlpYAUfg_5O8C?q7/:@a]bj8U\/5%jSV/V+NH=,n,N%GQA[?cFS6oIkKFgVOX='A0
%n9;L'SFkj2T=NR!0;VR7*d%Zd3;!]?#PchWe.e!jWIl)!a5C'9%15rPl0G]lps_$M7Z:3D9%_%2>&=o[a1ZD,?Yu*4"M>$7el]i2
%U*m=W[rmNN#$bqLQ=dl-M):Kf_IG-k]tpEC:e'M=[6*lWZfL0-0!`rW>'1Pt,*^cUJM]b%!t`LHWbO)9kj*H!A5pj9R5q!3W'R48
%6PI=A)2#T1ON;<>cm0C1O6t5Te@eJG(HS\SPV&]5L;Kq/.hg?S+u1%ia1#@lWsV4p7KkA9WL7WMqISmrT\<2pME^Bbc19Yg]=/HQ
%pbg59]/0_cKVGb<c-Y\%[kjZA1C(mI`<*bqm\"+JnsTee@`L)PScIRmJ_8YYk/^^UA_mE0$ho8@@`;mK.\)Zd=e\iTCDW*?5mi\<
%G*q#e/)ND7[&U(ODBWT8+G-JRT<f-`/T3"-6s*erm:!!W81;No22JRS])rYF!U4C?a4=eA;F[['\PNq0D$6k-d$*r2oW"UGB_3eK
%WXb32c*'-"dVXKkct0/arVR/5EqtULA'lm(n9<K"^tF(:YbeBM<KnY@fqJbk`M3JLo8]3Q[$anE!h'g"E<.=>*)52GUq#62(iDW3
%TjD=?e`hW&=!Xl8is:`#e-[HeEQ9aKF$pU+>qSr'd;2iKcF=*W1qV8r]%Mf^@P+t[F\kWf5U2Ttl0!#0O+(FNN"0M5@8Ka[?:D`A
%mC(T(Oe'AG*@"*...N0`U?cF$OK52/cOXKY?gA]o7>V+tpnk"S=p0_86ad%!rK`=8WpU;GY==f;mH&u%6!\/RUkkdeX+T$[EN*,3
%6Pkb(W$4M^OE-O..+GLId,J5E<0gr`!VLVBBHmN^[$RBuckl7*8?s(.1bq(+Uh0c[QUu@3T&CSrp6h.qqK?R?8POnu"?MEiOdLNt
%BEdiE@_CI\o/ME-k*0VdkBamf<B2C-IQr0#W5OA&Gk%.V>TE*eDPsg6P%c\)^HPR\IKAiXJHerZ:+Pd+pRM/`/EPQ&-t*Zgbsd%A
%B<H7&Q8i[&Z><AZ=,Pg.,D3#GA-Z5@>W+8R[`&COFc9A/("IuM=q12)>>8uK,KgfJ,e7a^MT!f`?*4OC%8[dn(#LhO2F2Y5!!)cA
%\T)lP+_Lou?@qB8RSbQk^5X\9)42r-4jO5MLqRG!cA%\?p;d?`$:$c#"#VS^aPC<:$`XbX\>:ikT/"!]Tm(p#<WS`Y4h=%l44(N5
%EJqu.-HJ(UmrT!V+_BHUNmsbZN-I61Ppa533Jtu;U+5Tr^!HMMa$*q]Q3E$SRTNB/Pqk@q"0*?^WO9%rWiDdD4.r#7IdTs8Bk[d$
%IbaUsWYKdKl'=;a&JeMT\O@eq4Oib5]ouO+92p`7r.[_T4(]Zm%I,>*V-<Xo>:>jent>_U8>nKk5n<dr[CeOu$@NnH4U2))hXPXC
%Di;"e<A6GYHh.;@]NQ:/Pp+H]b:.^o\I9\/7>Zm^)RL1!!]'d[XWFo@_)6[K3:XdOJY0KFK-rc(Z/XA\md.dY?e&&fIP1UK60WK%
%@8$c/LYXYFB5@%FHEB0M<r@X?h.mF'gg,T':n=)R9o_<;8H!HJlT4iB$abL"@cKSZ-)nI!^p..FJBr)e^'0<Jac3sH5/W#J.(V_V
%Ba:G#7(S^F,\&+AbIlAhB(65F>#mR3qui8$G+d9s3#.Y^=mV(c"B#a3)FZ)(36s^ad-m@pA2@>%RG&ch_gjjP;%E)WCuq1d2N#3V
%pZm]12p<MK2WU*D1m!ftcc&/f2QV`%MD<cj+IYU["h:.i.WSm['N0e^La;MLVVJsI?-NLaOULA-9656>8h6']>KghZZS[j$=>/)^
%/[_KPnuMsE7jCBX!uO5b+JfelaNUelF8a%7B0tG(oMuVAhmp1FX1>O=SnTto,#e$*4OEde%HSD%XGXMA+7ra_%+Q/9maVW`OPfNj
%K`b@\lp,-QB2jP(JElE>CRGt%X?&b/GXb!e:/Erh;@nBo'Iun!TIfNuY!rVaj2/(i:?)`fZtd=YEmCE,Z#A-_[b?#i6KXE(EC4&_
%M0_+Q70u,4NM&mrrLO7ifMY:[T4]]1n:5gGNGs$5)Zb&>kfp4_-C"HI#])/GI)Zj*bsBH$&NU`p@DlD,7Sl1qrgLdMOK$'bi/ZIq
%RL_H">Zf$p@JlW+RD,\kH^3\DZuTo`*40Qj-7MDb6YXRjZAV)Z\p(*5<K`NC)b)SN/o3pL]NR)R/IEWNqlsqTSZ8C",>*(RE7PRs
%BJ0XK6tQ]/rj(LQA=tLb\KDM!'rt[<r*!W-.RQ;qWl+CqKQN)E4K>b5hbV&F"klMmYOTW,!K:..(5+t>eI<h^jtPjP3`$B;6*gq;
%V^SFEPF"m/!84S"ZI<om;_\>DX[#sr!sVqFhR[[9E%[k*Ck"^`SZ?e:if25<??4_qQCf<l+co"F?,6PCbY6,FH?!S^"\teU?/q4q
%T^,gT%R='Qc>8LP_U-QQcI*S')%*$O8KH3s)@&n">Tcn^`1CY)O\b&Wg:TMkrSTa#6BV_$'@\s_aFcU-k>\o?d3)7'T0QEXX\,2q
%W4BbF\UWA=:SBD+E)<)mL?+#:W8\8ldPo^(:rE@6-S;OK*ih=fKGs+UXh3BN%oiZ[b`&]Pa^Wl>U*5#,4)_fR-eUaC5C'>>IGgi-
%k$VkG\7p-%1m^&pq?cFlp9"aCe*#?ueV"#F2qi.kSSJsf%<P2[8r$o*9BV.R%cCp=8YHQJGs`nKS)7pMbp`?aaiBd_m3!7NTI=(/
%HT?K)1JMIB6.B].FgZrUFs=%+;Q=&&#*S+dme8PpfH#E:`f1p"ik<t6\9m4o'*>nU-^[!=nQf$=FF'YmKBjaR_Uh"r*?-5*>k>\m
%8WD.o&7?'K!'2iT"as[$CS#53MPCVZCqK6QVEK@b,!bU92hP8\_iZ0aIP3+Bg+E5\eJGC#NfXt)2,@gK:oWiR-VA#pR3Obk/ZYSb
%4(C/\CFnYd,Z_$o3E'X<o!r\=PSKI@>Q@/\Yq/NX0/<[;<#;U+Z:s7/!9Kj_O@?22A2otEU/>XL1RF?6&m`[19*q]N!n(tZZ![eP
%M%hgh:Y;O["Q5bL7F8kiWM]+13`)i36'[)8#45m2aAGm$3UW.Baa#EO4nMTVi2A(X`$uePk<=)"+sBrTFgO]0C/k$a;-<K`/NbT4
%F1#9IR6?@k/H\TLP#b*i4.m(!Tma2E8F[AS'_RG_VFe1,ijY.TWH[\bS/A=O/'rirA!N/93eT5V;p[WHZG-0\BQ\_S'?c]E.l(fB
%@13"oS_%p[,$upT<p[RgjGS99T43S!8M?dV)CeB$F+$$uLBK2M<E+u;<,)-HGX`mu@PJ\h1luqA&1Jb>PMV+F`Xo1jWXq3\4JJmV
%VBDUL&t4rWRTd.fZ7<6TG0mbNj@_kP"ltt&(-_Y:'Q[I5RlTHccY?K.Qg!@lYGA7(Y'l852$s;[pq_o-hK?K<)^>]BUC5/e"?sF>
%PE2h8@;hk+c[r7W*b6'S,$"uTe2F6a0i]6b=g+/s@SmG:9FCQWgY=3VJ&WEpp=:-YMHRO%<u\5OT&YOlX<mpH9&+\n@7-hlV`NlL
%9iR>9mhAZs(+e"a52Q^Z=XtGoF4i:pRpG.c#Tf6RMpk#tSi*.\->aNKM!t.#XX@6dhr7\%&dOSKh\S@WK9ZZk,pgs^1]hWA&VQ8'
%FmQUsXWs1]irl*/&a*mpNmhs%KT2b!/&B`YZg[KfjfaU(=-)6]=L14$lZr?X'#b_&dYPrHmMZIdFda%oG'60*@N'h_pJpN'5<_"[
%)3t-PX9W2ek[V*&5@e\=ET]0J7MW6r6tg\W*fuCFrTqm'aU;*!:n>mcb'=;(ieN3ZPFpUq.0)+X"6($BUIl1\FF%SGasCE9Hq&\o
%Qb."/XI"N^-&!bHqT9cnj0,fAEU;s@BIH2N.:QbcoZDt!8LT@a5[.L7-65nlW9"t=;o+RdNm%g7F$cB(r+fQQC7]kh'BX7+bSX5W
%2$am?$K`a1([X#Ik8:KS+f(7Eg<sG$8Pqn#=7OJtj^PPE0c/g8W394ebmYBS?=d.$3ZNqjT:!P_[A)XuA7H0sQ=pTO#F'-t.;:KU
%-'f1e46m:pS`2#8lWV*Nan6@9'T;K#,&:;nj_Xc5=XBs-V&-j#LGOBs-j,A?Z?oaUZ)YIM!_![3;'i:V$I\:<+:ORZNpu:U<.LOr
%D.t/m/D3ktm0Nh?^LifIk)WP*4Cpm_(f\C>G-FTG:S'ZSdcrP%UM>>kql@jeN]Z4I`f3X"B&iZ:DcVR:P<=_eLYXO)eQuu_Vt5SY
%CQTXY;oKbm>0HN44L[qF+gc;N4X\kWS'>tfMYh=[1GAfeL$B\X2s6'Y\Rr6?/#j[u<FKQ-L]="jpuPL-67.G=(9!3(WVm^L%htRD
%;!ERpM!^l>Bt$!(6.nMq/t>B`^.Um^_'V7U8<0:baE9f0S1W#[*>NBFSPSK&<l\HGbbD2^Z3DY)#_K"R&1FNhWV5QmAJ'0-2pI+L
%&j\-j:/.aI&ZOnH/!ga\ZRgQiV3RS\9$8Vu$Y]''nE7)X!D-u<`,XL_>$'RH.V0;AZeV2e8_SA2'M#IQ&\G?9\jWrQUolfl`E9<f
%ZOC8m$F+W=#usWSQ8FZX.N@(G3`e6_Pu%;0&%9&ln@h(@1lUrl1]ArU)$<.(#\?/\0;"4;X&e(+HIC3ZOHRU5*eaIlS[c.,-tY+(
%W6+,D/`b-@Ua*"Gn]^+jVM)J+Y<Q*noI(p[5f2:I8/6_R/%r_[UPRtKV\>Z'UEt3O7rHbAB@:4k<n[BHfk5d6q,1:2RQg5-Rm(3U
%WdT`=Cfcp[1r8qB/i2jnZ>[=X"nU8F'N6LT!NXa,d/m2gC@p)>!$n>icHVXAWeLdnIMN3)r4nRB&([LS+)h2Ee;p6orML]NL7^n5
%D,[e:U":uUX0Z'SE5?[#hGc=:Y>(9*pgU!2N09>jp0m0C5,8Xu\](416CQo*4YE3tQIfoNTQgD'6QWH$HaAuBj.SKJ+nO.NdCMq3
%REa4WS4,k.gI\j1ISir''&sboP+F(l16^2aZ\-GT+][r@l_IcHUOCp3e_-?c"BJ-AF&I,gBGai$XqJO:pMVYMlT=H):Qg^LqtDLs
%lj>TD$r%*q07A]@;Vb1+22F(L/FH3FhL1bq';&s(Vg&?>K&B$>-'7PXfb2@sVK3>mJ6>@7g08?YC(SlP@VZHtoC?L/K.7&U.#u%.
%BQW`/8;RBclS([uFo#)RkGPc[N,)(+55!lSOT#PJ0!3#+Bm[PAWKT@kX174eSp@ZGS9N$=aGQ%T\8!W$$Q(K[97W&!]PA6W$c\=/
%fHB3O:U?DL*>u'b^TA-[(/P'HQm=o\W\-jGFWuRG(o96kC^jS<<]hUgZG!d7I\MW"Y?"O=bSJ\d(6u!GMSVX#_jomIX@&d\k@2Jb
%:t>(g:81E6='*fialCaS`CUlu3#[>^od6R@lL.PSCTK<TMs17m3WTM>1'DAWDGs-&d@:dCRakb/Sa0Sb?<VY6?0,^NaM^o_Bfnp;
%%huoB]XpUS[e;iiF\1PPa.i0'2#82W3Z%W7b.XXoS7G,l%LLsV/p7/-c%Uh:2tWkW<B2M"3BSg6+18Jdc.=Bh]<JEfH5WVG26,nK
%$_qCRWnh\@Vm!%?!]hnffrL;r$7gD-=p-o!U%(u(B%aR]LNk00[[Jl[S*UN`F*sf&:R$=,`l'\:NAYTj?#g3KmjPoqV(7\.+1TRR
%$Juo$\f;G65ss1alqI>pJh2qUC09+\5]McEjP4GYcmB&bh\e0[%=>)Nc<X%Qd-leP$Zq4Z_!@"F*-?k8MQ"RI/<6JR`f)#+pJn/s
%a33gH%SA/W61]p//KF>5j9uj3JdVUjO3ZW$C;(UoXp#E!'%C/5Jbl>u9l"jjQcuRUAm_ug9nTF0!ua*4C1F&MP^I"P=E]QKmKhKr
%9J-XucHc(&n8T#7+EUcS7"0Fi-sI+@UcE.M%V7jBkq*$TV4(YL`+%7IO-@G@]2B8hU^($f<J;eq;[q1F!Zh(*$`ER_dN_E-7j)#%
%2q@RN+oH+t+7pJ-J+-oE\(UhV9P+3DT^]3p#Br]B;0;r&:k"4g0#]W$cNc%i@ajIsI.Tk=.u^%$HrnT9;*,b18TX$K,ikCs.!,6$
%P`Ft..(a::A?l=i=B#oe?CdBm-HW^SPh;4C4p4GS_^`XI.%`&bZ+B(r]G$GmfD#4`Ckq-S'Nc-F2COek4KBi7GPU!>M38`<oWEke
%3#^)UP8he.3n21pV?],_HP(%tpUl<52Cn1&Am/%H!NZH(jRe402IeY@l7*m+Bof%/`7c]hMKH*AUhHJ?b3R`S!L7Cf1S?sl;pfKN
%[6gT^%H34ZlGP^O8OR'cHL;7<)kpq(>f<$]q5@Y^fDp"2d`%:lE8SmGZ.+Uqmj\MD>:o9NSpZ`>;3%8A#E$)N7cR2Ur2]9-S*jK<
%",UXWZsL4F=%eED4Y@^/pE`7=BZ7Z#"bT\94t$_VJuk(:FT:,K#7C8F2-!Eq(m`7ZY"Ht&8!C$O\2OQ4\etQVijhkWeU6qUJei`(
%ErV!WKE1AYTFqrS$"LK9Qgo5OFnlX)6n<Wr/5]sGV43L/Ist3mBAYAFJ"j3A6r$>,MZT'Lp4pMbQGqc.eRZ3.]KM9SMb@UFIU&Hk
%r_sI_]-md#>c$ndml/R."o>=Ai;sH^CIDEl2gs:t:b4?g-R+>m$]&boj+mA/7&nZDNs4B-+jQKYP)_L6L@)hi!K'=AIJ7_-C%&I4
%=AJTkd,bGi5+KICI\G;n5lDgpG;a\S71>Nc0Q'gL+*9A20@R=$)C]%P-H@@402m-s@WWU`<96Z2(G%3;S/K6p'3c^P;Of3#H5]eg
%La)i3,QX`:+N-cC9^uTB3PBDljOb``gE:\^ga=0$iASb$@BJW&nMdpCY9Vb#_QuMQ6)?N)63cLQ+[2d7>!Ma6"aE<\lB6a`q;&Ek
%7!DaW"K3sE-`p+9""4I/A,su?Q;__EA/rch=YWnLL_uj]g7h[-]1(IBOAG"TXAc7Q,$.lAVSbY!N=pj`"j]P:O6R_,&L8KcbnJ@$
%h=pbW6l.;dDH_"6*E.&6*\/-IM/g]q@X[Zb8\@%GX-o54:F3U&1bu!6jU,d"7*=?06cK*-O%P<ae,gOJ&.HZ_A'Kp!ZVb5'Te=+f
%Z>=MS3a^nkDAW_sHP#Ih=X]_OdEI%hTtm$tFuOOM?'bAe94eLo/nu0AMG'QgdiHpbGH&&XbPg45iBleUo]Sk`W9DUPkd&tpQBW\J
%&`$A:G0]G*C1@mf[/lS&h+XJM]j)`bO02dA,#,.$EFJ'*CBR-A;73p1a])3B-_-O$$e01A,5-Q9-*"i$)[N_]Uh[,^SpR5WZ3#n@
%!d[Gg%39][>1A8k:o3BQIrJFk2sAah6pgE+lRQ8,C#2.G;=JIW]fN`':4-fsd`j;J:rILanXJZhCU&tC'fk))_c2[,<l8A:;lmk1
%eg@^1AE`MTLn(f]TWScKGl;OVm1Qk#HaptAS5mhX)S]=6,Zb;s?M3#k!FXn9DYVnE5`1N!A5o/"bgFnuh5M\u$TheRmesP292d7[
%gQ1GNlQ#*=<)-/u^:)XEDR$sR'knR!h91Ccjj"P)Vc)<9IA_ho2EX!#4$8u.%!u-?os+B/Wsgp:e"7VT_(dM53i*9Z9X3b$8stk#
%rE[c5'O86X-%-5'M<gnn'pYd5"l:;3QTjd8NZ!\"lTF''61\_Z!1cK-m+CM6fcgd]K8Kr'6^=.B/'?P!aUIDf&gh3M(*^+e*%X@B
%RYaL:.FB5Z`i1Ya'K_P[%C(cf$7IeE/(!<^S9@leWB*70Dcj!r>Eu6Riq53M7!3@m;Ot;JG#E_<-L$=$VZlo<g:pEb#d85c"A1j"
%E@O'R[KXG4P^TUlWW:"nY]R[L+gJg_ma88a5qcM">X?<(-L"u>=uNZ;Lh:?+<QtQrUa$?$7YtGSBaFg?%G8\tj2ri7!UX)iWRU#9
%&VCq:IX7Yq97;5L,(maS=/(ZE*0t><cY2KZ'4g`\s'TiW]n>ST<F;Lbd)UAUT7a"d5d!i4:NZ9AJbdK#eZs4bm=@DA4lQN'.;NP0
%GOu3u.Y$q_loOZn:-ACnIOB?1#^8mZlkeT(MV!)GZpOZlq@pg/f]Y/LQP+I!jmaLJ/O#cDfafZN(7TWqqVo9WY2F5IH\l2"Xt5,0
%NZU"B4[Ol$-&0+r/M.d?_Mo7XO[&N4KtYMd_?3::HV<uu9n1*comh@ThFmB<R'J#S/Q#iW!t@\"_D5"GT/Tg-gH.:ZNORBuTT0r!
%5-;b`,r'5nHM"I0%"$0?._W_EL:nn8j!q"$L:oToq0;R/_\VOK!CmS<B\AYpe?B*VMeg*"YX*VuP3pZ7#+?]V*I?AL=$-+C%U3=d
%H\l/M3*O\qF[cEl>1a%s_4fE+Lu!1sKl+o6JsR0pTQ-[$YRR.TWfk6mQ_o"D87<IM<OD:h`-(7pG/#+<^NQEWh`k.>f\^%\Fm!sM
%h;:9\m(9[0d06h(EJn6mbDlJoTnX#Vj46j5)lVk>QBiRMOSFb&"L0V%eQY";MV*0b_b>;G@Tt,X>UW<_n\3iO7hcnCn9nq_@`&Lq
%WSLbm]1HqT^-,H#<EW@?LPIFhLr(a6q:<NNnn^I?!"!-;/JiDP.:[9Ng)WS+.:[:-]j#24Pd.]Bgbm#gO#"-Z+(b.1Q*GO7An$+6
%.V!O6c'I16Bk)M_Eg=Si`nm^+.t>pn`WfTig&'4;ApMHM^@BRiB'Qi[__ZA@Z$!1L4l+Q=>:R?>h@\2g5\']RON,jLig@kU)B3d$
%YPB?$]oUe.SMW7geJdc@-&iA`V-7q5@fsso"Wra[p:`_lFe-s@1A3'oU?%8;)4Q>(\eb'.)1*$fQ^#CiN4o%$Y=1t()Fusa4(W6'
%Vlnq;_KRcfK%bP-q^([TXrJ(sfY$-c`TWY%FZhS_*pV=(>SQ,+0;PFWIWo_VcII>m0:=P)4b&Sg[)U-,Bl'1,TrS'Q\Ag%rFG?+r
%[X=PsCA*1jT>//87N[B%(+EIor,_M,OM/gl3fc]&<bW0_XULK]c'd5QrK,.X7G1T)mA6#[-.V#/Sfs=-eGGY27k&f&(FWU067[DX
%\'e'G-])C:D/2d/e?T1I#=Wo1:qP8_a#s+I",2Pn;VPG3+m8u3][q/_$:D+!h)\O(1p^n`mNQU?1j^$M:>CUaFt@)dp(TW"Z\?!M
%`mN$h<'jqr_V%2l-!MG5fg]b1as<N0aK*Y7c8KbGC.CBjW#I)5Za\)oXRP@F5?j3`8Y6(<>P78%$4-lQT^!!O88.=h;T"'71plq6
%0(3ZeD2+GtoOqoVl2,.^Iu%bG'o1sQd5D\p<4%A#RJ2rn#*f8Q/YfG'.S8^#UTG-sH70r4^!XE7V5f<8[ee$qT8/lDR_T]rOhBQG
%;P0uA%.9:N!o$Nr+=k$Fe4WVb;+de5L[t.*6[l)sdeWiaat^TYe6_12<B^SnQ\9GBGG*S'ZL8j?g7V@ii"s9?P?]9>(C^jlUe\uA
%[N)JV/XUM(V=KZ>8ZVa10=fqZm2#7\8Y4q:Xo3oZin=q8W,"VjLV3<o%=RUr$-eR\QG>EGP-h\^'t.1FrB?'G^Eg6R6Xf\%CbN&>
%Q/Zd_[UgM96N*#!?6!kDr47$Z(OQ-\B#,)5#*MC'4/M>@n?TPa&$9]qQ#otg@b^NQ[V3HRgBQpY`4k?AKo&iYlYW\P?).6%D@6fs
%o1O'B[&1aNPN4VT;XFVuc#&G59ou::2J=fMrMXTe7CCCp%b^6':p_;@eD4FB<)]`78p>VR,GToiVhDO1Pbe1OH@%sO?=o[^p@]+H
%>?N1@I!\G,WqAGF.dk!O[_O0&/YL@@=F?ScFIdr"p$JT]n]kKea`$cfAksHGD6EKHp(lTCd/BaeoMjc*9'pQq+i+U5J'L]>)os>]
%T-E'[UiFpb]iDRnPcf,/E,UoAS+XC#1>H+)(?6RU]b;j0<mM6rmS22.a,>]apQjIf/.X&pSJ>O8%k6r6i`5HD\@$.1N,i]RCEY%3
%q@_iF<E5"THSt4cl1nninfu32Lm]a9iR[$9miZC.4U&B]N?C*[>EN,+8nRa^jAtE?#l%1mmRi4kP4>Wr]l=N8B0V)$2t,=$NhiPI
%b71KLQ(uMS_!83qQlDtR[.mV_#'J=L>FJcX/>-4:>PDb0ge4.V[)e#KX)eAS^YY+9#"m>&J*M(_m6,R(-.!YKp:$AT\$%8O`r":L
%WL!<FAZB*!/ttK(m3U0i[+>&\UXBTdn+eQabo"Ms=Zeb$5U@imnKHBkg76N/Pe)((!18pV6E2!'k&Jt+d-;D#SGa(0h1?is-*i(*
%D.i%FoX[?3/<Tn*<#6ZSk$O#%>J^=[d#m\O'U"Mng!K*B`&X@.GXT0Kh3AKH::8hi3FH*(p"gqJD($K:h"Tp*jXo;++Bds<DRY^,
%::g$*21#HDE[5<k\Jn(GWL%`$Y2]IL?MMq9"s#],]qsNoZF]^n6bJm7?t\[!^=9d(fFQPG%f'upSCJ\sqV=EI3E>u'i/PEOgCDnM
%D4E@W>E,G)8U+b#9<R<GL:>GpStnlp>EB*>;=WMk[+n0F4+rBJNcQA4)2@ETb1f`R=+ur!BQh950lNB$SU=kEH#it$.^JT/o*2U[
%k:PoBWCIgL\"G[94\-)PmnH&I;G"?n2c+NQlI#7d?r]NIr$CWfbpt0m9@[5o^N;lV-0r5nKiLbo"Wgrfd&'.F\$5U-Y3(a=?II\7
%N9h7a#=mNq_\4[nb$3l^4%Bn:>MXXa9pS/UqoF,:8o='on%B$HLLss#Hipn^mSi(kX/&H#EPitXk@3?-9B-tij;OfVLjX,TO]`A]
%<5,j6KWV(gRI?-s&-Ljeo*nl=$#NDuquW_[a2Z5SNI!V(n0.IA<0Q@nqUS\!:<>li)fR3qI]Im8CFCWUlm;CC[(O)9qqeg;dSoV(
%/no4+,P\B.P05R"`GZkh=J(c6T[Ok2dJW.ilohjI^M3"?8r2LKeSj<A(!Eq:m'fI8['WKiIKM%MqG-h?kYZM%b,q?O(J=O.:pr('
%9D]Z`M)*5&39&hsl"_?R1@'E_0B,NShZDa*hpN,$Q2nEo+7AHj!7'S.n#MHQ\:bAj#]NuN>^@?HZ/$nf<3Fp9r7i/2&oC00g.aWd
%GRR'_\60',?Q1L:E!q5tL/'O<+`K>k^-f*K9&Mu%aI"&$n.4F`;+5ZKOTX4TZ9j2sK&Ec@jR##pE.RfhCOF#:O6[5IQV)M5Dr("U
%J4gRr@WKZT6E,P=c1<-g0"BW\.2k\n*%5?NO"trYdI!#9^SSbdeq@Z)d0>q!BS:94`PHO?=m>7G%M$C&L?.p-%aN?Ye'[nR9&RI9
%^-GJD]_p1E7j+<)fgod:$K6XC*5-\kKXXn@kG8b#[%/:[7)Fd=KZs-W-+lNDhFI-?1>rj"=n*'hKI`]mU*4EJE1ocSgUc<p?HV1b
%F;2r;Z#HK:J]>AV8EW4V@16:&>g]!':,hirk0\gr"iQCd#Puuu<6B_/[=gM8&<Hjf+g.>i*Ad,>LuW>q\X$Gfgqf*$W"K\D,fJQ+
%LPRpmroOCHW/)*#[7%m6,/+ekYe&ac72uh`ED;!/,JKE^+bIdt&]`k%?.S<b,>N2:NMCYG)0$k9.?@RmOWN@g=.E]AAAgFSi6\\;
%)=]kZ77;U7A]4=204K^*mZA*rlqAi&6:46?Z82erW2W*QS?&dt"E\1m6'%+=aG=b7;r$\DaLR]$k'Z@2Kp.tr0-NUk;.TPI];BO?
%-,k'6?0H)P:Xt8/!^]m]K,e#Q:2"[XGmI!l5fg@]Pdbk9GI68mkA-?/7jG5(_<fZ5,DsH);XZmJ3&8WK^"Y/d)3@bbM!IU!qd&KX
%:o3L8WHVS.ls')dWHU[6&,VK8Vs(ja.5L?3YDJ$tGR%V`e0FEW_&AM(:>R!942_.qhAoOfL=G`DmnP$rS0JtKH$@K2f&A`gh)5#f
%gY;V<4/"//MDO](m2.-nl5aYA3c`Bg^!h:UjF!MG7nUTWrH`,6[E'&1Uu)474!TfXi5E":bJ2Ll1e2<EF@ZGiQ;d>u!H6/(&Lh`J
%!=uEE!lN-q"1h6POd)aX4@.9hHfX,,OL@(<8]&A/hNn"#H$DT@<Lht'-fR;A231GDcU^!%?U=l'8+F2rA2:,#Z=#$r^"BqG2eRpT
%&@KClGobW$gH.!=7F4fTUK`ZWa7n:NZj3BrYjeXH7X2udi!bZ]PXgdBW=XS<]d$&jDeq>*lBW]W-[0="LF*%.<pN*m9nL?kER"96
%-iqWjAP`8%-!6r@(Rr!+PlN(TZ$OJ(i-i&qoT1ADJIbn8#8j`L4>sD6'H@D!IssZZ1;puJHD"W)k'h"'7*!hUaZ0DG:@NpCncTKq
%+].Yr6_],!./PDDBP]4+s.q+8jg-]&!VQka5#hsZ/Qaq$RFEl;`9>#oQV`7M9/?f1>VV9kI>W7-OpFLZAX<1@Tk#P&'-`D"XQr@V
%7U?1$\gL<!T?GJ%=#`^q)FptQOp-n#n3aP?PHXu4*"UR$T!iJn*SCMJ@dOaW+2rfM`O%ZE+8bbKP^IpVap![Fb$TBd(FYHJ"KSGF
%Jc#a*4EApZJ?JQ+/sL_aa2>=5Ic'&/%s`<m-_L.l],qXi>=RuW:-8Mun#(oVG#"3n&2E*rR]JaN:be(#_j+PgMufNAjmE*3(d)-e
%+_:)a.t49Krn[5hs3q#@?iU+4s6Y=5kAUCoci<$4rpa@qrU#(8qd9/S0)jD9s$2A['S'93HXa?U\',QXipDM0+08M.M05h(l\Q++
%X@E#IhgK7<NHpnt:NVKF-fXphet1@ZVN[5A5Zs>89(h$/p%?eC^!Il$Dg%;Yq*4o@?iKTYs8Lp4romein\>%oJ,bjbHRo&5hgW?j
%/_G(-D5XigY>Thmf70[mkE#X2>@^_\VP"4B$5dUD%D(nO$0AS/rPQrd].=afp?H9,?Y<A:m]R)sa)CtAk#LIYI[X!rRf5PNQJ\PC
%6quU;J'SQgrqIT-q/tDdPf*0iXSk[_?r<(:`qa1_5iJ<[9CGVmI#h;`1"_Hir5%aA<jIr5^.2UtRmjedOiQ/>fJc0>qZfa],gqFN
%(]4'^g]$kl\63YDdBFV!r<a1%^09>UI')ldim%2]`='PIF>Q_tM]+W@s()<cTMk^_)h*(*WdLpp^V+jk:,D^<bjJ9]/Z43i6NhfD
%G:h'NKoa_VOR\X7ndC+44r"dGJ)KXj5Pq\@'IlNts8>;b>-[=c$Qb.j$6o=<2&G,C8r%&!*E\.SB`#`&<3#);An`2o`k?`:O72Q[
%$lL/>0!"#k(rV!j-UU?lS#@1+R-Jh\]DgM:#/,Y0]'`!1iQ5,#kg-EG9Mh[=f1t`g6i?[6_LCI1EB%6ZT-&R+0+VcG\+aCp5MR^e
%md'ol4:=#]ER^S<`3iIKjR\>1U>RB$PDH63aTGhKP_,Oc3H%.XfuN$=E#7V*SV3QTLABLWZogKr=ELUTEtL+'0#B\L^>mFL4n?1>
%an9\M-]If`8;cp/a4%bOq@8"W_3<su]FIRSFZCtK[uMl2hgmU:MRUO^_5Q*>+eN%67]#e0A%a%3O"p\10/oM)If'Yi4QO]3s,""e
%Ph=,MISjPTQPbPn$.h/S@$%,cLVm"^bG)U5?lA#G7,BaeB)@FFTpj?in\\]uIGA23T1X5MD]L57?+*FQ)[KI-,piucn?#GU@02UB
%n`eRCq;l]oE[6_RV.bA;Vl,F`rV0TGH:T<_ci6C?aYfl'4;/GQ:-L(N&Zk,&rPO00[%_)Id7Z1@`cB<W2N3#s8l$.`O//kFqfff(
%qR""D=-9s][Lun7::A7o-1MV<(A$?^\Z'c503l3KJ#K1*l)S\Gc7f*=-6_iL<PSOf@n;C@5LEIK.<RW[<mo"Nm/*4>Y$-$N<RjoH
%=-6=&3e`5QGLZfoJKnCN.J*PtYFe#HYLci0Ce:7k;W$Jo+,\sm@t2>h5PEZCS<H.OG`<FZm*erS,fkH4r22PEjDl2E^\6-/^aA^N
%5Hh,:o/Z-_5*41+@`:SU?-n<cS>T?=oJ(52Yu9SCUm"I3(08UCr1gCgV1Ru,I\nT)XD9as&+JluPjeS'rc.[Ff]2,Oa&%3]qu>jU
%V&"30#6bHRe7/K!rmC^c^on9Qa[,ANMYHM1K$W2$mr%++"dciSJ"@0&$F=N24DoM>cR6ASiH+XT#:FpPI6`dP^#,o7E_Ub;H]c"E
%eQFr/W8i<X,7(m?(&;"$Vdl\!g&Z?;6L8pLnT^UEa7k#Q3VrT'hu@tSc+U%AI$?#K?1L?\/ZJRpe[?dEpu<Ik[S0+#B9a)SK%'Vg
%pS]@pW<BfEge6?S`Y?p[EY8oT`B&]uT+#&"?_d&UG^m>KC_+_\OEZfCk)8^,%fQ5FXc=2]++j=AgY;=:!ob"<D]\+DUZW<:m>lu]
%&,Fje?Tr<spSR5!iTs+rlYJ-Zf0G)K`7e&AoTF/6\RAPbW<lpmTl[j\Zderk^[o:O(eR$]E])h%Xp&WQ&h(n96:d]q'oE4kK\*1V
%bALB06)%uENim-tW^&8n%OjOh3sg@P&3_QRF]p)lRKc:*VT_dd^1!g-k1KF\=(.fE%:^-%haSc2a&NcGQ01_,W1BHHp;NZ8PDC:.
%S?m!623+Th)!V<ZRZ%*/dClZ]2XlK6qXS@\\UQf8C4AStC8NcQhnK'@s5W#9oq29GTAKS0`uk?\gUBEHr4i8mJ,;_grnFp^q(XC0
%@3McVnVn427Q:S2E@5sc:0r!MVgnW^X1-QQ[s+l-kS$j83m0O#dOeXC&.HVrWmPB'\?!?64-;Z=^)7n50sqS8Nk3BCDGuHo:-$H>
%_[MjrJ4:7'*Mr2g_FUHT%DqFR<uM<YD'#t/lr)sK&P9AuH??Y*2$mqR<R&YNJn%(-e3&KS+,X^=L"Ilp[0pdY]o7`*l?h3hOt9l:
%5[EWf]^h*JR%LbD3O\p`M^I9pX&:J0Xa;D/6T7Sa\K6SWg*;e/%WkErrIDUanhk!.<1mScnhn%QcL$8nVq_/4j;g(Om+EcMfC.,P
%q=8jQ]e[@Zk-;-ThYaX_5<eVmriRFBOH2!ejjSC3*hqkX2.<*dr!rD/944ka>;JpS9YoV!"68cTU*;]=(`Muan,'#GkZQg9iY-XO
%r!2l[pLnsOlQLH[^#%o!^lLF(2"9N=cgC0>_@QIp@UD<9a(SkOlhC,_r!rD/j0>l/e_NQJEO>@d"!`#pe+X<a7O04kDPm]=.hLPJ
%GmE.Yrt55+4mHs84QNlrj)#hHr-7g'"$]!>[VVNEiJ2esYqM`Xj.C8.rUI:BUbotEkSZ*FR0Y(jl-qD_&#rN`Qo$:a80%K$X\eMM
%4/7Du=YO#j>KbX/K<pPB"422E(A1[B<;hf'MeePSr#nK\;E=!['o1=sVG#$'.GX'h-9UNX/W#cCfiuX.JbiDj"mOnX9M&]&:R)pR
%(Go5bK"S*W#2RE.>mVa=bIhYYU,5ao+;&C$:Vc%07FdAWaB*H?5cnFhl6';orM&aTZX,"#Ti1CDWo=h<G`\gh>D^c:$-k(mFuIN3
%lr9_X&MXjH92kmfob:EKOAH=-AtaoOdM[js@Za%5?],l-\KCsZ=^c(\ld6F2%uF],0P)Vn8t\\[g7Ii>qq?d)>&7(1W_j[bo8L5u
%gI9GG$_ln;Y])/-;OZ%$QANAA'RO:PF/\BB>#q%COCa<-"-O^8VKf),+_"IXl7;5OJ$;sh<K9/EQuJYq+mQJmeNsJI<E+nN<as%@
%f2_"6aRCm1+!!'bmttDaS6I\9`+d?Q;"lH'7rLbdZ=Hj4.LQ,T`(EJ_V7K<Opkp5;M:X.QZF+/;ooPoDQ:iM[Qr.$m/!)-WLrG-p
%'cmV1B'u2\Y6g+E#/>)>KV>B7Vp>@-QI9.6L8X[=h,iO@.T.n,,t^N&lrGa5UXRAP-#WhLO0'E$]VV9odMio1`C<c<fh+f+hY`qV
%@h+PE<WTR_8Zm4T'5%7s1uO-*qP$bt4:DP&b0#C'qm/_rLU7qp@K_OX/ndD&P-Sd#A-^^WXpd<WlFKhVan577M7fH#FY&!cN1.Gm
%;K9*1$2_"V1_oAef,3[b1YeH8W.EIep")$2'(]%U-D>2U<S&Ka>%bESVT/;"'9H'].T1GH;5l+B;J!TqZi;hdEi'MKPkoYg)N6bS
%a(M^VYW@Ts7H[A[Hbh@3LmUc%MRL*nb0WbCX-rtAB.U/!''G10S7"c#=CTQ;=O"mg==Mg6.n0?>;RBe8.,&1)R"+frn`A6Yo%kA$
%f(L@^qeA20(/1A)s6]af]$C4bCBAX7<1iN*7@!;Pqf@lgs0L,?@YF@p<!>:>`8^pA;gSo>YE=Nb;O$b&dbp"/>nkKIV4m/#"ilaQ
%.d`_IK:uL<qO@4a3u.P09kS,i<I-JT8CUkic$Mi.;4fG3$eJ2]E$Q9cfS00"q*[6P=;jDQmobhm`=t>kbhZAMI>TIu*`5Ybr8AQ7
%p-C#Y8MWW*M12`gYplQS'f*=uC023tYOQl.K(RnDgAr`j<?F3Oaeq_l??9&X3X*'W/V>MJ$oP+U-V]tn^YGU6=Ysr<$8[hf]M4N7
%[!Md*/o(eoiee?QHa,.B#"am=WY4%8@$&*f0-hLtj6*"Wm8_n)bpdp[&Yn#_<593>Q-')+20lKiQ@<8@AoI*c4)#spC6aX6&N0=T
%gFX$;fHqt/-SriO3nZOfc=b4/k62;p(1Xk:rgi)dl4LOF&.CdscD]_Jg90drNn=s;')Yl=7:G1]-J!;%H;,PuBc]nt(MD,=FEgq[
%@;3\l;`1I:IdM.,V[,ESJ%8f1,[02%gaI34)d/sK'U9#4re<1.F=R5*Q]^@0qX17MenN@j_-*TP%m]dg:U;+Wh01LGjE%me&d$#6
%Mb(][!Rp>("g&V"A6\5:g-\2=DRLUEc"tF&Sd8SNpQ;@*rmK?D_cAES<7,O<l^t0jah3r1^<#iE]F4b0:(n^tKkXi7c]dTX6?l,B
%\nVD),A2X5eHL$Hn#ksR*07pLPms<mV:&n\UiR\S;fu?p3$VjGf4.A7E=De]+mWQ-C[%?C.?Wusppmh/rqOmJ63[#BR-(hpK;GE.
%!SXoTOs)&FUCK^,fDl9UJt5*GqLuK@Q9hMOg5WR%*E[8dU'WF[.c#/d`;"(5G#cZ&Z*i\:B4?nfKOQKcATMo(UmnWQdd]DJY@Fp0
%@nI&iSqBpQMFp3Nj2'an"fQ-f0lpU0&7FVK<nGH%8=?%)TCkK=FAW<Y/ZQIc+KqdJ2G,?3JF<(r;+++!&$>ckf0$/bejR+EDtUKk
%eFWKXPJ6BP'0AVAD442[D%tMiN]bP6eJ"IV]GlsX)lB4L?'!V_$6jPC7Z.YDXj[n4MH-rgfd0=*APm)?UDsbT;)VX:`nPVWlh'!`
%s(\%-6s\R!*5AmUT(LJ"[hr#,CE,L\#V-oBjS%))#hOjbfjqK&V5dsM-<1Aj0%@up9[B7#3P&tn'8o]t(sl(e9"S>tp=+A9T6jf,
%@E^@+M\IB*P(R/o2Un6e5,h%Z_JGLoPeeQ56Mekt"eX7;eKX+R'IIt+.ur0,/R+ao@kY]FE`+G622q?l/bN:<aF#*f9N$a@`'iA^
%17TsAMo@JDcVDY=rgC,WZ_0LRQ?Bc;A_P4,fgK9VPmUcOkW0@G9V3.u_H%F>`HP\&[P[(O[:/kl#.\l'&XjYIL:2*][OThUiY7Z$
%Lnc><gNZ*X5dXqnZn7'Lakb*)b(:a[L>*:onZ,=j2g)g,P[NRR9U')K,XFrdP7\0D/e-8sH]Z-6)pq;pa!6Tt'9:9aXnD-kJR(bV
%q"+n,;>j#`0pMu4BNL'!lm^\opP2=5!LBEQ=E1@8VB"]%\gE*?qNMWCM`\t]Th:$$#`X:h'sGU19#%#D.hYuF"k#AD%7Q=MP;_`5
%(D8*,DA0,6?:LP4!j=`m(0oF!4\Ol=$0E^i\goEfZCLNlH:(ONqMlQ!6maqnO!8"R8HM27THmNWg1?8bUrEMuYiU2/[M=)iCb&0=
%T9%/`&:^uM_RaqcV2)E@p9<SqUdqUVV6F4IZaX/mc.e&;-cgu*g>ke]OUH=_ks1)qTCg5qgAE%2BBap&f0VSKX84s/?C0>_Ur*n5
%eKNnSgS::*"s,?l!`<:e*(QirQ>QD'>sXpMI]lt%,-uN9-O/Km]mbr5aQ&Mcm9sjE,R@];O+'L[,a1N-Z"5g;2V?6jlgug**P.0S
%A;$a)1X^6;YScDW^=M<&T=]:<&"i^!43gZgnERc2_f7Ud!bSh=.Oa:d?RO:8'^N\?bma"&+Oi3@D>+/3WaaX3,l'dBGp/C7>.hfA
%Lg6,hk*1A69M(VnnkgfR?^V^r6(uu0"-V$*[76@&'i8J>aD0\J/]!Ap?tV-+MI.VBXO)lG(K@T4"!NDXOmFb((;-MAQCsOR43:Lk
%ZXc$9OjB?Ti6GeoJrr4Pp!atqEWs"Y13o"j*/YjW:'2n?bjs,#9_m\a;pspc\b*;]qJYp,@VZ6"(`N'4.@s08`TkmO'Akpp<XD=V
%@R-$X%&Kmc&j6rh?"P-fdFilRB[]rVd(/%_D=!rGF"O#*s5mG\?a9YC/$^^1G,j$;&Z-2%8;Ziffh>g$Z1?OK-iSBlJ5ocX<Ost<
%BrBNE'e.>Z@KiunH=I=+kX?1o=K#G_&9gMMDjhs-=A]qLe"rQ(A5B<TaT_:c&UCc$GR/@P8Vq!<lW0fIV7k&;6+i=qY+ZNM>'=:-
%A=(mO2I&'^1YVf&a+Y7bD'13a'((Mm:fbE>*CELl5RaOWXE6&lf?X"%mE#Y\mIM4b!#@b_))CB7anRs$")$PkbZE2:nekC/W^g^G
%]jcrfj8kO2H#Z=J,R5Qp^:;o#F-,6rh(&KLPP>R:NRof.gd]HTRS26bV^OHs/;/r7Q9]RL<$RTa?/R<XHbc[5Af52V'&bL0Hqb]S
%dEWrD3)"cVo_tj`nm<"mjPAnmf(`2VN0kBkMK$HV=]>c6b:\FlM-,\eJibJ]("-iDc&8."d5))JOD9VI3VKb0"q't])KWf5,)rLf
%(isuOPMca?)8q4K_e3C[C5BG\""VlWXV&<59sHH#ig>[LQ"+<GlX7OteJam$U./t]'X_U;KGQQtQl]I)XM,"i)e_=2R728c=HJAA
%*4.shiH%_PpXH^md8+YH55c&,&sCq2KLsC]K$gHp&KZ+hR6!WKI#5@f+lTD?7e0EDAR^<R%3@Q."IL%Z<G%$=VAbHI3V"qF`]Z1a
%eOt?R]S?e/]=BeThKXVgC)E5Ic@^*E(/oK`gjgiWM*]X9`Vd^pXdQGW.ciDpH@>[$nGQ?7`\5?ks6O+hNsWZ&q4B5/`2`4HO!Jhm
%\V(q[#pqQqXhLn*=^<^TaL+HU;OL9>\'dgQ=to-+i`kM0^JKej3j5`D&'"]kM?PE)J89Jr+?!65Wd0U8\_pn0p3$'O@c'P[Pi)h(
%(\B"EXd2%6^+.lG[h%FgUU[7GQ4>1!`=h,QdX>(<<ou*hq[C/Ikn+qO.&NJ4.#nUc+TK^CN8BW30o:;o1^hR46%k3NO.9(5CWEj(
%bg7<tUSuSKMc%TKAX\ESm]TOs`dL%^$h>ii.hgPm0CXIlPU@tYmigd:RFG%/oiJ8hru[2;)>BIX23s3"1)80G[_8OLa)qli[+<cO
%0BW*O8(%u2WUB`SW];bQIPtAVNF&X3(ti;pMo?_#//i[U]Iq-uMX/2'"f\uiYUm./0VicZ2i^3WVJF$W.2FO%Yk#\Fmm0jFGO/NW
%lCnr3,%Mr0aUg1N^O>Zeh]>WgL@"Kb`c='+>@7ap<Lflt=,D[?r<$.hUeC=I,F,c20ps\4[%0j;q=S-:a(`[1%0U[^,^Ih=Odp!^
%i)Yl/<OsRS\aRB0[F@[)pT8sgU;F(q0um$+4-ZC1rc$!-bVO%dQBhh'Te@A65DZ3'N-+lI4Bf#B>M-M[;>^rAp#WLar,nG\;I*@2
%rq<*SKNAH.6-;WP;c/fq3u^WKr7\_iasO*P.EZjO>Gqi_a5uRW(oJ\WIPg047[I,+g^if>PJ6mr9CJ2EY5=t?hi/;Yj<p_eIA;4K
%QL*ch'hpX#o1i_F6;)h*j>0PmZdd9:Q"@Rcrh,IKkckUV5oX01<oT4D:!$,9W3LM8fsEqs#";W?KH\l&dRf=)6<7r^VstU"?YkM4
%)gh<)=Ou5(R@SGSD3#&p<ngHe;S+&lREK0]5We5b65S``GaZ.gTH-u&s20V>q;@S8$P&q#V9l#:UWN\lOZLXe\SQAO!YG@GH._G_
%>(:tGTBuTI6%2>3O4]*%kV<Dm_N&[#T=c[m1IsI1hbE))j-bN<LY&)NZ6"#V1.H*'[l0X:'$fo%-fo<%1LbAHGCCJ:m5kF/UET/a
%[:,Qc[#8daBjIeJK"mq4XI_RYLeD/6@bt''4Q@4/d:H'J+r6"P/M3K5$_&N#-h+Ak5'HT@s0>!m:shThL6;8;@hWDp2&QS\nTF^c
%aW[rsF5Th6#Oo@+2?egX#QCQW,]BhJHMpY&K;J&QKfCSk55B"3fQ:.I3tD2`>LcVN@?c?nLP@9=C_a#7k<)S3n?&-HEhW#L;^.!F
%.GZ,)AC2+])Q7rq:&="VZ&4H1&##2(=JSA4#b=oARoHRo&f1+K'\P#Di=N_H\1hVo[a?tFV]h=/k:!UYS\pI2n\rG.bGaV8<3-Aj
%=UHWW_08l$n[/j9@A,#S<4u`kl!+D:bSY-<M<CEG96m5bL"'"`3.o%ui2ETe;/?Bgf"@r]+`3K3%3C;*9.V'A((V*N`O/S5A>JJZ
%=W6Q8GWl5]GubfZ;`]!U<m,Z'-,b^L\o:q).LDj7YCq],rpCrV?"-GK>>EBEZ6X_#0JApDQmb).@)+N^Q/hjq'_A7H7K'f:X.oH6
%c&R>d[t70mH:\b0%Nt$]jTjGb5SZ0VIVSfXYAX5:ZFSPip=k!?ZYKG6.Y+BaX37MW9)C#p;\C&_';;G81.c=<RiOA\bLJ:<)XT_Z
%i;qSkAk5-=4!Hj>W&:Z<rK@IVm3<mT&:oq*CLKt12%Z_dPNSs+b=qK-,Ib;k;U\]0DP>IEV5g?F:_6N^('!>RPM2BR`8\')P1mSW
%TArW'!RaM\?2G4Olj_9/F_-BjiJ?8[ghZ8^Nh_;hl`3EN,WYh?bY\.ll9J338-TP]c=nbUIOJ?OCfe3gX"iYe7M@W/OcaFEBJ>qF
%<e[CsTuo;pK&VAL,aQ[\\Rk+@eT9CUD$SM,/nfM"&ENCf)n5ORn#`n\6)Rh-d`,L[dElDl*,@%'U"OfFV=QB=W\78<1V0u<s4$ac
%q`?Iq=lgUM6Lqc5UIGQ,]^MT'm%6BiQ7LF$eb&?o;7[m)!hZM!GufVPq;['O^c&]&JqdjH1l(CP9DY:]`_knpIV77q<rj6#Y/Ec/
%0'B'<Z*+B.Qc+#H!31@u*'/6t/ju`nW`60230`Q2Q@:@l's!W5hd485_L9t0VGDt`VKoruk;?_L\dg5ch^N`HN<c+)8@/!lMA9bL
%m<A;Y]:&Mq'dl".qdH(F$%)AtOZ/Fo%ncWLN'#4?V2j*uC"?NPllY!]OdC>;a4Kaer7d5$U<%=u5,!m0='6k1p]_c<*52Yh@]GS,
%)%sjPm_pZZoE2[)8BDWXoj-\kOo/_YD_KSfmHi]/fMf&DOGm+<9!/!FV65^`6ddPDb%n>ET.OQmoOP%C-=a?"WM8\bf\aha<G^>b
%MKPYK'de$JXu?mXU:LD).pEZe9)DE;pJ^h[GX1]/kuQ!M0LE-/.$;hEZtbc$AfM,@pdm<a:3nDhT^LN6f=5)^Z"pH_*g\lkC0$+i
%V+F"t=q#T`%u'2XglKXjj&GiC^/WZm*tI1)9aVXW.@Q*r>#`k,jUiXTNVom7=7m?088<EZp%ELZ^;*nt;CALT<G)8_jf/8_b>\@]
%H2>$3p&AEB._ftGqXSF&e%I_8^P`l*p1oRbrG6JRqr?s@cg"KteS4u3]K2%7@\Q^F7Kn)60o%)%]>*"*.+/5%*CR'LLJW6)b:<a]
%s5W*[Z]eKJ3$qlG.UEK57_fc(HD;W$r+r"($A)^.DAnHdW7!@,PBUF4np=<5@oTEcnJP$W$k#YXpWhph12n4b]/g#PnmKh&J;c6X
%/n0R8:<%`Jd4;6ErO<F-8_,jcOJ2p3$?r\#=g1qQJ)(D+bs>iq3j9Kr4rjduboRc<R=CnPS+!S?Xr0Pnl\NT^@NFU6,6uD6E,XK>
%3i!Ps(Qj.=4\(16_Z_6d9W<H:EL01,e1F[p]t,2c?>!*6pq&_G;8M72/Ht>W2o"Q;e!]cT3\CmW>gW9L3XqPadTMdH!d[I+9?3TB
%oADQ7VtVP,c5WcUJIY:Pe5@^uQM,jG]<j.\(SK>sZ%=#.2#FQ8h[3O%[sM@.K;6DTXC:tJ+rTj$RY_L2*,*ShroQ!d:'J(qOn'Bk
%hNSQoeH&C@j[sc[=9GDGVtq,r(d<,l^OML6r8X[`FVPP<Ro$n9#HnaVK,1XV,qG^:J+2Ho$mKha#\&:>pT[I"Ij/XtLJNEo&&3E)
%K&t`bS\OhG,geOI'g4l%%Nb3Q.@?qO_P*OgR`0dGW#ZQheGsAq?H1_M9k._Ua2KESpt<FMb86FapB)\N+0A:TO'UPuEaAX[?Xk,.
%+\hL3cRU>BG@7t^4'MUCn,@H:*:90?9%j6`rZi5te"M&PQUAlJ+mauhClut=&r,:@gGs&LaLMeM6emU!qCAj$angTD73\b[s)9Y?
%O5udU)qS>0@AlmEo]-R0K4:HeE\ejS,Qe9HlFPHU2kD+:2QFi!>;^/b%t`Ekhm2a7[iepA;%<o>(&MHR'=iKZf8NkG=^A`-BP3IC
%\d_IAEa;+UL32cM2;q%8U]S8X=AMg8KZgp>7C/9/A-p4?H'KO2#EX61X<pMj8_OX*SQ.K4N[dm?KJ(uQkRPeqCY^S.%Y[_;_h"[i
%M!_#];re%Z<#^VA20*]0-0`!Ib72;]gLqW@JYDG6b(9/C^0LlS]5WIOo'4uP+r[OWRU4u51?joMdqYLk/tl:pI1TX-04E211a6cT
%R8dDQZn5;`g`r*2PPYqn?Q%jXN!C'elCD04p0;k7g>[oBm8@sf"fS/q5V8<8mL"prW&VDD9BlEAphTbk##`e<.:#E::5eL#$RqNd
%m64IEa*OPqDIof%g!FW?dWYoSci+b]eBrB_jOF*r=/klIX5n?Kg+(>IQ%LFZPJnD/Fh-1AQ57]6/T-'aI`i+N-`V4K/>Kha6ZK6;
%Q]SRLOKKj#ApPJ<8Vtnr4juJq<O#0+q@THXPTu9VH"bGGa#eu^2\ht!#Vim.'POlU0r"09:,7BE\%>1B-!&g%F-^>[Aj,n"8e=`C
%r/`tt.L+e>@oflF]Ac/*LM#DPTS>$U!CB=E_@M_3jQXSuD$L]?D(s\Bm.S\^`(o,r,:?1Ylu(c1f'/ApCJM.Hf,bn7p/9H>Po2ob
%,rp=cXBj;[2]"a!P$TnDH'bU##)m>6<ZMtq7:,uS*Dn;3E]pTO+#q)+lZPYP.3\\`.RN^.iPbL,pF90.X0LmE=\&.8.RRGOa_(n(
%j_TgK.QNs8jBlk"M@2"79u1g\L<<)keUoV!U1[<TVlQOP*d=>]iT;Q2@ZoIg-Qfnno'-65GF=R]6AJVBRI_Cei-'7&K;r$Qe]K\'
%Y6l[Y*p$S<Y1oo/W3N_fZ"SW5Gl.GHagW87PCbk3)$s:l86mZBinUcLb.4@5`FKl^;H3s,9dQlOBT61>fm?23,5>,p'9i4kV=&/C
%,WV#5r@2qp%+#I\s#K6`lV)il!qsPn%Y8p&ohRt-1,:(VP@PtdH4CB`.m;>:c-=bf<(06edn5s.<7RUGcL,tKFRF*S?UAVO=emlI
%e.]e"A->=_M7:%iq5k3jZBc\"Ag^@e)(tK7XC>UeI+u>Dh3Ho8YVcoCC*\Tl'"u*q<kL_s6_p9bFu>I[M5]]m:D1k[;d.A9@M\:%
%;s00U,iZNFD4*4A=9nq/ZmNk^'-F3t2!'Y\1-=2KQ]SChS"5"!Y$Uu=8Dd`*:Q"[beknUmSQ!`BKfXTW7>K<R9o\L62g?'kUY1%F
%^<pJr-0/1rl:d:lRZW7MbR=I#53SX4BD\V+kb%!9s-.I$W?2)HDuOH5qBqoqhYX3rr):6!:VT$gVt-hTBg-Z8jj?5VVs^P^S9mT@
%?/$bF/]\orptg0;[0I:tHF`Td/7Q6-jG6Eh*_!YamcW]>n*T;Ek+Zo]=XVVG76>O6dXp6k=Vr:c9,tbtR.=THDW7>$U1\TN:\Po+
%LY:Zlng*N6#pk\*q9TV*i3!\%l:mQL#m,.c/h*Q&bG#8[EAPRJTi@k'DAOo_GI9@V>.+(9T<=hF^V>f<Sbd,mXA[Z\C?9SNq%eKr
%$$b=.:PS=KVcq9>)TZ&mH3Vl4810i,H'9p\)(WG?Bn&B(-b#9RoSJ^IT%[P9Su;[niD?Z33N7rliqUa,d1#+I8:XFZgBn2-)IsJ>
%^GpYuZZ@2*Kd+7Z&.sjNpc?)3^ZWhL:(aCo1h#IFrbt5I5r(kTNb)1Z$0a!#E\-)V=7D@GG*t,^HJt?IEds^"J%4!k=77dU=*?\-
%nh038ORb*lg6o$bP[+a8\`Td\qO&[$l-jC!As!iE02il_(L53<%TJ4P";m4-qYfpdI5E+4V:i,^^LA_0-'?\%gRY71S1K0](XLdc
%CR8s69qLEB7obRN_I-s.qXA_/L4g9,D(ORuI`+K9Zc<QRB"'jsIe*TJ7`'=N`#tXX/_4CK8&=T%VgnE(++?_dRF@C%Piq3VMrOpc
%5t$dscK<PUo!0qiiXr4oou25<j1ui:mbaLqMJUf(ah.=VeeE=lqJ(qu3bWq*FO^WhGMcI0bEK3?+Kgns7)Tu$k)ca;Ml)6Yk-cNL
%7Oe]oOGrVu)q5a/5DT*$eBrrW&gRm3-?em0%^@d?5]^EI*Dh"ccA\2u%:EoQ%8ga0_#:%5*JfqiMJgP/0@6>rgEuMI6X>Rj.LIYi
%8s"!&KcsXrRbB,;^hn:%nAHenM(>XkA_BST]*mFRFeLl1S>ISf(]Z,kc)i\%:qfq"[nJInE9Md,aPZui;-'p@U&I[s'13Ah9_ia`
%"RIOaD09AeC(5,k+\a\_:t8MKNQNEm_s#hKX"gV\,.)hW<_7O8Q,;YhCtVdjCluGPKGCANf^2sp44YPHp&SE@^8Z_/jVl:B7;,4s
%X?u;qRI>-.+V8/@OL"L5<]\c4NQ=ksSp)Np=&M$NC.3QSZ8^X.aD#M#l/,WX^d0dGEVP!26[j/pnH?ZpegfP)?J\CCN\_!Sm<jW@
%^1.r:Hm(C1hI;T]q>SA@.tnH^i"\@&3mDA^\*7[E#tS6b;TCM@Fa0Ot*ddc9Bju)7]`.k2ds7#ka4SGdXRZ8^X]=EiNkFBnI-%46
%kNuE4l,=ChGjJr=)JG(nJ+Tr5#3O_$c4gf\noP#L^7jUjNNO"mi6<'#Y/RFAR.?aKYs[iIY@Z7mrc)EWIa?2'F]aFk%^L0:PIs[Y
%F.N$A/uAu]:'+NhU^f$X?\Fm;DC.M2D-nb2+);9U1Q^qrF-sDTJbOI(a;g]l3)@G!gac3%8pe#glW[%Lo;u$CDKQ\XE1YVFTL.k@
%!E7*hjd]2N9KG`'b[;H;IIOI[n(2alUHASDR3gbh<n]+Im+lPUPaPg$:D0U&CD"=,C/L@qp!3F/D'%pI5&]Na='JF]K/0&_+A)TB
%"Em;;#o_$8:n1*g&k"gPRNSc'5.`t_C*j3<)bHOH6rU?#P)rQq&:7)\)W$S2BV<*g?k.N!0[j`ZhkK+X%fgdd4pQ.=oH"pl[#S2P
%,jlNs_nO?WqS`6\IWIEj+>7e1<,#pCXfuK0Q-0=,d*5[Hd+hcTa&2bCkK"5#p\lk]qqG4%\DD]b=K697CgpKS%O9K*7mQ%"&i'Rl
%oe8N[SHtp<R5Z;4&_67u?)Zrr<S,"\-0l]h?a*F<g1dY#pkdn:lo'8p2b1]Yp']p[QVO"3(5]IKJFjG^89s<TR+KU-\H$fF%N('*
%:L<`I_#WRs200gu*D'[D<m>^Ij=k/+1sIM436IOOn>ADk-E7D#9HYsrVGD'e]nJ,6Afq:S&ii*WK>^t;;e_Be.\&Xlr789W1?&Rq
%6I\KlpK'HD>fE5_ODcH6=,T&O`)`@91)9Tq+sf;f$b&$l8e6QAqE$"CAn'=`N]%01)j'>4*2UIu<7SD%4"#/j^dhrK8kff5MUhRU
%6qN(<>pU`NPK>9G0QaP_S%mD+jV.j41au#7%pH8)9r=<G=Ti8Cfgn>aSAJ7+@8[fBmNPMd&]&W<XP]FjPL0jT.\/J>*]gG?.i7S'
%,7'$ka\(L@8pZ`U.2O1Bn;do=%7Te24p=(YE247`"a@F->8Q@"3fBpX<Q2bQZNrfZn^oRA\napFM9b1s#W%.$Kdi=GD@e'Z-(WEd
%/6OmqeGRS7H?=RGNi#c"763C#M*Y<1(-r%^W($_0mEg#YiZR%'-l<((X@TA!@@@Z3L1SYY<=Ols;TMk&J!(El3E\a>&?eqNE(tER
%?Gf89PA[b(fsInm/cjG"#i%gN9r;Dh$Qk%rI#VT(Q,!TlQkA`W((G"W)_,4^Re4Lg]]P_BeSIDqDc7jc>c.nIX5q-c\[`!Jpor1B
%+m--,:72IcR$[+bG51K^0\V?/<)R,a`qG?7c_n8i7jg&B"XrWT,MTW@<=sX\\'89o7"j)e0/$t,cP3:@C>Ifgh.5-uDFf)*mT%:B
%K:;bjG[p9J[C[nY(+%Q$;"q9d\M2duc.:^,PL[%^T3Ltbhm,+e&HT<@ao\!QDkK-PWq1O>1<NV=Zbn,I0=7>lYjNCL.MTF*L-.,G
%-?J9'=8Ed^Gdm>a'cGig(8GZ'*B#>si6fJ>NSOoF75n^o"W(sCe6_h=Q-arI0s\gS`eO[a)CY[4DA=@ap>/bMG``#YPQcMq;=S*E
%60-'1h'tWgZ$ZnZQ_QU[j=.WaTf&OKH.Um4e56o0`4HeJ+<kj_U<lAM"0,$9AP_bk'T/Ui5YSRh#ut**U/(C/76c(SNIAEO5@$)4
%X#BCt$[[t+^7(]Z,bH\9G2]/FM4>K>6aR=;S$Lu^p$.Ue$,c87'g'X/ear>C6iTfUXqoZfClT;ded7OcD^AV;7CJR1WdojpApr?(
%3UV?/]&%$dBps@]Z[T<if0/PONrHgFoBmt"VKeR)Msm`Shcg6e]>"Y#YPRA[@;Ookh*&6,?iA.1rG6jC1qLMed<^(!L7^&=[/m.h
%E?8[pj;eRb1I2!^/WAR@+f\4mU>qha9]p(AmF`R1Vj%[&2B6U91gr8jKNGg+R0+=iXm(m5S\I.+D&%Q.iYNWCmYcI%rG&Ag!O=Us
%Ji6&!;4:p^//:jbR@bRECbpD-g=9Ufi3;V;hBSjCQ5(AdVF-Jh^%Skn+33^/fc^9@X'P8.AK@MBJZA?dO69XE7#YbC?gdKBeIhs@
%=C1a8CmVamcSl.@<Pc4`CdmZ)-7f(;&Fc'k$PK!AWnC@-f/eRdTFI8`/Q0[5N.3seW$Q:q\$8]7#/AN^\@U38TZf"_$pNW.:\(d_
%I[4U^gkbC`%G.l9-e[o*$sf?ORml^LocnGn?+7V4o2u^>jE7'Uh)KkHk1,3OZ33Tu+f4f/S["Bg`DU?0_,tfA@2^Yu4-Q6M3Vl+Z
%,jSN9gWJp_k>7n<[I8&)`h\BH^\H+NorXMS[F[)+2n:s4f;H1NmrqQVkMP`7nbi<-*6p\gL?msS)#E9/:13t'9\fpINR][W^96o$
%U"g1s\";K:/k7ei@rFl(ZWArP`9lSM"Dn(GgF'Wm]fu=Gp$5iJmEK!VEZ:V%Vn!c&]-k?4h7H`N5JJ.nF-FWVH[.Z40u-cF"?Lib
%^i-<'GL48a^DUE%0lt&N@&P5\GsB)`DTqogJ0A_\rQP>W1#3oMdJEO<ot:1X9lAq3ldOVunD0;c%Ii1(hL>Gb&@\,kN7c>&EVrIM
%=.c43[?NCC/IY<ld#9N4<%9R7p?[+XCMS\^,T8'I*c3.0"pi7DRt8c:iXcnUM8#_MKWrF/f=Ga#Q/98k$iaj;p6r#"<$8nD-@1b\
%%?VK.7Z6uV+`]iY*Gl.Jip1\:PJXc9U?E(dCQfmemUkCMErBGl1FDh-@GMaW'o\Enf"r;$IR=YKhT>gtj?Bt1/r299A`1A^6OO5H
%6"C5QUqo%'M0c11(*(O(@+`V*2!Z\7Pr?M3ff4f4HJ>IL`XOiS8UIC_Wjm*,PP[kZPU_?hcQWafqIuA;d_aM@VFJ'BV;FT0)Wo(1
%grWqV>2op_WJkX:s$U7_0nI^aW"E@&AX`TM*X).Q?:WBh+jqpuP3#J6k(tr0Xb]uTGb&:[Wg#,T_@(Vua>M@9C7O!#4:nQNIjFl=
%V8UVS8R"%seJJ0dj3*%l2N*)u0.S#*RDkd$/*/Dp2<41m)pE^kmnim>dfNXc[^6m?e7#tH,e0eMn*";.MgkUVm/U5ROrJ-on@7b,
%E&s@J)\S-5!i[A!(L=/EOAam,+n9Of&eVcoK#lfO?&L$9$dmLJ'!mQ^R&@cKKgnZ]@$eMJYf[I!&Z-^;2,"VgM4(r4MJ%$6P3Km6
%H9K(4Q.b\p2(9kWXl_:Q]$5p0I%6tK#$#&&D"nmZrZ%bq0l=M9:>D2$TnuOPXQY$9s0poRijB_"VJ[)Q&o>gu]UZN:FB45HC4d4b
%6ld:ML!GK](fGp(8$p>gNBLZ\_2Mc9TgJW<(TKhb=paNC&lY6Dhk"b#eTDJ_JIelVA[U97p>:CF3)hT^d/kPr-81sF*4]1YJ_9_8
%dstV@rEZ?h-#g>@:%^9Ej@(si,@.?k%/!G3)(4Z[dAes^$RjDOG0MQV7618GkS2,MQ.ul(kHF4Q/Yod'PRTC5$g!Q*UG1K=GV3RA
%1cOV'/5CD)eOgCXCK'%?;>*jA#gik[K'180HMK+\JVE#bdKF,Oi$cLSARhG$=hsA)8s@`AjgE:&a4fVIUq-QsGt,jSAm#@X)Sd'9
%Q</6n^2uoKi,"UVbWG+I3s8fsoQu9CXm1nUDK63OMH50c@(EK11\9O4pPRj+"7-%smiV`.D%W$d%V&.+>/a083ie"ecA!mRRnWV0
%Q`&seEu:=Y9`hij8Hj>.nbZ-_L0:2!FN-e]jl0M2g#OOViUf8^Lib#I2[(*SEWZG^`!<o3f\U[jZ&#hP7$%?F%Pm@>(Lm]WUBS&[
%[_NKQ#;&#6n<fY$E^TuE;,I]Bq*N%JljAifaO0>o?KH2Co?ktPViIVo8!ErVNi%3RdB&sZ2!a:;b#:gZO/$E=f$UQh7oQ$@ROgsm
%6r;sQJEmUq8$i1D*^Ol80Z)HA,M=)SOG3H(,=a!KMD+,k!"ZPhd$TD89@E\E(`n+AX`R/heVhepZs-K[7;``s.d7IdJa_u.9GBf#
%c`U:EMgo$fr!`fH8g[V-#Z[<3%`u`NkUmgAW#F9EhZqYHb+S#h7#D9]IG"loeAtqu:84AIRSNT:WCZt-Pe)Abr4Gu\Q\X2g@D?-h
%d9Xrm:Ja<m00Rh%hf?'T:&*&1TL0h3^c/A'gERg\N?gI/9WX7*N)tep.@+!hKK!$C=3"d9TFendh!@4<6J]<h9@K5bN"m.@pP*Pd
%p&&M85:D(e09Enb3b\]=:3GQbbh(oWpP^[Q4T/<K`(&ug.JfB%O"[=(V_==hM<`,qI`#DoM=,kUU$=m?G6oDWQEC9r0=;d5k2)(a
%jGB0Jg,PmMaM'XVXJHLBhs`Ku%qGD*fcU#;\)31:AjFeDh>8EqoK-_k<BMA<qlc.3g;<ed<CKVR.4?q27q]a%?fW!!6R4(!"0M-5
%hbP;\<O:X4K/5@%Oo#\B1gO&:KVrJ.pX;1Mmh10?^r>B-dMhNX(s+0lZB7Z^1OZ;c2Fu'4[Sf4=&4`$-fp]&0UL3dO:0gtuB#JW,
%:%u.a,/#j&=G'P(nFOt$o/t@ql?ig31J+e!5Z/b*orj4YFHdh+s-NM''-;`a<n:JFkuN"Q^5>l<LN?nj6o2-MpqZH:,%MXe==IdK
%QeBeu=ssP;)<l(33>_[^1&B5qV%<'hs5cK@H",te=rAG\`Fh>/iD8AdQ_"ME<@nl8=o`grK2#EE>lYn*p.2p$kt3BbJ853q)QGYc
%a<68S@\hB=NnY)Hh?qR,o$8TY]3%<0o:rXHCV"bWYXmhV^BBa6\]\d+h'rFRXP^`gjg7J25d;^c[<=LV@dV`A"(q_=%T?Lj9WN8/
%7"NcN)t69Url;U5AH\.//&"Rf)"7l&JN)nm<b92i7$SUagO0WFXQV:<SO1Cb>)e&^0NgCC&^%O5d6SO$)_s4CQ/E^X7[2=B\j!KI
%/G+kld9j)nHb\dn;%k-7DB_PUZ^_meff$;MKKDj?;3\u;>!+5\NNh#A=[Qnkd'd^>&0p_?aIWI_fPV\e\':\L%s*Fh^\KuPeF^Re
%X$%1J;o5.d=cd<>`?di9'bHL:I9kI#'+7:+Xe(hRrB5iM64qT2V"6$;#6Am81>`7*e>DC*.Zt)JZ9qJNcV7%KFh2@47cL0JE[Y'n
%N*5&?`*M_Y=Y5u0CN0jjm%,c/DkF(a^7ZuW\lm27c&L*]j/`==_`/02LBTR-4nIM=i2#+%dt8W8<r.CYdO_][m&h5-+mBLeMP@h7
%niYd)R1NTXnP"`r?+sPhT;JMXZ5:?AFPTnN5Wm=",u1WN-7n-*]%1%dK/G/o_H6E2a5_K5mM1%:%G-;4K:K]0Gj"YAm\5&omU\6q
%LF#cm.OXIR!q?H/Rc(&CTZueL@qnKL+I*h$5HND!Ud5kk6#ru<0G'6ZPg#TM`Nr;0Bj+AA/+"0@[uoRFfttR^;>p7!M*P#Bfg;9+
%9mPDU?tm='L[<tuGWY7B(>^XWEJ'0e/J7u,/kic,Icr98LKm82Y2ZFUBTJ0_4`_;j:M7l.UP+X45%%3S6JQn!FE/d<?#t6Li:#CL
%n/s!jZb`Xig/aC]iYX;7E.1G&bQbLk^bc:5jZ&!*a^ri&X2LT$Co;D'>4XlLe*L5_]IHQuh+`^V#&X@mqkWTto.P)%jjgB`?F<e^
%bk:%6O$EKa(h<PW2ghB?VV1X$i356n_kkR@O15WU#*Y-2K%DnDCmsAu'R47XK1SiR%mr9NZS>`aTPnp_n2M@'Vtd'YQejQqEoBno
%N1h[?^\C8c]5s_[>@-V4C46gOOI=0[Y=>S>Cm>/[G^/&V+oI7]k7/<(>qQFNb:Y<JfTt!_*05G8]h?!iP$fXNU(Bh.E_I\sj[Ukd
%/RRAR:c(#]WS+s"cTY%!9"gOR>sHfBS*F+;Bl\e&[C'o1BRl7=SJD\<Q\"od%C=\2WWZk`3an8&g?P"Pn+uD^,gQ(k<j*g("G$7&
%es`[:$oAj:6M.\h>6_mu($8@CX:]<df,'M"$u6!Y%r;g+g*<8rU4g=h6V(K7N9-"3g&gI>FGAj]^D.&>VJFeiWD5HN^prD-$^^I`
%.t4NDX<(M$Jf^9LjiQ8+Hdc6mf6s6&;E_>Vqhg'Pr$qXJa,>!Y0,YDMS0+^9bF_Aq8o!1H'OL.fnrPpQ&hog_b'3MB99"$pa6<pj
%YcN;C?H#c+@6+H.N*>]A`:NV7kkcf#a&P!d91G+XSql"WF7;":S_HbTl,i8J;M+AT-`@,h(hf'3<E)<I=W8@&9j1;K8rAENjceVF
%_pg5,hI*U-;BG-8A%/,_^nA*'8S3Y$KX=]%-#qjsa7=V;NjG2_kh9I3Sq'=I-u`3q=N3iU_84.]ilFPV<k:Y,F`E0_#(E!WWZs#+
%F_$tFmIA!aIsAC\V[jKnN>X[KY.E,;X@EAl?`eL3[C"uTKofXk44XDQ2OL>4N:@GM2LeotgsKAf-!WD@lQ`DI./Zc%miLBfrOb[I
%';5qn_re9aRj_TqV]msHIh6qL<4l3Sg<^jAc5)^CXVd]2\/M`X2"T:P6S`ck,./"I54T6)jQG%<In$A/Of/QT[*;K>r9fYh\FY@[
%LIO">E;8K>O0BY0_FUEWP&i<]$/?0(`?Abih'+o9DI=Tq:*teJWRn&])(`r6\!7P*/3;j1Bk@h!F/gIfBe(_M@@D;\3FVMb8l>dH
%Q;o^8/hZ6F'B!'*:'%am1qq')&U.Gf\4UBfK)9c0o"tSEbWXSORa[$>23Q,qO!FN%&]OLs^\TZcSPHS`.bka!r#2I4MQ2TESG[-s
%i^M-\/dH65JoqQGd(bDBQ4%bJ:,aTU.FTJ.r:ht<qm)h6c`[uGP=cB&4'd^J/MY61-!Tt16BZ+DbEDS@ZF"eEKkZQ,lZ@XZbeh%-
%E60J<S(@*!'WP6@Z3t:k.WDJG4r?u=P#nn50Xa;Xq#bO-97$m3OH?G&dH\3frG%`/&n3oh60G**LO'][It`#7l3*tu"kk6kS]eSG
%OJ/c(_ap?pr#gW-dH\XNQ7,Cp=gWU:Bg$6U"PpR+24UVB4NUHBF_iSQZ6Vp%CAg?TNiMcsrcu"2"Tn\!_`Pe3mNj@N?9K/b:Jpu2
%TZdDX-_<c7E"q@O$2hDUl83g'Ra,4`bSMdD-!efaSH17h<p-rT)e6:7j9?IkNlGL0AR6<%AM/mOHqF/KG!8U>'WSoY=`R$e;>0TY
%eTV`:pLVWn&k$HDaVX9-Ad6gUD]Yc>g_Z28M(G&o18U$Z"l$T-9,W#VH"[.?(b^$;WLU6>]p18JU99plm1#BFBWLEEB5$5X0"1,;
%DXQ&&QYKEeg)d`(Tl+gY9h9V'F0ec`Y\FcXhr12JoHJ:1/'W[cBubmOqcDrAR\UMZ[Ha\SXV%+*)bm6f*Ii/i4E2-I!YlbhH%QpN
%'W+!WlJt>G"KlO=q_8RTKd,7QCZXI[Os0s2!iP!ZMd2q6"Jil2Zcl$<F1s$M'5>!N490<8!Pj,!5U8A$;lpjq4_MfUZ9#)qY-(j<
%!m9orI(#d9__3*uct@^`T8=.$(X)PT/DCOAn`eK/1aJ1F'^8R$lfi-r[S>/a0"f%$V/V@m>W2drWIIts#s\jik.`mL\RIG&N]?m@
%PIk._<1<BH+&sp4fK^ia.B+H+2"dXfCqUuf'^6[",1MqL3SSa#O#,cde>RLA>6c"]%m-(Qr0%*U(O=?pF2j_$S=`5R8Sr9<]oO/9
%VXt,.KKa:GNq:cs#6#"$XM!PK,=:4`*c0C6qj(H]pi>Qid6^_BXbuPNXD,Y^XWrK;\X1tMV>DN)&f1is1/Q;,UB(dBgS2GZE[qU^
%3DFpS2>P.1Eb1@6f%$!eibQ0_N50m1l?#L..+9f\^&Vu'P5XE3rRYh+/VcB%VitSNH>#*a'2?KF`f3nocaTGD!\QBaF@jVOGQBP0
%P2lhhLlmd+_Al4([,H)/q2;3Y\C;qT%5ZLC9ud!1oa^T1,oCCU=Xk-8\Z1I6(Y5Gu*MV/aJ.?.(W5V'ia@b2^[d?=+j-".U:J]E<
%[[iS='D5(iW!&\ZXFqe;-t(GkNg#f^dj2dZ>9JU0Y_o5*fqt]OYR>8e$oW8S#W@2*<*a*QJ<#FDd:M!#9U()>IYc\NV^L6&:VXs7
%i>^C"@6"<+F:e[_5[Us_+)Ubg;0qnt0MOMMLX8mQHQ1lhmkBtRi@(Rn[@LnR^X.r'_CAi%Klg>d*&f7-'i%KW?aZ*-[sgr_AD/-"
%o;a]*N1Qt+5C&WgT#-Pb^$eggdhKNV`,NBdhTHKOI=YG_@*3c4,Bb@6`T4eJ<VG=>9[YFnj]cC-_oj.PP=#!VG9E]Zdqp6pki+,5
%6u[T[j<20?;NTQ3N'V9``8VX<cUDdb<FG+TA83%?r#Cgl2D^-.<1l$6HR5i:HphK)\jhW3oJe,Rrd]jl5C][Y\?f-CEY+,<GRmi_
%WoI9onj#HkL[LW=DV9Vsaq]</)XK5S_FF2pPRf;cOY).]bbfbtJheHQ`#S?]6rm'9dt9@;@:-WQLIMpA&>j9;"^@'cnPNt:E]gH/
%$G23V:pS2eG*`+tn@3""aWKF5LP_3Z/+Dp:Ysc%9q59m7-.7*S05B0&;E"KLo"-@1oHbc\.@M(fdd`^^D2i`k'b!;V29NjIg2o7\
%VH_Rs`mb@$4J9*g8dgr2%D@^8ndrdP9M6MTbdZ7`9aXGh<Xn?ZF!O,h:H#@QqO<T0,V%J47@+XLqM<%R#.s\qXBAE"[Vh5`fYe(t
%4V=0LOW(PT\,l9O0nS1mNnnf<=^.7/kXsd3[@_`RW3F!(F-29T2&iT8X#.DhnD[#<<i0kKkI-*J*?%iHn;BOA_,*"Q0/Y?SiAmCe
%D9HZKb4l?%JP"TNHWf]Laa8&T4S%O1rGgaBhPf9qSAtIu#9\_0II#/'.1\+np&Vu2>%j;A];po)&Q.CadbVL5KNJ@EZBHo:Ak"ak
%&!1Y]bb?\TPo<RUPr%mYl5]Du;CgJLdI]SD/BaK>D>FG>N'$/BaP\9sXnjaC.5gEP;a\@jTVJTc-9PLh#,W`WqQNhGS_KI0.7$.g
%VKM%HlkWY<0:>\o4RuYfQRZ+sD-Q6Z-^:V9]NA$An=&?*(t"e#!mjUa74Wa8I8A*<%Ffa3@V(HK"0[4i`ueuLZck^%:+K@(eJ(js
%orTeqkT3]oS#*Zhb%U4_"t+'Rq@+[S[RbkZe5_Ka=Lh"ZDb0uN\@p>CUpaJ[dr>MIM>k-A,3I/9_b$Xc9WpY*>^_!F1Aa8c-iXV!
%NFAj?O,LO)gg1km/X]oM.]Do`k-e%qFsB3</2]>]4C#C(Bde"=nmtPo&$]88_e+t03ZfEp4'X@G\I<V>2(:-:opL%s$8iLXH\.9a
%/kV@.EK%<epkEOe@1anm%6obl@t2V_^o1:Yd;PuneZ]g3Qo+W-nD';;/fr:iZq<t0640EGZkSrXhRD?aHg.ddE3?s%8>b/=iV]F'
%6jSq(=n3:Y*m:9)([Z%hqI//Z89>PCgaT#89p6hpcDT>Aoc-W_3n/)M$5;5^hkCQ4,>:9rHt+pZB'el%>SeSk8,Cc3Vr#t&5.r;K
%M#_s2$IbA?o@I$@K"sol,rW"[?]@UKH_f_VJr[%g+Wb7PVlknA`fpDT^[qP_l<jOSABS$)OT\]fW#<?3Hr_)eaB7q&OXET%%jd]?
%\gBI3lo,DJ35`2$J.R5o3GC)c?&f<L-.()1-G1&nc'n`(JcVn?3'*+jS<%GXhJ.X0/4:t+$ad'#mr%f<%Z]Oo'H_Cu6J&/qlql>r
%kM&U4f@ZEN)-*OU.^[`AHoVYEC&N%4.jSb$X,TM8*\l./3(OG`*PI(-Pags/R6=f<)UNm"E/]VABE=bmr`.\T.&!O)b@GOYSrh+=
%On7pK$&3)<:.Nd6:WkD)7&qG;S]%(D)3RPJbEjS`p4r1b^VTjIc_&F&dbtm.h8RG#ml"3$Yip=!BZ=)a-,4CT*OdbLH#k/%KQH)P
%`NUp]&V3<-TGh>3WG5T@(XoNNb5qQWSpr&b=#f=\'[LW;npr5(TR#T2Yljd@bJ??Ug:'/V*=gQp.AGK::0u#$Ain4&/]eYf@QtHa
%bG&_9pYcf/QV;h@`DEWV6k2=HXYGtHXI5MYa,3$dJ,mJ$8q!B#/>i;XN5%<8duDlagMIsp=9G,5_R&lZQ>1t%X]j'OIdUe[OKZ+L
%`O5d/(kg:?QitW[10Q>,a7.-&6Uc;"p$r$HJ-gcaRqg-XL0-!*=/8ePe`RY5N`9[;E7.eVYL4eIoh=tf`p6aH/:[46Xs[Im5$*Uc
%fBp2i=MC7,0pZb?M?iSJKR+KBD_[KeT-X`mY+BpWkA#NG+5Z"moEp@/?9'lO4MeO)YS+^sTd!fuO`nK[&p)eZCpF!#o(#RqE2G<I
%m^T(n[,PNDIdheIjg,;?N)n08YH^!C*ur+-`S;FrpR.`_3q56U`C+%]Bdm>tc\5Tjc:P%m0b.,Jc26+;H,rVV`*%0_SeNrs]C1\!
%T;mO8N-"(,<nd]RWLt"f!YY/=k"7qf><"=A+.9S<Nitk=n9=?C_^m/"p*aed.H=78$-U!+KH-#3P`9=Oe7R$%%C#,5eGB'%_/9V?
%osjNVNt@n9'(5p_rC;Eq"?>%Noj=9<TA:h/]q)-@g#3KV1:*&-6LIE3IrJPc5q;)q4,AY>TB#H_s6!2+bWmh^<cO;dKf\"5@o/%Y
%<5:.&ZW>o5W`9Vn6.X/t=Sb$WR'CET6"n\`Km?\]M.&tTl$rum!W-[?&d+?>5mJ:ujq>(83akPqLS"9$,Jg)!?Z?o>BfdmMm($5-
%<D$olB\lX6d71g%.R;qUj\G?Ap0fuI'[<_M:14XO@iZHL&ssOLRS,c<1s@g<g,V8u9,(;c3LO\lB9VdG4!kCtampM=QJ@E;$)unD
%c,<npUtm8Qp3l8HapKd6Gq$Tg0@dF61uPAtVk+[3V^?sYSK=!KR\#pV#Yi+%L'Zec-CaWQJA8V><2(MW5"UOqY>S\;Z1icTB62.9
%9rfl_eX'ie7HP@Q"]g&00a9a5[hfLA4iT2_fYW2<XmSWF03=johC[;*"RB#m5+^fuJM!unLkE1X>)k%l(aZA*Ij'$Z,7*0[#B4qh
%53`o_5%hgp=<ElqSOl3hMp0;,[IJ15Yo58omU#&Q+21G+Em>YSB]=sds%17hXG^f16D%2:BM3up#A<230GY5c/A.s&Zq;,Z)6)D`
%f"Teai1_]Dm8K2[P#p02NP97';^k;hq?3D4b#t%r-&[sZ4apkQZ<M,W*CR5joF!).62)P(P_JQq\/;r86m'qW6DB;%/7(h^9[[Os
%:W4"L?"J+CMEf%Z^@\Y.JKJnaEH.rS7R7_G>@0e(0,Ul`Z3a1W6/II?"?*.46R6UaZu,>Bmqqch1p&FTD^Fp+X1BPk]QI0+W1,0o
%V.O:]U5XIde:O(XA^kS+qE:`kZ7o-LJtlZ]PNYr8:MdSD]??qJ/d#aJ3dlMPKoPMJ.2Ifh;h%[#N+/M(!)V-62LQ1.8#a.E_cW[7
%3]q;bX/9r(#oP/Tn)9q&3)i<E=h;/s`73T*'c]3?&4B4".4E95TV;otmEo3f3*C]H$f3*DM\Nfbpqq:-SuS`sOtc4P-IJ.Yl567k
%ZR%1Mi)6J-SqZu9O6>VLZ?5,e7=HVZ4#$(TdnEsh2QS^WPEgGZHTt/WKtLTTW!+7KXIp[Ad$RI&\0U7,.9Yi:LPO\ikX%m.=k_!e
%>R-l9!.c;&h+hEKc)lBMXR@N!N05MY2-AEDQVq;*UJ9`oRLPAt;tE$XD%hRRAI^`gRc,`SpUm-YmLjD2!jJQlaVKg\ZIX'K;3/$%
%duA1<=ls7KAn*@i;1c.`#b'%$?)2`3#pi^9Oubi#l&%!-,gMSqcJ-)SN-*J?JQ7DKnS`2YYqK+($2!\f3A,9eet3TqMFj4&2LUL.
%>[2ZLeCTN#P/NqlaABsSj+0bp^tAl=%ZB2K%MKU?.'Z0C-JhmI%V@eij_I7D);3L_)$6p]4WBtAKeq@mh)s0_AC"59A'0j]BtsM@
%n`Z:1HDQ&]9(dgCl/bEAWSVos?U!P9k.Yn0lQ^:]s#4h0r/9?.:F<@k4iSnfJ>KD1SB%crAJqdBkmm"l$j1MjBqWX94S\,a?;@[6
%:gL+nB"^eu=ROA7<*LLuM-OkW:j-p$qo/$Z9XQ.F*:jUj6%?#>=\\4!DQ)mgHLT^*Ya'Qi;*tu_>51`\!=?=RDquY+1GVW9iQkui
%NH:e<&]Flq1C<G![Zp[H;D]ioc#qHZ1C)97Qup-+^UT[54-@r7$^11&n.*Bl,f^7/4&22o?_jEtcH\dF%6@GfEP?<'N'b!SU]aJ7
%^SO3\;6$_uXFd0l<<j0_`h^nY7KVPqLT!Siqj"!?nO9IBh:,*cZLi^*.B\CmELZ3_"T5=&Duq?23]m"[o52@T_2tt#>]14@MpFt$
%h+6U-o)OJ9j!Ymo\\IXY@4Y)[!dfCj>KJ=i2`Hk*JU'jH.=gZ/nN:9Zkn#9ZSBe]qPATEY+>g27VH!%'/^BSD=A%7JMA.WZQk[Zt
%GG"-74srsaF-]oG&!^h=r#R6F>!fVQM%fl.:AejVA^PAV@Jc#q(cHrl`mp)9[Rm)A;j?\s(OLAd>MsSIKkA'e1.>2C@3N%K<'o2g
%<1eIM"Qf4/%E!G993&A(%B1ZYRimuqAP+.OC2nH.;k#3eDjQ(d5?$CFDpm>Sc(-kOOsa=,W5iWOo"TC;Qgf[;$`._RS6AWD7?nY8
%)$E+17cIJ:CkZ@>9g"_<q>/EoTk.r,[rb;*=[u`])9]"3D68rmIJ;]LI3tWWo\Y.V"R+"N[R^%s:5bFO>,=[%be*C[AC)%HP<;G]
%ksGOYfm1$H)5Nd2HASau&<WITX!aW5::cMe6J&!2T]>]".<VYXn(nuWR<L!p#2gTcN]bpe5NcEMONk6]]q*+\?EKQH\`Ui"$d%%]
%jJ9S^<NLtKN?:[\PGLM\BEF=.neu)/mJPfJm[Z0FrAh]l=\4?u)U5;Shb5][m#oo]O&`=lY::.8@jSM'!mR9?gfrc8?6"QM[>5#5
%aO=LuP,-f=md<@NZtnj>4j5Xo)"&:QI]QlYl)Y]6rVCXJc9:SinLuUla7+!]"!u(=Q9n8k@E>!-N]B]'LMYt'>uZJ'!h1?`RFPe&
%-"EG59J;EB8+60gC-_"N]tY9JYa4#1%dGa8pQ*1`b63eT4De\#j3NRP^9)T[$)BQfg+:)ll\m<sEmf:k/^$:l#g_KKm[r4!QY=j(
%(UPp.aKFHrhu+>eWqPTD_a<:rIid[io/;U&cb.41?/Jd,5Khr_"1j:"q?f\gU&;[[>"q*d\%(,m(s3^&>CT(FW2E<C$q?$7KCPuC
%jip]I`:=g+2kML`!@DRW.,t_<`d_-]GnG;;@f)50T;+<Yr*?LCb'a_`F3%lJ/XeEA'EQ2._c]ak];^Zk_i6i^^Y3<9&I?gN,>sTg
%6j*o^C.=BU_6ggmdZO3^H294LJ"$f/T@#d2Z!9-E%%.SLFb'TPEF;calD1]*;%>HWK;k"i^<Fa"U'H\&GCln0k4_um^9pRg:1*;2
%TD/N[lef4llp#Bf>Jr6j";(_="Zaot%U,`M4u_fZHYX;0QD";^J)Rs2r\+16X4-D.#qhpF1Y(<PTe;D5_Yk#6bkH=lq]gSuIWG2X
%@dYTG6:sBgM_mtA,I^Q<p'Q<E8BYtjn#fFq=1F;K>`SI7e_O5?Hh\M/@(uLWInb4K-]4TL;7@/f)SKE+1Y3!mdO:5$.B\f?8QEl$
%.f,kln'`CLfHg[4)u]_:jEl<(UAbEC)A)9?bu[)k=U2Lb+9HLs(ms?*3gA&eA6c^WnG3r)RYmp_@#1Pe:P(J@MbXZcdarEB#)+I3
%O.(-V]!UaYlF=L`\Z:':"YXP)<iHcH\c`NYRR:&-qK2=_[%n:kYR`<-G,jaM(&O*ag0$8Q;AnYcOY%$rA\RR)=3*SgRNbs6![cWt
%f[8%0A6]Wn7XB2^%L\M+^D/p,*^3G41;!C"EA*ao7c]9RGiqF0ajq*b/1eIiO(H?kP7/FG:RocLY:iV?g=iLiQm<A\AqF%1M:_FP
%Kipka8Q-Sa2%/V9Q;!iKf(I'KJm00\*=Ot@JYX,,600%BNh@u)e`)LS[4A.`R]Q3FnR7":iqb)e8pbjtTSpIC0/WC)l>.L=M;udC
%R=*<8.$SBi06sT;mL"sc?QleWDND>BLZ[X'YIS!)lQU%7%7%"7-FX`sNCoq8:X#*IlZ%0R5T)Yo1?pEG'G2uPm[j@X#$J+g&PBiB
%W(&ZocumkiY+:SfAF3PZ,.o\14jS(^dUGASDR,t4PIC<%BA3+n$WgL@P6dk/dL^<]BoiLr%0t*D/ZRR@2+k.k;nM:.m,hYQB!e\(
%X2^6,O%*,u>VCh'4V*utf9Da',s2JLKM`eY'eIXfOL6K%iFESg*%(=^C/OS^1o#aI]G<d\L2a#OGId.mKd0c`qUhZEVsh&1o27Bf
%.^,\Ac430%TYE1LdjnD4hWu<[aC\<d-I5rl:"TJDrBcFf.2Po\bumgIAKgBA(F9l\o&tB:1aRHFZqY^sAUY;-a"ib=jC(HFTi3lF
%:l8)nPgN4#c_5P2$f:s8)G;i@8RC.N.Ok/_kI&C<K"Ij4i*t$0$YlDpFh/VR_Y(AAXNV10JIH?\bT#Y#(OO6*!0C0Q3"Ho+,(e:,
%9sJ/Cn-[R>SCGR+(%,BI.kB15AZXNV2W`&l\h2TN?1+F]/"*gD3p*A4F\YL6La:(SfB^!6'bsj8h;:][:bhDG1[#CQ`C2@-,iYlG
%:$,MY-0/(3[SZSH_k;!UO;^4O6;VQL+h3Cr$?.Jp5n-"36)?XKI$a+8n%9(c&WLDQLUj"QqQC??(fA'['bu?Q7WSHnLUT[k[:(u-
%1O[;(T6(>d+&!l+O?uF/-%:bip[n815p=0R/(GO]9_$!$+Umn-7ttGe:ZM8Jf=!^kY/d;+2boM%7PYE6)Z)Ng<I:XSK#t(2KEbpO
%KBl'%@9muEI;@rOA=nCq1bBtgYrN7D:NAH&%MU8/B@0Sk^f49OP`eM#@*j'G9dPKmh(*(bZbpud6A#LjZ[_1Lo)AO"9`CB)RI\kN
%PiH>tTD(,6dE@b90/IKPVJ'PCksSj4.)]GH&qeo!V"f"*`llP%?dN>!>)`9<]M)g*($)"hNbVpop<@)(YODR)mtiR)ea,Ic?D+@g
%\jI%((NUK.MKQlrA;(gEYDT%+H&2kAhshM<E@4U'<X*B"((oY9X`nc?["p,W0i9/gZ%SC-PHPkLH;/"DVku2HI[_LrQYBUK9)0YY
%H6upsf=WCMC0;*QdP]pn..hSbmI.]+0l&:$1aTG.g>``lZI26p)d1GaQi").Hi2q'R/R"+qE-%,Z@_6j11ASta^%HZMOI72(8BnR
%`'e(.54V@]q,?F':ll]8<kY`&G*Lq5jt/tl:Jq,8^ns+AD9MBI+P#(["T28Q4CmOG?$$)2r$&kq_AV:>MiO"4&/r$\\2qnW3?,KF
%(XGLL\q_cfb_n)Z2]Zp0T*1B0<+PiK1f&_1DAVk7?!hf>o$h[lOB.n;?VcFGjkj=Wi'754)+,pHU[8d"XONc*jn5M!DaU2AlO3]H
%<C\VM=RnaTefF>9_k<,9lf6n$m0<_-&"C?3?[bW-QoDNdA??nEMUL2N_htOhDSppI^p7aEO.J`,FgBhP:f%h?4oM]/GTom2?''*O
%J#'opqermn6T/FP%+H;bC`YIdFLi0+"Do-P$R/aBhk'i#%m8'cr-+!Z^I+`I:\&cl'stL$i"m`AG&r60,'NHk=27MJT^"<l@jCX.
%lJZ$Gr1^_ikuBU\QQZ61\=KKd`"cN`SVh8o)j+nP.nGR`&g]Hd;da+mm#1d!Mep3P,QUZC)GN?);l*?($fH.EB&YIU*Gs6a)Vq7t
%+<AUo/X]-a]S'd1C)=t-qpGMY@qo1c<B<0@Q8D!J3/&i'1ftJA2-U;5m3X6l3.M<0BS>EGXHX=h.Cm"CK/H2N88%E.S#!>``sIX4
%a\i;jL#7;K0,="JmJATO!;UME*KZ,3a%-qk/k!JZVe7rL;55\=L/41F"NKWC[*6h-'TX#t6n&K3B;hXa+EM-_8(/O<Eg#O$jq&o-
%F;$UPYBnm(IVpMH#Uq'?:\/:s,5%Fh-6o+Y\`F_[Gn]f5M:/YYTnbMg'Ptc(0q7(2Nau?ESs!@q.Uujq=RlsR7\hi29q$kB"uStd
%apK8jAkmY.CAhTkK:KP&A/dgcfRa?]%X2tJ=*:3YY66-O\]9Gim)cj8p>7rr:K+NkA<AJ?i3;(]g0^Q/I>+l6YL)aP_H.h?MlDaQ
%$.8'^n,X9#pmEK3"d*0i\Z2A-9a`(W%&M]uq2^6R_35-#d0:WOTj#_idFOhbJL!)=oO@*jB_U\MZQHKGe_F5$963$d,BFmN#tVGo
%18>N%_;YG:0g[T!:=XLZ\9jR0K8i7%nd>5dGc0[7MX_%@AVD7aQd6qJ;X!LIJfXM-Ki`robE1*u@H^(HfVr`XgMJqU8Wo9B+]E3/
%e#if"nljg]Z4:l+/>#JEksm[Kpk!1[%GBh3GYgfmadFtaIP3FuaibB0;6V>0Bu8&81NCin,(E:9:^N2Gco_&rPM+!ue3A+3j!U@U
%J,1j%IT2*7KfG^*It:hUC,&G-Z'ZK]2@ia]U)f<nWKnM?%^9Tj7jMr:+VfG':%R_6]"#6+6VgIWV:c(gL$+i!F84!!\Z<jM[aEp/
%*P.[A?&r0rVi#B5I-NSmZ_qCkGuJD'@GQ9rYH&m!mp>`UIdSki@qa%c,7MmPMHal'`J+j'l[`S.O$@qq-mfnHBA:8HhM+%a4<QN$
%-oY-2"G*]s9W]C+ZBlHV:)YGf2&AN=Dc<^V2q($WirP;+jpUT&(0-6@/J@DZ!u[d\;*[N,8]3+8;0@s-f&QXVFFaCcG(q4YM[Y\=
%.<`9*5`WI2Zq^4t4d:MT?+OJt8[MrA0cTm#`SrO<1/hC54]h/P8=lA4X]j0H?.\@SLjCt[s!BJ,oi\am`4C3B]"bUIb*W\#QH1!c
%9M%3hS>^?$Y=Z4aah*"4F<?N[)@N)XoUpTA(c+a@pogGAU+\&D=\P"`$m%8"A!2(84FUZ2nFZ3)/*jEHQY@!\ld[R<25oZ]f)[fL
%8DaWSo&i>8#RSGNmmjD0.LOd^&R?>Xh%H[VQ(KBgNfAp9lQ42mn,&euqcR:,eZ__s:V(8qb$;'-&5*YWJ0A"roYDnGnk,^Wh.MSG
%/p)#PS!YNt$,qo,ZCr1lNn-&2*'/-,U@#*gkh;@5*>D'_]eO`$6Q31>IGWN7[lYNWUPTd7$p%YS8eIrC6%QPEI6Mr4%n',&U)`H1
%<]^cM#i_qH0M:/g&uB!9&Ofu44<uO7kqXk`+o4GXAI9]a<BUaa3u-D]qi70*#c1#`/sU_5]etT\KT:>*`7B+g!fr6G^&hc=3bnGF
%DUGd;>4\E7:K'!/FKm&!b3Yul"?"YV2@J4'J_<Cb3iR)+4%Qb%)!;1U-;Ej3,6Rs,5G\Tt7nct1:ZM,+<<H37TWI]D`'6p\rFnt9
%LS$Yq1c)\Fmg`TlC$=Y$93$X,9F':FrabQJf9-$E.+Z@-"@kY!Cc5d'J$HS*>R6o1955o!_B-pac1$I,&t.l+II*690.Vp*o#O$8
%PJ<j6nM)$+@u+1Q]L9H'p+:q'XiG!P3\,4b.i?(3SpVZiXK2oman.*h3nD)=l4R$e2%E8jC54<=Ch<h,gSd[G=]P[_Xij_\`ii&A
%m.42tFB'@E;::J!+s4A!)8Haq!N@UIJ1hu:6)&ODi_D3spo\^sN)63`H2I-c1gT]nlct]VqLJVARHQ9`8<<4F;!WQpF+8qMK$uu8
%"Cl=LMZG[i"bcJFBi%!'*T]^]Sa(aF=]'3@&/mL.?=Fpd"F4jXWMr/r=Ic'.Rm9RLl1Q.a]5&@aMR@e,LUETY"_XneY)"XUm`ZZ>
%$;-4DjqZD@$PkJO`I:Z!/65CY"h/B&L$CEj3\%Q/nNeADYgQV9NB/-j_Qs+D[i,LJ@(P)RH)n6aF+I@8LVY6-f%)O(7ZUSkr,b>h
%R;@<)Tf05S1=3Z0^cMSkE7uZIgI=lp16(P\[p9Re/#)@o:bK1++m$N)"f=%>QF^fo\[!-bQm*EO=qJC3.rrS([&XeaqHcfp_=1H8
%Q[RWm#":(=SQ+;Jb^IWF:ZgI<iYf3e>Z3[&SX6@.RHsW^kRO8Sm$)<JA\%dI`P#')!TE]N7gha+rE1UsQT'F15)V=ld!"S!8$&Jf
%i."$M8KKjVi58M1N*b!ZBH;9>gs0N!X.buGIU)n2R8K9M+ISqH;3L0W_e<@!gWnqKUR`[rf6!1Z?aS9sC(i!iHMP\/+d=38D,JKM
%q4a;71^,ejM@#f1L*VHc9D$,*;AEn/.u,=k;.HeZ1Kp[YlWPggbLK<m7DdsGV_q[G=l!q>btdC+W[`[(AX2I\Y2C\C@ureg=U.sG
%$p0'rB^NX?fO-d?Y.#H%3-""Wr'g>.,YI&$^Wtf\*`"T>J/Be>^[3:_KlNDPR!q\%Y2@)AT?(P0a=i-;5YA9%1Q$I9.Pj^g\Y%sF
%:f9ogN^Ei^:a2utLR5Z:G^Mp489qU3^&T#C0ZQ99NE';meJ>6EM58=up;hBZi(ogm143g/i6UaNdWt]>O&!H92uS2RqE]Q3J,34[
%X,mr3#R6_EiAXl:W9"ISq9\f`qEk]ee:NjE(EetuMP.eM54J/qT2\HoC/bgc)2OM(3E`#4M_M/&s2D_nmd(H`Uj.H%*M@t7\FsOk
%;Q=,TQED+Ub[91+.eRZ-5O1Fr]_m[80;ZVMab&b>^?c@t[XU"N\-B;C7A%APh`[RNeM-N$g]\!@gPY<;Q)P]4)l"*7Ed1GQb9Efq
%e>\ss1.9CIS$fjeM\u?X7j",oA#WWfs&ZE/C,D::\0]NE4U8f4CnZXs/M4t^n0u.Y<(CD(28`^G"<[8ZM/Y#-bI*)0)a=F6Hc8D&
%*!bK6<EnW2[RdJ4EpBMaMPAj^QF>R:=!uH&P:$heo<)Iq9!7bt@gB6<g@9:TF>]+u]Y.q-\(dg;8Y##M@2]mpJO;q^MU1<arR'L!
%Imi(@q1q7fc1m^G5A!Tkh4st"nrsr!PJE9GIS)cuH5A\X]T`uak";6m4(-i9bs=*j'Xb1=lXA/sE(KT&7+^lF*MnLehTU51Wkoc*
%EWL5<23iS8$_PZG5@*.FAiNeV^bfE5_LN*R4U^c),an/_E0^9I23lTbqb1(6^W:^QKWP'>A.p9b0g,mj(8H`8[Y6L/aLCY+C;7FK
%9J':D-Qg6L,/N[erJAt*U(a4PHTERb%:BbPHlOA1dS7TNEl=DB>;4#r;bXcEnnCufTCFJT`bJq-,NA3o,*.ptYpMqalQq%YX:u_&
%_WZM[*H!)G-`34qa!r*.<FLS7RTk.^kR*1%aM]Um'eULKWuJ]t,/E]/1[e6_nP;#QO;M5XB5eWElY-1MlS)Jb2pqGq1kF-WVEQN,
%g_*lAAN8K*qp/ubeDq7UI.KPoeC)cV=d6@HH>r8(;hmPU`;Wi"?=_oXAh)DMSO--!j02-d5S.a)1RqpJ>RS]Y=$6jM<oaSKF3d2+
%k8^jBB!8Hh['k).jcD`thc!;j,`U5,MqfERFNp1JF_c>5HmAciAJ+-<i2\;c]?BXU?.SM:eQOV#pkBC4<M#eE2tB,+L[OXWqkq61
%G!!mAh\:GV=](JRPNJ?XPet77?DH$agR+!hS<3.cikHG4%/`S:Yg`fkI.873C=]]:X]8+^:"n+^c%o^Y%A!<<HoU79s-Sg2WD+\=
%OH9#%;qK%h%O1CWU;5mN<UJ@nj"S-r2FE>9JFhdAS?1F157W*83l+oW$t*ub&L_@d(/,HY;6*Oe6H)9S+U't3l)1ZNTEmKLI>rU'
%G'5sqO:i'R]:Fq[=2?jIl3Zktr0(_)Hqin>@+%[9N?#`3$A8dEC!@d(%>IFl5@s^d1M6G"UcP2j:@<5%Kh(?c*m19&V[l6Vh4ks-
%s2>W/`1;r[9;5KVH#>?f8H#6O$Ch4O?J\D%8V$tG(A5a5:lheai>&3kUqaofaU`Xk:f4ti+VuJ&k(nkYXQu'gqnnNZhdD3=//>[b
%\%&nd0e5MnMVlG_bp<s1B[+RoLZs$n'D:37ABu]Eh;DWQ"W9In:5@`rRqGSN-/<.4WrIs,0nS[VCUWku*0XOHh4_*-jhn[o24'f4
%-=t9d6[J<@hsT\EXGG=M!:DX@qmb'649of#-FYc75R(W"<P5k74g/D5H-*B<T1(a7>Ah^_@gS=T"d2AC;pVZ_p!62+@E'o]\n-5\
%=Q;&@RoB[1,j88CY2g<J@4:7_?HjppNmnW=`=$81/Y6MYrT^lK.tp#Y':ut<n.=!O2ii^pH[.Z2s/(2%+g5lEQ8-o[4mEtTrIY#V
%j37hhbP&OY)ajF=&q%+[@CA:d;t!1-k4MRL23np+;#P%!4Tu'f\&A1<q"D%Yi7rQGE"%(f>$_RM=OP;C$"k^Of+QLWU5=aFFZ6"'
%.D2-t?XnZJ8<AcOPB<9)\r.HJYF!ue;NX@Or5$SR+6ap8=$3(AV%f;KR<nEF0:tfC%TI?PZfu>:3*Af_@QQC!9k4LaDHTt,%E.)L
%8Q&RM:jjj.5We&TCdFkEq*I"&,0!=%=VL'i_/t+<;VJSr\P#d(/)P;THF1UA=Mp0T%5p&mbfN'^M]>kA"+]Qs_R#?`1%'9-T5^64
%$<9_TpJ_l9J[Tph7hD2odSeY?U`.aQrR-Cs/15!:C/eJ%74/[ibSH])I?9d[SZMb"2YlT0NcM)+[A[h<H0o#le?P;='=j>e""DUg
%V8nN^M&L?lN)gio&5X:s(F5E=59s.&(AiNnq+3/mPcP7U9uluHNVDr?K)4W*hG7qESl%ThBXj";_N^#F-bce4VX>)][b$`4ZPX$^
%j?f.!;l<mO&_T@jE(j[;KiGWYq`;=8)B`RhN]iKDR9D3dYghJm-m_th6]GV"4g0mC&L%<<5;ljb<hE3(QpeJ77@5ubR&`UoT1V!/
%Y;--9MmFI8*dO^W;Y&\>qo)1!!E14ITg$1YfNWKZih"<+?(JBVTc1++q<WX#j,>g#47UADL>[uW\4`Zf$8YFnqKl3L%l)!s.^e8l
%L&tSknP$c5=m6`coNffgX]lmVWhNX43>@d9af4P.0bY4T+;l/u]["b9#8'fVgg(3"_kcn(nm-]sl;SS(L/ob2&BRM*8p/a62LWQ.
%Q1<OdiOd^(h7kVQ-#(u!LZnfB>tXKlLGCM))NX+4P<VQZaLo<=E4TOE?7)X[JX;MkT<TcVaolWfDZ,DUg1(jc"hdEMjX0*Qelh'7
%W_i.I"5fnmDfTfYGfAbHB;7lrT*+dNi@L$cZBX=Dl-jJ-,`;]\J>&.k%B[57jrQL4[R6i6`6XMZKk=kN=h^q<3EXGO.NaeI+)2Q*
%gFbcK7H:(:aC^$S#'#3D]>HI@CZi1OHqbkJQ!#F5TLq7=!h2q\-/isaT[gCP8&$g"imEH`G<tPudS-o>6'*iO\MDD;.B;!FIQN.#
%\!U@L7hG?kTcV.W>euWLi0ZR/&PFuSf0i;r%OEM\LsloI2\N;>IDDU-%&(_Ob13m>dC9I;Z^&I?c"7@hMP,%;obXBaQ=>n$.HQ3@
%Jd(6Wf\pQH?h)26#!+ul<0t^V<UlTJ#Gg@8-*7>]Wno&e$XM@X(*_n*>bZ4I$nZu*7$jL!0(*jCE)4`3e(9m#_A":43S#jik-D#M
%nkpmuKp1+3AAdZ]Z%Eg2e";ZP.9dJ`R)8/'F(sMa*+B(g^2;jW:DW6=-ZOChd&,54r96eq63ZQe0O$]X29"&s/6j20*nOdO,n*]?
%Vh'(\o.e56H3h1lB5V-3VJ%s=j]R#ajT3,PMlSe;.Ou*HUA6pQRP&G7ET2l1Np<N<`F`'s:ZnT^9-575P[t1;\9['LHq8G=.cjX!
%!`'7rB9dN]9qFDFkhOPpRe*dTMb+?"3KE*^Og4Za>j'3n?.IHL!/%Tkr6&CN%*ZgZ_7)Trr(sedCLp-Y&J>C)TIDTW9^#$MTuX28
%4Z,5@AV]N0Zq0EqdK*34>L,lJClp$)!!]T[-6Kq55`Q=g;DUbWe@$n.qMOC(`lKP#=tSOG;AU.03W\S-$=3W+\>T!spXF-LWIDF*
%g7RZ%?@Lh(b+3nUjb\=6TAZ=+brt0L\u5AJ4jErSr[CS1eCW<mD;ms(g#8RSZClc14HA-Y1e=MsC_"Ks,#eF'J6kF%L-Q1Ym4_BG
%0Sb4kPa7*+\TD>s%]q^'p>lek)RGnLMk#Iid6Q2%:G4R@X8Bc`<0T(0A2DT-<`cSo(7k1LP$/s7HFVm&6:'r>`tSc4C=8-sKbRGW
%_-ThAe!hHUrjNl51fs)t"KAj?_*ZP["(GW$R>:$2<7==)pD6"'hgn&kFm]:Cg);L:\CNYt8jCO)+ACGIr1Q.hCTo[7N[euYd$;s/
%HW9bEh2lhPWsjh7]1OAHn7F_6]V7nO\GXuA<.8UD"'-M5o'?sF!6<[[dY4DZMQYh1iUIM`Th9.`&NclB;$8M^]5Wq"*W(gfC8(*G
%47PSB]X\TVknFiW#tUI6eT8^"l_if-i4mcqSF@ke@.GTb57pSQiM4uT9Jm;<2atEJ2EQs$S.*MNY]o!h^E2r;cRB#s/h<gJVBp!'
%gF(iJX_L?&4e&D9L@?T>4n>)']M6!nT6NVBp=n'2qkKbYrrYB'?g$#9d:8Ho#?7"*537FOFfi4'NILZHKi@flHZAF1=;'bVLNbi-
%Ln$^lf=q9kTDRul8d$Y-9RG/T7FF)].qkMhc-HHo8;&B[/??\7>tflc:4j2255sBaIIP"sC%.@=o`'@A,Ik5g5\L%j_I<ZOn[kpJ
%E+2?XFUW(HK%hc;%8^2%ZM1p;5FM-/d7,7(8=ZAF+V1?nf7-c4X8;P?^S6/gkR3kI<:qmPMQ?m9(4p[)6-P7-OAi$:Uuul%MUmM=
%)="f.9tW#g7$:3'<?tVff92Qed867?H'>$0XFr1=)AON8P:hTodq;XO%+L'jqWmu5>@4<X!hsSQk"(,*_YNeS+r>[krehZ=oR0-N
%,MY.hMINt['!4NsI?jV$iXl<3$un,pMS`*UOm?C%Trl>,B6lg9RQpS)&"iaTUppk+Ilf(H%o\D*D=m>SidSa$TlYDf9+ZH-M4n#b
%GlRR+7c]:IW*B3m[9<\$af'Re;B@WlhI]ODooV".#:0rN!EEF@3]%;rMFT,QrG?41X<?;MA^dFnH(,>>V<1N=%AkC11$-u<dm1$[
%!p\3+X'QTg@mE+QqB"W4jjaa(-<7saR1@StXNM9CCse($,,QfT/*8I%RMm`$B)`L:LPt<#k,R$s>,cV>U)s;EjZF%&#DW!99%5mC
%qn]F@ViMc95uKmKI4&1<oBi,##f]t;5hi'Qf^sO>!BoE_,?iI*5Qc[fH7ADkfA?RWSqB+9G:NsHm]jA"(P&:.K+nT<c!BFWl^&tp
%qZ1@!nWkZaTq^7@*CfSM.sRC"8^OiUAC5=\MJ'Wn0Pg*"d,mDJGL;!LDCVT_%RcO=>t`?tieV@ZW7S(AQ(%$772E8q*!<Qs!I`pn
%<UA_oAKU$"8VQ5B*Fgt5(r),l@;5WTKV*!id"mhm'L.>NCr"Md88mLW[n_e0cjDqar*rA/9T,'/_Kuq6gi+P^q8HKe]-(DOjiO1n
%-sQWdG3.%Hktmk_%O6Y2`I1pn7a`\pRYCdu8f"9Xc-qe!Kak=7Nj@.bp7::kNdO8chIBOpYrga*.%;-ujD:B.3Mt\DFNpY-XDs_M
%B;3k*!&qhWc@p:Nk,-Aj5e/]HoiuIG=eRU@oN'b85X8'l)"+I.T1DR;NoF8GNbd86q?1S7ODd2>>lgZpEU1%JT/q92c03X-(+LGm
%1E\@2p@N\^]FLUHL-V.Zd1*+b<CbemB6j#=0QjFhK_;AjZ4c5T@:]V?g$WcuDi/1QnI[pcFK1+``k<,4a6dtIgdI-cjRccNk*Y3<
%c@[5!f4ZTNj3Dm.#j2utVKeDnVdoK\WcL!OH4rHW==Mm4<-,*?k=G!&m5*:M;O?H$R)J85)u#X7D]7AkJ#k@GXnrW`Ptc$ns1u4#
%qn&)e3Y0,8<!S;$JIk!HhplHp*)uYo/)-Kb3JKTlDcR0E;>MlG!tDQ?==cjkH1)gPQk\/BG<A?lMklF)]p5ZdG0]s>6PKr\T\l@&
%`KN5P_WUp/Ri$A(IW'Z03.J$WnS)bUDMr)[:bpWLQ4\7,52#IX=4F1K'Ap*_:l`u+AG<%TFkUn">4k`hZ`fKs^Lg\nWc2(I<'48@
%'alA)_78(cPb<0+8WTE%V_q8,I[ZQf>(@Hi&nVhMK?=<>i[W4%@7u5L=+B_QnZ*[E;P`V7ckYA;6-b2H,TI"mTHN)C.W"?,^`8E1
%pt9*s+5;SN,V8#[C3WF.X<gIkY5DF@B<u:MZ#tBggoNo2Rd,+3IqCclo2WGUS6<-iiLP4JoVjD6FshY,C'Euhi55;9rth82s$4"[
%$WR'0pGWla_ShIY5C9fphr=;^4L[LSm.`A?*Fk$)A:$!XYbCM<:mA]VSM`=SlAf,\nMs&-0GLfmW-Mm$r4@Hm;,Z1eI9H<j)d&t5
%D]6"GNU$$U:=(Qh;*i(MR.4Lden^=u,JABag9TXu`mP=,3i3_BLfT(YDUu#"Y&7?d=JZ0@D&@8RHW*&NMtp0+=hh\[?7.T)E*mN]
%s1,o"577ETODX0K0msM8>G&t,G!P\DT8_1@dujNRg7#4OLGCKK^YE#i*@O`B,`LGNH7c>Uo]RAA$1/+CXRe!FRPC(dHOFU6=,OUK
%.=gX?_%*HY3Y+u)FGiPm\ZSY+k%%IM1NAc$'rTa0@J]OmdS)RD!,).WrC:_K4,%Bdf3b.Pq27sT.N8W#Hk?iMVo0[Yj\$0*(Z2X*
%"mB_8_l3$CW)_On)`FQ.T<6R`0%'#pS7*'W^m!/lGrg[EL),]Xs#R[f=_MeMMm<\`ia+fAYE!@W>%:A'q#2@r_#c:@[i7pYBNC\M
%(p#;jV@a9Y[:IpcZ_e6<aJc/O9fs6Ub?dOgP:Ao[EV_@)Xt(Ia7En#2J,a7f$1*$qmSe*rDR%90dptg\@E&ZCbKM/4lgfaO,e)^0
%(0`ah_7ZRL6abcl(K9R2<OT$^@k;8N!X.?7$7m]]r.^5M.L)4LQ*B3TGJbt'WjU-i]GnblDbaqpfjApM(($sf4[Go:r;F<O!1Uu=
%R?&]Ca])j*mM7f04Y&cR\#kAWX0$H0ErU2.XloXWhO*pliI]ri^V70L2!4ca2m</U1j;^nm`FpfqV<ZnT>)6LhrJdq?Cm1P^JGa&
%6-\j&pl3hm:?#2%\?@-Ag1d.n+5e[_[dn<dJYRC4_VW!;Hr]RY8%c1@55KWdf6>5Zn(/N67d'G9mKWFRWUC&cme+lOh[G*Tni0f+
%:WLh799!o$A)M6Dhcf^4PSfV]oZl[!lKEE/]>7Lb]FKPfK<'=d>5c^ll'3<.mVul"O8`hjqTc&6^;%Jj8+)u0F`?fAqK6cG?gm^[
%qa$%-4H.k7dkUbne.su4]hb@)+*=)ud7cFj"6d7F[3d3kJ\TPX1sfFl-)a(oc0)*l?)-\X2K["[kY6m_JL"Hre2BS<S%,E'HXCEi
%+mNHTS-%CQF^qMq,)UHN&kVTU)B!pbj:08_>ZG'[&9"-j!<Wai$/)12`:^\Q2;f+^SNu%dEqLlK"+(#<a.a!3K9]#6aI%:X2h<\j
%74*67OJ8,]^eq1;\0%K5CXn+SjK7".\V?/ETh4`]IfW3BYl];QMi!;5[>4"`4]]pT6(9U9FWX6FRbXOS&YMepLX`gHgd>8tAftke
%Uq]SKGuQ+U!medd@fu$17F^=(f1Sl[@<r=\V?I4T'O@;^5'?OFe&?VrT)N,OV5Sj2E4(p<@SZD<:RmdW)&_mO*^EJ_gMqi9lW#8+
%=U!mt*qQb-Lr(P'VNQSd=H/nNN;`]/L^l^J-dm7",O(sNp<XnO.]JMoj:/!Ol'de)MeWf8&T&(t>biWk4Z0cQeRi6O!an*?O.5/>
%Q+OG5VU;?.U3K^9.G%H/!)e$N!i[OTlU0d6:Z;Jk<oZ'r<Q_2nPjI"GItEqa[$f5-I!pBoEq]mW>/b(5g'aOGk!QbkP!AUmN2/92
%@nIG+ZmTl^d]3H9[c&uenj":q:2)$ieL;(>,b)hiA<>d5R%YcE+"rIrJm"JEfq@S\;QFi%bk+LFEFu_<1p^lp5oJlf#%h("9M;up
%e!smjFB*7kkf`$/e+BfQ-hkAa9ff#,C6D1!j#gSnmaJO_)L<,TeTGN%B.\sck^PC-J=0C&l^lLh[*D>HOTZt?%X*;(pBmos`fm%7
%GJ%23J4f0Phnqk(6MY![E"LATT*dhN?=-2d7PPqL?UWr5A"!^tBdlR7"!=ko?anBf)=*&AAj?-ZrZ`N6IdCS8O.FM<dg>V1^^6#7
%(TS#fHZds40t*b4<#*KdO\j-,LU%:lAN0-1`T?+Y(jVW`N!L]LX3/3D1iN$DfqpcQ>d\m7rJ;.o&7od53jh>9i2b/)>^"WM8+9OQ
%g"+hRQO2f*.2VAfg9AH$)6Cl&rKs5SWsR(\ISRND3,I99/9hTr>`M,6D=%&X:247jUdU^/\u[$99W<\h=+dH2"6A>Ncc:k7=-J)*
%m\+p%qsp%>Lbqg"#nEM=iOUNDX7:ES[J?,&mDH5)YGLYZi-qVM.1GcZ\^+([B]+`>]^1EnqQEhM^Rs*+]pU(:<CPqpI"IT8aF!?"
%ct[\=HKV7`.i)'sf*(%/(:4NbWs[P(6(F'>VQ0rZlNo)Ur!4)(1cu\Wn]Y"M]F*@@Ab[JTD5ASaGuQki/,nWQ%@q@Z0WmgR(RIk-
%':ul(7n3@VNlg0m2qmYFL90cfA(+J;%*EAiZ$/LFK#_+FLT1"'cbiD0fTELQp?jpp,fn_ci?&!d%Q#KO=tL>`s/%-[h\$I0.FWA.
%9pNW$H;DfGgiV@AXS(pn\>BqhMoG#\Rso%\Ib++:;<YClfrhcD#O#=&itR'C7jSrZ#plPhYS;j5!&RV+:C$"0\i_>Mp.e<Ee3LIP
%q#F@Df.>Bf51=c6K)7Whl2`K?/Dj)r6CUFN*q>,;G_ssNc=pjB>P2DIIX7PDes@b&qggHdJKUJ";AF'-&2TD!`DpjsqCA=m8i2Mi
%7m:q9TSSRVU*.=8Cq#8/H.9!85N%7f?E=gn#h_+fW\JDWI<]A0i<sM%,nE7G1"GuTf99g#&'Y,4ZqS[=F=tcM@8uP..%;Xq(U"'X
%<=hI`Inm>)=3Dt>o@k%%bgHL;8tXOpgHi?aJD4K>bop1F*QDSoU$okWE-I)MGm,;b?Aa=V#5LdHlH`C^4!+%qS;uCYr=pVpE;UoN
%34rua;(g,;&6*Y7kWP_md8)ksb%/NKUr9l=LIo--JgQX><P.JG%&dWk8)XEEiO&I6-#U:SY<7*g+-+FWMBH0\_?CFpiPW\E71n>c
%"+j%K+A9@K_$;RO%3Nn"EeV>NjN)p,*;LT.m4l$eO(Ar%(=S^\g!'dtN+N2nS;aMFgp^='OA"P.(HJf4S_u&]`t3&DX@5G#k-/ZA
%Xf;,=R4*YuT*RK+@uBr54c9G3Ck-7l$-Mb^jF/j\+*9_3h_G*/JGYF&ciI3dS%f)K6fO%*+A_Z`,)t88("(7%;?kdi<'@?`,\Wp`
%S6@,SQj&q2LZ<+"P/2W_]P8r4"JH:\fEl@(%qm:NFfV8Z2Uk)KTht'T0o4DOT8R'L">T@u_28J^S0#!?]WK*WVB7?7[0G.R*7A+$
%;jtq&P'"_uNB-c&3";L=er<E"3p\n1fXaGdCQ%T%/2qEW_cL=)buO7A+L;+g!3sojEjVl.k"H=+I7=VA";K17[uuB?6u!W=W)_e8
%OSl-`GY]#]V[-l[k/6D=_MMC73a:3ir-#.@`[&Xn?_%6,Wholj"ZRg66W[BgF9apL=-u10)__5">qiak?Ft)g*l'P'#QlG[[H]Xa
%C,D,CU2=M`"NDi,'9kA;cE)?@aOBBQX$sn;APUsA@VDWBV)uqkC]<KRpG/a#SGq&V@tl#c'&'n:BIbQK"`scdF..uI-?`_df-fJ9
%It0_.%-;G\"*pm-DtG'mOX:XQ6><Y=ZQ5p]c%0R#32rqV-qC@6"aH;?e5R\X5SiKLIs=\)=].!M%ddG>5QEe]=1*42$e!#R!bd1a
%F"3k?\.0$\lXl5#3eOEq7Cf!8clhJl4W#NLL%Ol'5MX?Z`O*`*agD18/KpVP*_N]AQuiuJMUBr;FVp14iYd!/EG2r+2AsF5R@V4)
%ps4n::-!Qp.ZL]T4m%4GVGcoN0^:h#?us6i`9-Vk_:UeFG*,sMRmFu-=X,2GHb&[ldMbdm?8FO$aK,]2ET$0PYO-$Z"9.-uY#6#n
%i2t$m2m2J@_e)i@it-f[6RN+eMW9*=\`.J8aeqsjano2k0r:8?^j:4k)'*,fk1FG3[pm>)(q9,9M+3GBkPNJjlBfi1/i4)=nDC*d
%<ls*7qkJ5`^Q^m,W4R$QpXUNOV:@6Th&qTg*p-X$?.pgX]BuDk0gl2FNKm8&m^<`t.O?`:RMo?\IiU&XdE'5p_+(u_aVq&&[riUO
%LFI2a0^icF_#_(i.:W"0j[Fa!D2XfPLL.U_\FNR<mhF(^%bFraPA)@&l`m'B>O<4dNT8@79<&-*BiQSe<Ujr32etRQ1S2*,OQ_SG
%Q<q#o3mNJA`Q$60]f*';hIA=;5Xs&:$I<bj`K"?6_Z6WAH)?h\Zo"V*I#T&G[<0#N^46;]E;]h#TZf^]TU:`,Ef@r"^hpBj!-%1I
%&aH.Q9_e_`nj$6^qF0W'?@on$%3f#bGu?V@0_HDLA?jR3k77p0&N%!rCP[>mkckqK\gPtq;n_bJP[0'SVp4qU!m]7f"7]jLR/siE
%3M>E-FrJ*#*>bF/$sMcJ?C+,#3LH(u1;MLN00sXa,=f'"9#[Bk)JGr0V,f[0h(`n=`$?X"Et8n&C6fnrG;5hGA">]8F%fE;Z4c<d
%6%n&R;98^u&Z-F/depqG7aR<V?r(imq^.O^W3\D40l)$b;#=cLjE[h\DJ;dkhU]\(\UO4UjE`_XWSB/:ZF]&4686I6@+<'LP'ptM
%U;ENq^;U]'ED#_!%dPHUD%%(QC(L^\jeE%gS9GdH1*A%+NYLK3gY*K1X%6dC,)>AjeIW!W3>VEqAmUKZ;hO8ZX@%ukZ=e$9V/eOH
%MF`VcPc)HCTS:`5Y.U6QT=QlYG>K]/1>5a#r&PC3:^<Lm&7DeC7"Vq1'8@FYVCe:E#02X0:]ug]e!:Iab^B@'YS3Ee0"g2(!5DU^
%I1p:tnkU5k?+k#q<ujGhU&#U3UNuO='4%2rd].V,N-=<Aq;N'$?28Fr3jXoo5jLOpTdWJ1:m2\3`s-+kG$+JXI-LfqGGpO$;N04d
%-S'/C1p288T$0OH-gJ32N/At@L[b!?0#W/`_'F_PE^oq5MQfu#('-N+*E,,$esE%fOQ&GK,T%"o0N-^faC_H$`C$&-bM^6GF=tKh
%YfAm%W':]HrXGaucZ1BD.3A7@Jr5mPENsDV0'O7O$%5q0Cu(M>a)GqTog4M'*3rYu:1Up>)&5/bDk9>.p^ktbk<S[7QQn^=`"+O?
%PZ]!:pOMuDR'VB'FE1D'Wa5(dhldUH5C'eXG;)^\AP;h]kr!X1G@[#^&]I<e;4-(dR0,03'DoSb1.kfJ6BXGd%I#/s_qCan?q=ZY
%mXlVrQI^AD+6P0kO2@;D1n]5Y97+%c*urB0%hc/<gZO]OJK.&[Q8s7re45`KVSIZ[H^Ore=22'1W/bdFr+^&\#FV:6Hcs%[H?hQ-
%s/+;f:W>/eqO::.^;Tb\pYSX$FksdtD(OShJZlMrR4KE'LFMmMCu8\Uo9hfX#HOcjLP-LPs0J]qm:XP)\T@0d\.d3IGJD=mqqN1&
%.(rqm0nTgGlBkNGDGnGWR%rQ9?RuAL#$6JCC2*@b*AL=p+&_O)=YrQ6OR)h\ZtK;[Oi>c?[52gQN:c1"?9XQ9Gp4HgDEBPCWnR7D
%\'C;H$7\2@s(Q:)Yq9DUmnOCZTfA7a[7VAlbL@01(Sb3/O,^\%\I?u7_'KE8(o]T3Ltf'jmhQLR)<8.a$Q0i(M,[7Ice&J)/]P&N
%h>\";KI>0cPF1B5A3rMn5fpC\JZ)O_<W!Z].*PVU27*q9MFQ\o0p5ib!$+CWN,V>D_.<oOiQ8!Bq$Xl/J,LXiN3.0:)aop3'U1g%
%+%*E_]nHmr"Kt6c[R`R;"$Kr3^ldHMoj9.)n7E<8Rh2%t/\@Ruf3"r956kh:F/=b?"ud^FQ_a?9L1E;7OC>BH5J!dfim>J9W2AAb
%WO<+h73.h)FfXF%SFf4b#7`<2K,j1=7n^)OcQY?l;DoT=V_7`\eKS!CTiVk4@ed@Y7?GNpE#LQ#-<Ge^NDg'pN@(_`Cfn68jVcuL
%=nbBO4k)lR8KHV0a3l,$c5ce9*0XQ)4tKXCWq;cqMC2_D/IY2B9Hj_GY"/2&lS'2MLP=Ab-*aGXE)C4JUJk@ifKg`\lRD^<qbDu+
%kVQS:)b&Wc[+"-Z"G8=B`tuqb(>#o>/d%Qab4:@3M$qdU3ccc?+D$%PV6.3KH(T*`3)h$;;j9585@eIqr&N<tXqp/0iq/oSXBP$F
%']?mrY!<T%Ti*%+bg]oZ-G;CIXs[5RJM!j-s*eC(2JY(lTh8M;<EZY4UTYQtGeh7r8Ld&+S"djNbtbC=f1GnPT>%ob@S=Mb8-S=u
%!'Q!&i7F>-iq&:T423W.(9dg9o^6:MJ7&j"BlRr";%\WE*,oRkk&Jdq/W*N7P?'cqJnlP>'0g)LGpEiF1M9#6!Edt0Cs$^&NX-V,
%lW_'XoId25%"sjDNB5;l=]8dS"&\sFoau;MLdk3E8u`V)P=uqFaVhNu9NPm^D5oB%F&O?B@9q7*BM[3Y%j(8aT4pq6'Lrk7IHJ$k
%`F89rDilr%SJT>4",*nC!(L&_3Gjol9)Ni_f#Kh2-fhWZc8,sa`lI&H`D`,US.6s&EbGf+d47aiWbc=SO>DO$[BZs]/e7+$]q0n8
%+!mM(_4gh>05MtiL*\J,<Tq'tVf_'T<Ht--`:UrXm,;N5(^B)KM]fFLN))3c?gMu$oT6(KLMeG;2#udH76JFq*'V*o"3RKbL-[^t
%,I=[)n\p21S/8U#_q;\h<B_;M>f3OOi*,EqQoujD3t3]D#rSOSn2'u*grpLS`I>0qG2=J<h<mtqB!PEfD\nEJgePAIUl+U#6@F^c
%p6u"u`3MmG9ZqmBm5>8p.Mh,t6MPlMLbL--if[nd^N&$ubcbUcSEjd"+OH38gpJu</QI/F&gYLLfYpkic!#nSk-?mDE0$[U'6!2n
%r4@AtmKA:+S:%[8?>2cr6=IYVgCGaM;XsrE?M0MYH1m#:(+*@S^'</6Rj-\H(:5fZ/l^:uQn2LXNpCXX<c'Dk31A,=\hI:6>ECE'
%2J(c`gEkIG:1&k]PN]NsCt\I7Z@-A[:%>k$2[7$E-2?A3q(T2rk#?G2FNDerM9pq"E;IR[/HH2-9Vrh\R@BHIm7Kl$,G0lc5!ZhK
%0Dj!%-;T'B-2B,_.t*gR(u@_e.H9]g7-n.;gMs"m<*+_:IBb*>,Xi=cN\V,pehbjGBBoM,SuI+]1VN_-1\I5MRX181Gc(>]1Y$nY
%e%3)eqWOC!s.jFn#%dL3TR@['Pk,33Ae9TFQ'fCL9MBr\@n^$J?VI#Xl%oLgq*]sJK&,4`r1R51*#)<i6+bkPZ6[h,/I0(\+ofM%
%+A!r*nH4D0j6r6r`Aj@2]h#WQOGl4Dqp'pNK)nWoE[@%sSCt"L9iu4HS[f$37[$ehGGb/<X]nH[>WBN(C:1^C<!_=KIQQ'/dbe:8
%Ecd$m9,B.1rp/i*7@:eLl&u)Ih-Ke8IL"JhGBJB-RRkQ=*5.PV'RJd45GqB"<p*jID`cAqC-E4u0]rtZa&c'flgQUQfKQ=IfOtt7
%_A;_ZeFu[F^I>ZJUTJJ:1Pn:KaHLtu;21O(@N\c.$/UB_.q0>"RWR9/LcK5YITWmBH:2Q)<#@GPA^J1:6HkoJNcJFqmH]HcIe17f
%RV5#!0CA^V@CS"`o'O!s$?4%LY^PiL_EBNGgH&f0WGC+(;+XG0"0>FVk,5[E8I\[h,l&)0]]^366"qfK4FEud1*R7EMV0)7"mXE,
%\%ao'drZ,@DuSrVl'.(B,7([6_NW*VYp'G'O5HQ,e\?YEfm1[[r6,TYqKJQ3X#`4q!,HkOB.qC)b]JdX:JKhn1QZ81NE3^>_r(FJ
%V^G[59k7[O2UrRq:(-`drn,AArFYA%IW0gsA"Q9XHNdi#h.P(VrpJt@+o__gj.FOc\U;H&H^339P`\Oj,X\gEg#We`WCd1=1/_ha
%a@Hb+4K(kiD0S(^Ckac2Nl4^:-QGY.P'*3<pm]`7K@o\3o<'WE`h`ia,JHqk.Io\\4#^&kl5K0V3@9:j[r4]p?.iR#:9'>kZ0p_$
%%V)5\Z:IC#$#VFXp-uV#,*s$1/J[hbq5i['-5j=61R0SS'N]!g![QUYnqSW;C:U[N5UOR.J33-$op-:2(.%h0DimchIne]Q_F_5)
%,AAK+[NI>J;G(bJO[`PGU,4rh4QQbn2]?-m;[q_?:fV'=kYoT=T/o]oLk6b:dJTRfUS89+,G..N]EJaSoX$FHb=<-e%&>^.<"'iS
%fO2<q@-XtX"l2WmEc>\dc^5N4669.X(4'6?i&!4"9"hm+<"d5$ZHh3Y@%#3.kL_M[PZ"bV=Okf?+IA@EikC7i:lV:#gXYiI=fGAs
%i0XWWO/,aTl9!cR6rBb?i^32boq\JA`Kf?Z%`uX/V"OeFr#dlIDj`&HVj`cr9a\_9S^^V>j.[g8[U;9q(FTTX9a%:=?S/gBA)5NC
%!+#7L\VM$Z&:c1LnlG+mMVl>A4S%]_*7p8ujUP?*PqcjN/1rcd8Oah1Fd",9pc_>m$iNMC[?/S^L"R=kHoZ^Q2tg4?#5hNl>G&0r
%B1I2'^i`9]CqC$$kZ:f]$-=$HVggM,Ai1%6-D2`/2?^*15)9LNLT(V.2je'r9%ZLrPMU.n&5B1C-t37p%38rXi6BpD`KM;mFE(o4
%<!#LmEl?^&7lID`QN,s'\4L\.(@JBa]HFLYV>pk^hgJe>0&m-`:?l)s&(V16)c05K@Br73kL_2sq6uZn_#XWdQUTb_:m##Vn+K:,
%Im=^q]8<MDr.$&&Vm$#B7lWjekFErR]%m*bX(6,%G!jiB\@?,L&6YCd,fQUsT]AI85.C9PK77hPoDRsY[X68#+d7lK0]/N\WrRE!
%>O;`X.==iIbNS=[Zm9d3[uUX&oCVtTs*g!/PI"^,9aWl6GFqA9_e(jWErm#Gb)9hnSf-*8Z=Kt'%IJ>G,(*U=_Wk;0m]<U,a("jf
%Vl"2WTT]l>4\A@GE`TJ4?]^e61*`6J_7@hkAb;1n@j?lg9(58M[@i\>\f>$ea](\0Y9Dmph0-!;am\07YZ6H=4AIt\O-4lK'V*NW
%Un;75Jl/WTp`m^/0YmY\0WF#f-Rk>dK<.<)fG0+4aIY/]7iW]fds<.s?8roJ(F_OdBW+E/$jnBknKF"-8>d*7,aeueY1g+%r,<^2
%QI\%?E:08llYu:GL21%HZ(1aV7`7WZWP*B=i)C6PDcRSi=R0^GOE6kQ-!H1ljI>j5I8g$d^8ZM,2jOE_2q:FU1`h(o3#08Vh_`50
%omQ"nIX-$1j`>k!I--p@UMhVXI8fr5hmC3se]<Q??`C-;Le53B>]>%gGO.^f"nJ@$:>HebXhrqI$i8B.e<1;K,b8\XHC#HkKZ"q=
%"tL!)pn>Q>)E*0(s5L:6i].jMmo(8E*/u.XOsJl4/?Ke`qof9mG($a_TKGSF?pMsLs$(1CTeR8+Vg2q&@Y'-hkW8N#l#@e;k:hIW
%cqE0o(=48`i4BA$<:p.j`jrE/&2)Mt$s&bV$6p:8GN%TWrOdLo:9B0t0LmXc'`iob_a[4U)Q4[^mS]%/FPhmQ2/E;^XM[c[Xu.fM
%KL:,I[@S);e1>b?<k7JpZhH(8QK6&ok.H9E%lq@S"Qu6o`uPB2UD?\dCn+Ab:^,X(hu&cXh<B:Tb`e*d,G"6Q85PP9Dg0Y)1>64i
%"nfjXVs(n`D$$[TMf&8l5q*5aj?B=g99FVkj;5*Am<WsrTj89Q5.f%1O-*aZ*ht#iR#W*R5Kk;qme^LZ::n]MNo2c-af]eBc1;i7
%9CEH=Q_FUO.,`WgC/>sr2kQRWUN>;fNKQ,NmM\Z-f0>>C%st:kU=>4>0]qTg)T"ILk.YQb.DOMk$XZ9X)iWW,k,8[I<S,[;BD:NL
%>Q5$p'jgWN?_InV194Qc/M:[1-H"o&?iLR*Ss`#U_\Z6_("5.K0S@UKjlLhRfM>K]a`fCjJ2P'p1,IKOUsl(0L?!eBR_ia_qI4NS
%=7]>rPK+U@r8)psT?<^(^KlIDQn?M\-0P.ZenW#E=FEdRCGk<LYcb>:$Hm$V8St_96Vq$E8U2B"Wm_'[X!]41-VGuqDHs,BS-)gJ
%KM+<^cZ(1ckb$+9dj2,rB)-A,4#K@28mW1b(&;Ih\7<Y8Y>uM\7;tbj0h#=n=rM[l0GFqr.c;H-2lu_*(:U)3H0(WZ2+SuYK`RIs
%h"f:@W$IW2:B;,1HV,CMY6f#4-C\[W>;l85#OQsnPPnk,"ET>nQobq+IG'c.LBm$=Tnh_4.!Gt2Q8]UC&:U@9NHdIf8sm6<6+c@*
%N!U",/u_T*U(>N?B9_*r?`E/?QpbYVCu,&Qq)9o,V:.gmPQH%me\o)`VPB#J2j*rJm#@>gK8IKOC(ml*%0mo`Uf7fB9!n.dI<S#F
%1@M&&=WXfk3?qZ^Lj=BlSfQUhUu2KJ"L@ZpOn$N!CJLm&WqrqlPVaj%q3*PB0KS=bMQeCPF'j@<Ro%ee*3?H;?&2c?6nie5?k]Z.
%]U>n2UtIH2hsXIQNW&#!hnW<aX5t(@>F+KtZf8(>9DWNd,Mp*[h,WJWfgXbd\!K/R$^kDlr't7aVJI<#bMrWP`fRqUKL"s=_Uqdj
%M7>_%5n60hKh_2O=-95Ge5PWN3@r_Ir&L"i7Z4W;,'41`6*/Z,7KTq4!Q:1^Rm\bHd%q<qV)SKuTu2VRQR@th>q:AS+'WK_\uUrl
%HPg^T2r#]tNq$P+FJ6RW;ujpa$'gj>FhM*':l9nqDm,J>g#O0*\DCG,R'e)$8>!rbgI*a1^NM>gZME:tMJpm#f;NFLH!"$=JM'Ak
%UO2)gi2$amCH5[HZb,0(l+:GgfTo1UBGMpd=db9q2IQq;MXFU,]&@R,qTpUpYk2Nea\@oti`n-"0p%'4Js*hM8QPG*"CD"uKfc#g
%oKgL?#^RNF1Z@C/C^,F&9k?^i.kF:lMUdbb;&cMmmR_p.)X`s":])!Z$3c0q'Or+n:/-L1m7QdmVnWUeQ1XO=g/R8M\VcP!P&r&`
%dR^b_4&XO1Og!2Q9?kKAq67eQ,q<2dfUJR&7B;I0<d+PJ"fH7Hl33\8_%BYZ"H7'q2hPL2=.'s(B8Z0%R:\iN`F1l9o^qMU6&%_J
%AF#?mG*#dDZ(,:YVL;UUFd:I1*C^NK=HJZ5<5+J2:`oHf!qED8l4>,P===FM@st1s*NHW;f6D@$CI<,?98_]q*_91"0s'$/.%c%l
%J_G!+[i,8d`"F)N0G2`3njp0o1BZ[SFnQ4o]<IDsCCfp%Qk9JIA_<ZE!LEF1d'f^::hQXjDL-L$9?M*8@6Rs>J`1Q)B@/[Ra)%fp
%>+7:m%F^eg]4#Y?h)J#n82`]/:dm'RR(`P74cAMp3ZPbt*,B"_ILuj_^d6i55HKGq#9ti)ZO>,b?2?tu9?nhc':O;<mM[c4qH/QY
%7hHL]p3Ue\:kt^^8.UU1i^]6\:UqodZ9+86Tl<jlY;i]Q-\;Fn/=C75kX2`XLiW18me%^%D5iqE5FnUA7geB$H^L*`E$b9"r[?=g
%BMPehP10*SUerRTZVbn7'-iN;!/TRgA^;J<8m6tE2YQ0)#]2kpYmD]sQA8Y&!goE%6-rYQRY7:\O:Eog+b*dF@-YJSA1;RK6<8`j
%XcV<<.&*C;j$d4g[j/^f+i`;NKI9r'A,$J2Gk'F9MGF1>i7&q7=>%QhD)pr6T<!7q!6#3N6oKWnGsr\9"`LsS(_nmtP\?HdLQ^te
%&@BP\<iL+[2VT2l6k:JK<rrdV=JU0[K(b>W2m/K;Zc6Qd,^Ao121Mhi'&k3h=Yr%[MG?d9&]&HBUE17,6X-J`M_o0LPSI;n]\_8k
%E1\"4[On-8b#K/\H^WnN-#1.qmlgYYP7ePWGco/1oO&U\O`K6JdeC?f83<5pq[6^;YM]Aqg,bIGG0#*BrBG.*2(Xf<=L'<!&&iOA
%WHS2c(ERb$E\9jf2q[0[[;.hCO=nXfX/e0!SF\Jse@"&C2N`Dd*fO#'4#-YrgWSqWhnSE=cXnqWdp0DjJ%b0YT0K\orIVRR2J#gi
%\KNaNG.HG)A5p'5<0aR2ikQE"3d&h_:W>/Gjn$<]e>0OfDA2hi5F\:]V%qVZ0TV7/Y%$RE&$bBL7A%g-n-320T%uA5pY=XJ3t6XY
%`l\o-p^,NsB[.f@8R]cl`YqB&d[$-&\W\]gP44X#jNS)MB@(UkZO:C"o[[pkTsX1T5:*?NDl,<(Oq`nnq#)Nb#E@KcomRHZ%:8aE
%`tGp/i([P+G:VtOY+7el'QAM3'7"*E?L%!7G*lW>$?@8IEZfL7a8L=Nb49X*=G,2LEWfHp#nFk2?D9C58>?d"0Bp(XTa4K(TBj?;
%Ggc1.S&ego"6S%b0%D5]hkf,V*:)3@6@r.b$ohIt6rNO-ng3rPo.HV!^D([:A.s6(hHoL;#DVU*=[<"FQlK[X&tq6N]G<W&\4`*J
%ASKkVQms?r-BaG$.&\E.r])BUBlT?r3&tq;f=M"[&6`Jp5B7F:2/i3C#O2+k.Ti24C&a!1^$`"Bd@8,T=3E6pfY*4/kF3[H8"MU3
%p/6qncKe#<7ndQ"/B"E;V-qpAA/W97G,iG%/3%R*BNXPO+i$4/N@p3`[B03J6qQDuK,@0?@n781/jt_D%>aO2iem$IWtR;?@#O3%
%o\H;Y?Uh%@dWm/"MXD!5Orb2MK9`<EBioKmSaItR&<*BjGZ#_LWhV3UZ@XWg[_!G5\RdGdp%D:As5qOcBV8t0r=n=A23h5*gd.e!
%fd[&j?c7sM_B:k_`$JV*LdXXsBFM0+auCPGWCH^M7)X$Q;`%Y'd9"ZL26pgl1Q5-#0/P`p\(]b]^O,'TR9&7n(@.^#6HCc/cDnu^
%Wg;h\2<Q:-CN\e+:8cU$Cg/c]D)"Hd-`GRTlYZuFK+'>aD'YWMo/2;@)Z1^]a*Frhqf$^^Ks&2IAHOnb"Ee8,6PPIf#kbW:?/kaY
%_l#'M]1K&s='r^C)K<B<@i&-hVnS8,5>%-LA@@PhS+G1!I;_=h^2NC?#L?aa9(4JrB^4u=p2!]ao4LGggsp_7>,MIaOZ1MfQ"'Fl
%`Qfd"_iZ#T9/4Z<DSnf3<XlOS]8=h!5>0lUV:P&$,>0muCGs.L/`/C3p$hnPXp4pGPJ5m[C=1R)hITer3n8S@>1\<G=A5'YT-d+%
%8+goZL%)$I*Cg")?4N_KDsG#mcF,r1h]J]Gp$Ets6!J+_oklA=e9glXZtOV?fJfDpp%D:A^C%CIcOUO/%Z3_Tr'L7_!ci@<#7fCd
%m,'+;^I^N'K!#c6Hc'X`p4iTL]a.+>`O+KU!H+\W2_i:PZcuE<77:Hrr`j699W1g.P>+c4-t=T@;OTrOR0A50FPq0B3qN3l0(K52
%NMi!N;%3GQQUX$&5A_Jc0L\NDCX!L*WJbE<QhXkGZ^4=tCL_eU-M&"d^"2?fFrkW'2rmCqRDY4s`aq>7D+(8*AcQge!V)k"Sga^p
%?,!sMKOuY0Yq1eZ<B%_`\"r^DShd,VVX60<er<SgCl`lC%YKjN<PWp^Q`="VBlZ-ee:(`Y%gC1^1b%@bAm*+S9#gZe'$M(&VgsFU
%H9-!nfB3jq/RgKb;-[!'*5j/NC0j,c\>o`9Z+_uf]J4hM%rXSih\G))gHIUCj>&lp?XAc@F2[iXIkM1`.M1G6CJIV"U/U`?J`]qK
%5@cl)6&0E??R1X^Q$4.N\l`L$kE>i19=$]((mSS7P"M_H&A)Kc\ERi+T]0<h-Dq+q#X2%LJkIT$<oI-J56o4".,.5r_'@-.=O#fY
%*2(@2`aClE^(8IFR2;Uk[WU732%dJ$N?#M,b4.J\Ra9As'Mmuj>$#=d0(GHl`32\C^+sh#iN[oZ=*$R?<oppWrT5^r)g8*J@h/R/
%D5.5)^Ls]KP3V0Pc(5A=?@f[^]6KFiX'"I4nj09roq#%j&m7^+j>_W1'r)W#<u<6K0qGGo+Mh4.SH#B)G*FcVjZkb\G=kd=7@W;F
%bTtsD(r7V3MSq-0O-5TpQ>DQ.U$UT6XIWlMOE>q^N^d7*lDlq;?Yf3UA*5dPe:(X6Hnq:OVZWh]*%fdao]#dp3p7WFQL4VI`W>r$
%TRAdeqW#u/RfEAm;pTg@Dbosj'MuRNm"jY.qeFQlWb*a+DKZZ_K':iad?AbEf^^B[A'5-[:['pK;I,!/&l0Ak]sl>O-qanOTC#c2
%8cj(@Os./I27'B;pau_@:+.Xf(Kult=Hes?,\^2&4LFrG[.5PiF_LH7LXuA`[8N%+AKMdjWggK;B]8Yb#-kSk-Xtr.?X=5iDj\$"
%'`/2)Nk5[0(g'VA*2!C('Jfqe^)2%Xqb7E==gboEm1$7qgDdkbJm7@qd>jimEA:\BLnn%/#,d;hR1CE,'Sa\n@5fcI\F?M/Pk:.'
%q?I*(/ZXoE-)LQbi!"=l.5`>l0sZu=[dX.io'7CPcek^8).Wt@*ODe^?[!qncJ@(DTN:S:]Rj55RrY+Xqlu\5.]!p*'?FS+aA.K2
%eHBR!Uo.MQUYj,hm(5Y8`m9lj<upUX%/&Oj9^R+B7@]j9dpO5)OA/AP1q\EIjd]kE:^1IS$pfW6hqDsGD%Ln']8Zbp8H9Aa$MK"!
%?.>q<UX)iOo.K%_s'R\sD)Z&YDl>Q7Er)l,AGZ+-.k-++Sp-($s'_8/hMaFQ'TSpD/h'!k4[uG%?];nsne-C[G!B!l86$!0SXo`U
%,[Hkq6qc!:W<K-Y4fCCZM:I6Y2sF65-<dDr6SC$*$\"mYdVV%N@YudFhiJ&4)Jf%/o^lWpdC7NrIss\$LX1lgi2\<5fS5fY$"R*o
%n_g?X"E_G)5P\chgMl=(is7+2UJJ)lIT=]ipH_;IqQY32eSE_mVINR_dMNN%#cr>jp[`/b[bW#bN&pY3TE"N_W"6Aq:]Hd(>3AUS
%3GX.uM^2_7a,p>ZR?++GTI$IEFY!p."(ONdCUY/69(M<If=Ous_aA4ki5Q=bI>Dma4loE1fhNGQ[G)b``(aZih'V^]qJV^"5n*YX
%HCZf-`pLAjqJ:"T%9sE]h,pk-mdKmj7Xedg?6=\+QQtn#:rmn^2V?`!r9.SXfFm!TH9HN<l$V;6o'bEM.`V-&G(kekT\K`lM=(^6
%+1uaA?ME74^J(>Sn&QXLqC&J-nSRXs<t/DrX^b"G=6T>8WMf?12j(h$=""bh+h(aN<&]qb\UA[YmKu*!gq'aspY=Z@9VEI:q!k"Q
%I,&Q2>B?c&,7//Of+Qp4Gs-DPl$V;]`+SQ("G;m>lht\YTD%"n0%!sqkCZtlf'AoRqc@K1.%/1$d^t`iR?TUP$KHtbg8eSYkbcYm
%_54$pFdpIeHdcUNO,35lYG:fuUt^*!FOTFGi7<n\]''(lAI=FV'n=SC,hIP4do.r(5d"u&>,&VmY6Ri\SZgd9p=[&=Ka*b8kp].>
%,3/Q5?$'02q;AAjp:@0YI]PHR48183]hR603P.l$G5?NOAmgeHE+XeMUXE#^M`FN;i#kO:G]o;IHf&1Zm:/lRj]D8+PGg!OFV.mi
%UK"ft#?95%V'!^&$><5Y&qscLOY6KHp1?%$Zg0omi>:[V^MXkP]DgP2jVfo@\*J0E9%SOhY)>KuW3$8q%pn'O?h`(-O.CpDc[3<2
%begQEZ`nH^qt;T--[E/A3N_TCp$D\P[/BBsRSTt#Xr>L[dX![LBG59`J2Z$3]D'9KEA?drZp2/o\&J7:Z%(B5Mck@rm)!Q*hP@U4
%0PSG=+K>B(jD!CNY13U*gOhi\^V+EHSEok]Y'%1dCTYVDUYE(;gNGc([JtX-;b-l\MtVGiI=7W6kG!Afqfp]EZ*lOeE`2q,YM$[*
%+8?l.1+Y0Uf\NM8&$R#TXiu%?.G,J:^\"f/N%eKG$77E\A\VIknaAWBbWQ\EGE@'.5p#_5ML#(14Jn'3R"jD;--=rXj[1nsDk*6T
%Os2Q!2Dfk$!)FI?H>U[FTSsW,2l#D&A4k]bFR?]EW'=(#r%lOS\^cT$;<th,_hA%^>cHfBft;l^8VN"$pk`cZ"=!+c).LG\!XIj3
%+cmhR1Jt:eeJdH.(6_pEWXI,iC<;Y,#*:cLOmJ/D-19j,L9;[Q_QD9%Ni[40;R#HV3L[bGf/]:JV0*'1Oi6VsPLD4Af8.>"ch7j&
%OKNDp)[^N(Cf+L:1$?nBkJcD-KLO2E&iI2E8IdHY\1n-cJoS7#Z7l\s'58)$]ZRCnCJ_=_=?2HH6H%K>lJq#ao<BTtB8q%#-Q8(k
%<;EdGcfA4>#?PZqo;gY(G0-G/V[3%d]6[JJA$PRiYWLmt%`1?OSZlb,T6Mid7Q5rC3"E\G&o98jK('_WI_iB&=<qlFdc*8l\mip3
%p8CGL`cEF5Yt3pmnj>RJn'@'GjX243_M1^l<Ik]f8qL"i.5dfNfin@P+5ijiKf'>"'rRJUV]$:`JZ+.BTS4U!g;t0EjhiLL!X,-]
%L/UN]fhH3a:ms<I_G"sP4D:OPW(;E^rA7^6XKIU]'9]q[G*o>4A.)9:\n&:jW:CqFQDnC:Vt"uM]CQRBZGehuOR)"+$,oBikcks:
%!A],t(3^W-TF9dX.RNL,!NoB0&!:]fO0sl68L"WmSpCEk$/jpt+sCY$O[T;pnXtJ`#aYjr]P)[$6shNP7PkU*=;G(Ued'jAY`qD&
%*K,Cu=Lg$LH\d=ZBa"ci:ai:7,;uJgNYMJJ?m;ltm%V]F&e#8&3bY&_lnZ8BJm!6f?IQM9h2@8Z$j_;4/]P*O/9?%(nC%N:p/.+m
%852+/k9^f)$gsof:_F)>S-]poV&@45h.oph0iDr5E2;<bqT-PM?H[Aq<1S*gkST:'$T\P+S",6\AkY,(5fu8>6^G;Skr)pQJ"!3J
%"XVC>_,=)bRaDdG"9]&JU6:d6Lo;ZH>0@BsK![?27q"Iq*n2A(AH>+@9hhm)6+_/b'npO`/YPdrbWkI1`NMce7C:XiDL/Vi$i%WR
%gat+1N"_)pLT!3LqW@jVoM=@f%R^.@P9Xl6jq@U&QF13cXnrXbe?oZ]['%9%%]P$J6@Am!5iC2!#P"F0"&CpP=i!U#:!=1SC4iYl
%,j-mE>.qr;4"rb=>114mCRMT=JK9Zt]IWrj9.raVa)3Gi#AleK)0D8\K("eF(1?$8Z)4JK@b?E#nPedsICBFbb$\c>%&"Ilg?(mL
%_0ke=c0s\W:NOu5$hGAPk,[f9f7$;dF@YFtp\eZbYWe9cYA0DtRUUKG-LORPpK["ZFUF#i!"3IRm/nkZW9RlmWHM(4j?Y@C1f^2L
%k"s<3+67PLL\_SYU^g&&#NYR2+n4eK>#.A)k1];.3+()t^$+khcfJ@hOfb/MG[cg;.&(&A`'Y#I3&.el.Y5SV@/7@\3RFT&3gKCQ
%MlmQ>*)0B`+dF)&d?7W#h-=0a]dd#(0k>--Q`5g/1b:58h><!LfMW<+1[,0C3I)U],s00on,:^nc@,GQ>_NQJJ"jUC_^rJfSuoer
%%ZIUXNf+7X]\CX8==K&dioWe,`fcsK;LAg?necdfcQ^J?"R!b!a8pk`a%Z&SN<n3g+V$:)ZLOT,i<BV;[cU2bcql0tnsCj_Q+<-I
%rQU=k)@SK*WUqA0RLu<H*@T&CkfKJWBQ>kpS]hTp?e-+Djda4`+X:/S'>"ct@761FQldWXmq+Imm#P"[9?UA/0n`6+$kS'1;KcCX
%hR+35*hYDQO!F-PG!T$WPXIOd=$,fnG0Z865L8!m'j^%Rp(9495.Ah"Ji>YGX8^-:0Pcm8`$154P%BjBnk?L][nW37l=Vn(o\BJT
%>lG*_QR'L)<t;n+Lk`]M`JYPFGJ_]X9,RW4geLFb;+XDkS%Xb*_r)>]K7&2ord6)\)nrHOLFqORc\ZSPY^UnfquO:Z:E'Iei@BE,
%d<7`^?_oKWNe&07&K.+![j_t:e)kmR.>FP2]BcS%8q1T+R[).l((MOKQ:&3QDtA"&D.ZH-o!52jTSgPLFMB7,1PAUa#Fm7oKZCk)
%8sID&ZOZrqJU>qjJ"6u87D$=GZtl^,I;i+C4NmbH_Tfe[<Zj'Xk(T:6[N,6n\`'X4bA?(tLJuWA&RXSdLss\2?q'2FM4<N*J=_X%
%QRcsr@+e6b^:5V(pC3TF/fa!FCR?mf&^8cpPf=Tp]l!nP_>JZBN_B*018&X.I<2QIls]653K<`@AOsulVeUfu"Y#p>:?%cp(WO./
%;[0[Ef\LSOVqSnb>7TAK)WHBRXsjhuGIJPWS6`Ubdk*MN100F)>>Ct8EbM%^3J]u^#sI*bfK7W"SBWVjcX@f1GKW.YmpGFI'D#4M
%\77A+P*].7g'6np*VIT+fAtsA%pleI:27/tPsa/hl?R^;7,9@@q<jLM:r-&g:Tkc1nQ(CY]Q.I';c%l9b)mZEmA@MNEoN>88iYXI
%@O4&Vh/]M3<XmZ$b<c0\C>8]-r*dFIh(K"WL@rI^EYc^!Jf_Q%EfeYh_7gl.F'TfPVR&C+.[Ul:G1p2B;hdnk]0#2_(Ud1!k8[o#
%oXh`u<5@4O3JT9fS@4ZNqsL,HqbB2UN:*C/12Q%5;I+IK2RmJST/fj(S21DE@*Y+<427AGip::CW_5Z,]8U%__R;Iseuj.D/G!_H
%]@'S75]sDW<?;<GgrL!10CFSCD?_bJ^o6C5n]J<Pb&6`Yoa?uHZ?TNnLNrkXMjKUHQ?RtJTeGZXi9d6hCqIO,L,<(]0R*oZ*+BmK
%%:3:-H!LrH_97TE>JA9\#@2/(iPAO7<g<4<W=q)Rb'>d=h:#EoYB88WD\1Wi@/4+m,BM@cg1d.9jelSn3\8^)q<=Oi$g2,p/I`Jm
%ghqR%Q?Ggp_,&+([>s'=f3hhh]:2P8<[Bu?l(G\2^\W!"JKGSC2dC73Qb22]]'6S#07VdJdQt:r_q;YE&Cqepc0;&<j8<qWSmFHQ
%K<hpn3U&qtV,64:UgphPS`K47_p`SWDjQZjZ*E)3F<gr'o-%C']#L/2D>NnPJTeYQ,kB;Fp%5G0d(MP'`>"U/m[jS#\+N8k>X-MQ
%aR[Z^SGPA$bWdHfH^uLqIr6a@QZW&dMCaZ/LAB"W#89BVq8#;IBU8HYQ[_cF(%]B.T6okX^T2]Vm,no)3Re^BPBo:Q3ZM\@mbTs9
%ii(nR4,4+Rqoq3X;b'N"Q[;JC4GO19g^m+fg"^X0WhLS.m[qs*'msCI#9D0!L0A[[kVu&3nd/(s*W7io@e7pNe>iIhq<,]5DO]5J
%c[FOV&^f1oT/.aP;0E28D?atAnoK-@F@WA`jP<60r^7^;MbY(dHrsSDjeJ;7"?>3hD,.Yk4(-5AQ^:IE8f&-)m\Z1ZP/R"YI_'80
%9O),X7oQPL[ge^=SAr`NpTLr2ir<BQ(YG)>;NDf@E95U2i*6aR'?8:*-cu1Kn!'r_r8=cRCWY;>r,l8lcJ,`ellJ*Js6ZudGCAR;
%Ijt+[mX%bM72"n=O1HL6MH#=$>%OcG'o_U)c0Ju&JA!$E9Vdl*e[O.ZH1e<.VF:E8ZRl['2<Ml4Q&h%1&MeQl__;uF%rbg]=G>5q
%'l)dtX(Ftno:Cb-bc66WK&Yg_6rFdSWBWp^^J\_7dhCl[`#+S^jm(4OB''ONKS6d=U$[e-#G9r_,1<?`h-7<g,)+.+j:I2^:2oXk
%?l.pF+@mu5k<hS<iotW,"X$\sD8&gI_!Ah\SOH3h0Y'LX3P^YN`P,N>m:XArVNI4YH%TRqN&1EO9_:g"!b%jceMulqU.`.#+J&pj
%.p[rU8q><";F.EOA?+rT:;Tk&l_gK3RDNA<a85!CgjAGtasMfuTnoEDLKa2I-Xp)1$/0s86;KVrBd-D:e;&YU'F>P)0mi*ub'Z3#
%Xf<HM?QVTB$CccGOdjBsBIqbfJm]1]aaDnEASVs%&Zn#F)).kT'O7gD(>KJrkitR"aJh5h]cEh>DOXg?-Bp,NE7:C'.TO;kD/'hk
%Mm6rfj.RiQM#4>`H^r482sUFnHP:\'\icTWrb>&cU9_K^H"9dIlq2/im<VZNY/-AC&,3SF/KZT7*[Z]Qj.p2/1V8^k6;'Y?8og$%
%U'9BgHra`rVULp\Z9OW&E8s,D#9)#8(Mi"e:7Y!(_TBr!o2=(CFLZV9*(kh+'qH4d(VVtg0?Hs5K(^+f=_k2A[_Xnl-Ci0\o.N-'
%I!6L1`Gk1O?Z84_@S<@Z48C1dqg$PI,gW*7PI]l:m2/=JOKbp4&NHc-<m`5Tk_,t+c+b4q"^F;A=d<QZ,AeXNB'l%_f7Os"hV@kW
%?)%;0S!4ASo'6^<mcnZq$6GC5Yin_Z\"l_C$`Mq?r#q6Q``,>ccKe#<&8k3?a/\Rrr_pU3Rd[?Z:/KfE,S.mGAJ-:4pp>ZKe3RSm
%1^Y6C@F[@^Q406JjRjSf1:s2,nJE3b$l`^n<FE\]^`1s3CHNDgD:QQGP0_2,$jTB*c)+?X>?:^RAob2Y@sU"QJ)6If&_:,i]5k0o
%@,I6%%/\(^fql,1=7+0u=]W"[3EIBQ4RC7dQM.O9qu3hgb7@gsG>7m?XG=Y6Cc]EU_os056E!cj-:%h*=^K["3&O/9d@;s`N0+b'
%d?\]$V7te'X#U?=W9CTi(Dh3?NbFjnjS3Pod]TOEVBd]6Eo[O5M8dk]0_!mcd8WNAH?9PPIqVK$,]b)PWWMfRYoc,QpUfTX(1DBf
%l%b7F;G5$86Xoc#%'iMm)U"^M@KiRcd9AA%g0bRBY/YUed[l+MdeP!t2c:3^&Ld01NXL\Ibj2m4$CGh;LqF-pJ8IPilb:sVdRKiD
%BtB.i-fWUhlbR<r15B,cW:N960=q%cqW,X;EP/5B:Y:3HO<TR9!1sHJG[eSQD;35**h@)(X8?F-Y3MJ>.L)*i-l9%V;8mlb.CiKX
%e!;3BIj??87$!3c9<,9\:%Y[0)&u=El!AbnPi:``8;h:51*/feM*?-/D9sC+Z<&NoC4]2$P>CdPQOrQcp#0`VEKj6PqYHo:O[d#+
%q*C?91!I/nP"?pVL.dlW[NL35f-Sm$BXX<]I7EBEm^becCOXVV;Bm2DFid5fC\X`!XQH3LaKA7#ZrG%aWO!.<?#>lgT=auolMRPU
%F1tBYW^72Np:=iL^Dh6*ke[cSpFd(@3'7d8/LuueKa[M<>meA%Vf?jfa!n$3?a*L34&K9/XT54K?(DMCSnqWQq79;]hplWu.2e^I
%rj9EmOHS:8hfY&NnnR+Yi73h[]'''AXR6$m#0hPhmg7k8lWr):YT9H`NFch%U$AS,d8MrcH7=XH\37o-52>#'8b>aWV$eOBmdb(A
%Qe5^7+*E^HG.$acE:r.:fg@\_pe(2u;nS=od-JR`hkY$_@QeK+4XVl%Jm@!<)*Vo`>3c&P:m>NUS8[.MgC2u8CJ&KJ>8)5XmP_td
%p9!Md:9:ofp\(e^i:Djme^(]RIZrKmm)Q]-T6"(=c7M.PEfMdD.U3KZZcm6ho6!">3R'MIR[W!sf(@e4]?TrLJa:.S)s_XmrV]P%
%s#&*]s)I&"KMVW3"]_6>(+er;Stak+O'ukFAQl^g-]O%/2[U^1'!86::5]&FZtpm_#(O$W?>f(.V]tunm_g7g^(WqJB31V+L\<8V
%6itVYilR".*N3En<Ih"-:XL&\Ci@Xo,*ZgXYtNnK3u$c'cgfl7Fk_NZH]HY(0nlI+eoZ].V<%/_@db[^kt&B5>efF,dDtVn*q?s'
%ESegLU0>#Qk*+$]lsU)b1>MM`Yq'nO'W*g@BNH:@b=+V8E$'jOjAjrr]t7pb>2(dXh7J[<^mlkb;M/6:8f_EJD"1Ooqo4n9.-Z0L
%agd2_nB/&VcKDtp$@TUi3]`_g)Y;Weh/Q\$Yk=7W^ii^O>sE6e(#l>M%Hi.cBT&U4D=#S'nR??^f8-Sa=uID6fkbPOD=aZ;SlW`6
%"8K0VGK&R_)1;Z?_W[JN+pNT@i&&Qc5W22cbr[R@&/UKC<UGR`S7^gnii=SbQRadJHX%<,Gl6m[U^gsN!U'(+5l<)bi;1A=g7#<=
%=-G'^([C_FYG_ALG9d(jTW`FBD#0]dWld&F2$?U0dk,.Uh*bJ^2X++)dp7(I&tjPZj9H]LS6!$]kZB]'bCn?J]84#HreX@F[WosW
%-!cKWB.ih$le8*@5$#Z&j5WnH^YmoF+9+Hab5rZaP4OE#&9&pp>gN]Q,Ps9cs$1QE4"cT[\<KeD(/n3s6F%7[3&D>`]-pGb?:N[9
%_5=)78/p59%jt]=BZC_5_tHq%3H0FC;)g,N18of4`5(C=S)hh;h`;PCT;2Ot+^%3A3hY_)0a``joKk<)FJI*jiNjV;#Dp(\^s,@?
%?'TsUoO&DP#Eu&a0`$Pb5DM\YLr(-PIc@@M%1)n1]HECi-FH6Z(FmUGHP!;^r,E:Q445a56@jd]$m%rBNFWFm9i\Ot8[5!$Me*)U
%N7#\W9l8co7dY"JoaD3_,7kQ.dC\5GH<'agAAch@L6"cbSh:W.,]tYnaHAm`"/a05Z=mg9gF$:tG&NjC"\MfTEVF+2Km788S_r'f
%>@TSUCA%9]le/%&5$%",fjt(6TU;$j%afS?d=%.:@#:.hnK7`a=(O@T3GLA1b7B90k!:H=Mn9uCAK!"0:c:smFC@&Y/I)9,8jjs>
%?R2l['4m(cZYl:!lc$n/)K5"mRN(N_\!,/h^\_FEfA8rJ""V%5!.]AS[pmRY%ZH*N0"NOp+@MVc%@KmZGY4uLoT8&'f0?^)hub6c
%L$g0f@-Z0pI:1lc[5Bn1RO.@/)BM.n0_AZh7'A/>=8(0oAr)ungTt&WAH'9Um+o^^n%Ze_p_>XX^Xk&Zn:ZgNhSoNXM37cnbPj6h
%qT6,AqHKhf1<JqI\=OqQ;-oBFO%h%BYeKp-XY&ffr$!U#J$`$:e8G6S9nll!Z9)[S.P)tjeY;%#.`i%#CqZMe9A#m173=$HmA:UY
%&Uo_q3_]L&,obX8:Z)0Ob8P*P>9eX:+hKD;&'iKulA=oHbm[@Vkb8n1PEpa-h$SeBMafkRpJ_XAY*MVZ&:,Lj_rl[%pQUd6f1e%N
%FBbg513B-mo>,M5TC0^ZRa,G`c+RT:QbplBa\s%G[4tgj^MW8L1k*p?S%Zt(he3alleOoP?#3OThHi,,Y:rWuJZXf7)b+4>h4KS.
%-<8Dg#m`E#Pmi/;1t#>>J1]U!Q?i(X:as$+Y5jjiErDM19Y,WS240SM2<O:;'E?7aQ@B:;qCb0@0Q4ao=!5&rJ_AE+Ir5`bHV0k&
%Ae6H0.d%3*+EmrrWjXGnT.I<o.Msip\\rn0^-<"KEosfMN!CdW6;[n)M,HJ+6'==-WWI'fo-4134_NXG,$oFPa?WZ5MtV>8#=8$1
%(.I+CH<\_W,dp<3"$X]m:.ncL@WT4J5S5mGrB$/W'sObD.;(HrTMVoIg%&bjrUI/O7(>UZJqkLl,t"$p#&X,ee@AiF]^b1j"ZfpW
%o,5>S%AFG#TccJpUeuV!Bc"2YMTCoP'9F+8D-5k\VlKS@Q.s)]C$PpP%Z3MEKY"n(J/UliFGmQJks(foq4W*/s8;97TR[0ZJ8%jm
%hMgdiCud?HBs=$Q\ZAtR;'^ek:HKpRGGMuROu89P*+VeI`Zg:TQ8]F,1V=K.C=Ta`*8X/k#=;!%*\.8-?:Ao8<%2r&Cag)OMBc2f
%RBW1gG%XBk@0E2jI*<o@PmKWU+U/^m8V05u8jXo;KAaUZ.j3+egh]1YP6ZE3PhL:9>9HpG2/2/?KOjoiHZ/tdn2CX'KcgHLDAP')
%Kar=Nl%H1%LsKVpO3Bpl8fXV)TjhUEWhP&dl+oe\dT.=/i5AZq:#p;*&I9J[kt8)?UA,s%6Wb4K#R\!m88U/>GX5HU?)U%k;707^
%'uE$.*p1EH(QakfP3OW/Rn'8h+D+!+2_YKZXhRa:A9+UipUI):!g)P_%1;>5ORA8ues\-],)RYRWYX,>lFN#;3p-C@=:H?<[jY44
%9(eL+o)s]bD?)ckSF)%[S9<.IWO^Qd^o!1<UuN[l!JEL5BmL6@'VQmEP%,sS>Qg';p=t]><cQF6rffd_#-tUI2$3qmqe@pF>-!`A
%@oG#%=^4qpb/Fof;O_',Mh0#bp!s`RfI5rWe!@REl9d\TWYk*PjIGe2;b@QI@pYn&8j>;gN:n7>oS)?h8)`Yk48;??^91XQGoHoA
%+*P9'm\><9NK%Hf#(j<A5E<W[QToR3:-R:)+52r&80>iN:rnJ.4OKl'If*\eM.ID,[%N4s>ZkN/asA*-65dP&aL"48]E']f)=gFp
%3?&g6IL00I&9TL<If:*`BUGs2%r<G.M,(T/l2+1IGqP@DgGb.1\92"[QH7+bS%YW3.=([5T3k2M5OtnX\!K/Rf[XROfg*I^4e(h`
%O:gP.i?j@!VX`lma3D%.,W\mCPQ`8(N@>&:4='H($Y:<,>Ypfh9MIFB!O)u&Af#uUm8`*J>3r]pFhC+1K[OfR)]fDbq]&htW9Xgt
%F!7cRg8m/t!JDaI->"/YpFQJ?1d!l]/%A(IQ87]emC*hk&*'?iU4VpZY&M02D;.Q2-^f]SN_E6#Q_oT"E.p4'Dm3O^gLd`NZkkX]
%+cpB5dpfT\k`t?q4s-;#9*MsWN^E&TVN;29<Ekbe\MLVFG*XE6VBsaD"Q->FS>%0dik1YU[EU$l8JGEVoT?)r"cfIGQPD2j#pfR`
%ASR05#M6SIltB%_=]HlG("n]T(g3elZRf&rG15l!32A#"6'n>/_*@Sc6gk>2'lr2M)9aB$l1RrQBSg%)VA'dq*@dQg0^_ir>suD5
%j%to7ED$tC(904u1X.j:EjA[?<.s,.)EA(m<8'Q4bME[/NOgi-[Uct[bUkXV>t;1=k7C>?J<:3-Nn*QIXX+k?5U1V5)1.RE?)0CK
%OARFr;!fIdBoj*_?5T]SVagthWW2'KIo30"'tX(nMaP2B3a<=A$q!M$,K+`9!X2@V<$b_0qe@EfgiL@MeX:VaGDL-K`g<MJR9J7P
%`/+cN(KIJ8N"8/W<Mpq:6=f9]+?He/Dcghh;WS4X_]LN:o?6kT0YiC1FM4;#F+I'DVE9!:17MfmQ,1DcNc(%3pPM<[480T;&i)N,
%EErY.=N3PMJmZ?$E.KF1"fe"&.ND_cVBo_0^g2`OWB[S^lQ^Q$?PV/rqCC7K7qVcc9IW=H2VdpSa:2Zl7]nte%?)^>(.\7jc"$1^
%'E0OnZ_QQ"eiYIlA*`<`09h+AI9/T\U\X6Y0$oMK!MP=L1"rDR'FBNJ,G0,LrK%-cL%C]/$"ingYgPN!m*Z'E6h*^%YU-Ml.W@*&
%Ml7%PEPf8G;o7J&G"6aR%:31m7oP9%8;e*5L^*O79U(,''<YUnrmX%oh#SBEs%m?Ve;u,J\B`M)g;9NffVoAEOq/cC-$K)/X5e`L
%<F@>VqLM)nMXcOtnmSnP0HtMB3jR*:X&)]g(!(rG.D<s-a/V!=<;"Z!#kZKj@V^th]QoaG%tP@$\Zso\T6Br[rS*C-cj@+g#K:?.
%KWeGk,s<FJcuO1,[i<9C=c?`,E94OAc>+Z0Ad+(8eu%FM%YcB^,.>XO8Zm\s.#rS%a:Tb=!A')SqY%pYgtu5Tk8huk<L$Oc@NW]"
%60CQ1U5f3J:h+SQ3n;uNVh',j]F?qk.E](.3P2>LZa'D\(`gg9T9]h#RD.2])M$J<*W$AVBN/JIJJTYrXr;7VTN5VSKQLZ/h5)c.
%pu*,^B'thkc,no_QkN>p#fg<FWph?V#8S>_\o&Rf!*`_JrNPR>6e#5NES_l[BW)Rb*.BLhq3f\+6\d8]jS<_\%N_E!gA%@&phte_
%K/qH6@MGH;&bK-'/7'Jlg5YLN3N*;@JXdT&AN<ZZ="FNm`QE-rq<['Z@aT58`HN$UUFZLQq0Dqo`!Kfh@*:M2U&pqG)p:u(gbs`@
%@7O/<n9g0&RnWYDAX@*-ls2Yr$[Y^3_+7bT99Qs,IF[d.I`#L/GIoq;c?9a(FPOqL0pLE2+a1q<l[oR-+[:c2j*FD*FMSb%?2m3a
%96JkagZnkp7uLsMrjFHgG.,<RH#Yn?P"l`]MRZ6gl%VRY+V^l4Ui6tRLSl]C".(KZ+o%JsFgsF4^"C'27/AM3$$C`:hSIX6"LmuF
%QY?Ee-9W;m^@(:+;h+2!<@$?2=%][NX2!N1WtBpsM=&sMC=p:%]!M-G?uOY$pG'Z\^FAC[mCh5LX&mp=<YtH?Dr'.%\35.\dGO`!
%gSP_&i`DXpY#f@\Yl#]%bL[isFY,-5nW+Iik^pigQ7$e4B^q1(8Ac+I.O>1KjiD*"1C4o:Y3J>cM;620Ct_!Bhei02I<\W7>\?Kc
%SK[90AL!An+d!s4JoCasdXsp?TGF2Z3kPrWOHC\l<:EZ-cQ75T6CA]H!+Bg`p];bi%Q!]ClG;qnVQ:?I"cq0E_u#6r;X>gF.^Q`*
%SabAa*SRsk9ABG5##O<VBUDTGJ9%/V1S5CR#ol484Vg]c)L+6$ER$=Wi@0Y4\Nb!f=/F_BOU>@p%pQ3*XIumYN>G_@`EQ6h)K*>,
%P_2[a*lD0"'^^e\Z"-1F$>p\O$qsJ$O(DKr"c:*:cot$&/F^_E(1#:X8bHWnOebN#djukb:%0jfZO4J5*iCh$*6J-UAdF/uj%B$'
%1`RUF`eS:a]S<r"K10asT(f:69i+;6Y8XjFbH]4]I,2j$&?a@-pBA.]MSmpLJ4&'o\!j'eA2KchR[(V26Q>'-f,5eCC[3[KD7S6[
%jjnWX3SF%Vi2CC8\[mEWf=FdcP/@L;&pk4]<Dcdsgo=bWPi0n`8&P@].&iIWf-O3gIobZdX`\DqadsD#5i]$U`SRq$k@tMsh#XBL
%>g'hV+dc3uo^bqSK=F+'hu+BD<\+?E1056N5UjZR]ngGMX$-@B7L]1=7jTHKUS&1M&f_=e[4VHVRLaVEenV*0!II[Wn8ZWC6Zt#Z
%gILN*C;6T'Z6')%@u+TG!nYjZ3Y=2hBOk6B,K4F"gi`JLeNZ!;i5F[NJCRGJqE2`G+f"[RD98E[4Kt2G)J._FfLHN*J=b5Ca,_\'
%ou("^]nS])6B'GKN@q!\"eRqKW$+-m,$^HlI3D>&`OgtEpP)uMs0[3k2s8K$&ioZP+8k=#^[*EjfP@e@nZ;or6;hF>1ulY2-"[Vu
%\W4+>>F^HKCR,l%Po+9$k+g07Xu[A6"d8**Udg#,cGm4N&0)uWO\_[N.*q(S`EG4J*#0Wc3?+J]hbADV-^dWLEfIK'm3BcAD$K1k
%D;gI@pD3S"2uCe!^=^do@VREUT[k7tEo<^gV)3*_`ps7-_K\rcCeH)2[/ugo!eP.88etiLhNWV&*nP7-asjnNjcnVdE_8!]XD_?)
%3Eu'I'6!Q1Q[N#7kV(7"NX=fno#`1]9Sj\;-@aYs<Ia'R%bB.TM<E<4T"E];:b\o>*D;T5NeAp]?]qnQ[pAe.Z9dr.]D^R1?0V)\
%4:T(?7%4OqP_e7fP_c?%A@HA;CCH"S=&'&B#g#mH0Bp)?Q(`:,1C8e1OSA&S]?&a$(HtFJmnu9PFjA4s)j/pSqIsl+MgQRkZX*?D
%4^Qrcl)k0h`!^Fq^!r`O5oZCC0H-fd&ZW"j%-7=f)s%]5_^'ZF90H/ErVhP`1rrsA9'L/1>&SGXk!tQ&qq8>s8Il._pXa\C?F9WI
%*C'ER^R60.[4r]HR#L1n\Qh$=##RnHN(%q^I:LF2@/qJ.&"aZN+_A^eO(<F<4dG0BS<\b)TLt]KpU`sh02qIA2sL4_-E[4MJ:Df`
%k3:c;Lc1Xc3&PPYV4s)\(sGo&0Q#R`ej6=QZSQK*?`#_,+$D_Yk5qZAh-3d#)h%DEZSnJ\lfQHh8$XF^p#JQ"<r[Uf9n3<DDX3?G
%N>TRe8;BGfiOoR]q@:@7aTs(KkqW0ToSi)>mk8$p?CXV&NFX[WT\)X-fud9.7rG%aN9g%VXI?,6c%g5`-=A,54`%7I"Jj&fQp(/O
%M$GTeS&*l07Y#oN5/$^?1,/)fnt2\WN76L6F#eRJ\Y'e,c33$'h7Jsrm&B_+$aq15nYiu(r]tjpOse["<<)mMpSX;U4!tO@hRg#U
%EUaOj1acRO@ApM`g;K!>0agMEe,BoX*)3B59U4K%3Lg.lbKQ(%,r*L&cA&)"gEslBWTI^>)Dp#qf?t(7q6C]+d1snKk'B!H],l=j
%kBH[>s*@=_[Z]sWG_dtNG`H.IlAKjj=CU7F?C%U%LZMkpK6GCVn$[<sLr7W7HXq>Y=Q6+=q\u!pmDnTe;`5*#HoHr#6'?YW>7\H\
%m+3nZ`O@d3G4DH(h([\b[-Z@<6`5(=BkXu92\#0:nYW#I%B"r`&"O']/``CQ/ee%\^OFd(B&-s\VRqsQ>L9U;j5![7HPaH_AL:(*
%N2_$SajP^)[O_f2l"UmFh-4idb-0Ol;7?&^*9gha`A_<&-?`<gZ<H7"n7lpj+h%*h?ClcOGuki,K3@2o)7mRK3Q3q`r$K$LdT>H&
%#I3$j[kG;VHY_,B3T%Deg!4qWcPLCY3C!/;^:2]trP&*/8QM&k^"^jOH6idP%-X2UZB]>]Gn>b:5HJ18;4jI=oRgrtd19\hdJFlr
%<NeIQO_1uoTqk#Wh9;DK!UJ0d"fS>?b]cG.hB=S'e#Lo(<^a?A)P9qt`q]ma@sX"]SkSZl]tS77Dj]!pB;fTQ\TLl-&j8I.>`>tt
%X2*G190L.o=%tSb\FlHL.Mu+^AQ<M";n]TtrH6RQbch;<TB=r=CUI]O&7W-%2!dM.=q>(JPo_L,(U*fdj4^A+0"^4`e$<IiLSsiG
%3%poX#J$EKZ6."\n,>!K>@Uh5F2K0*'P?[E.?qH%<V\qc*A]c@G4YOc+)>P*r4<HgbKuPLOL==+6eaNtTRGTImJX$-dalY,k%\%r
%p?W!k133,+[e;?1b\C@T_KG[?GVcfd'81+Ig"XiDq?uZWAMWld]I2A?+_biDPT^Vu<*,j:ZLf1R#A,Yfbi]7H@FC67n@'%1d5B5>
%T^XrKdI`[;hk[bpE"Tb?hXF^[^#;1V?YX7\kZ#X7(hTu=dVN=/o5OMPNH.,=fA]K'5nT-^M<;fZ+q0HFIun81@\(&JdLm_i/)*!@
%M75qB>=,#^[q;g*L%rLHcG+e#O`*J9_UakrHD>CkX-`H!l.N`rh3>--ZAZ@MD_H7C>:P?tBPgk*oH&Nm);2q700b^UkiP&6KKp1e
%9GuP?V[0^GZ2't8<2/H&SP2[K(Ci0sp.\`Rj]CX!qF$&6:97!!>Ne>H?MX)r\:")K'_>LnEMkXT]rJjNi$RK'or1QJPBAipI-!%]
%DXcFdiSU.McG!qRP9lq^=mV3]PS$ZU]">9J4EcY/>otMX]4!0nCO"k_P14Ynq<YjN'490@01Y2NTDd?uk>!^l)+!cAS.'hW<m'LB
%h9j28a8$ko&$A]B>^rsme49_2`.Y+\^E:jdNGDMP9/RuO69)?0M(c%^rAH#DM`hDck7jVA16j?A]Mg;V.SG-gFi="<IJZL-cr^#S
%B4H2F>W1Wh%?A'U@?V[o<AtpSg9YqSX8FO]^EV]MlqMU9BbJU&m$mY'f91,M054-#-6i*UDbSumi:aU,I]:8.eGnZ+4c_m\8a)/r
%*CmS5Ekq#geH%p!m@$XnK<_XYV$4@G_fHY&o+LlgfZpjW)P*S^Fo-1&*5ZjqK_d%fe$CVE*S,]/X)L(Xgp.(Qn=&@bm.:._N$jX!
%5Tn-(@s$igC7E:7-`T)kPksTs-6Lp(1-11_b0Q,J`NRnPY/Yj<WPmP>m^F!pT*a5g.:_hXL2TuESGRJYK\PI\"(XX@?6!PN"(XLO
%?Cm32:=4ilU-BV?X6&e'qt%r3r6;cXW-"m&;#=V]r:k$Tio^FqM1a8kr*A+73aOSn<:/J&*+'mSSO,qgPPXO.>:>uJJf#W+Nq4J8
%=BW,mZSem-+T\T\Y>t`B@7%A4,nZV'i9]dWh@Q/jNUnSJD2=qh`;?ImWBVJ#I64%;-@L#!c(@Mo;nZMp@/cBg_q#S@1q;(8LUX\G
%VOpJJQLrADdJ:nsNdne4(&on:conA0_JlJ*(!]_Q6,)&tj1(T1>gb^srdsMl@e4rb]EnrD"\!TC^:VnE$X$dA\eL9B3mZuP.qQHR
%r(Ou9J+<'t-=?^6%`n+g4)<JKD4^tfV59GGFuE*`\pKNU`hCGp`NC2]@rgWjM("t5e<pu^R%t7n/*C.cB4RgRJW:oa<A`kGH5_PC
%5e,L1'VJP7k6X9>N+J4L7Q.Hinj#R#5*((Z,?eIW7,>DIF8.aQ4X@I\TATQ;'`XJ&^"-=`G+\V#T^bT(Dr728s*h@6^rgD-m3$#_
%:Hjb7<@-ZR850`#8j8dfnY0],G__A*1mj%u*j@F/H'7<mC.p;b4c<tjeQ;[^SFs-ZIF*OC<VP/t0uGQc+HfY;%`,c7lJt9&@$p*X
%nO@Lq`d(=<9XRej;Gp9Q)U2!@nJ6PPZVd>Md-fF(H7n3T"@87dIS+<Gp4.EEEY8eC+YL9'7$@XI1X#H=&;2I^8i(\S,j(1sm[?AT
%i"E:F:l:!G27kBgfCnH_:B/qOs+m5e[-6aN>[n\1ju8^;Lb)'\j\VH,Q;p[t,A?,f_2i29P2X,j\A4f":Q0iidhpJ,KrA."^T9Rn
%MJUj?U.RDKFXmTY/82@rAa@Si,^3<g>rdZ7@4!oe+,A6;1*_ZLYr8M7Llibp^+I>8?&f(?`^<8$4S<`6nnKq:CidlF7#'"5?UpJa
%);_>j'NP6@J3!k^+K!Xr=O)IEj=(rD?>dYFO0;[75,uP/;eqH3:JGN9%=\Lu0=`#]8dT%<qfY@:RISHEm:jP!o[Ab%UD%-4P66U@
%AkkGSWC!])Nq6Wu^Cj#[O.mO>nX!:Qns3(tj8J>#s,a#J`BL;k+#OL2O<A#jqQ7tZdHtTl#]o9@H3^uCR"$t2FA5K6n\el5GJT&(
%D.G8S:Dns>lTBjSBV#MCg%o9SO1u&uCmsR<;5C4o?U/HdHgQ\HF:<([eb)/mRt^]p:gY4SCGiOaZldjJ4lgf]4e%?oc?i!p\Q]fC
%@8UbQQ-,\%+EN/86J.($)Xc$3Wg2U6FkHSq@U1%@_7,`89GNHpX_!H&3fa-BN9C*B^8#Q2\45t&PR0q'0,XqYBq:tOmG*,[*2?]<
%])c[KHsRT67R?ET&+$sWP]*7/Xa?RgYW$miTl:&D&ppi"3ee3`rd'Y>/mEe*K7l'"`[^[Y[Ugi@I+YTK/\>c=;12YmocU]ENHhS;
%QW)s0f$QJoA7Vd>APj1=:/TUM<Lh^TKY.u1W)O/j]Ps38516fMqj`#_jg-06$Q^mqOUNG5OH\QR$E:VA\M)lg*Ys_[lKnBtoual4
%&`T;7d<lKJNl,,nGf(3Hq8!app4\=3:;6rL#Zj8ld&cinV[!.2k9!)gho&GO7ujoIJZWNlEjOeYW4JN_?2b@o/9+WJ,<ORsQ?!D"
%_JDd-W[hhmE=WmU&VZp<7%$7DDdPm?V8,<OFEet*-C]tCn:\%_8^VsI;^Dpg]RYj?W$#;9.s_a0AGP#k`W7/f:8$Z!#V=_uMFFVQ
%)>+&0/`LBo25,Y-1>Bine$4jojkQQO+WkP=0(WaD01I7W]:r*r_Ututj/_/fg#1@kE-L9kJ)Yo804<2*$,E(n;U(fV,m9R\G)852
%%3gT[fd:p/QSf.,P)Y4VX-uNK@5VXJWC*V<81R,0?iahc([bfR-$WNlNl(]D_+9upR)t4C2n!I:]*(PmM2;6l%6URLT,=fr[-MNN
%ornio'KaoJ<TQJgCM`Eae"!&n>n&;#'(0pcFe5NXqKrWkD1?#9CR2%(S[*H],_'D;B)6?@EA3d2.8=f*;4%5K:9Q+HI;4tHT(3bA
%K4B[uY7Yl9R/FcoKuKZH(qiO4(<G9(nJMU7F@lQ"R>2h6d<KLSlF&M.DQ?JZpYa[aQm\nrli&#3Bn+cfa3\k)=[4M$_.].]g]N7i
%=JYG$]4uqE>Mh<R?ug4AiA9]08+UE)!$cbp3Y(UrK@0Ehh^Zj018V8A61DXpM[B^)M`(Osc8+f"V2HgF/i=L%D<pEO%b`<9ZT[p!
%)ZFIpTfAe$Pt;>gDO"u&s0*?N<h,8NQuioV\Z`n2Ito[ZmK9gRjPW\;<]N;t0>$\93?+oc*it.#li[G,>B+ct$Ogl;bA\l>#_)^1
%Mn">7f"HXm7O-"uq6lKa-GH`rr<H\A)shIj7b5O[mu'G;lrl7'NbBE_/Yu=USJEE36<SFJd<?2"P>&.\IMdDQLP=k(1Q,1!;bU:i
%FKU/trFXe]1h2J)",Am`GrVU!n-cL][$Q]C>J4gi[4p.-/S#Pgb=47A=TZrJ?jT&AG0QT6D=al>"m9Li+Ebf-4UsN<Q0W6oV>k6o
%YEf>%'bt_*Xb!1@<kp=XQ`(:M/1Yl,3)re&m7#4MkIXGGI(W2s+G`YYr`qhYI's5k$_g_&FK>Eupqk:[OMC#6kO02IP)1p&s7YJj
%Tb"J>J?3P0C]c3NX"1,PN]3'Aa``jf%mSi"<t(Zmg!"cB>Wo5FpSYo,BlFsLB.3nBm&m^IHV"7SjP+5)"P->NN1+4F=KX^>&nC4u
%lY*j1J99TFA7NgVT11-M0\<5%eSRD8a\Oi=/CNP9.E1@CY8nS.^E;M$(oX$<oQL&Ga#D?-BU;JBFl!a`cKD-I9UB@!"?<jL@Hlde
%KVmkM5Ko]hH.WHmMRAnR_sB]@GJQjBPd5j<<E1a`5G&knGHeWa>Fl:;\Tqq&R>RTg0s,`-gb\[jJ$*hQ,8uI:k]XtJr7e,r2@)W=
%`P1lW:\XmPdiD':lDh\,V[)BZ0\To&DLR)hK@p<LP*1MAOTHV\jIME(/-llBI!/93!dmBAF0rIeRupr@[+d`\)#p$$oVZoBs"s0B
%i!-G?GYrI'E1^(P*_F6B&X'M]o;OM@S5O-oGSYkqi/m8KOdq?>K3I%Pe4!'aea%@`lGIlniOeYp_Q-qmGR'gmQGo_ODRn^>pQ0\;
%nPbI;?IL7Og_]hIq77BurHqo?4K8*C\U(cU#:#O6re&g8ik)Z]&*tg2g#J!H_9^OS;B&Je/"G0.DS4jtF1+_6ZQL#BG%ZA6O5\*T
%<31OT.e#F_[uf.YV)k:%q/"6n;aV5TK++BL5`'%fEs?;o'USMP$=pq?D,#K7O,1C!'nj=4X--NW[P'^k0fKP7kcTB(NU4.fV7!"]
%@$s7?hN!'Q*kBCj?#j.ZfF4!%@inq&#)P1Hg0U`Wcc[C0iN)nTm,t5*88cmW0J:(C.qb@&!JX=p&BER%@rP0_P`m\s;bWiB,f;?G
%AK,b6\tnsAV8US`8>;f*QNK"lF"h)F?IF3H(7MMk+b@a/^KdsTGWT#p5*iTfT*OuU&_5YVW`rhiRP%<4b<j[dC?I!N%G:d_(epEI
%EO#a,?DeZH-0f43nAi0sfjM\7R9c90r/#;+AmGDa8a5dFZAg!6AXGDGqh=&0>_N^'C=]XEALghoL<MZO_<cdRnYoJA!j[t,c%CZ_
%4'3"f&"87/.pPX\:NfIMUhW9g3l^/8Gd]Ka$>[]9k^nbA$#=b(QC-9FBo0!"\o"2kkEBRS.:7l5D^\PXL?)8[OlX='&S2*fmML[b
%ScqiU4;o@'m4;`=Z:)JMrTlZ3k<,cjo-f!-*mK\@/DF92O:!<c%1/I*;R<32(cmg!\<5_2Mg7^=(^\3r]"n*knaSHus&cnM6ZKu\
%:-M&s(q6`k=-Ld\CoaccicX<IY8hYT5eErpH>Z7(-,aLc76[h9UI#+@kWo`&OYb*l>=Zrtn*@5=5/F@bor_#2I<-()[XnH\A);RJ
%I(BOghd.ejrO;N"NetZR/.=MUDR<p[GWn3\",ol@V>:'Gi'f67Ha,X6nU1';o>X-D`aI63]UJ6!1Al%<kP:oP`00&gqde^sAt:$$
%"QJe/<f3o(YS;3]]dZR<Zc215(LpZZZ8saX\#'Bb_j_Sf[M8:)/AnuX?LGmH3S%W@("dI\Y"N%=g5Y9t,ohBTVk^f1'c^$!XPqPa
%_0qpYTP3Ts8^5(1V5"rYJ7?FaAqiF(eV5=H3*asad`GN-k<Hp(H*[KkC,SdHBK5E@J12\+dT.*$OuX#b<^3-fR\`<n_+([ok.B#>
%*EBg[Q9joomk;?_?SB1tG;lTZ1YQ(G`=AIo034^jo@J0?C+RhS/JVi%?uCp8&^uingHsB+Q+nf:MN;MG-Jm5MN[/;Cnjs(-D/1NL
%FWE`IBMVLdl6/s!Afq9#bLJ1%PdW2)gn^O.^usT>fcWjiY*fb,buYjnSr<%VF-&)[Yr8WNO<'^"NjrcEKpJ*5f9dAX6=sY=gRCY`
%DI@UM+IH,`H0L)6HS&;"a$I/tFHe!]M1ku_XU!UG,[.XP\,[$%^FWl_8$[[kC;Gsa9WAl&jMi;(6MG%[,hu.m3DIp->$#bXqc0h@
%/(Kfa`@m9=ACh+ie]ruoI`A01U$ju0*U)iC=d,fp+1A^m7P-ld)R:!DoZq%5*`G>+\j6L19,[P?iVl4*\XM(9PF3T5gF#`3BegM!
%Woe2tQtkumr-#Bn)&d^1-K)l8a,'.6o]"^YHk^XKkq!=QU><=,"NQ4/YU#[`JPMr3^.E(K0FW1`rZ$bGdu)VGS:9kEcn3pjk@g5c
%2/tO=ahhi)NJ_OB.`!7U%WpDsfQfZmF6^ICMpI?kNDf]PS.hn"qs@$n6!Rr*Aa4CFDMnWu#/)2%e@41?F2_bWE8qKW4I<HTrO`H$
%&\j],T78i@hS>,Kl.VDCf4>40T:DtY.Wg&lGDB8J&g'Z%)rRhK"-7c<YtNtMBmQ#0jU9_;5rmE:b6G'RpC[KkX2ub4[T_om#pfDi
%q>laZJ`3gG[>J^j4*eiPq+1eaZAhp@SPF_^I(,Pp(3MiK^Etb4Am+gB<,G6/8Ft.'7VUT>/\Qc];4N1=h^#N&XIqf'S>eUb:DtEY
%+f5gKmZi\RP*P(rl-+<uT]/f7Bf80^(([R`F;UL2H8"?4U'gRUe9au3Y7R-OrT:!l'"U6KYJVaQ!0UVJp]P:A<LII=QKW0_/3>=`
%Am-+l9,aDVI/sTNpdAZ*RrR.m[ct,gX$j3';;Eq\pSmAj"f?Q]D"YX"LinD.._\mB6,lW&<?>BP[lP8WaN='GeJf6l,l+jKN@<kW
%#,b!Y;,o;Gq+pTWY:TW>@CoD?9qS8Z1lCmr*\1WP5s0hVT7G=[^\qWiBO+3Pi9>:B`icV:KPtH4Pp.3m97(H+:6Z/Vr4SttX=Sj^
%*JpXk'Jme..jlR_s%+h9U>Fgd75aa]62sGqZ]T8K$"_M%14*+6o,o@.\j0@DekLg'=)nJu'jMkm8FV1qWlJgdbN\m\JmVR?ke,Va
%&s2BKeu.JG>,=)b!`)u$9IQu9?n&@O9!gQR;\6FmLMN-DH7mXKU`I*h;7$PRPN;\49^t$/eE!jA=WMeQhYX:-I+,u=?g7L`ULKic
%i/a5"otGhI[up?o*/#iM9nAWEj^CWlSQ#!IH/m?]mJ^U\O3b.'29;JIW0]`u#8P=Os3hf"d[['lpW3C*-o!^s=FR00h;U+h0re(]
%nuG?k<$,[@RBMbe7>,5AnHRW_+^UpS;"984Cn_K!PPg52lEd<9*n^fsE5W>!c'XA,>hQn*@J=OGS'k1cU/mN-kmXN<X(^%qP+7%(
%pFlhP%F3&rKP[WCiKn<WX!.!WCrTISPg<C^m*S7o-^17qMC_p''<m#rP.k?,Nea!Y$;?bRpjVaBhGa("eoXa&g%HOF=Af/D_BG*7
%9CQPM!Tm`S\>i7S3C'TWK'%=/_Tj*A1_h#*k'?(9e7Q?fCmVMSe0%KmL&NZ.<P6?!PX!E[WopC&?`POQ0TdLY<H2IVs!aZ1\>VQ1
%!j\]#fe5*To!h5c?p2BLG_t9`cH3Dkm5Is>2)ZqTW1I&Zeag>X!"MDq&NtcL(qV2"95uQ`D=tZsG1=M-^c%<b[Oq^eW0ns<NUi-)
%4.&agRE-'d'02Y(CDG8.jrb@,@'e,:8oD=CKect7P3QjtPU4EZ,*&:G!Qs7Fj9ZSH.:o-RFTOO:!q@Qi)u"!sLm$CVq:2f@^7-tk
%%%j2hTA\f+M;8H_BV!J7cp-.DYGSs07?#8u%UNhGLakAm=.5%!89p!\@mW[$Rr:eq"]c=1!qF,#_2Y>eF0R-+RLF5s%1@oGcIfEm
%M4mAc<dlN3o\lU&8_P[o-JC:hH((#EVU4hXMcs4.hhZ#+\kY8HR8I5&RPWU=`pbFBcb[l3$jf"P<h=_:Qo-N2p#3g^b:!`Oo_J0V
%4ujQ>&pQeS'&R%l@mGX*KoEk[]Ke]a9jEL%PU%VqT,<'elpr?^6MSRqs3&snVcjlM@TC^LAbjW:X';c)/h*P/`bjfiO;cs.MuU"K
%Wi2MDZN2TggQLV[5W":.r50jbZ9nbnXBI0UFW,24-\^uF!70(0D>[0XLlR%OoV2b';sHi&Wab/BekI>)gMIlX=E\p*m>Y"ufs%!'
%`^L*=q&rrG]AMfXk;>G,s!se(@Cpt>^))[,:%V-d;sb*6b[((>I378E8F`T^1VNT)SdUFmIonl81Bt1eKY6S"NJiaj`=dEs_/+*&
%[$j_;N0*'AB'ei`3/)0NbUIPN))kV#W'?^TStn#Cpn8W$?5;5@^$-?(.N%l7;O=Z4C\%%oVX/Q)@%o+^4.PjB,90a$<3dI0fZmJj
%Cgf]C^(dk=mIo54M;W?^.1Jt%n8WD>(g]Gg4b^7D2R:[<%/k+/M1SOpM0bGaEj-`k>n00N,0EsnFHNnRQ]ga;ru6(l*/@lp=@B?E
%E*CO(&`ca2FJ6K5&&j^r8X@g8Ald*Wj+YD=ZD(W"RU@l&NMkE.qs;qV-F,^Nmk@ainXYG%5HWWrYCPqnHQ6Y3-9.X0V)0*GTGd<?
%ARU<9lErrR41CD3$l<f14b98lf%o\$#f$;S%>iiad<tN*CdIK`@PTfm^_N3fG>!XI6,jU0B2J7MA)EXm_*>`KoS4a#-3454*eLSZ
%H))&QPbLg/l`$G$b0*&+0!3XAG-e:;C_\E=WbZ(HpG6ZJ?/SboKnGA'ZIsl4(nW$uL]6%jlo\8@86_>f;.U-fNh*M4]1$C&\rK(P
%N*mY*AWq?rK'j6*@jJQa\!uFp+^q_3mRGl8p7u32]rJBT,#HNo?+FT[,S2dV@IM:TmFpX?7Ked*YE%9m#Gelq8EU`s.u1DsT8(rR
%LOZK7RV\K,r1_]^B(T$7B77OO$E.X"X0HOtAOq.H`jjJ[F&]qKD_NS8F%Zgg>bA#LYC],G.ETPhE68[$7T6hUEs<u1,HTs(bBnua
%1Z="^fI<g+&&W.DZH,j:Z(#+Z-uE7&Q.)a1-Ig8(/i$<rnK;cKKj)3+[moq97O[f10t"Tqq9.@7dF5pg:R>OV.R780[A;hn/qo@X
%H'8ZK!7X6mYF;W2)C[#X>]%YV]TD=W_M,AEABp)#LlcOUGa"X>G1[gh!k`P)U=Op+:#f7\$gVgQdTN<[eU@jV;tNt=mNs^_O:TB@
%l"+=_[[[YZ[Oe`\[@%Z3NBZ8mH@;Kc%j/5e^M`uHO(-&RR8*/'S9HVf:`"RbYT%qLnuhn7)Fc>f[H)"Ep,mKH17A]^QEq<->KMT#
%&(/H8I4G,^b'`8F3EifMF!s^p"M@Gf%;dt"2e%o<;kur>AZ:.NVIQ1':XU%rr3#-"#agSHjW@P*:*_Q]=64apV$&l*+hb8j(mr1/
%2Zt275A]%3j);ph":B_f#i$4J"DCk&Vj]d&;%f@54IJ%kC_J&#)t-SN(G5Pu'h!6cP''n(W]Z0Z\jV2`c21e%ET8*@pYpJb/_eCc
%Bf%C24<ueO"@5/Hs01T?[-PhJBpTH"*p:+AELQ^jj[&am^5q[\[kBC!rMkoGE;ZghZV&f.:fBVQ+BSE?h$fb&FTh5]3NgO5X;CN"
%<5b%%4#b*H-VTbKMk%2$XETgS,:PR=Z$lVpb=8&t\K@8mrYP7!Bpk6])i8Q\,aOl?X3W!qfpVM^Y5]RHs76'97R0Cb3-ec,#@G1(
%Wf&L22Ts#!-lp<=Ak_)JU*,PXK\Ijp%c9Y%L=+M6LT5qFmbd$.9IcD8An;Gs@s674$PB@Aom/63D\h)ATqqnQ!+E/K'.EF!%hZ9?
%Dt1VUai-DX=&gViY[f^qNW7@Pb?&+i<<SpQ-B<,LqM.>B&mI::&IdN)I":!P]Ykk=&%NGgGdsbMkC,LgWOY_-(&hcEf1&/%0/"Bk
%Q0<in1Y4'\T-YHV/2p)cn]XYE>HAa4Kbnc%/KrqtLi]V/[Ka+:$gZ73.?Y-mY=R>HkC_i)ajDUK$#o;j;-3.u(!C'1WJH0bPItQ'
%A4COlQ*'2GQpB*orb>KU7s-:Ni1P+:Sa,70fTl9FlWL`29]9bPGYg#XCY2t;k0JP%IO!s1YZJuPX!>1f\<uN8;c1+dZKnAW=,lOL
%!]T>3U"i7t3N0,M0gu77-mmuYW$8#oP"Gab=SBk1e1?"^=KQ%5muc3\%RJ0%58]/=Zk.R8;/[:cBijdqG]6ibq!*JaOoW-7/dg,Z
%hLII@b"35oW!qg`?#,d_gG,/c%u6)6Oj<o6*+I8oH:t^2P*J%nLeY3SE"SHNQi:VG6lj.*G)ERZ;]$e,Y%/i@o52HsMDc&_RN]2-
%ifnW0>%#C2Ji/*6-O@!`o1M*s9CgaonLA&JHEN@rBRI)aZ:hKQoTB9'8e;oU@Sl`JqT>4ZYO5dFW3<%$,mddA'3t8gLM"lBC#HH6
%L.`^IaeafAY:I2\h(W"mVfke"WurG,*aVob&.A+/&,Usa`?Z^e>e>l6#XiSm'RAY<[:l\c=@#$KS4.0f]FSp:SC,BGkm.$LJrbi;
%Il]"P:tpR6T4pCYrGi==X[>W-CmR>`Y=51(`[/mFA(c#Sg/W!V>hcV?VY0rR\5nr\H)b^bgZ@,l'es+&9Uk+u.s'>a]9`G!_tgYY
%HoF%XZ_tIf0e+NJjU+Y"\!("DWne:kOX>9!+9S'-d"[lpAaG#_e5'A@pc$qV"I4lQORj,]d@^nL+sRRD(dh]brCCG'>TY[<*5Q&/
%f)Y@W8"*:E0VY-Z.R7Rn2IAb=?Ibi*H#)Y$DL4&5qV>@0J0eXl?p>^G.C_IaFK)Jh]=g29V+`e-O$aYJT[pNIb<\_>Cj/R2l?<[.
%A<P.N8GdSpYR"pFb@3L^WG%)W4[3_misM%i`B8L&S.Bq:m:"C_oCQ>E\P*^m@cAdiH>o[E*YVa=9"3EkCn[\\hL;Oe<=UaC5+.ou
%(e6t,m0A_ALV0e+$)'SS3*NM)#8m6sat3U0Y":8>Td5-!iXTcd2H6nnbB6,d>0ef>Y$B7E_=&Nf'V!i6cd`7ifCE[5QMR]"Cho=a
%S,;\6QEFpCKoUku",!8mk3b#DLXBc+&O`s9&Ln&T-Z\fU#4qQ;Mr*0tBY[g9%r+@U;aO>e;qdMP/;YN4."UWY!qf1m2ESsV"AMX.
%rjrdcIo1@8V$,XUf&SY6n6+l#mn,"GN;-*R"[b\5g8Tbg^4*d/>7:)sRRV,s.g66]2OeF:>lK:9R^'hi"QSu>PtH'[9kpKrB+NEt
%;MQr&*hl9Y';Pb&)2FG,&PtPX;MBLDnb/Wu$f^PrQcQqBhd4_6&4?B&^FiFN(N82ROcS@6i;)<]NUq9grVcYRW]shB25GthA^6oR
%fVpkuOq+T$i3i(Q.&fWlQD_f6La/=-IQg:;RLY#:Fh9&HAbn#*hNCS@lZF0ob!N_SlQTESC>epGfaGL\-Fpke+29hFDugGG]*k%P
%h.N4aJfu#VJLL71;l7Z5,)3"9Uf6?'je8pJp)lP@mFp1X/s1YXZ[(/hPkj@d4mR51Z[uVt^?Zt-O&lG0#Hr$8YC#R'2s43X6q]=a
%(]4DCmo"N6`QW88#>j`cLaX$a$tBs!G*fN`l*^hRBubIFh'MX\](re1M9o?'[(hX63W\MOhf[=%<P3nGK3("Wf0/g$AJ*%6!t=/'
%"s-)[0ri9J\T?<cq-h/D-)`qjItse'q]VAg$8"LC=QEaj,+ZorapRkJW?7;JHbKu&G.'%DB+<OPepODdm]RInhe1jkRa@l=GXpj-
%nf?U\Z'"%E.mU,6'H?4-:r\?tpQ?u;AOgecX[AVsGUt%_;Tn+u,d0oU<]CoJUUoV2+4mnYfll^K06.DJpbElJFs?57eLhL8d?Sj9
%&h`'W1,NJ"mmc(B3%Q"0Zc9;<:XQSfLAaEs;$aj,LeZ&k@`OTRUs&#j:m==+=clW$nl,:BF$P1`D@H,\JA:1@NMJd.1UOs&mHu\J
%B"[]-GsIB_&E<8g9j:CTeI^ma%Zh7G9a:[M@DFt\QO&.=LU>6Xgkr/3#nE$MWT8[PRT@MYXS@/fT<**hlQU=>:2DjjNoaJ=`>BI^
%>cHLuc+A5F48a(m(-.Z.A28Tk@8>W!RRAfooT>$A4^"Bu\S]OefL$)ueV**3/EWe!dmU#:N0io#@O77b5?4%NClD=j7Rf)$5C<A[
%h:YeODcKG1<PaJP45FObDACP#^Z:i<b:Q+t/\!0`3?IW0rU'gsa%)a;c4=8`Q,@0=\eL"]7+_L;*q9FPpu&,A4@.,d^$.883>1AT
%8A$Ij3jfZYhoUU\dpl_BZV-E?V*qA).T4Q:"nm./atGC,]VS01AL2r+,%(!76T+[hrrqSVlrCmp,RU)H+7"SQ65)\Sbt16qK04$^
%gF0>;.2b`%!Mm+,B,bY@<0"'<3HrI$Y8`c_"ETg98Dr-Xmi"pt%72hSX!O[a/0>HC%sXNrRVXT,c@hp6?(Mc5eN0i"&e2.:]QTBt
%*C@[Vf*,XhJ?aBI=M6"c8PsZ5'V)!9(IkaQPqF-E:AOD8\"@.Eq3d')7i\Kr&QQf0HT$G4kU[X-iX\YXa(3E0WFh3*%IN.D)-e^'
%MB+.]nran7#q)``EMhrGUT3ed(-$A&C9"T*6a;;bcSnfAaj_RT_9gaSm$J5L)>m)TW&gHC]'j3&V_iA^W1&Qj%(UP6P@_fj'/n4-
%G+<\&k-DL_e@\7J\BR0`=TQ+*.5;?Q?5B<lpYROJ_#7,-A<mG'=tBdX69?6j"U8^37HBo<1E-RS1]VJLn2c&&!(Hp6C71V<>8C7>
%?2W1q6WcK+9:Onq[&PWP?s8G$c0#5,_SXGiJZ;WoY!)S4\"@!%JIbu$YgQT,m/6/?9_k9,piNLsXLq<&+%cqUKPo-YFX41lJALbd
%X0\PCWD$BFUL6,>)is'h<)pYGPS/FP\R5II?g&dJ38chtc4bdZc5]S47Qn*h^]IM9YB3K:j]7l.TN_7B1`HP+]X&H$R0p&+GI'h*
%XT1BN9)srQC2Gs:9GXT/[&GVgW?b$VCgkVENrFQ`"V>RXRLmrJA>3s.\OWT25hDq)3MlMUKFO98J;J.UiorPi<E#,eB7[``-/m"6
%9i4ZlC/ls2H\k-Gqc\b!YXT?_B6EmH-;lh,b=`_Z(3O)3Vpg]FU&%0i454iJ1sp8#@sWIKf,rAd%r\G^<dU@QFtX@K#[h6V`;CS:
%!pheadKN43_&\'BC7OuKqQ;k6]n$O<f>%FE797Kjd`5C:msb&<MY``.lD/t1R;?#6Q^_KPV.2Mm/h*SQ!i[7a+YW*o&Z!X/>WLA6
%bn746lJpg//eu,F6pe@qKi/Q8)snl>aBS7J^O;3Xhkf,r]=i34KTlJ<V6)U-dV\/^\P#*5Is#c0HrIu[aKrnC?L%(Z>Q-7\H&X/8
%8&;S-HC#7rkMQDF.3D;a<8cCB'X#<jVs)C@<e><u0'U!A`oLWZ1okBCJBn'3]>tqd(HtFJmo&jV@GdU4.&+TX[(""C)T&Q2/q#\C
%lC^do2>B+:kj.W4(4Us5mXmN]'?l?MW(ATOj>:f+/I;/e@kcc8)r'oVL=ajT*6>,;FVL^q`dtcqS\:00W1t5CTQ<4BO:IM.[8TI_
%C42hLJi8M-=CK$<qm3P(Q7Q:oooWO%Yomu5N<XZp3^rT4O[Wfn[:\GbhHIY`+E(OjdS1>>,J31!6%5NJS`)BiSp#o7pu4T"Pjg*o
%mj'?BS>#mNH5qXpA^nI2%l0H."2Jb9aGGdnPuO;P9Z\-1)VI?,M&9.C>JhD\n23DcLkB]4"X1b<Uf=93rmsVmS3UU=dYGe=4Dd,4
%<]QS,Bt0jFm6o$;ZIbS10lD!I(,'AIH<inm4q]@S:dW7XLlc+1$qfm;nqanD]N@6-nr)K&Y9uX`;ouRM2^7=YMB7c-+t9r'*b3Q>
%.V#Qm(,]qe,34R[0'8_r=A$if<:!N6;HM9<q2qU8nD5#HPZhMUf=Hd"ULon'GFYIR?Mp[S0:oVkA/pF,#nMG36H03oU@?Mg,%MHf
%1>'_q`FYGH&D"Ui<0:&O[X<P'`"+%Yk0;ireC6s@bjZUlKt:BD)4i))S`#moai5F4&KsXkE"a)T`e;S*<&(\LdKnuaYW:V`M+(!-
%jjT1r3G+SlOC'prAELPTTUn!Z/=Al^`KSM*MRPt`m>VLAHU2KMVVAVB':`jT0O-pjhc8clY&=kc:BFhSWK:JcnRJP[pN,;f6@Lsu
%qSO1k*^MFhWok&_3^_X"SF\OIJ+hu4qJ]X1LGNHc4ateN^OQZZUSo#:g.$c95oW?a>jO#\9[@1\!K5-'HaaVPFt.%rq9m/5eH(@?
%8`non-N)!"q>*SmM;RA`L!6V;<Y2R!#AZYKX0pcZ=[&NT2^W'iXK*mrYnTEn:]:*:l7^J]rpkI%3hL.F7G9\B@Mq8``e;S8)Ok\<
%[V#F'gUm7Bjl$%p'Cp?^;j*:iCB%^IM][`k;u.5iqVrl4gXHEPZnl\p09k;s.gh6$<hW*D5<UO3O,N>g1_31ZB02n=/f?'X!.IR[
%#6H1u'efX!R2)MCOb=G6@$nkFJZruf9gO<#6<?$W$4d3^Um%bYCDl^X&Lc5X,^b'aJd?V/PrjW*:)bI9^!=^oP/2H49`$)%.:N6Y
%MXT%7Q%RK<f-h,hJu0>BVU47R,brIa:;=I(HJWZN0is$X!KS+mWr+7G^(uQU;rBV8r.i-orDXKCq?3uSF"RQ6.3fGP6'_'a4;^Wa
%l_`jU]M/ROkU).T'B'8?&%A]!cm,p%ctI4:599B$>)*qs?dQUmEjDGp?Z9VsAj:uJ06DOpOt/$,%rZG7BHN9=O2h(ALIQV2pDhd>
%(]roL*6$V&jp61qUm8oLR#^/ul,Gf$]QI0oT[.GM`(GTO!up0Kl6`I_1(%Ij.,%52#j)>_@uiaB*&E1?cc_>H*)O7JD_R"VMsDbN
%\tX>e.A)T%Ld#4)(j-D&m:NXE_7jLA5p/9E&YkKVOHW#!9,NT$6?(C.qJ:q9gK9E%pVE07@5M4uI@Gl7i!c+B<:cHfL/eP[&dIn3
%mB^9Wd*X8DT7`nJL2<EW0Jb7d`"9M+<h,tr)t+H7&Ir`8I(lb^fWn-h#-8Sj-6gE]bk6K6YrOjjlrNAs:k8+NdR%+mU=^:D=G@\;
%6LQ^h98&8JFR$BFkd\i/hPV%?&Vu&j(PtJ>/fJ'^bD\T1F@9JUNA.Q2_qm]l17CVNVR@ba)26H3kO]5<nOTGu@=Z?HDJL4@ebCn%
%gLd`ITLTMjB^<K;)Zr"\6&]K>b643[Hpa;;AM`Qjcm4U6k%:>bV\'eH`R(,!X^Mb:DbFC"^!PKe3%dd%HQgfn;"SAPnkq2tP$o]D
%\SBH"'cRMb=+V.9rE-*b'qD4gBq/[<^ZC3r?=[6[!@X;F<'7/_#03M7*eOR<0S>qJ/T_0$S2DHD/:V]iJ/$ZPqDeA"&0'9\/:AQ$
%2FK-uC!jO=T*6QkN]n]@5Q\K8eL822=5]#]<Q)\`=c=O":Ed<LC[][C@0HltUP>&45G*QY4ct`t&0Wc,53m"o:^/<[_u8h6+f'le
%Csia3^nnpA:q"Y]*f[B:H$*l-T*90cZk6-uLm])GR>l[6okk`d0a=D&<#[&7F+.<4@S@FC,@?G0q:X-13S2O`n75go2mq.kMUB([
%nJPDbJkU6BbR/^bKiqHFW@dlrDq4VsFQf`0hkjXd(,gpO5Gp"f\@:\_IGI7hXLN]rN=LNjmUoIUMs;j,1K@hgq)$7Qgk^mEc%I42
%\i/Od\ms_96L[:mI02;J7Rj*i*8'XqVFNFZ!1+dfqV?[06R7O2Obf+-UgKu&M(<9<P4[9gelMs?Po&c+pSJj]o,,R7,a$+&709+0
%rg0B9(aY%Nk\Ub5Oj=asoPZ9shZ;GJ#C*LLBLBn&)p3Td$(l$T9)IIURojsg_u`g5m*P$OkRg$"[6!9a_('jfJ_kcd4WP\QJ,]d'
%8+V/k@+BtiI+8#h5toslOQ!*+XB+^8l&kT2`m&fEr;'8ar@pB\7gTs>d>W5i-3,PQUQb;0$X(34;5,7o^DRDk0(r5l_cDtR<_ZCi
%c09fajqD@V@GF,<a_Tshl2cc*fXN0r@.po7rG0Ec3iRO=h[QZjVh(-4'aBt@5MFSUXm9Ch+^O#L_/(_K>fG2Q%!-O"M6Y!RXl=UR
%E.Z%@FjP]c(>Qc)-0Ak;mC[FcG6>*L)')0`^tD(h*L!EPkmGgHbW!b+H5L3>e^-h:KW3Kq/;@M9&Ol//!-0WamPh`Yc's0h#GYEB
%!2o.AjL<O_p"#V=b]GKMfe,ake#";6,;.t<X:6&)Xa*i7.6^V\m:PTH.ZBV)[u'<+H[Dp]Hu5ihMnL(1[YQ``IN5>jd4I,(5cqEr
%4ITnf',@)ElRk1@h(Aom<O`L^^$MT3:OXPq>t$,&LgU46I5U]\@pNCEDi%M[B;C_IOMW*YMIT^^0HF(p2UpMFP!.GPRC+sX^Wn8/
%A%N%je=;k.?-Ja-ap=cF)K_Gl+,B,A=b]CO8oaog)nsfpel(\b#A^#NWk#3`S_BZbm0.T,,4F:E>h7S3<r;"sr9YG:[)o'J6Q(&6
%2ESQnhonYb/!XW"FXl^jl53Ab;s@J)Xm8a">oa1HMcoQCjSdhBP-l#['0J?_cMAN`PR-cD#0ZBoKcX0k*&<SD&g;iEF90_1+tS@`
%q;%hq-YLLs4cQo=\cTj$"kgT!V-W`U1Uo!11eHSQ[W?GuUhHOqgIDh:AdhJl)Rn+8e/ko!roI^@FtSD]Z5'DRS-t\";(@E(&'erg
%X`?(+$4?ZEnZE[cp*&9-PUSB)s)M$LdKnCEV'&08/A;g?MJ`b^V)JRKdRumh7kOt9Xa*a)\,=FmriApfX<"LJ<'jWF/'=rCEl'?6
%+K)rL*KhGK(lRZ5@`bfcHo@`h?IF%eqGr05Pp.-ql<uA10Z.[Ck$+$dM5UNViS)DCkjA@lQbL4Ne,(`kr7Ad)\5<]>q)AG>JNM\a
%%CC3EKdH!a+U]*PiZJYZF*Y=[c)sfs;3rs#]1JKkC.YrOV0`$[?)6'8NDJ!s]+c0Ia@5FmLl`Bms0T1GM0pLmbEqkWY.ic3-/B<p
%+*jQb\!MERKnGsp@H=H=h23#$)=c5]\u<"0PeQ%OV"A2)8EUBK_N=L>Fn%E!,_332q.4`3gA9Jc">2k(f\#'CXa+gWo.GKQkPWa4
%FVoD"0!blVYci41/hGsSqJOXQC(?=l>$G91B@PMh@+NFR2B>Jg.%>d\O>0tOkfp9MQ7%,Rhd89Uh6-p"oDPAb&<%WXgg=Mch>AZ8
%GX1&[g-CTWAi3qE*Xa6qDYfVX[H45E<V"q@[3,Bk+u^jaEL<('1,/<cd#R)Q:\PMqB:56'H'AZlU2FmoJ,.s-bqRCg6>o`PDJ^T)
%">/m]V*eD5[ZMYEj0(@Vkj<Q,g@<]s(U=qFpXY&;_R>oLPj"sO8*SK<=-L`RV8`%5%qQgVq5'gCLj1<^S<b%6X:gB-_EQQ/@!VbG
%#34rAj+ZKGf(:("(>%Ss4MUVj"SUFX':*;HK3QbImtM"K/mVkKS3p#?EX3%</4+`h56YMbKo6"XluI^U^[8^-X!Lo3V)_>ms'V%D
%-GbW=ILN8p<C=ZXlp5iGO,Djr7!:q"<Y="*:&On>Di&;\Xlg\1E&Y*/Z60C4Ru-B,h+u_0jfoTs5h2C)_5P6Zrd[&SCd+]J'S]ki
%TTluj?4)U#>e61Vbs.AFkn63DGNDV-<HRto\o1./-!RtRl,6oW.mL@pbdUCKm"S40DVc'Nh*`1_&Vsd\O6TJu*LUu#3$[D>2D!rk
%?_L[W55djl4F[N,H(r0u/\I&:e<3`CZm;>`;NHFU-<C=!1h;.K/^I!*G,d8VL8tZ^Nfc%9noR@ZmAd-RP[fA<3D[Xd)=crZd30OZ
%GUuL9=nNdVJ)@'Xkf=i6XkKs-.LHXkGUt@<0-fR[Glm<ZB;*$0')B"dA%>F`gbc(&MRQ+&3'@eL68:iB9NRB24n#TsnoLbIKk$nf
%UoPmlSC)Kjc;#?IcdVBk%/>;[Kti+k=+9I9B&okI2pO:YbT0"cngPXW/V?Nb5iJ/)Rmh"]aaEZk:aL^3!$@'g(ft[TUL57sAEN>[
%4Q%o,ZD(uD2M>rrJI-"=Z&R6="UWIKYmsC^!H8)C>Z*[QE)'B(pjGe\S]WE2E,SQ&ntL&Pr]t(I0A=4G!U!i_$p8NeV\Ac<OAh0u
%8M!l<2@\EfYb@MP3Z2X8ZGE%BR\D3o-&cgnaMU_<9X$$6Z-\a8Ft,h/WI#UAT%+e9lSf-71P%",`CiEXN!&jLGgVJlPRWm);;>]g
%0_)`P6s)X_a*QZ3k-Kg]3prp6jDQ;DUa-4^c"j$bnr#:UYD?do"KG&2@[*km%!/Eq_jaY=Z"a[d,`-#)i@$[Ocl*4lF47ZoASg`A
%MraWaZ1mVl0)$@V6]nZ>h/ga+9m21D2*ZA:0Uj#nRsQ'?Hk,RRp8eJ^H,oJn<RZWrNfuJjUI?*B=")0gB6s"69('#j5pplJ;idNF
%DGPC%%o#!@UUFu.,@b=ga@MAublc"gqCbcN!LMhq@\GDS)Mu$An81r@aA+,nTeQ4;Kl>R\:B\]D1e,Z)%Dl4)pMuG??C)R\3f3Nf
%S5."jU_!rdR?ZeJj#na<_fAN"4bn=JD"C6WDfXQp`>Wmf3#9N_jEuFc(=j$95o?JU4u;/.op4jIrMlu'Yo(K\io#gKLeTa[,3I1:
%HP%^'DSnh&]dPfH_R&[h+9;]sW$#8dQ9e6gZ'QGn<,BBJlfBf3>B!F>ce$ak=N`!sX(B8b]7TCX>+2X\6UgoKZ!L>8#B=Ls0.n'f
%]8^,W=?%Z/0pkug7tetO`SA1U4m29`Ofph<4Fa"9O@[;PqXEhBp7?Mf^VM,(H`1<(UrpIWbZbH_f`rBI'ar&7qnO?R'_'fB"&Ll?
%brc!KU4c?%o)O#dS9ql?)F>4(E1$sR/e*]2/b=L/="sa31k-;6S._?XH17PD5KZ*5d>#u=LHEc6lK/,$,!il-Vg1NcZZ>#Bk!>:k
%d=]V)YT2N.4PAqg/4q-u,AcKC2iY7ncE[pF)4f:ZMJaIhIjNk6EL@'K/Y$gWdpO5I+u,sX)jYaL<6U:Qhp$d)/Q)+O*b<Gel^N1X
%1Yj-c)@)_RJsLi#FB--dS-B$`_6rS?fF.nYH-W]5#a>S4A9A8t+M;#-.oc&`a2;D<=YoVY%s`>D8$]^:iFX*57o+qZWZ7'r=&=/K
%%Y`n._*ZR3ID`='>+6Y03g.?Pq8ZEsK9\WV+^#n#Ss=%:q:-,sjY(u.^-?IenBE9m!!A#(n#YsbS:%cm#Z]C-85#hDcp1\9Mqp:s
%7!5?FjQq`jOT]YS,7I%.THQtOqTS`a1:[cIY='FagrL<F.[npK`40jhp?8XL7%tsE1ImUr9HWt,,AU<1"5H"A@8onG'F[uC6[DM!
%!>)73l-eR[U5-/^!:,5Bn;Pe+lu0a>(m_Q@/]+WX@LZE`-V;a0j3O#"_NH'@J5YoRhR"HM@%FJ\@91YUM58rA@SFbI@V@h@ppnY7
%:#jmCCp9GYb.Ibc2ZmqW:]!^e7r/dj4#+@D_dj?b=aN^I"/X!<R'7\M:B5*.b&-_b]W5H9Wae#H1VCXK^GS\+S`p/7&Lq(d(i<hW
%iVD(pO3[*mogIURC,34tes_UGWj<JSkG_l-("CP?_6G5lUEidoln9"q0O>@^nmcfLp&G5Ul5YGZi5#i9+FYcD4cJ,Y"@L0hjpOkK
%Au8=_^+lO`;ure'K]dq])#dd,D^^1>j7ui3[I^^fQ=<uTbb:Hs>k]6Boq_,Wn6et>#>7HBp"c!:kO@g6$bP.l_!S@Y&s:`*V7mZY
%h`n[6Ye%kB)W?lli<k0D"kVh%]\)goheR$mDs5LoCf@#KCi/0:=X<WO\OOb#dJgI#W:H<r?Ft7Q_$;1<TjNAV&6L=7-rB&"hr9I#
%f7j<[nPk@]D<StWL8#$@(8@ohU3(QlarCuMGj+Igb0dOX1\*<b_h^qf<U.q<.^.b$CQSesZn(/6ffPA&YIDFi8++@@^$@sqW5K/3
%N"\a.ZZ<aXr"IE)C=9Xa/4H/7S]DrfXNR!&!#;9jEp:DRRYd-CjL`4^1s_o>']&84DI,AM#IO5\*IC_cW!I]u=p&iO2H(=*dXU]Q
%)McpW$E8l*TrK@SB4]!'O$M2U.T%&AR+5[m^*Q;Z%I8njBn0lWl2st:,uE!#UO(F1X3m5,8>aOu+_,N#*C"]6Q@S8rYS42H5-,S_
%5kEm5Y##E].';[(feo$jVei7Pf6=!3;M1-$iCG%AVCu\l9+Q5+bV[+cKKN=hf'`ca8^@!>"/aL1NYYD$-Wr%m[Vf'ZQ6&*b?n$K?
%mBjf_MT.2%piC\$3.6[\'QJe&F65]pJ05)mE;l]l4BkS^O(<E-LgKptS2GTV`Y=j`2[M*1<,F<M%&K7ub(&q4/33N#GiDbsa[SnK
%AG2Z="a/@D>sHGEPg*HmbKYd&Y%98@A^gt^!L((J3Q:0`5QI1oR@EC=Fs+d*4?H7"A6Wbe%hhcCYFan.UTJP;,0%%R-=d/tUhMa%
%C8ZTfqnbXV=`3UO7;r+^K/ET)62Hk!'^!a(4ZR=uHa"8I1-t+1hDn1!P%k[BolQ(gM_$.S;&X*1C2iM7\1ZMgR`U(?P2EgB<Q8Bd
%@God&cM[7h]NANa6U3V_pYf5sa8So/ELj[1"2h$d;'#%]e!:C-lG4JAI8Ep$.Eo=&;WE0mLEt\"QLoSsj.h^F5KEh<bL8!379l#,
%-2T'oc@ndg-Q^2I5bW^6<<4.==@=kn_"d&3pU)LMW+oU'U8CWcf(H:\jsF(OX`=a1p@A\AT?Z<j#bnJPo@Y%jSl")6<kfKBT9fkM
%Pb<`RB11!05MBg[rJ5n3MD33R4/!5W<i\pdTF7EjTjDQjl$QF($GIKP5UojJY5U[H(OtO[5d";Wa)O]\.?UL/0@7g5eXd6pDonK&
%,Z@Tp44k!4#M-iM)nff-P*N)l\o\@5clnI.170(S*Cr06P]NSKc1@ASX#+7cLt"%i@i,#YH[BjS21t56Kj"8iW0')<0o]:(Qk;Z7
%eXQjTJ>:X(6pX\SDIJN43[BXL+KMZU.*Y>VS)"GOLmo-B=apL9/iS'J!B2koC:mS,<NA6X.V^UZ5hO>MHitlc&Pq#P6r)*H<6QP#
%d\RPPY>Rt\REG7ggV==SJ;Ks<='XlCTdj@STul3B6]11q:p%Yc2i`JF-<cgHNqn<A\Y`PQ3%#qrDh"u'5;l"gBd$7lN&Whp>*U8_
%<d'"W0c+XU5@q-0,n8FoA&F_SI[\,<I$HYnOuLV(?_0dW]fXLYT!jB'4r[h:L;1K0HXSZ\N,F`,@Tl0kOFWW#TJosZmq.t8($da9
%'dY2h4BJdKVdL3'LOfUTN2Bc$L?/g/kP\XMja$g3D>jB[Y+On=;nfhjhTk4=Y3#8(/t]L&TD'/FVlo+p\+T?^YH=F=?U)=*f$'P8
%Eh<F2#q&(B2G^F>$K)-4RV#NqNGt"T18/#j%>Fm?&.0's'g3+V)bE++bRgr1l5PG6d9'aeK,3pc3)G7*U_Mjfm7OlI1E*qMDc'FO
%4uWU>-@n.ok*o2>\?.>Vfr-4CmM@or<Db!Gl=N&(%G\3-Kl6A7(S=4Zj/\uK;blphrY?3gN*@%I,IH5.<rl5(7'k<c`R@SE$mCAC
%KH)mF=nh1gI%g&#\j1E),$_Gns,`rb8nY@1d^0`3L_DlGFEMEL;G8Sgd?R(]mP[UmM$EbgAHt%t$s5W:nn]*R:]WlU_\[joe0,-:
%>_e`=?>M5R5k3V1AfJ^_4NRW2j&Pibm'ofGnQtT0PtXTc%i:GmOo!JSpkt?BrpA#M!@&UMh!e.5?e@XJAf0pW3=JpUJ%Ae[Z(QO'
%Xhl0/W3'm[`1L<E)C]eaZ:*rF+d-HIM4,="N(Ik1%YpjApFmp[Fbibr5KSrfP1#gU5:9li*FIB/;Y8<M2>q@9\I2b$n2Kd\Bb&>m
%cjY<)eoEeMN?rq%U+M/6kS5&`1`WkegPRWQPc9T6Y]^KKb4s727QI(31TW$P*+ER9)=lsT@05t*WSNWP(X61OL.pDoS>fu"B(+mA
%38s?n%n0HS`l%DG^')lGJ$r'QQ/O?C*H7h\>t0Nh+Mf].kr3cfFBKbmg#^GOZD3>90IVCY\UKXSB]<t0_R5^[Qc"RQVSN.3DS"`n
%lL)GlMkL6GbgY+/Jo\<8kOq4i;G<9ZUkLpfAsXP)VIE,)=chB]"ZdN?o^$S`QB[S7*[K^*40Xmja-GoU/bm5aAtATe6U_2aOZF)o
%W-iu$4pWgdo't&enRuO^2fr&d1,V:@J^3Sa,0b/",oNG3==M;"Jm'GkO4Jf'=2-O,MT6m?#$bt?i2h>bl#Fh'-ER=Y3R47oUe=*]
%Li^K@Kq2#)BeqCY_X>X-&YBAC?mIjkWW@iKZE#^KK:HAJkehRl1pV](_$h[%E<m2i_flO_F^.U@3P0K0+C3)Nd]<;KR@74GL#PF$
%d!=sCMFii@\e,[i'N:Xo8-hN!0Zt7ab^&Dai_A7^KJI\lqI\8r0l@V$WuT=o/lm\gg_*.f(9Qd7CJ'bY.#+_'&q*_Q;J()1RMEX>
%^"KtQBqbNrX?,bgb#[,kakRN30g8#JG/n?`$aukTO!QOp/`Rne"QFTuOS@#nC0):!<^otA"NT^G$Q_mUX]:@`HL!-JBc>Op)AQ08
%S'bcMYtO$H)pdq1aQ,te.43t1)i0pq-I+&eZ&ZR`R81XB_EluIUUWChclVYLOrS9XN,tcPSJaU$_aX-GBcNekLqYnWHmXf)U'*@a
%,cokCU"+>Gc#lCCa,"1A`.[-F?SE:182Z8AX$O'@-d=smogfP5#YWL25,_&M"<:8s>'5D7jLf(f.C2OOfHef,Zc*d'$((_9TT]<4
%U>e-W86[e!9$C"A?&#In*R:S.fPs(*oYOBYX"QC+%(+pWYaX&e92rQ!n3dmpgdGQ3-UVG!U_NA..f"q%M>EsF/g'2jmP(pnQ[F$'
%cLSNlk>Lp0c2"eB[!d+]P5J+4\FLj)%o[C4DNOTti:1nJ,\(DIJRIh&TQnW95."R9P"jpg_fXkE2:WEMF4ah7&j"Y%J?Mq0`4>"9
%OW@LrpF>jKBUpj2V+8Pb.Z5)=JkTaXPrp[)(#qm*eI3,=MN?F0;H:7[br8&H@$ceQJEaH(104s7g2laXONbdGJl0/K(4EX077S$?
%F;;?N:hDeV16e)+">m#L74RPSb`-,m\;F8V$(?p*Z518IAJ6X1Ba)IKHDpsPf-dCrce@>OdB[LrQ?G!S+n8K7nH)&=NhNBQH67J]
%%pMgtZ[BUc@A^5qp&N[;Ff->*(e/b`l819`-?LOZ9aF'J<.j)275ST]HBHPBG`Yn$i(RSoQg1V?`]9cPNUUB=QqD9BC`3`ud!D/_
%7F-BflM$bsH>TI:*jHPQf,DEfAk3'qSG(L>22PRH3[3no'/`i"';qV402dO!j5M9*k(pMk'(R8C$''KETQ+fjHQLGMg\Nb=J]h/U
%r`RXm!\htQk,S+m3tG6*?&64C0gE,%HiWWKrHJM3n3'6g.ST<DX[`\=/_bSN]KXQNX[ah[[`C/SJg;9ZV0Z@-;'iPs>EDD@@VItA
%A-=H`VL:anGUPPQF$V:ZV3H(/O@hcZDH1&+l@fR6c5$01g[AI2p<$5".oOe-o!TfX@IC1?>*:'[aq$"#8NOGA?Ro"V)!8OV21k@,
%5pD7B?451f-GGkT+SF,+I`cLnWc_fYO6V=2rO!\Ro^rUXn_<kUC%9DV&LRl.)B.oo`S#-#4>Rr.Ru.E]H594*/^]>bi>bq(FF+Q/
%_nNnP'_jW[_c)@Q+Lb/DX2riVj7Z1`H.)"nh"fmYKCa4]?2aO"[0JA/UNm4^F8u.dm@`#J(RK+JOrL.?`c]O>nm(6f9bb%`p>ELd
%Cp2S^dE<GO.<%sEo_u9-L@>)I0(P--m5lE&HEl?#eD"i4IcJ:;@_/rB"B3@&P'3gPNuSinZc)GlLk/Gr-qLA+2NdVr#ln`I8t'/n
%)RXFcgI;*IrUuCdnuU!3rH2ME[XS+VMfa2K%6P`F]&Bi>dGHUZ/flT>\;6'e5jNVC(Gq\$'\Z1&NbWA;L^43&,!T+,D<^a:W#t:'
%\kD,Ap"qAN6,GZHmB;0/CYlhl+s39(_"5CC)s?OYqYRA7(=N,)V1Q]q*/"euW'(Na7W]-WTKH^lmXd18#.pJe)4KR44%15,\K$?Z
%G<JL>8@cDCdnE5`IFb_jT,R=h8W)$$A\[JR5eoKl[3oNjijn%e7k<mrmVFXG8WE)7,d'V&E0Fl[,IR,S[OHt+3R4hB]kkl!5VW5p
%o&FZ>-4d%W,a#"k#P@N,[k`0O!$O]6N7VT6^:N"?"B*g:Y39=Z`lBB?%+SEO4_+n^A;CndeAWtk8mtl:1=&CmX69R\Vhs`&?.t.+
%!;cY,O)GD9`>J!"X4\gER?,:cJ@i+5KlJ[K53b1^"E"opbij$[qm3gtX*iWUiLe@N'sbJU,,I9-g2B)S4RKt1oU[pd(_XsABJDtT
%]eO$-l,u'E9<pCrAu9(W(#_GsU>s'BbWn5S&h(5]DTe"8T`R@P8c]pV^f2RO3LS&f3-r;FBXaps;qH(McA#CY(Ej\@g;SFS,[k>$
%%p!F&?=h>W-5p]#V-6au<q%)\/We3^;/q&2-4En9_?i=h@`uUc/(8GJ?E^UuCe/,9FiRn9Pc!P7WeQ=mWR"PP:g,;7a3`)8J^E&o
%$F<R!L_XUNCc<jsntoc566s)QeIHfT7&nQ3A89B1=HJQ?8t"s,$N,(!WhI(6iuk.hMk'DM>=h!02)+6>%=O=$;(:Pp`HCgg*@JOl
%=8JFuM,^_fRuo`7&PR41Ot"SFUhJ3H-T-r`&lVQEIs^NUDV\:Vkt6$(0+*I/H!K^;84(H5%4>T2im>^+@2E-(fuOnN`Cr1EeBSZ`
%!o7JR>_`VrAcGZ8TQi%3hB7/s*Mm4mfU+/&+!Y$lhB6JkQcCI&'29kq,dm!RNQNd/"r_lT[W:/g\`j\Yko%CmABQjc3%ql>G)elP
%[MB.73[P:bk2'OCl([VSI[4F@88O5LRAq,+8u@;B2*u;--rN@V`"=@0>2;mYr0B+`]Ps]4.]L%%?Z<?^daV&YUo^_E)S=PeMdUYk
%U*O32FXC:RiV<DM(]F1i:WmX_hcUFgk?f0gbUnMn_cc4lagjJ`7>9B<7Aue+]mdNK6T($-!oe0O9M@gC&u(i)1WYb6SQp:L*K.F!
%jK!S\7/;Y;03LuT_sG/GI!2sEMUK?NV3J>5Lq0j$RA4S7]-p7N7pg@^9g%!Dnc;@U;1>t8&?E5M`U4EN,_>D&+"F\+?/7:nKIkF9
%i=;\T\XH;o$8UD@i,h++*5cW7lV"DSr7aq;XhH%qL<EtXGE`]UI@RXT=/*t5LNOm+VQlTagp96F-#B<*P^Dj`^V%(-JCC9?@O#=%
%cPG$Q*]V&0-\NP+A0@3E6"P5N4HXn\>Y,(CE8@*Y@thbF\)C7=W]3%(]Ade9\`8-H5@T_m@]i5h)FN%&]J4btN)0Z(.77)XR*7r-
%Mf"Vj4N(^CYj8@8ZS_S,P1]n7+1;ACEs-/+G,:"^Q-n>i"1^(gD$7I@:3m;$.'Yp-S(;<7j5<Op^0GZS#*0`=/j%54bB@NKjFMZS
%iRk;f5cU[<<la:Q28$)N^7g7^oG=6Mk@>]lT$#'mmpk.E,>^/Tm;8f((*>^j3X!'JXS-(Fa*R%T`C26q\91m'62Rlg+[P"?N^,sg
%O(0_PW]Z#W/hDpTkAA4@T0_?%I;0LSQ)\"\!/Y*EcXe;Ti4)f_3J.JbhsB+7Ha,:f99G4PI-RFng`U3)3kQ0*a@)g8'Ps`q'$ZYK
%_4sIdlHucY$umu1_lt[j/SLDTEJn^%kFA2n]g%@<_[l>kGNFY-dOKGp$re9*#m84W.&Nt$2RT\]e%/N(0sVf)ZHe0/4:)VTW9:nk
%=T^%XW(kU0XBMV:[iT0jFQfI6L4t=LHJ/7fX>lt5fY0KWid#J$A8UF`Y!@c*DI$!SjK3::,*8uC@TpZ^X2\U650d?#c!1oG)_X6f
%U[X?Ek:7r?S?R^[<UAF[FI=*EVd!VN27S8Tkudu"[MVk;6Tg,mGM3#ipOCfg)tKnVqTcAFpGMjV8,LgTs//p6`<2J@oo=3?dA_hA
%$bo!9ki&cD;%(AQ(WEASc0H[$R+(2G,L*E\jV6&4/+m?`H6Z_CiROgY(XJ(ds-Dd?eK3b:[t7.3U?d?A_Mu8sAeE3A$^BQ;oW@tt
%lc$0VM4NG4(sO/SQ"d00`>B#pTe2V8U<[[1>OotLld(g!4gWh,s7BS_WeZbEkS;'$'fct<?W\,d^rVXM7Gg@Z/5$\"a(erVMs.B)
%HtQI>;(U@.+oC\-&@I%H.UrLt7JT\ROk[3F>5"2$2]7?qO89L=)LgM<E`k9Q_6Cm@eh:aB#NOCEl:u,[1p?>]fu<8Z$NAu%cR"\\
%GCt]&b_JC$hC6j2p&(dt%:V@bF!6[ENf.&(a[O?!5m5?PgPRq'pqWGqgl.2*-+akK>!b$mN$:8Z?$^DOB;=Q-W`m+42`,0';Ah)b
%P7cb9nrY]+4p!TuM`/PXa[C38bOgK[YXGX6LXLUS#PG?e2)/'jC2k9-:,sD9Xc$],S^QS=4!R6^6u&,XL'oPpFVbuU9gSD*/f:1[
%6rt^q[FC)d+-uKPDFIGS>C=A$p=`0V-Uos*jX.2K5rENmC4/)\'QR$`Q);8URQq,dXOq2TP2A'[gWIoLPGO@/j-Nso+37J?7-B1^
%?W?cof4>?B:'5IoZNMZ5Ci;3V'9Qe[5n&KQ'Le)d`UFSI_%f?uR`YsEGL'nFeildD[Buf"Mc=a^<Hl)Dm`Ve*N&fLB:r3q`(%\^n
%%J(BQ\*p>+j?)&qUqOh,5^!9^P]P;%`glJ6l;m[]<Qet1-I<W0X55<i:gMX##A(jr4X/sSm-<2&#?Jd)QBo!OMH.WPAIL5$;^qpX
%BbaegJsi%=DY+!$;B<+#CkC\VjM3VQ.121E.4ZGuERas%6CZ9f:/QWfoQASoj/S4a=]s8cV4J(q=hqCFRYWu(U+5,kBjf!`=BY:6
%Yk(h):fPU@D5_24W6^IcMjMme'XP.JQp-J%l31LcU+Mug/0#;qi2*_]<E:<q.7!L;BJB$W/&EkOeGAp)<`Q6F6sut^DFV]kcL57"
%:UbVlU45@G9mqN%-GGA?9J+=o_u4W,g2BHN:<CT(IVP[u(9`Ffr13dSd>Q%=idXei(UYfN.Pk5J>n<&tfc:;"Sl%"-'FBhJCH+hC
%V&h:12J8XZJ5YO\$*h"8n//lM2)KALbDcrl->6_h8mWae6i059LTN,XPH5sq<3tQ,%7e,a6LfR45CdiA<I;NH;lWh2hoENto<5*M
%9#4(H<#@M5Q]BRSVUbj,6Wl>7S3gdsIC85-Xcg"$A<*6#M=98%-SZdM&#o3-f6*54ROo)8L!SC0h#8@3$d)[giin$)Pi4.H-lVX6
%&NsA_<Za:P5DQ&kADbpn.m]3,BmjMX9DY>bK0I/.GLn\lLC/N-<>>[-&Vm]j2UYEUm.EJGCWO8cSe/5r@-g\F@`rbFL^UVP.[61`
%Oom+I6$>M!<.P`TIP03<!h>t]+bqa7,c*j%h#^iVXd)r*pI+g(X-r^]G$L1arMrOdrNMo/n#M/9peQm\!YJ`;AF<6ZU\,jj$Z.I@
%Q_*<SBYF#j4M<p]3DpJ==n[,O<hd`tXWW7\;Ru@u?L<048Pue4d@NApE&STLlr,M2AIS3/-h)P0W83B6)5uglH,l*;-(ft0oL.&l
%JuRdhmjmdddao22Vi<$o.GUsno]24p22WXP['iaHffMngerDb8O"p;3[jg4JZ%-&f>-VqF@pTjlr"_mrMeK/O)bJ<*??&85[:EAN
%KVYtL5@nk+[Sg<Z?4It7[-3WC3[C/-1>e&-Y`Vn-%pol2bg2._To[q^oq(-(Fu[HTe^G_).s>&YVB]7`LJV[dd$)AfTn4/omRtHH
%MpJ2G@_c*:(36jfN10Je:8^L5]W\7RRi6n8]s:3$ao6*Q_)%+7C@b2W@.UFl6@_sIAb:+)Pd&YB+a3[Ua$7=rTDYYZq$Y,#hem!h
%gm(;A+T)rTpSN1ER70F"A;u=H>LhX^W!gJ-8DR'7Bub+:qpj%HQ>Nj!?Sq$G#O$C^n;AAW"eo,fB2XKL.Fjih=tY]k$dM1D22WP9
%5rAI!/%@@&+p+^e"r!4U&lgSI@kic>EAHgpd[C*CcM-8S<Rs'&&`'@a>'>FX/VTL5MHiASlgE(^p$L(4:Fl:\aN#s>MABu0-n<7M
%RKi#t<&4g[S%1L0PpCioo9G\2Z=>FN&TFUUE+siP)+0BK#Y*L#n%4\I?o.;.r<6O>Dm/rLq3f6e_rqpqU&#5#F'NEg3';o`S$5@)
%CfPS%rq_mrs0:Ggjk0u@'^k5bbnr^J@.*dH?./*JgDaHl?[Q!U=Z'WW"dGk]BC]Z,QKM<D)5B;'$Tkjm;rCZPBPeD(+!:T\LbCdJ
%AotVqaF+\.ie-mf[=9@Km:H:N@=qC;6pdVG[KMp)1V!/Uq&_c9dI&-be0LFk[g@$^*ERLU_&KNq-$I<O:8MEr:%AL[3pAhLQbFCk
%Hu/+sOpW[&XV^79]?$K4k*Y^`l2+`nBAp'RY)hM*KJRpiNJifUD@LgK]6_-dkJD'Er!Uh<p%E.uhS5.HHX%+&T0\Mb>;EgT8339n
%]t,e"`LI9]IE1;_r+I^/F7f;AdjBK%8i[VDDEeqqpY<N'8\?WnMsPd,^>FSlQ"g_\lN?'+!Lgd2`'q=WCUHgm9tIpFI_H9.qT/8A
%]tGE'DqH/7M#e*K]:;JVZc+Gd?blNLC]hn34EYOfL7J7HI<1pki>eoWq^.L6<heOe$Gc!fS)b.UA3:E64O8t[fQRp5$OQ_qA#aUT
%ZrU6#bPq,WUO"&Bm5pK=3OT-?]P?O=jd8)i[A374U`N&&lcn'L,VC88p1OJ%l%!t/)^lhC&o@Lh^sY2$)1,#$$T92"ZY"Q9q5i>k
%.@kb<D1?u2+!M=)$tN0D9"%qiC)#Y[H&J'_mj8dHR3:`U2VM-h3!-)l%RYH'kgT`n\jVuDQ$&"<e\oES%7gt;Q7h\N_t+\nq3?t6
%AG,2'O0N61(sT72YEEkWHMHSm-HG^T]RGWu$G`d"[/7'YG%#_&Po+1e'JTVqIul^dOgQIlh/aF.Xi)s)VUB&P&E1:ic@qF[HIIiI
%]U#s953#qFfe1Nb`iFK?Vj&&Pm)AXc-;bKLYIDQ:IB\'bfFge1gP-#!C_]Yk*g5;8iCsTBbYDcIRIX8I0!ZoZQ6!KRopkRqN6P;&
%koIpt\'GHr$,^pDkaM$s_>M,*rcB2UC,M!:Rp(b]n2$7jTjb=gg]WX?RrVL@;'<[lI'STqX2MN)(i)+="\s5(W-U898DDn!7)La$
%oi_0k&=%qPX46uU#83%t6%f5UO!B4Z-DQ9=#o\gL-K?7UO+@IOo]>8JT"Fjm6V$l$(Y<$kWkUa,g@t#_37W$bS`-8m<O(pbC\]ea
%FR17#ogPTCE?V'M"@NpBZ\3h0kAj^S5EpID93T!tPou"@<5b.]KUV4d&Hfq?qcWAcIq+JXd%Rc:Un8a_H('OCN3XPrW(UTn>r'sR
%dQkZCIQ+61S/r'c+I(km81N2=*j)o<A,$j8k'S.+jk$$H(0)?sq%'Jq<aCk_kHR$_gRO66`N+D*5.D/M)aF.7dPS8qW%?h6='.!+
%_(3c)"mo!Ao%e`GUm'BZSa]0t$LZ^5Zc"`Ne'K8,>QG`ZH.)3iG69jCph7la7:*S?$fj7^!PY&1)E[;*f:,,^5OuX5&ju4kPt0b(
%!@E\99U"O7/1t9jl'?LT`_U1l5=MrB=k#+@\6@#di-89D]M\6UceViZc\)![Vt^M`A3iDti6sXM=OS7[Zl'Au_'gIL/2B"-70o''
%Xr0D%OB0n(Y\<-8Sd@s-I%+cK$AKL>o`Q!aN*@2VQZ&6jO(*jnbU4*f/20eI@Z6`(Am$T`Tm3WBceV?"I!a8=\L\@kEm^ZZc:!AZ
%2o9Kjj&m6_ElR\AN#N^5S\jXrO<^:EHlp6J43PsLirs70XZt6lP1(hp^Qb7;\iM]@SN9!/Y6P,-,mR]\1g%`QPD0)A;+*eTm+m4d
%7PinGr8hWP<kZM4<8Hehpd-RscH\Dfp-Tt5k(Spn?j)6tGM%-igT>9Y+DF1HJ_E>a!l=`_28Fs''0j1omDk8-hliTV^[=h2khuH[
%=)KS0hlP>>:o"6k`+E^a/)HK:FWH*A5eij>KK'dJ4@D7/Yi+hLlp_U.9>:s:VSu8e^Pga`$u(o+Jkec[8Ogt08s&\B<<@W7*K&BP
%1XkYlMsX671JGjQ&^fF>$&pl:C$h[Lq?^ur.#5&-Z)AOdUX-oca[OJ:aT4P'UF08QReb=ca"<I.]HGZO<p@-`LNJ+\oe"kq`@-2M
%Qb@IpXCg.';^8Z@e8A20khCQU)Qg%;0K!6!=kM[k25Fu_G+0E@dZ!C!9hdLDW8#N]9kc"bqoi"eceE&DX9?mcAmeN+j)J\"eO_sK
%bk.'hCM!o6$o7"lRA!Bu1\^U2GoFWqV[/L`If;Yd.D=r*Ji,gsP5Wjgl:)Nj>rkrO"uM%Q3J-\s%DrV>h;Y%f<`%n@U8f\\7ZEod
%-HIscJ6qVDK#YAs"p_Ym=X',o0Hpg@NYefRQ.RP0%@/,>\F:nt'-,,%CfhBuj,IKRW3B.'9$299RbdahZ2oZlFrYa$A[Y2cLS0:;
%)9>R<UZpgZns#c'\4ndQ63[=KT<Kr=@#%/CGhD:7g@t+o6QRVc7GA(c<YatdU(g;3)AJ5I3&"rGU_&E^EY/p@2su7:C0a*53j].6
%a1B4li)sU6l5ED_S=ZPkh.LdKAV`#]c.)@7:]7^=k*^H'',Y,M9GaJr,MkqJ*U,OT;&)V>-g?9m'ZXaJ5N4X:,HRWTk!ipYJH7bg
%ma(k1l@&=Er-#L\LlctH.6+6&G8Q,k(<&??()mQVmWl*H91fOn;bf<Q^N7j.l+@3F4f[QDX6"l:V\.o8jc.cXVo?k(Bqqc/0)ofP
%:5PI=>655nGaFRdg8lRBYEk.LAr0J'W5+$s9_lV317COt<ZU351,:()c.#8GH*#:*RU7+RZ!<2UXF1S'G+(#pdRiAF[omB=fu-N5
%[.Id>2&GCcj5'Wr9J37qDPDKqeGQQZ^^tt(+e(LS:&;=;mU@?AqfjK,b8P;t@&2ton\,OagFl>>pn@es_Q_p67MT3FqL]YcU2jR`
%1CBN#*c?._;If=^%qg#"0>Z[Oc+/pR<`m>!R#K#3cg'4(6"<!W93XmXITDeI]K4eM?,U#O[^2F0e'V.dYas<r`@I_=cYAX4S*.6W
%=j72`W^4t;Re%Y446NfRqSaS+^D0b5(h5\QgWUX8kHd?"-K'oU[u&4mfm',+J-&&`Zu;XV<D(Op0fmVB4u!2?EdsGo')Y@IS/Kaa
%<KM7G9XI3sI:gRgHaKM`jP/_5"@oRR-g(1IYe#7P(tfB7HFQ\ndhmP?&QPKZ(RElh6rd-;K,EKA,H@UEK"N%"26X'W)c70_==X/]
%7"K&[E&"s>71d9NiA.-h#i"]$U7PS%[YX3M<,B/c;:<;CgKm>`Hf_bEPe.N-NOH3!7MH>mS/1USN2T'WCM45J<+4f*$f*S4=I1Um
%\/A-sg@rdL.'/l3'#NI\.`qc.a7(jYY`kMjF\a4h''<)&kAEagl,7/uMIg0`'d<(hF0LTO$O67HR'Dp7S$9BXLk=^?![u6H.c<8o
%rc>QBBN::,mBiSV`s`][T/P2Wmf%?F-mEjb^"ABf`h@!SaM)I=>SpnYX,)YCO(qfo,%=N&a_jCEEcd8nCU9]!E@k7Ta<dsg5?o@=
%*U13"3mo+G*9e*d1q"W7U-.m7\kbu6*U*`dQ52@lMLgW,iEQKV4B13G6<U+k57DbBjN*es`?\uFBUhs\YO^IC-jI>;So,kh,9+nX
%I9BATL,A?FrEB_TXWot<\%'\$_]>KFkVh5*Onq"F5]m^6`;4b#G#Sf+_q:M#<,OfX3uTt1+l:Q0JZ$!-GsA3^ZK,pfWu7.tfWK:A
%#2O7am@54_.`<!Fc-L+"[I2*-(q?`lglCVB=*JNmcAkLGjr=oW%a\ATbmT5f<ig-)oQ=QdeH]0ro+:m$-WJ?VU%'fig"<t3H"g%7
%Em4tc9R]4Yk@H[8n+/jsD:I=QO:E0"2(qY['GAK(?;M>Y4Nn23i5rd"c\ZA-jM+D_-3HCq9FNY+B#D5V9Z,`S\!\[_O_lo7"YpTe
%o/)?^C-^1)2@MbJ18"iMX4Fdl5hUsJF>oisDPCm+4;gsXAuK@?!Q>J(RIk)V0qtqLh+j5K=FIAW:bS:#DCD`F<4fMA:kQ?@1j1el
%S&Kr\2@JeHb/^F6]I^!YjXe]H"Z7DJ/7p_G(0$p9!7U@iWcFKXh$`o2]O,89Fc:"-/aWaAkPJjq/d#k(,hI.b0*>tQ_P8:1%&b>$
%&=H#2J/SIsQub'Vkc9%@2Zme[E3<UBBg<-m#7S1m=\qI3Ve.Gb(=[jQeuEbW"\%TP2\23Y:bV\Bf<LtQ9Bp\@Z!Ks-lakhg()4Yb
%KY;S%#J<KFYmAO-)?ig)Q$BfTW+/PiRq4OP#,Qu5mH,1YkoOt3ds'2^VE[U3dh*%VK!-t9U9PY,ZpjS,VSq2VcErBokS+N_Z-28E
%Goj#)0VN__:l`H2JBO:g=]!39P_HlJ",o]dqpU.+\47G8AjHkp*DOdc-5;)@X:qN(D_p1n9B%"I4/LX!_d+hG\./1\V#F*@:uja_
%q;?n*332*-JuU#]\4>PKHt,C=itNb>\Y%?5j.aIt)UW]!JS""$P1[eAQmN\1O7D.Y6@,a#\fK8I@((7a<#bt:M%=J6nErVlE-&hg
%*:*$A_A?C!k7\\potbm!*kUmMSNpsI4hf5I]6VVK4u*l.]1"31hT1cL!=*e)O7NBkf=Xf_M,nW_dfJUiK0q="B<C:9q<1j*^<[$1
%Jb_2E,,';S3ZZQ0#@eNO_)QY2'1u]Qh;q%-;T]LkVrscN<dQ86.!W>X9+_5%CY?"[Ca?oN_^Q441EV5%99BF(:5.Fqb`&X!S%Za$
%DYY'WQDg\:j7K'kmVsG/X?S\7,3VI:mLCW<7P!lBi=puTdl3%\"@>*2h;K&HE/N?)>[j=?8"Sj@'l!+(D0fsO0=-oppEn]j-#0?3
%%")5N&ORi4SgGppZDZ)VL=5TB_t(GK-+_T9.%?oP9J]oM+^>g4!Kqs*1mB2mW15Ze:5V::QLs*L!YJCSbGUar!Mq*V/h?1sVgf^3
%.09T9ir.)5&;hTtFs@=XPcs&1;WD?``i"q58YHn;cu(,J`km]GNi%&Kd^I"A4gb49n[uo&G0tGK5=dfC-#08pa0nAnhE;rE/,*Nm
%X.uT[I#ha7WS=EN4BC?I,k7&o@$GD[eZaCbI(YXKN_X:NXRfcYmUqDL0q!5M'*B2r]GjG$70m=_eGZL=]CZXV8%XO>UrUG:V/[UD
%qJ;7BX+bYH>9,6'#8P%0<.bf(f,m259iP6Fp\ubK4`]DXE`oV4VL(_:D>`2a=6$2-A-hf/-n=mLT')drWptgu'B3T?MkY<Cgu:ae
%CR32sJ;*/T0LmqY6K[fFji(ELMF]iEJUY\'FG`e*<&H'g'I042ZRb3:Aoe19'^*O;Y=0at"JE(H:#pfbYD-eW%SFOeVB<$3*L_i@
%1M!"1mDkg;s$aK),g!Rmn:1s@%jBgZ%XDQY]@2:[4"dm=YTDnhI$iM;Go>7\CrLnUX2`@aFF/EH2d0;(ar?%MTil3J)a;=U9GXrr
%qhML0>LBbf"-3n:pt&=OE<54VJ.Cl,KuL:9I@PNmCMj?aK;75"E-.8SV$VRE#IJZsJ[D7-+AjrMJnr'hZQetb[B'S:W*s%Z84#,,
%?<a*Fp;=%*Z,WcFY9iFk2QXTeM`X<1eVC-]RXG_7KVGKtj'V?Ji!bs8+r,4H!hp9aoTHTiVk,h(2t"S&*e=sA0GsIgG8b[[.VXaf
%eQRAhJI'.>W!m<!EfRcCfNS>E!ISCU5a-h`\:->DCAe]gJY)p]+Sgr;R3mIc$:bE*]<36!aGTk`q]M^>mJqpj\,qpB/s;[`&<kF@
%A<NZbB[rCsEBi#+jqrWbEd5\>bAtH]L1JG8#9$>km(Y9WJd>Lc0"+#\O;.:_Y!'$8+6IXi&G;S\2H/"WGJ/kC=#%to%nap^F#AlX
%g=kD*[^/k@pE$X+ZR0>p"Nj$Mh\rLD@iId_)c<t>&`ig-GViGXM,2DBSO41j2MXCq38r/^edjJ`cK2hP,EoGc)O+b`oPgoa'Pe8M
%i`^iqh]^LuD4)HcW<(eHX*G%ZEO9N#:X%RdX`A9;.EHadq6BlCeSY6:g0r;4`Q&,pGKoSQXhJi9LE)7VY:aA!C:SM]J##`aL>f%X
%Qm^KraV[gWpJ;)ma0&iFTXcB57d7<-@jX8O/a%I=an<&7\Cu&<l"p&lmlp/.p_j3N@Yu]>'\1G-Cttbn`$<cM;HuiL=6WC3P#OI@
%\U#$8=:.aO[VYDe4b/Q^URFY#XA)Wc>YA4Ac#dNZRsh6aVXt(GQmB/I$DYWB,14-+0#`X0(nr3?T+041Ou4eZ3cdDL.Ik@&86!`4
%+D<6(:]]#TKY\jtY?LBe-roOIZ7kejrGBZm(e$%BSKs_iCfq:+;j$,f%14Q0d3g4%i]^Cg0(--!gJ6kBOKW5r/X7-RWZe/ITo#4O
%%S`ZkP0m;E^10UbbF6*D<A,#d%52Md+02q%^u_I^+Gi]f\d-O=EPqnfR4a?Q`a'X6\:f04T^u[jD$:H9\Bt&#YiMJO3h*t?3)>2#
%3+th5:VrMljht_$-1@O"//6*`*]0QVmXhZYoe$@H7+eR0-)`F7r\Chkf,k:`?kVG'-3/cQieaHZ6W:Eh#P2ogHp[6Eh*r$4'rDG&
%?*KJRcED81ZV3"ol-i?D8qWumWW=_+mt/5?8P^A"d&C376-)hm;*ZTOp\b,=?`p88)As/TJ:gi@+ATi&j(CeefHFLDlfIYfd^&82
%NqWRr/DX&id1dbg)Li#%RZYi;bibs-%*K)g<"KK@NG'OY4m(%M`ISIl@kEfH#jgLc:uRenA'rfG]*Yg<3WM0A%2t.XQ:rS@2K^iS
%"8rm0:W!N_1dGjlY22F8HIL;QcV?c-ArV!Lh]>h_kVaf_UVS7BU9??[6If=Yp=!>;Fc`g8\B-"j@1nDI"p[TKQK>"J!<o$0fDt^R
%OqN&FC3#mS\tDLn]OGAMkaH2oYTJu9#Su!"%Ht:N9Nep3<jWFbU@W08qhe/"^d8)F%;]QP'be\@b^M8jh^G"$_t12$G.u;f+PEZ5
%&gA#Bk@chCa;Irm\d>Zj5d8TnIRo/t'Y1hPAG^8U5cD%&:)$U3qK>FS3DtV9%P6lti`oGd&U*"(+F4eR7rO#$![X+"R2rF+bbI0j
%N40Q129YYq&n53IXl-I[d<c0r:\D/i&;H@_QRGkO_F:^VE'?+/Fo(AGa%9;Jd\r?0A%24uBC(+WZ8rZsKumA50*\_W`\bg>rFcdX
%Xe+ntS]GN@r(9[;&O^B)PjZH3.XlG"*]m-WAuft''u4RUBo"Ui@J>F)pe6fZkZ$qUZTaY6lSfQ7Z_Qn*Q*:%@4B,O?'=>+3Fdt5O
%e$C$::XH,)a3h(`6Vp`L68=G6S&J`f:5DDclKSJARl2bTVCY$"kt=H5FLD!VH+\']RBBEN?[NFoaCdS$!k>8.;#4GI.4>M(]1mlm
%hcLOF+a,Lb\_!k^Z9u60?X+3q?>-,2rYT:W:c?X$SW`r0QZ+hKI+?pFV`qi!cR'sfZ4GS).`hST<s$pJ+H9BFK'F5%g<Cmp:=h/Q
%5-\3A,Jl!F(@@AtmOb5SXj0P8K&2hmo]6DN)db207\W9MRIQ<d88JFm9pLgSHb3K7[U^&!G5T!QCNM7dGWmm:,V`jU)TDbOLu$(I
%K=n8ZALlE`O!D\%f;Df)4ZAPD!5.>=6&`5SVPl@pN[PX?XLt7+6,7hR3Ihk<o!8Lk@K]%@%MM=[3nDK3(t&_U@&WkDNcu1S!8X-!
%_+[ol#Z9A,B$2O"h#O;5>_/*i?<0/jM%NTPW*o>RXIXq\I5Qshh"G,.<g,VtBI\"'&XPd=%7Bfn-PLZb-.`QPH0&i^!qh\PcUmNd
%1,\^@Ib4SlW9t44PR/k&&8jV!1\DBQbReC#%n'bg*Ai+#73[!MG8"$-R_e8W%M4dG^BBpW>blUI;H>f/0;<`1k331L9&n9idEl?!
%03[k6G>OLN/OkMh%-V6IMNhZf%#XpX5L*66OV$LMW5IW$<<OWQk7tH1eRt9h>5'0?ft2%\1bNuF!r>l#+Z@6tOXJ3["+iU`Butd?
%U`h6,%BSFOBM[ggqA=[mjP]@k/36iT-(,]DE3*mS"S7st4T:;@g=)+IHZC.#@O=<FZ5r&D3+,m.]!-X?U-rmN81'"aLF@/;0'dbE
%D'isJ3NWLOOT!jo\fEJ-?o_(1'?(/a.!I?(8Bh>XcTE4,+%aF_C&=1-TT+uIa@E]g(9g%,f:GrAh%&Nf7F[)7WI.m&7Z%g=qR"h+
%=]^-[iD39JOs"Qlm_m?0bpm6CiTr5"ca=%h`[N5gga^.`V$dCo'>E[lgSI[Z<SZB>1C_)'d>XFH;aj2R]UB$3`?m-J=V0jiE_loa
%#uGDt"3#Jks-BV[8tcVm-UI;9S9L/tJN4qiM?aJ4Q;b_M?(P8OSO[[MB6SVIa*j3e>6QmKj8b>k%<hs05kDSLpHFh2l;uJ%cGt-q
%&uDk9N&$]_Y+#]Y<U%@SepP!\JArAsX+m7^m^mabN'C8D$Zq"X\cPNN&Be`*Fm^0sddg<$"s6PIA$AUqnjo$QUo=U]K/4o(bFP7a
%Q5jO;LnWOHHZVbbVUE[i>\R]]Y6mW^MmEU\<Gf;f70p5RGm(%KEk,<9Xd?=g`1YHsRj)@A^\^$j>#$tP:!&@pZ*:OY-@$Dt]#U8>
%p/GikX[@H8'MH1M`EnA#cr:&F8_(;e&A_\oUe&j2F_/t_C>b;@Z5I^E21,"S`ZQ9"fqlfTT[8re-o(\#d&.W_IODae`8gjQcXbt*
%RX]2Z^I.7INIHY]Ea)78NCFQbfO?/DM5nS:"6kAs3H`.]37C2u%sD$?6Uh-O-,F\-2F6_JB(\04/?omGm$M:kHiQAaroM#)s2E'H
%%63FA>usOeLS'oT/h)&cLq:sc&Ihi=9k9P4VgoBOTOae!<5)[ebTuT4V)b#V4BkKG_\hM(*9[GG7_a(D66<bBN:YUq,Y#NP8!o0Q
%[5h6Z's,:hIIg4/U2'BKVITLm5F+B`?+_RDi81XomG`?W>dW6![ji2Z?moeGQK1N$'Z3HJbB>k!DW"cWBpGtN+%?-:.S9um[aGI(
%%"T4*miKDLqJJ%6655HYa3C?R;G*B<5c85OLB5Vm(YuK=cp$q$\V\AjZ`j1@X1K6k]W_-H,`Zcs\ijBNc+oro.8hJK,H<<G2tqdA
%mLG;_'^;uGge8BUWNq2`fb278GFi%6jthgc_l]ZN33]2G0^jck%;'6X#='o=0oCNs1:fgZ+M*:0HAs<\oFFeifcrGB'P8W"gLbH4
%)PmWp`GatLXkP6GhfAm$_r2_$?WgQ<Tn"H>kJq:<(K1FCZe<IU(")^21cqf%3.'K,>o<E`^Q2HBH`YVkLC3\8U9$FLFJouSH>''4
%?50ZA=E$uY>;3]hH"WT<f&tcV?*)a`*BeY(6a@Y>j'"Ynb15+48d!l8RFN!=@sRqZJVT)r[K>kL6uJFs-(10Hs3S]bmDkJ;g-HF1
%-c"2S?+s,f3JP%uWO`f]9nhg1P0HnDe1<Lu)59/R`Mesm4&,9uXA[HS#",?PAo&)m<^XJ>diq5h[QcTg/K0Rqq\$N6T(/RVm)W'W
%P$(f*?)<tQ:q'#uCl2aG$Ip^o@Raq"hb)kt"ZK6;Gm$PmP8mRL8W#,Hme+OffeW#l(Af#/;2I:@=XhnogL;AGeFhAS[_5qSdi5eZ
%>:<GoQ)\o%,^id=-])kU76M1*ddYM;NGKBiV'&6@hOAV)ZYKD$RV`(?%tTiG(WiGI/agko>:+:#>q;4TQu!j4Lg%-L5RLpo44'QP
%)YUW2(k"9LjV=ED,CeH,k./R/"jH_Irp5$Ta&O4sfe.B$fsq]j#5k/^>SIc*+R6q-kE3'#Or/V-QQs<7ECd%'R0"Fs*MYLNTMFY,
%j9(\-9@?AQIT9E1!a^0=&'0DJENheU-@!L3)rVWZ7?R]d)(Z)TN?+a.0I4<5%S<u%S_i_2;csKb$=88D+`j(Zc)!N=1<%s[.Ea?j
%5&WlF'uFCT6]Dq<dM2Ij&d1W(!'9pS0c1qenM1=`4Kcl#NZ=VOqgup\!X_'p'9TQjVC[^:T?SP]<VrNPJi7;BLUBosA]J^FPLNkp
%Z[(>g<k1ClAfp;(MTO4e.8rKV*:PNd"ZT]O!p'it3PkF9X%=6gDbHfuoA<T-r2/d(G:(%#n3Z^%..G2nSSR/p"6._7I92h$LA-dG
%:^AG<Mb`IL*#-F%E="_&'%mO)'[3iZq/'#8)=nl'&[iZKR,O3B@74(7;jJ,A?*+jk=X/oC%UVCK>G.o$ije;?'`YGN)M_PJI'=a@
%;b]B%S0"X:(riuak$GG!TBT4jFfGe:"GKocOKm&nQ;<EnE^u%](/^fEC8,jLC7^Ss'%qeG)=l05VF9LUReO)/.]\_Q5>9Y7=u>'R
%I^;GkaR,!N!PP/n!`$I];1OmH,3'OD+H*$^H=N_QXeN`Wj-OYG<:R%+%Sg[!OT79e#4+=#Ha+o%(^Wd4X6,]._'p/L,[P9K+u3!6
%,_P]la\a5;1o)a@S60A1-m]n%a*)#KMImPok=B:%N60NUOC3t.p0et#q9+&W:)asr+KVU*WIU1LdH&tWgS1Mo\"#St>4@+i%dgqT
%E]q,EL.YdKZs\BlA/sI[[2NIZE4YLUCMsGQTL`-d[:^,&T^SG7c,$2oapTB<\/LfqE0gn[kRkK[n<.6q"q4un$)-]CBsLT0_Es>Z
%c&P01:THjS8qFDhmAF.\.*u"3q@hToN?&/@Pt7d'R-r5EN[QGQ(*.$>>5Qt5doPUN$*BiF_rfupg!(BiW`hpgjm\$)R0dba-]0d^
%E=@=T'bjYoU[<W@`]tH2P6T^rEVjQECq'")9I[^.\1Q>VENG]u0sV9Cg^YREG^<R;CK3kJjU@r"CAdVp`pUlI"cE\/(1FXj4pm?F
%VhRHs&h1$#&r2pmhGi76"3Y)b1M3AqWt8WGjZ`A1a,]@JIMmV(f=u)=.]hO#":&p7;PF*CH<aIG.mg1%2'P%S<(]^N(L_&m2[K%+
%95Rn?:bOX.59`>0+HP/M$7eEe,*r\3C%X^oXKit0<7TK(FPL[!KrVtf0!37QaI+?]1+la5Deu_&7&\?U+qRDa:N0FEl**S['Kcsk
%_\7dN^ftK;DC4HV/B&"f7"Hcr6etTQ5b#9!=-p1$W!p03SS0Z%h+'p;hCR>4!l<B<,9.l=N>F&d!E#7nX>.)@?YHk.VY2>`Gu)CZ
%a,:'5V$phN7--fd<*/?q<(TG79i*6#OsU/CTc;c:H;F>YOq+!fllNcV8qbna'XREb^RZ.:BUDfj,pjMi(0*W/en37n&H:1bPLoaY
%FC%jf&03-D1Jpd,;+"Mp7/]]u^=0`O/TYgp/'1&Z)CCNn)201pU][iVaqDNYW#&nffU'.1:'8\V[$#ilVh_JnH^Ot39b,9'G>K2/
%P$"'U-PeJ(k1mYfa5'2PIPER?kQSD$ak:;LicRY"Q7))-kY:]d@-^eZl]dq/64iL#qUe?fCr#:eMDIgn@:%3:QEl*]`8jQ7#"o'Y
%D:'CN%*OgmD9^XCB/].*A]PK->$BaZ:A?^6Ku7jNhbAFP^lg9b!VN5_WW;b#dKqLEYYX?m,ZQ/D)GHl2c6a7NbI^>]8hO--#Eeg+
%`P0Nd!)\hBOcANi7_TLHI+ec6hITe,WsNj43<DO5C>Ej9CPi_Wf&f6&^n;!fqLHa>Xr]On#Y=tPr#2kFnD$UUa^,O/Li@jjHI32a
%Uf/J,'Vb$Gj/d@l/5Ijp0Q8\>&jj3R!r@5<dUc7k26TScStUlq(.[jec--t%>`?qO;\^R.BlM<1ILd1Tj*Gn_+d(%sl>tU8F"HL[
%1&>tZf.o](;&3%d`*@I%"1&\9.8^6^g>@]4pQN+I/U3-=:b'kGSNJ<K65iGVGd18*MVq=(0T87?I99^NXE+sm8kETa4T^?LrF,.-
%%Db5cJ20%?ZYW(;)'9`tep!=$"aQ1V]LL.j=%j6oH.eN?Gl,GPV\^,-#CeFoFQsS)A+)30MFu$lM1Jmm+W8/4<MT'tl\2hkFKQ8Q
%.=PUg.QUj=$+HZ88%'jDOlQ@ML9*9:3S<!t<Mb;dg8clRcC_JE>]FLfN2D=7JS@hcP9tsg;sT]fDm\"OoRBH@7&!s`rTjfI%Z2&:
%^Fc/t]0BCg,NRW/2I'^FD!S`m$LdJP1=gGZP\k_ERf[+1DD;dCU76G5po.;pNn7i_ghiGQY?G9->(C)WFgc*`TsgFPOo*jF3sOHF
%JNE#U87GXrE:Dmm@AF?-'2b7J:Jc'P[328$69PiAK42/lAC8nNh%[2Y%%FF)q'3h#a'1ao[mLXO8b!N?R^P[V9!e+a8ZKZs*n7*7
%)=N`:G>t3rJ/cbffQH;p*)Hj+PT!*t08AWTVXL^Z!,Zs,2PU0c;#Tb/C0EE6Jjn,s]'r<[HBgn9\e$GBd80A(XV\LEf=o.Vg&5/H
%eG(-nbm'9P0<$&T2ae>(hHZ8-Or+)h#bIZI[/"CoTogCf:4'#T$M&idrVOtEQr,8L*@h<aZYQmX7iNmMVRE4Nh/5"&Xa2i(AJbmr
%$K+$D<(RIZUklT%K(M8@dQs,B,fd2_Fq`.h+Qb^\h.IM`>.-pWP"`*CVuO+V^R*m@Ma)I=Ud]%0b)=MG;th6i6XP?4?l!G(C0L@r
%C*:r,[EWS#`KE\rmi$J/NCn9`GF#X_YfVt4),=rujgfPF<URN^K#Qq8Z3ph']jpd\)EuGkLo+I0+.Duu_oL[po!5B"\Ih&q!p[,&
%n^V*@9;Pe2K,/hkop(G0Oc0T<6>=0#'c6AG/2f;5O*q_oSNoL,B_J.jYbd'`oF[9!T>uj*rnns@h'5=nB:\`l#C<j&Lr<p%Z4OT_
%F]dP4?!;8Tm>EjTWh4.>)Mig@.T1-=3q"'7r^'7?(Jcf+'#'k=l(SEPDH]h1r6]#)mogbe'(8+ZqWupJWTDWW"E5dmQe!d#K8qP?
%h;78Z,HS8RpOE;+AmB:d*R:=T0[*Pgb.!-;[km_GpZCN\bO2?`5BmI\n?r%2H5n3E$qMjg,o>9=\,]q4PD+<$5DJ<G(:u#!Jfhq)
%]%;PdJ0OV@1m/gWH0*?8/EXOgp!J1/]!n''rQr>%]a,6YXhue<eD9p+KX0s;Bh'n4[pN&p80]n:LE3lK!HH9ggH55EBp;fQ$He*`
%:M38[79',0E0=J*FlmF@PaLJn3JItWiJ6.bQ7i?44=5=V+b2B$)Wb)42holLXtSRqlOo>H6&j8pP6ZEfoES%:-@Zr&++:B:B2S!t
%1CRW=nk`l_M"!9,B=)@h^hsDidT0pBR#;0"6bE6g1^/(iUY/T;bG4"arLW$C@,`0VcLTZ"gYsDmIaQ(U]DfP,)#^l2qC4ECF]lKS
%9dfSL&<2i.9WO:,'8tI)+R%n2$62$']n?33'B-Drf`2::.<c6:$V,52@N]2nO[rX=K[kji8Dj1of1<jc"?^Kqe;gFt^*&eMHhSd+
%0H4$V-r:n$INte;T't$L/f%ZpQAE`epk:8'jEqLp7X?0id/c:P'5d^&Uh_*]f9%Y6)p#5M,G0Q3@%QB*JqRP=HBWm&jmZL&_hp3W
%C#[ssa-WU\a##Ag$+p+\rHKl^91#>>=H5s1RRb=:Kem*C44%!Z&m`nGe9*/@flCaqO*:24=$ZNjLH0-!mN_&3.'6"s&N@]0@JK3E
%&q,;ge;72TrP;*O[=\,e^Z$0b6sKCDko,<DF_e'b%-fL5MLRb)d8Fq-X1iE'IS^U]APt,=qb7=tJ9e#p?b_b05Q8@:2d#JPr78e:
%kb#agM)D_pn%4[u0G6S,pRf27DEg?LR.*VgnU'W25ap$lX\JS>'+X`7FlW>o9B#Pb^6OHUhJV4Cpi][([lqA1\(=qNIjr$[M^$gM
%n>W-%]QjJ+-/@@'rq_oHonTud8q=I.&ni6N9=Rd@q9g(bLRDo)da;r>U*;QY9ZQt*;n0U8r:s"E_md4!oR-n+b9P)lrDQ@t^\%Ho
%9B"otjQWmWbr?GV]ir:"Y=+(UhnOX>;L&0<pY29l!%appho/65gVkW^Ek]ijf<8`:O0tsU<KmG.:pW.LRq`7JRqhf:?b_!dqt;7O
%-1"7R3oM[*a_ibQiU%"&8'@4(G5_EJFF/SBnYD%mm;(>!gE+(^\+cK/Ik?*D>144%gqUkqbNHNfm1eF6HiF#Po\jR.FG`%dru/F'
%&)VETm@EEY?V@"];>YZD'I^OF>_-a@0;1%NotuR"4tI#]&\1`phTq5:?`cpYHd2Baj59=orN`92*KpjEnMn3;nD[HA7!Wr,,u@KJ
%V'B!'*MQGB+&M2n.6jO<'P/$&Md`OE`*Gl!3#oNOMUb*&WAr!K79!6lO!r=::"7`aB"%n=8M.?*.kK!8XGC7=8Nj.L8Xeb8EV8um
%I=4"%PT,k\Bg80"^ESO\19/H"gCe)0^ZK",^5!8t+=*=$R@ED92HX*mPh1PHT5m::^VC$8`B\oX7Kb:[Wi8\nfVG67eh0C4>N.*6
%YS)5qk8p[0#a0q]NaKHMQALte'o5O5[kXO3?BU"fP`5GuY#cS5Q__uj+DUE\AWua;57j"/c6;PkT1I,h39G:#-omGFhaBdWc0'"N
%8k+SAdJ"]%JPP6.3]ocRQP-Pa:3/gXmS(BZ(e:?kK)C&,(DCL`)DokP%g&J?kur\[WTDTe0sk0J[7hd91SAGGDp.AZm`UX=](,#t
%>Hqshia*&le%UVAYBF:?6rg=[DVGo+'$?j?X[B[L9=I%g!cgMT\i(e$na4f>A''O\(O"Qe/paks^XPM&#PG]#QbE`k5^d>]Nk*!6
%nCeV5<:9M>lGlf'nYd%n]/J>"I*]]H4";bG=4rlO5AmY_rkZbd:2)&Mb>JeDl<9*ZA@$5:YlI_,qWplWLKGEi.:#m_mHrM.j?.M`
%`cGY&Q07G.q#O$[cZ^g7aH*r;c[)_:K=']p4hjX>mr4ptq*Ogb,uX&tXY`Am@2F?YC)/5u=/Cf^W=R0Ve"'H(10*XTS)7mU!5`SZ
%+j^-a9];/KRl"[+':_9_eX6QCO&.P[N1.(1HDA-Boq@A-.ck)6Mb+CZN_2`[n&>@'@hWk@UgBRFG"JaMI>[DC%8IKLau4fDU(nRq
%#"dQZi1#CKHdsFr^NiDs``9%\"Wqc.iH^UC[c9]rJMtQf!!9QO^ehDiOK?4JK/c!6K9WG]+g7GTG^oNq5;2Nc=`#1em1d2nEHG.u
%P@-nYY>o%1H:K?QB@6G^V37LX!EBp#N1S!(Y\///n;\ti;m*"VJM7T9*R_9BqP+&(aJ6Y'Q"=bsh4'Ql)J34.2,4SkcrIW'Q_/Td
%>p`QPiIl:-5+=Be-N5ol,Us-SmP^NV2Uld'V9eUYImQ<K8N`0./W"f@FZs#el&t<C.]-N3#`bbQZYd":oq:RQB@DK9e]<Q(.'kr3
%XDEEeb*h$qP(mZtm3%h]e5V):d00)7U+&N$AXWAVo[BU7$,f^Q$hRR:*[@+QIB(EC4/_:Z=W'i3NPsH(JAKU"ahN4:6W5o'CeQM*
%&5B4IF]]tDdb%TUE<.7TQ:S_L(F9\2)'Y5if.Z=Zo=pGEWNWo/[YFd,Nn4#)Nub.*5[b+4Rlen6AR)gn=%M%V/H%?+3Jo@0_c7Dm
%Ld%cZ&;N"a(F>f>(_mHu2rfil2V>tK'!`\c[nf,omd6@s*<+i<GqabSZMpuMkW#tiQ`B$n.XKAaBfI\sU?T_[8F0Pk:^O'Q6=87'
%WWimD.@#Ah$OS.YF2D[e(XQHQ$P4gb]TtB[PgH1W\-=.6'q,nYM+k1R#,lnN\iX,]C,NA()DVKj^EgHE%SsVs+&fnBI)Cre6gVDj
%TSHtk5+>LoqT#;SgB>BH6/$)!T+!AX3M/s_:W[;^\A@h\`Bhat9DTfVp].o4%+d&Bj\9=*G/#VoBdpM"h[IoAAd5R:)IoXlE-Eg)
%@nCYRW?[+iE8DZ^nPNC88IQEU^:coC66RrM_`0eb$DafV!(j(e[/$6HV^:hP_^9u=Cl7O*$A6Us:;I9:[-j0mhkX9:QR3FrMr6g+
%90jk,S9j8..[0c<;E9V<H?d>#.<jFqNImhGEgL)->"XID=;LY]j4D_ca+(T.<#+_tb2g$_W_!AWkrqq/I.X4DI,Och5Ij=k<C2P@
%`5!Ip-naMcclS1H$U85;7a3*OT6I/8k"V'kdRlpfP3u&=*^Vk_YGM+u<$D7q;Ve,o%p,0m?,<[];Q^jg18,ns)!2-&,E.,:$6_h2
%J:&a[8.KVrnC$?E\;RR%L(f+hl)d\CUqE"BBeCje+*Cem9I0_4dcu6$DpiLXNkOi<b?pA!D]mS6Fni.n[s"re]bI&&^\:0rB/S6:
%\nk)c)=sPQQZR!N\Mp67I4a54W_-03`Vb=0gSi^3?4$@Cg2M<F[G_MAD)AEP^6X4V_Rnad6f3>^d$@oPK-()#ZPYs\E?lR5WcdKi
%o_.7;.^Spsks"liXTNZfQ_O1R?#`Iu\aiZ0;CkHBaX.&u);kUka-RM29Fr=-1!+,Z6-0PUl[ifEeK8%?`I8/uo6aYj08A^%f,\ND
%R-n9-%3bfs<Nn-UhF-;RDBCLmj\aPaYu_#GhF)_"/nkK!3q2)'3c5u5+L^_kdDrAK9D\Xnjk'A(etVZ<(PVm8gPe5(fUsbAak8d'
%$8@:=^kHq:'B`0om_SfIAh$a38u2ge1C<%JX#;K7nCq"g@7:1GKBod7<_+o[R,s*tb%Xl//;`fYfcX.pa3;A8TZ+4Q/r@_+%J'!$
%$:(iRHrQhgGM%KOAf'@K15AYfH9dX0gSNTGUE+\-P#BBg1Y1h.'nn-n&&/*+>%sDmWZc_n'h<#[_#IZ7/#4j-cE'iY)4O1q!#iId
%6:u*lBjh_u+7jZ4Ua<)foFa%dp@nV:6H3-:B(U*"n+N.)Te)-<fd!+J=fZ_fPXg@'3+(AoAOVN(]iE!IFo,(!7p`MR^rX&Xf&o5U
%6/I7rW53^@?Zh@`q8M+0XbL--XgVU*HL0VYPm86uNiB_hV\%UD/+*tU:"pHIfp[=02]t.P/it-g=gl,=rCs1tCWn)`o&16T3+$g1
%c><QiAUHE'HLPbMot%&=hA:`B9@7$N*#cfa65\iVq=4%h@_8LTdC#TW)4Chd]#>-_9j,!?3d)#g%)8#E--*R2F?bZNE^$>4n$pmd
%,1$'pWi:Wi$R6%jA3n2$eVXmL)%!W[D_+1GeKO=s#&T[D=*kGrkQ9G3N:JsECVJB]C./e2ja?8Y'B!nZkQ48u0Yk$dkEIme\oj`u
%3\e\3$,GMZj*PPq&GW,h2kemI%/tqFOA]0;dPQWc9j5Z+je2&4bWAJS+s.Ef3EKpb1o`fIRb+_)V@6A2MI^7K=OS_K[C"\shgR&9
%F5C82N3_Y`KiS3?'^;kAW>a(':&)(bmrhbEHrc`GrHnp<5-&/<m$FRn[;$Q7eYUTlOq,%(S<!]P/p`/Hcn<GKZS(49KW]NiRd0b3
%Y0kOlS\hH'kM)T?\`pIn"ck;8gDF0^f0gAJJC+7\ZF\brkqn3eZI\1OE[gJ:naSPDJmG:H_G^bHY<#\64p73I]:*n+GW,SJh,?7>
%kd3qcZ%5rX<Q&9qX/as/B`8LE4huLci;>+a^'H5V;:?>7g]"9@C[H?-=b21JH$cho32=rF!.H"C5mNgW)HOh?%E]cQ;63\Ua^).K
%KkPNB*1)l7e7OGZ'.@[GD!gi(Ckh]7D#aT`2Sr)5D.Nr)TmA-@Nd1r3+IUS4,8b+c-/#kN#oe$;CkqU^d(&,H]tV!%++)b.nGQ@>
%s7!Z:^aD]'+Pk=%8n<if^pY]'KV/d@=I2jpB/a6nc?[#$]Kt-]n&LOTjRZ!;>GZ>A3,.bD3Il8)_02$B>fnKn@XDdeTW1Vs$ZA6o
%HiI:G>+`5UHB3=n1O,O<^Rmr]nFlkQpTLE#paT;!AcI;KIJ@$g_V)ZWWS`e76rCVW0R'%\WB7,"n>Y\@q9jl"]VO/c;<>D\j;-d@
%M+HGK)4`g0S^NjDDbcuiZHOs-pG(lr0,\ff/u=S2\\ObTgTXm;70l46DkJ0dHRl6,jcAi8%Q1>!qAi6%kR<.dB$(UY#Iu*hf*Z['
%5)$I[3iCrEo_%9fdZqBp`p9?J!qEeX+J;#]Mpj)1LF`_/@br`+@^H?VGe[t0Wc#OL^raY8ke`D5:+9@D6nl:pAfYi*+G[,?g9;Kp
%dq6-9gI:]HSek,,iQ]QSc6tm@?KLQ.4(eI/pmWSU@'j;i^JN+)nL=*"h,+@=g5U^WPg4B^C-.>-3l_$&&FB!h4UHTT+inGmi4(r1
%LtO1(TPt!cWWSTXGO'pfJ2Yko_e;kHCU`3OHCZGCW8Co7d<9lMKRS:84h8R>bN*q+I=/XOjo%Cas6q-1\,'J3bJ3tapYYuGGCTPT
%VaKqas8-a7q02kZ++O0;s5A0Or;48+kC<HtT76P!\,Z"P'P..0IiSL\l(A"N]79d/rqddepZZ&bYQ+V%+lPrS&,tN0rl[P)YCHRr
%s$(k2TnE~>
%AI9_PrivateDataEnd

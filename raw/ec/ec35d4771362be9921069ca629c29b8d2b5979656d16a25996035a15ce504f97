%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1411.i042.010.S.m004.c11.medical hands banners.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 11/8/2014
%%BoundingBox: 0 0 450 451
%%HiResBoundingBox: 0 0 450 450.2814
%%CropBox: 0 0 450 450.2814
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-11-08T23:49:45+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-11-08T23:49:45+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-11-08T23:49:45+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AhGds+cOxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2Krkjd24opZvACuC0gW50dG4upVh1BFDjakLcKHYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqzTy5d+VLPyhNNq9ulzdSXk0SwrFHJMyfVl9P960kbwqshryUN4UzCzRyH&#xA;J6TQr9P2uwwSxRxEzFmz035d97bsln8o/l/qvmAyi6jtLVnmjnghu7aFR6ZtlWaLlHxClZ3PD/Ir&#xA;U7jMYZ80YcrPuPn+pzDpcE8l3Q36gfzdxt5n5ICDyt+XSrFFcTSvKEtVmlS9hUGSaxluZWVTG9Ak&#xA;sSx0qdz17ZYc+bp59D/OA/a1jTafkT3fxDrEk9O8Uvg8h+Q57a6nfVxbRl7doXN3A7RJLHbSSo8f&#xA;BWcr68oDKf2NwKGoOpyggcN8+h8/1D5qNFgIJ4q5dRt9N/efkgtQ8p+UIdG1e/WSWOfTFQLbrdRX&#xA;SvLdDhAomhQIeDI7uB2oMnDPkMojv8q5c2uemxCEpdY+YPPluPm8/wA2Dq3Yq7FXYqqQ2887+nBG&#xA;0sh6Iilj9wyrLmhjjxTkIx7yaZ48cpmogk+W7UsUsTmOVGjdeqMCCPoOSx5IzHFEgjvG6JwlE1IU&#xA;VmTYuxV2KuxV2Kpno8sSrMhIWVh8JPfY7DKsgbsRG7tZlhYxIpDSIDzI3p02xxhcpCWZa0uxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVV+t3X1X6p6z/Vefq/V+R9P1KcefCvHlx2rkeEXf&#xA;VlxGqvZSyTF2KuxV2KvaPJWn2OneWrSaMKJLmNZp5afEzOKgV/ya0GeA+1muzartDJGRPDjkYxHQ&#xA;AbX8eb697OaKGLSQMR6pgSJ77/VySX8w4ILzSJLx0AmtinpMB8XFnClSfD4q5u/YfU5MOrjhB9GS&#xA;7HSxEm/spp9rtBjlozlI9cCKPvIFe7d5jnsb5O7FW1VmNFBJ8BkJzjEWTQbtPpsmaYhjiZyPQCz9&#xA;i97eZF5OtF8coxa3FklwxlZdtr/ZvX6TEM2bEY4++wfmASR8aU8ynRuxV2KuxV2KthWKlgPhFAT8&#xA;8CV0UMk0gjjXkx6DEmlAtEDSr7kV9PcCtain35HjDPw5IcxSCQx8TzGxXvtkrYU6KGWaQRwo0kjf&#xA;ZRAWY0FdgMBkALKYxJNDcqs+nahbx+pPbSwxk05yIyip7VIwRyRlyILKWKcdyCPgh8m1tqrMwVRV&#xA;mNAPc4EplZWEohufVh+Ip+65AE8qHplcpcm2EDRsIGa2nhAMqFK9K5YCC1mJHNSwsXYq7FXYq7FX&#xA;Yq7FXYq2ASaDcnoMiZACyyjEk0HEEGhFD4HGMhLkbWUDHmKayTFk2g+d7zTbRLKeP6zaxV9EcuLJ&#xA;U1IrQ1Fc47tr2QxazKc0JeHkl9W1g/dRes7F9qp6PH4co+JAct6I8uuyH8xebbnV41gWP6vaqeRj&#xA;B5FiOnI0HTwzJ7C9mMegkZmXHkO11QA8hv8ANp7c9pcmuiICPBjG9XZPvO3ySHOoeZe5/lr+Sflz&#xA;UNCsdc1qWS8e8QTJZxt6cKqTsrMvxsdt6EU6Zo9Z2jOMzGO1PSdn9kY5wE57306JX+d2heWfL13p&#xA;02m/VrONojBPYw8Q6lDySQoDzPMMRyp2zUZMeXMb3k+lezfbGj0GGcMpjjANjbc/LcvILzWFukaC&#xA;CFnVqcnJp0Ne2bHRdmyhISJ3Hc6b2n9t8WqwS0+GB4JVcpeRvYb93P7FWOWAIoaCrADkeZ65vwD3&#xA;vlpMb5LvWtf+Wf8A4c4aPeix3O9a1/5Z/wDhzjR71sdzvWtf+Wf/AIc40e9bHcuje1aRVMGzEA/G&#xA;e5xIKQR3L1eIGaBjwhWtB3JVgfvIFMHmmxuF+l3UMV18ShFcFQ2+1SDvU4JxsJxyAKekgAkmgG5J&#xA;yhyUhmvkN8ZYxRSygt3Kilfvpl4js4xn6rR/lXVdF0jzRZ3Oo3C21jGZVe6YMdzE4FAterGnTNf2&#xA;rljHAeI1dfe7PsXDKepHCLq7+RZJ+Y/nTydqHk2O20XVhd3ou1DRiORQFAc/bZAtaEbVrmm7Mzjx&#xA;efMPQ9r6cnDy5F59nWvDNglSGU0I3BHUHAqPs75liuBNM3IpSKpJPKh6ZCUeTbCexsoKSaaSnqSM&#xA;9OnIk/ryYAaySVmFCI+oXP8AKPvGaz+VtP3/AGF7P/QB2r/qcf8ATx/W76hc/wAo+8Y/ytp+/wCw&#xA;r/oA7V/1OP8Ap4/rd9Quf5R94x/lbT9/2Ff9AHav+px/08f1u+oXP8o+8Y/ytp+/7Cv+gDtX/U4/&#xA;6eP63fULn+UfeMf5W0/f9hX/AEAdq/6nH/Tx/W76hc/yj7xj/K2n7/sK/wCgDtX/AFOP+nj+tE6d&#xA;5e1fUbpbWytzPO2/FSNh4kkgAe5x/lfT1ZlXwLi6z2N7R08RKePYmtpRP6WfaP8Akm7sj65eL6W5&#xA;e1tuVTsafvTx40PgpzSa32hhOJjCJ952+z9rk6H2bnCQnOQ9w3+3b7kt88/lX+h+epaG4XR7aBXv&#xA;IriVmm9TkwZlqtOIXj+145d2V2tAyGM2JSPwau2OyJiJyCuGI+PNgXXOoeSdirsVdiqcWvnLzfZa&#xA;SdJ0/WbqzsSSRDFIV41JJCkfEoJJJCkZjZNLjmeIgW5eHW5cceESPCmHkb8trzze99BDdKt8kYu1&#xA;a45MJCG48WYVI5epWtDmun2hjhk4KJ4XqcnsxqBooamUgPFoxj1ogkEnzY1NbyW08ttKnpywO0Us&#xA;e3wuh4spp4EZuIyBFjk8bOJiaPNZkmLsVdirsVVIP7+P/WH68B5JjzdP/fyf6x/XiOSy5qeFCu95&#xA;cvAIWcmMdu/0nI8Iu2RmapQyTFB3fl/VtYlIsIHn+rxlykaliSWAAoPHOT9oomU4gdAXv/Y7STni&#xA;nOI24gLsDp5orSfLPmax8t+YIL/TriFJRDJaiSMheak8mr0B2Xrmqw3EfJ6TN2XmnsIg8/4o/rU7&#xA;N2eAFjUior8s73GbD5BlFSVssa3Yq7FXYqj/ANJL/vs/fnn9P1X+a8nfpJf99n78aX815O/SS/77&#xA;P340v5ryd+kl/wB9n78aX815O/SS/wC+z9+NL+a8nfpJf99n78aX815M0/Ka8E3mlkCU/wBGkNa/&#xA;5SZjakel0vb2fiwVX8Q/S9ntx++GxagJCj2BzG0/18r5/c8RqPo51y+9gP5yyww+TZVmgkkWaaKM&#xA;NHJwKNUsGZf2x8NKe/brmx7FiTnFHkD0dZ25IDTmxzI6vGrOGycwwj1ULlU34mhJpneiwHz00ZKG&#xA;WNSIsApu0DDkN9j/AKpyMuTOHN18FFywUUFFNOm5UE4x5LPmh8kwZZ5I/Me+8nTXVzaWCXtxPbm3&#xA;i9SQoqHkGDsoU8wOPSo+eabN2SJZDMHn0ez/ANGGSejx6acBeKqlfQCgCK6DrbERLdzz3F3dtyuL&#xA;qVppW8Xc8mO3iTm0xQ4RTyWfJxyt6sv5S6TqX5Zw+ZtEu5JtVjg9a7t2dPRJjr60YBVWR1HSrUNP&#xA;eua6XaBhmMJj0u3x9kjLgE8RJyHp+j3vKwQQCNwembUF0ZFGi7Ch2Kq9lDNNeQRQo0kskirGiipY&#xA;k0AAGQnIRiSTQDPHAykABZLV7DLDeTxSoY5Y5GV0YUIIJBBGMJCUQRuCuSJjIg7EKOTYOxV2KvQ/&#xA;yrsPMUGp3bWc406WS3RqyiQM8bNsUVGjJFV3Nc5DtvVxGQGJ4tq2976l7JQji0M/GhIiWWx/pfMF&#xA;6lrWlXGr+Xp9LuNRuvXuIwksxkLw8gQSfRO9NunP6c0h1u3L7Xc4dTHHl44wjQvpv8/2PH9T/Jzz&#xA;HpcHKykTU4wdxGPTlFe/BiQfoYn2zqdH2/hltP0H7Pm+ca72dzx9UKmPkfl+1ih066BIIAI2IrmZ&#xA;/LGDvPydpH/ge9pkXUP9M19QuPAffj/LGDvPyT/ybztPuh/pnfULjwH34/yxg7z8l/5N52n3Q/0z&#xA;vqFx4D78f5Ywd5+S/wDJvO0+6H+mS/hef79X7sH8kYu772j/AEcdofzh/pY/qdwvP9+r92P8kYu7&#xA;71/0cdofzh/pY/qdwvP9+r92P8kYu771/wBHHaH84f6WP6ncLz/fq/dj/JGLu+9f9HHaH84f6WP6&#xA;ncLz/fq/dj/JGLu+9f8ARx2h/OH+lj+p3C8/36v3Y/yRi7vvX/Rx2h/OH+lj+pFaZqWvaXc/WtPv&#xA;TbXFCvqIorxO5G4I7YnsfCeYv5uNqfa/W5o8MpbXewA/Qz3yn+a+vxa3ajzBeJLpB5rdOkCiQBo2&#xA;VSPTA6OQTtmNk7BwgEwG/vacftDmJAmdvcEn/NvzRo3mXzRaro0rzabaW6o8joU5TFmaQryCvxoV&#xA;A5Dx8cs7M0Hggg8yWHa3aHjkEcgGPWH+9tt/xlT/AIkM3MuRdFD6goZJgidOFb2IeJP6jkZ8mePm&#xA;3qQC3sgHQBaf8CMEOS5OaFybBkXl/wAieZddthcafp1xcQsSqzIlIyQaH42oux980+t7SliycEY3&#xA;73uewfZrR6nS+Pqc/hkkiMY0Tt1I3PPpXx3SXUbG50/UrrTrpfTu7KVobiOobi6GhFVJB+g5s8OU&#xA;ZIiQ6vIazT+DllAHiESQD3+aL0zWdUhtX0mK4kGn3ciPNahiI2kGysR0/wAx4DMLtLR+NCx9Q/FP&#xA;ReyHbsOz9WDkF4p7HqY/0h+muYSu4ngN+0cO6MORp2feuPZviRhw5OYT7Yz0eXWHLpSDCYBlXLi3&#xA;v9F+bebJ5J2KvWPK9ql15Y8pXcMa+tY6k0c7KorwdpQd/mUzje0chhqM0SdpwH6P2vbdm4oz0+CQ&#xA;G8Jn9P7EVqPkuLUbbVkEccd7rGrMIL105mGKIcmK7g7mKTaorXKMHaUsUoGyY48f095P9o+Tkajs&#xA;uOWMxQEsmT6q5Af2H5vHm4CSREcSCNivNehp3GdtCXELeEyQ4TTWTYMx8g+ZPK+kmSPW7ASs8iyQ&#xA;X4jEjxUFKfzAbV+HfNJ2vos+UXil03jdX+PN3vY2u0+E1ljve0quvx5Mv8xeTfL3nO7stR07zEbR&#xA;YUKFbR1LMpatPtKysK03GcVkxZcZqQIfQdNr4mP7uex7izbQdFg0bTIrCCee5SPcz3UrTSsT3LN+&#xA;oADMcm2ZJJsphih83XOpoLmUGI/bb9r3/wBXNuA+jw1R4RsoHUzXaOg8Ca/ww0n81Lya/STfyD78&#xA;NBfzUvJ36Sb+QffjQX81LyQWd+/K7sVdiqKt9NuZ4/UQAD9kE0Jp4ZAzAZxxkoZlKsVYUINCPcZJ&#xA;g1hV2Koi4thDFC4avqryIp06ZEG2co0Ah8kwV7D/AHut/wDjKn/EhkZciyh9QUMkxXRu0bq6mjKa&#xA;g4CEg03NK8srSP8AaY1OIFKTZtZhQyHy/wDmB5x8u2M9louota285LGMpHKquRQsokVuJoO2YufS&#xA;Y8puQ3czTa7LhFROzGwJ3nmubmVp7m4cyTSsSWZ2JZmJPUkmpy7Hj4Q0ZcpmbRVh/vdb/wDGVP8A&#xA;iQyUuRYQ+oKAQFhsOR2rhQibyzNsU+Llyr96mmCMrZThSYeU28ufpYJ5hjZ7CVDGHRmX05GI4yNx&#xA;INAK5h9oDP4d4T6x9o7nM7OODxazj0EV7j3va/Jej6boI/RDTyXVnNI15bTqgNI2VQq8h8LNVa1H&#xA;iPHOL1mo/My8Sfo4QIyHW9+Qe80Oj/K4+CJ4xKRMfLaPP9B6ofX/ANNaZpmv39xdRvCLS5m0q2Co&#xA;ssaHkEd+O9aj4t8pw44yywAHplIfHd2faObGNMTjhwzjE2e+VdHz5ZLSAMerksf1Z6JjGz5NlPqV&#xA;8sanYqskhik+2oJ8e+RMQebKMyOSNtp7yys4jY3dxaEySAmCaSPoEP7JHjmPPS45n1RBcqGsywHp&#xA;kR7l58weae2valTw+tzf81ZV/Jun/mR/0o/U2fyrqP58v9Mf1pY8VwzV+sNU7ksAST88iey8Pc7a&#xA;Ptf2iBXiH5R/U16Fz/y0H/gR/XB/JeHu/HzZf6MO0P8AVD/sf+Jd6Fz/AMtB/wCBH9cf5Lw934+a&#xA;/wCjDtD/AFQ/7H/iXehc/wDLQf8AgR/XH+S8Pd+Pmv8Aow7Q/wBUP+x/4lXzZPLuxV2Kpja6qIbd&#xA;Ymj5FK8GBp9+VyhZbY5KFICRzJIzt9pyWPzJrkwGsm1uFCva3EUPLnCs3KlOXamRItlGQHRMbu7h&#xA;SG3ZrdHDpVVP7PTYbZXGJs7t0pChslMjB5GZVCAmoUdBloaCV1vKIriKUiojdWIG1aGuJFhYmjav&#xA;XSv5J/8Agk/5pyPqZ+nzdXSv5J/+CT/mnH1L6fNtF05zRIrhj4BlP/GuO/ko4fNcYbICpgugB1NV&#xA;/wCacFnyTUe4rK6V/JP/AMEn/NOH1I9Pm6ulfyT/APBJ/wA04+pfT5roptNilSVUmLRsGUFkpUGu&#xA;/wAOJEioMQb3QamjA+BrkmtMNYDho+XWrn7yDkMbdlS7LGl6b+XPnCxGjXOi67NxtIwBayNyPwN9&#xA;qM0B2B3H3ZyHbumGPNHLCuI8x+l9D9ksOq1WGUICRjDlIGiL6XYPmEf568z+UJPL+oCwuFuNYe0+&#xA;pQikgdopWUEEkBTxUlt81GhiRmiZ7RBt6PtHs7WHTSxRiT5WOfK+fc8etRS3jHtX7989DhyD45kP&#xA;qKrk2DsVdiqu/wDvDD/xll/4jHkerI/SPx3KGSYo/T7CGdDJNJxWtFUEAmnzyuciOTbCAPNRvrVb&#xA;eUBG5xsKqf4bYYytjONFDZNg7FXYq7FXYq7FXYq7FXYquaR2ChmLBdlBNaD2wUm1uFDsVdirsVTP&#xA;RJY0eXmwWoFKmnSuVZA3YSmclxDQkTJxoaior+vKwG4yHexnMlw3Yq7FXYqjdSu47gxFBSi1YeBP&#xA;b6KZCEabMkgUFk2tMNN+w/zGc1259cfc+zf8DD/F839cfchr1i1y5PsPuAGaV7zJ9RUdOs1a3qbq&#xA;HZiBVm9v8nO4xS25PzNmgOLmEV9RT/lrg/4Jv+acs4vJq4PMO+op/wAtcH/BN/zTjxeS8HmHfUU/&#xA;5a4P+Cb/AJpx4vJeDzDVykcdtFGsySsHkY8CTQEIBWoHgcQd0SFAboXJsEXZajLagqAHQmvE9jkJ&#xA;QtshkMVK7upLmX1HoKCgUdAMMY0xlKyo5Ji7FWY/8qt8w/7/ALT/AIOT/qnlfiBnwO/5Vb5h/wB/&#xA;2n/Byf8AVPHxAvA7/lVvmH/f9p/wcn/VPHxAvA7/AJVb5h/3/af8HJ/1Tx8QLwO/5Vb5h/3/AGn/&#xA;AAcn/VPHxAvA7/lVvmH/AH/af8HJ/wBU8fEC8Dv+VW+Yf9/2n/Byf9U8fEC8Dv8AlVvmH/f9p/wc&#xA;n/VPHxAvA7/lVvmH/f8Aaf8AByf9U8fEC8Dv+VW+Yf8Af9p/wcn/AFTx8QLwO/5Vb5h/3/af8HJ/&#xA;1Tx8QLwO/wCVW+Yf9/2n/Byf9U8fEC8Dv+VW+Yf9/wBp/wAHJ/1Tx8QLwO/5Vb5h/wB/2n/Byf8A&#xA;VPHxAvA7/lVvmH/f9p/wcn/VPHxAvA7/AJVb5h/3/af8HJ/1Tx8QLwO/5Vb5h/3/AGn/AAcn/VPH&#xA;xAvA7/lVvmH/AH/af8HJ/wBU8fEC8Dv+VW+Yf9/2n/Byf9U8fEC8Dv8AlVvmH/f9p/wcn/VPHxAv&#xA;AibX8uNegVg0ts1TX4Xf+KDNP2lpJ55AxrYdX0L2M9ptN2ZiyQzCZM5AjhAPTzIUJ/yz8wySs6yW&#xA;1Cdqu3/NGa/+Ssvl+Pg9NP2/0BJPDk/0o/4pD2n5T+Y4ouLT2la12eT/AKp50sJUHxvIOI2rf8qt&#xA;8w/7/tP+Dk/6p5PxA18Dv+VW+Yf9/wBp/wAHJ/1Tx8QLwO/5Vb5h/wB/2n/Byf8AVPHxAvAh7v8A&#xA;LvWrUqJJrYlq04tIen+wzS9re0Wn0JiMol6rqgDy+Lu+yPZ3Ua8SOIx9FXZI5/BuL8uNdljWRZrb&#xA;i3Srv/zRmjl/wQuzwarJ/pR/xTs5exGtBq8fzP8AxK+2/LTXbiBZo57Xg+4q8letP9952oygvJnE&#xA;QaVP+VW+Yf8Af9p/wcn/AFTw+IGPA7/lVvmH/f8Aaf8AByf9U8fEC8Dv+VW+Yf8Af9p/wcn/AFTx&#xA;8QLwPU8pbELdapY2plE8vAwQ/WJfhY0iqRy2B7jp1w0i1dri3XkWlQBCA9WAoT0B8MVQMnmHSIzI&#xA;r3AV4n9N0IPIH1BFWnhzYCuHhK2jhcQGlJEPJea/EN1Hce2BVv1y02/fx7rzHxL9kftdemNKqggg&#xA;EGoO4IwJdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqT6/9uH5N/DPNPb/68Pul&#xA;+h9P/wCB79Gb3x/3ytYf7xx/I/rOeX5fqL2mb6yraN/xzIPkf+JHPpmHJ+f8n1FGZJg7FXYq7FUm&#xA;1ry1Dqks8kkvBpLb6tH8JPA8i3PZlr16ZISpiQl9z5GSUXAS6VfrErSFmjd2oxkPFiZQKgyniVC+&#xA;9anDxrwrx5LXYtdK5JrKWhryUTpNQfHt/dkd+uPEvCubyav7wR3KKsiOm8CuVDeoFCFj8KgS0Ipv&#xA;TtjxLwqaeRoxDIj3Qd3CBG9NgFKXD3BH94WKsXpTlXata48a8LIdPtFs7GC1WnGFAg48gNhTYMzk&#xA;D5sciSkK+BLsVdirsVQsdxeyhmjgj4B3QFpWBPBytaCM+Hjihdz1H/fEP/I1v+qeKu56j/viH/ka&#xA;3/VPFXc9R/3xD/yNb/qnirueo/74h/5Gt/1TxVY13dRz28c0KBbhzGGSQsQRG0nQov8AJ44qi8Uu&#xA;xV2KuxV2KpH5lvbq3MCQyGMNyLFdiaUpv9OW4wCwkUlTUtUdgqXErMeihiTlnCGNlONEn1Iag9vd&#xA;O7KUJHOvUEbivzyuYFbMo3afZUzSfX/tw/Jv4Z5p7f8A14fdL9D6f/wPfoze+P8Avlaw/wB44/kf&#xA;1nPL8v1F7TN9ZVtG/wCOZB8j/wASOfTMOT8/5PqKvc3UFtF6s7cIwQK0J3PyrkwLayUlbWbT9MrM&#xA;Jz9UEdDs9OW/7NP4ZbwGmPFunVrd291H6sD80rStCNx8wMqIpkCq4EuxV2KuxV2KuxV2KuxV2Kux&#xA;V2Koew/uG/4zTf8AJ5sQhEYpdiqD1S7ltoFaOnJ241Pais3/ABrkoi2JKJgkMsEchFC6qxHzFcBS&#xA;hr//AHq03/mIb/qHmwFUZil2KpfHe6lqWrnSNAtVvbuJWkunduEUYXsW/mJ2/wA9tZqu0RCXDEcR&#xA;6vZ9k+ygyaf8zq5nDjl9AAuUvOu77+fdYiyvVuVkVkaC5gYx3VrIKSRSDqrD9R75mafURyxsf2Og&#xA;7X7Iy6HLwT9UZbxkPplHvH6R0RGXurSnXtKub30WgKkx1BUmnWm/4ZZCVMJC0o/w1qn8qf8ABDLP&#xA;EDHhKZaNpN9b3r3FyV3UjY1JJI8PlkJyBFBkAneVM0n1/wC3D8m/hnmnt/8AXh90v0Pp/wDwPfoz&#xA;e+P++VrD/eOP5H9Zzy/L9Re0zfWVbRv+OZB8j/xI59Mw5Pz/AJPqKLeOOReMih18GAI/HJtaVtpn&#xA;+5lZhAn1QR0Oy05b/s/2ZPi2RW6ZxxxxrxjQIvWigAfhkErsCXYq7FXYq7FXYq7FUFrcssWlzyRM&#xA;UccQGGxFWAP68nAbsZcmKxX188qq15KikgFi77fjlxiO5hbJfL80stgTLIZWEjAOSSaUB6nfKZjd&#xA;nFMsgyQ9h/cN/wAZpv8Ak82IQiMUuxVLtc4/V4uXT1D1/wCMb+4ycGMkZZ0+pwU6emlKf6oyJ5pC&#xA;hf8A+9Wm/wDMQ3/UPNgKozFKUzTanrWp/oDQKG5Ire3p/u7aP9olvH/aG/TU67XV6IfV1Pc997Oe&#xA;zmOGMa3Wj91/BDrkP/E/fzPp5zXS9EsdG0WKx0H99AzgXt2oPrTT9i/cKa1QdKfjqIxp2PaHaGTV&#xA;ZOOfwHQDuCG8zaF+lHWfT544vNdsgXk1BDdqN/q0rV3fj9lv6bWYssscuKP9rXHJjy4Tp844sR5d&#xA;8Jfzo/pHIsd03Uo71JFKNb3luxjvLOXaWGQdVYfqPfOj0+ojljYeG7U7Ly6PJwz3id4yHKQ7x+kd&#xA;EZlzrXYq7FXYqsfRRqcgrKYhEDuBWtT8xnFe2HZsc4xyMqIscnufYvtGWA5IiNg0btFL5eMFqUil&#xA;9SRFPAEcQT1AJrtnB/6HISlvMge79r2WbtORsiO/vS7S4pIbCGORSrqDyU9Ruc9uxm4gh8XyipEF&#xA;FZNg7FXYq7FXYq7FXYq3QnK8uaGMXMgBtw4J5TUAZHyaNAQCRU7075Tpdbjz3wdG/V6DJp6469Ts&#xA;ynDWTQxTRNFKoeNtmU4QUIT9B6V/yzj72/rkuMo4Qire2gt4xHCgRBvQeJyJNpVMCUPYf3Df8Zpv&#xA;+TzYhCIxS7FUo8zkCxjr/v5f+ItlmPmwkmGn/wC8Ft/xiT/iIyMubIKV/wD71ab/AMxDf9Q82RKq&#xA;N2us6pqceg6KhW5lT1Lq9baO3hJoWJ8dv6b5q+0NYYeiP1Hr3Pc+y3YunljOt1RvFCVRh/PkN9/L&#xA;y69ducgt7XStF0s6PpA523XULsiktxJTd2P8ngOlP9ky6aMadv2h2hk1WTjny6DoB3LtN1G8srv1&#xA;ITyIHF42rSVKn4WHWta9q1r+1yDFwFS9tobiVZtPlJhYBxG5o8bE1KlgTUjry8CGFdy1GTUCEgD1&#xA;bYYTIWHns/mW88wedIdStoAltaobI3RQpNeAGhklG32f2aiopv4Da9nQlx8Y+n70e0GTHg0f5aZ4&#xA;s0iJV/qf7T+POXZvnzt2KoW4jEt7BGzOE9OViEd0qQ0YFeJHicULvqEH803/ACOm/wCasaVEeVL6&#xA;xub/AFiytTIZ9MlhguhK5ccpYVnUpydjThKN6Df5ZyftDlEpxgP4b+2ns/ZrTmMJTP8AFVfC2QEO&#xA;HBqCpqCRXqDTOdp6dheh+ZNK15tQn0yX1ra3vJrcSUoGaM0cr4ryrQ987/syZOCN8wKfOe18QjqJ&#xA;VyJv5ppme6x2KuxVLfr9n/vwfcf6Z8yeFLufoPwZ9zvr9n/vwfcf6Y+FLuXwZ9zvr9n/AL8H3H+m&#xA;PhS7l8Gfcn2j2lte2IlVjXmy8h7CvfPQvZvXZ8OlEYyocR7nlO1+zMOTPxZI3KgoEUNKUI6jNjky&#xA;SmbkbLVjxRgKiAB5KUzBPiG1epVGc/8AC5PGOLb9NMMh4d+XwJ+5BR38JuxG10HZvhEJjKEHr1P8&#xA;c6rsfiiDEx4Y87u7Lx/bgjMiQlxS5Vw1QRubt59p3VEZ3PFFBZiewG5xQofX4P5Zv+RM3/NONqjL&#xA;KF7xS8SsqA0LSKyb+wYAnNfrO08WnNS3l3B2eh7KzakXHaPeVdNG+rwlRMGYu70Ip9tmkoKVOwzA&#xA;0/bniSNwIj33y9/J2Wp9nvDiKyAz7q5+7mfsS3VJ57JhF6SoWUFrmZgIkDA9FUl5GBB+EU6ddxmV&#xA;HtE5f7kX5lng7GwYRx6udf0IbyPx+kDzs8vpKho1xczWYactI2/75gqc9z0VegHTNjh4uH1Gy6TX&#xA;zxSyk4oeHDpGzKveT1PP7kReWsd1btBJsrU37ihrloNOEQrAAAACgGwAxVB3/wDvVpv/ADEN/wBQ&#xA;82AqtvYdRguBqWkuqX6IYpYZN4bmE/ahlWoqPDw9uuYGt0fiDij9Y+16bsLtuOAHBnHFp5G9vqhL&#xA;+dH/AHw6+9GadqdnqdobqyDRywMIrq0Y1lt5D/uuSlCQaVjcU5U7OKZoiCDR5vR6jT+GRREoS3jI&#xA;cpDv/Z0RAESwl3ZY4FUyGdiAsYVasWOwChV9hTwH92tEYkmhzSjy7rOq67routOHoeW7Xmsk7pR7&#xA;2WhFV5DksaMaj723NF1+sygiur0H5KGnx1PfNL/Yj9avctawarqs6w09HizMtKn92GYAGgrUZ0/Y&#xA;1/l43+Ny+b9vV+ZlXl9wXfWp/wDljm++H/qpm1dK761P/wAsc33w/wDVTFVqGaW8SVoXiRI3Ulyh&#xA;qWZCKcWb+U4qg/M2szaTpy3EMaySPII1D14iqs1TSlfs5h67UnDDiAs3T03sp2HDtLVHFkkYxjAy&#xA;Nc9jEVv7+4vOdO1W+07zXqfme0k4ahqohFzF1hH1eL0UKp1+z/MTnO5tSchJlGJ4vf0+L6vh9iNL&#xA;ijEQyZRw31h1/wAyk4k/N7zXbSqnC3dUiKKWRiSSPtkhuoIzEOKB6czf7Pcmfs7ihKhPIaFfw/P6&#xA;ef4pjPkTX5vLI+pQoLi2ubhpZ3l/vKyvVuJXivf+XNrpdfKBEaFW6HtT2M088cpicxOMTXKth/VH&#xA;3vaI5EkjWRDVHAKn2OdIHyAil2KuxVin1W//AOWWT7jnmP8AoCyf6qP9L+19U/0f4/8AUj/pv2O+&#xA;q3//ACyyfccf9AWT/VR/pf2r/o/x/wCpH/Tfsd9Vv/8Allk+44/6Asn+qj/S/tX/AEf4/wDUj/pv&#xA;2M98q2V5aaWEuQqNI3qonUqrAfa99sji0UdMPCEuKibNU3T1stSfFMeHiAoXeyrq9tFFYXFylEeF&#xA;JJa0rUgcgDuMy9PATnGJ6kBxdTMwxykOgJYw15qLRBzbFgy1WSCTxFQeDDOh/kKjYlY8w81/ohEh&#xA;Uo0fIqljBdf311J6rsBxDIqMnj0zeabTxxR4Yig89q9VPNLikbKMzIcVD6l/xzrr/jDJ/wAROJQi&#xA;MUsl0uGzjtgblyOAFI1FWYncgds4fPlx5c05z79h7tn0TSYZ4sEIR51v8d1K9uLWP1LplEESKSwr&#xA;WgoKkk9zxGYuTPPNUIj09AHJjgx4ryS59SWGqV1i/kv7iJ/RAUW0Un2ad6eO+dj2do/Bx8J5vD9q&#xA;a45snEOX3JkAFAAFAOgGbF1TsVa9SP8AmH3jChTmjtZwqyhX4nklTuGoRUfQTjSrP0fZ/wC+/wAW&#xA;/rgpUuvdHuLW7XV9DKw6pEpSSKSrQ3MR+1DOpO6tT6Dv1AIwdXoxkFj6noOx+2PA/dZfVgl84n+d&#xA;H9I6pTfanP5n1aKwvLeXRfLyESX0DPzmmlA5cHdR9hXFF23+03xfZ5jtHL+Wx8WT0dBfUvf9mTwx&#xA;l+4IzZjfLlCPfv1LPrS/0aGzSOyZVggXhFFGpUAKPsgEZy57W097z+/9Tdm0ueyZAmTHSLh9N1C5&#xA;uBSa5E0jL4DiQB9FM9Q7POM4InGbgRse8d75R2lKZzy4xU73CZ5muE07og5OwUdKk0H44UN4Esb8&#xA;9oJNLtUOwa7jUn5o4zV9r/3Q/rfoL6B/wODWuyH/AGmX+6g8/uLeS3maKQUZfxHiM5x9shMSFhbY&#xA;Q+W5dQca9cXNtbCIGJ7SNJXL8uhDsopSuTFOo15yiR8MRJ8zXRlX5u23liLzneNZT3H6YN3CLq1a&#xA;JFtkT0hvG4bkT9nt45YK4h73n9BLKdGeIDg4JUb36sz0z/jn2/8AxjX9WdfHk+GT+oonCxdirsVW&#xA;tLEjBWdVZvsqSAT8sNIXYEp/pl2s0CoT+9jFG9wOhzie2NGcWUyH0y3H6XvuxNcM2ERP1w2Pu6FD&#xA;+Z5RFoN6x7x8Ppchf45jdnR4s8ff9zmdpT4dPM+X3pGI5PqyRq3A8QpbuBTt7534fNSgbqPUZdJd&#xA;F+GUKF4/ttxIBNa/tUO2WCrYm6SDTG1Ce+gSORyYiDuSQqg719sslQDAWyC9W7W3vlJ5I0LuZCNg&#xA;SpHBRXwGUmqZpizKqlmNFUVJ9hlWXJHHEzkajEWT5BtxYpZJCERcpGgPMptHrGlysAlwjMN6Cvy/&#xA;jnk8u0dOOcw+vnR5gLMSEj1+8uNRmGm26FbQENcXHZh1AX6fxzrPZ3FizDxoSEq226fteQ9otXPH&#xA;+6IMb39/7FZI0jQIihUXYKNgM694wlvFVK8JFpOQaERsQR/qnCOaCwLMppV1gT6sZvVUOGpw+KvQ&#xA;n+WldvHBe6WbWbFrSBmNWMakk9SSozGPNtCrgSleuxxiFHCgOXoWoKnY984X29/xaH/DP96XvfYA&#xA;/wCFZP8Ahf8Avgt0r/eU/wCsf4Z5Bn+p9J1P1Ot4L24gvIhPGsckkqCsbMwDCnXmP1Z797Of8Z+H&#xA;/hcfufD+3v8AHMv9Y/em2bt1KQanNNda1BZwOVEdPUYf8E3zoBlsRUbYHmn46eOVMkm816fdXumo&#xA;LYBpbeZZ+B7hAwoP+CzB7Q08suOo8wber9j+2MOg1cp5r4J4zHbpZif0MPuFv5xxmtoXp0qTUfTW&#xA;uaX+T8vk+kw9sezo8p5P9KkV35c1OWXkipSgG7DH+T8vkxy+2mgMiQZf6VyeXtalvEnuHDuXUySO&#xA;5djSnc1JycNBk4hdOHqfa/Q+DKMOKzEgDhp69pystjArCjBFqD8s6SPJ8cnzKIwsXYq7FWHamkqX&#xA;85nVmmdz6I7ca7H326DMiPJqLKdPWZbGBZq+qEHKvX6cplzbAgNWvLy3u1EE8kIMYqI3Za7nwOeW&#xA;e3Gqyw1cIxlIR8MGgTV8Ut31f2E02KWknKUYmXiEWQLrhjtfciZbq4m02k8jTL6YYrIxYEha1Nff&#xA;OM7O1+cavH+8n/eRH1Hlxe93XaemxHDkHDH6ZdB3FFW0pltopWFDIisQOlSK59CA7PiEhRVMULUh&#xA;iRmZEVWc1cgAEn3w2hR1L/jnXX/GGT/iJwFV95/vJP8A8Y2/4ic13bP+J5v+FT/3Jdn2L/juH/hs&#xA;P90Ek0j/AHpb/UP6xnz5n+l961P0/FMYXb9K8KngYCStdqhxvTPUv+B3/i2T+v8A70PlPtt/fQ/q&#xA;/pKPz0J4l2KrZY1kjeNvsuCpp4EUwoSP/Ccf/LSf+BH9cs8VjwOHlOPvctTuOI/rj4q8CeRxrHGs&#xA;a/ZQBR8gKZWyXYEpbr3+80f+v/A5w3t7/i2P/hn+9L3n/A//AMayf8L/AN8FPSv95T/rH+GeP5/q&#xA;fStT9SK0v7Fx/wAZ3/hnv3s3/iGH+pH7nw/t7/HMn9Y/ejM3bqUBY6XHBdzXZYl5S1A3YFq/jkzK&#xA;xTEBH5Bk7FXYq7FXYq41ANNz2GFDDDf3Xr+v9akE9fsUNP8AVpWn0ZkcIa7ZkhYopYUYgFh4HMds&#xA;bwJdirsVSPXf960/4xj/AIkc8n9u/wDHIf8ACh/upvrvsD/iU/8Ahp/3MEQQDphBFQYaEH/UziOz&#xA;/wDG8f8AwyP+6Duu0v7rL/Vl9xVbDTtPNjbk2sVfST/da/yj2z6OiNnwmfMq/wCjdO/5ZYf+Ra/0&#xA;w0xd+jdO/wCWWH/kWv8ATGlaOmaaQQbSEg7EGNf6Y0qpef7yT/8AGNv+InNd2z/ieb/hU/8Acl2f&#xA;Yv8AjuH/AIbD/dBJNI/3pb/UP6xnz5n+l961P0/FHw/8dgf8w5/4mM9R/wCB3/i2T+v/AL2L5V7b&#xA;f30P6v6SmOehvEOxV2KuxV2KuxV2Kpbr3+80f+v/AAOcN7e/4tj/AOGf70vef8D/APxrJ/wv/fBT&#xA;0r/eU/6x/hnj+f6n0rU/UitL+xcf8Z3/AIZ797N/4hh/qR+58P7e/wAcyf1j96MzdupdirsVdirs&#xA;VdirsVdiqj9StPW9b0U9WtefEVr41w2UUrYEvBv+V7+cP+WWw/5Fy/8AVXMPx5O0/KQd/wAr384f&#xA;8sth/wAi5f8Aqrj48l/KQd/yvfzh/wAsth/yLl/6q4+PJfykELdfnN5ouXDyW1kGA47Ryjbr/v33&#xA;zQ9qdh4NdkGTLxcQjw7GtrJ7vN3/AGV2zm0OM48XDwmXFuL3oDv8l/8AyuvzX6Po/VrHhx4f3cta&#xA;Up/v3NZh9jtHjyDIDPijIHmOhvucnN7R6nJGUTw1IEcu/wCKrF+eXm6KJIltrDiihVrHLWgFP9+5&#xA;2AzyeXOkgV3/ACvfzh/yy2H/ACLl/wCquHx5L+Ug7/le/nD/AJZbD/kXL/1Vx8eS/lIO/wCV7+cP&#xA;+WWw/wCRcv8A1Vx8eS/lILZPzz83yRsjWthxcFT+7m6Hb/fuU6j99jljl9M4mJ9xFN2mxjDkjkj9&#xA;UJCQ94Noa3/OPzPA5dLayqRTeOXp1/37nJT9jNFLmZ/Mfqepn7V6uQoiHy/aqr+dvmxbj1xbWPPh&#xA;6f8Ady0oTX/fubzsjszF2fAwxXUje+/6nRdpaqWskJZOYFbK3/K9/OH/ACy2H/IuX/qrm38eTrfy&#xA;kHf8r384f8sth/yLl/6q4+PJfykHf8r384f8sth/yLl/6q4+PJfykHf8r384f8sth/yLl/6q4+PJ&#xA;fykERp353ebbnULW2ktrEJPKkbFY5agOwU0rKfHCM0iWMtLAAl6DY+bNUnm4OIgKE7Kf65kCRdfm&#xA;9MbDGvPX5peYvL+oWlvZxWsiTxNI5mRyQVam3F0ynLlMTQb9FiGWJMuhYrdfnZ5ruUCSWtjQGopH&#xA;KN/+RuajtXQY9dAQy3UTe2zv+ydZPQzM8VXIVvv5rYPzp81QJwS2sqVrvHL/ANVc56XsVopGyZ/M&#xA;fqdzP2p1UjZ4Pl+1Ug/O/wA2whwltY/Gxc1jl6n/AJ651mjgNPijih9MBQvyeZ1UBnyHJL6pG1T/&#xA;AJXv5w/5ZbD/AJFy/wDVXMnx5NH5SDv+V7+cP+WWw/5Fy/8AVXHx5L+Ug7/le/nD/llsP+Rcv/VX&#xA;Hx5L+Ug7/le/nD/llsP+Rcv/AFVx8eS/lIO/5Xv5w/5ZbD/kXL/1Vx8eS/lIO/5Xv5w/5ZbD/kXL&#xA;/wBVcfHkv5SDv+V7+cP+WWw/5Fy/9VcfHkv5SDv+V7+cP+WWw/5Fy/8AVXHx5L+Ug7/le/nD/lls&#xA;P+Rcv/VXHx5L+Ug7/le/nD/llsP+Rcv/AFVx8eS/lIPOcpcpmXk7SfK995e1e61KxuJ7zTWtjG8V&#xA;yIo2F1OsADJ6Tn4OXL7W/TbKpkgim7HGJBvoyrVPyQtZ9a1aXS9XhtdEtrq7gj+sKVaGSC7a3ELc&#xA;5PiRdv3lST/LXKxn2FjdtlptzR2QA/JKaaDUpLXV1lbS4FmnDwempf6qLySNSZSzcIWXdVPxGhCj&#xA;fJeP5Mfy3PfkvuvyQMP1txriCKwinubsz27QutvaPPDcSqjSEsFlgRV/m9QdN8Az+SnTeby/Mhxl&#xA;e0tHuXKqQtKVJ/ymCj8TgJUC1FlKsVPVTQ/RhVrFXYq7FXYq7FXYq7FXYqjdE/47Vh/zEw/8nBhj&#xA;zDCf0l7RpX+9R/1T/DM0Om1X0sE/N7/jsad/zDv/AMTGY2f6g5fZf0S97Bcqdi7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FVWK6uoY5I4Znjjl4+qiMVDcDyXkAd+LbjBS2ik8wa/HKZk1K6SVjIWkWeQ&#xA;MTOeUpJDV/eHdvHvg4QnjPeug8x+YLdpWi1K6T1+P1hRNJSUKvACQVo44fDRu22PCEiZ70Zc+ePM&#xA;10dWa5vDNLraiK/mkCvIYVl9b0Y3YFooy4BKIQDQDoMAgNvJJyyN+aRZNgmOiAmaQCtaIdvBXUn9&#xA;WRkyigrmguZadObU+/CGJXQWoljeRpUiRCqkvyNSwJFOCt/KcbUBf9Vg/wCWyH7pv+qeNpp31WD/&#xA;AJbIfum/6p42tLZ7URRJKsySpIzKCnMUKBSa81X+YY2ghQwq7FVY2V2IvWML+n15UNKeOC1pws7s&#xA;xesIXMXXlQ0p442tK+if8dqw/wCYmH/k4MlHmGE/pL2jSv8Aeo/6p/hmaHTar6WCfm9/x2NO/wCY&#xA;d/8AiYzGz/UHL7L+iXvYZZ2cl1IVUhVUVdz0Aykl2IFojUNHms4xJyEkZNCRsQflgBtJjSAVWYgK&#xA;CSegG5ySFT6tc/76f/gTgtad9Wuf99P/AMCcbWnfVrn/AH0//AnG1pF6VoWrarqEGn2Vu8lzcNxj&#xA;UggeJJJ6ADIZcsYRMpcg2YsUpyEY8y9o0X/nG2yVI31rV5JHIBkgs0VFB7gSScyw9+AzR5O2j/DH&#xA;5u7x9ij+KXyZdD+R/wCW0duIW0xpWG5me4nDk/7F1X8Mwz2pnu7+wOYOy8FVX2liT6D5SR2QWFjR&#xA;SQKxQk7fMZ28YggbPmU55hI0Zfa1+hPKf/LBYf8AImH+mS4Y9zHjzd8vtd+hPKf/ACwWH/ImH+mP&#xA;DHuXjzd8vtd+hPKf/LBYf8iYf6Y8Me5ePN3y+14RmE9I7FXYq7FXYq7FUx0O5ihum9U8Q6EBugBG&#xA;+/3ZGTKJQMziSaRxsHYsAfc1wsSrR/8AHOn/AOM0P/EZceqeiGwodiqL4c7C3HIKPWmqzGgHwxYO&#xA;qeirKi3NtCtulBHI0a12qCobk33EnAnmpWUELXsKPIroXAIHKh9twMJQBuy2gpTtlba4AAUHTwxV&#xA;j9olpb+YopJHVIIrlCBUCh5g7+Cr3+WWwO4aMg2L2rSNF1kyrKLC4MTpySQRPxINCCDShrlv5zCD&#xA;9cf9MHXajQ5zHbHM/wCaXnP5xxyQ69p8EymOZbZmaJwVYBn2JU770yueWMyDEgjy3btDgyY4ETiY&#xA;m+opiWj6hHZzN6gJjkFCR1BHTIEW5sTSI1TVLaW2NvbksjEEkigUDegriAmUkDpxIuGINCIZiCP+&#xA;ML4SgKX1m5/36/8AwRxpFu+s3P8Av1/+CONLbvrNz/v1/wDgjjS29h/5xzsEutU1W/mkLy2scUca&#xA;FiSBIWZjQ+6LT6c0nbUyIxj3u77FgCZS6vZdM8yW+oa3qmkxW1wkmkukc906AQO0kayBY3ruQH3F&#xA;M0k8RjESsep3ccoMjGjshPOXn7y15Rs1n1e4pNKD9WsohznlI/kSo2/ymIX3yWDTTymohjn1MMQu&#xA;ReCSfmJobyM/pXA5EmnBT13/AJs7uOUAU8DLTyJvZb/ysLQ/99XH/AL/AM1YfGCPy0u8O/5WFof+&#xA;+rj/AIBf+asfGC/lpd4d/wArC0P/AH1cf8Av/NWPjBfy0u8PPcoct2KuxV2KouWwjileJ7yEPGxV&#xA;hSbqDQ/7rwWmlv1WD/lsh+6b/qnja076rB/y2Q/dN/1TxtabWyR+Xp3UTsqs/ACUEhFLGnJAOgxt&#xA;aaj/AOOdP/xmh/4jLj1XohsKE0l0K9Xy9b6sLaX0nuJYpZip4BFSJoz06Es2+Q4t6bPClwcVGkJJ&#xA;/wAc6D/jNN/xGLJdWHRZFdSRW8sK9JuNT4AVrT51xpFqIJBqNiOhwqybSNWW6QRSmlwo/wCCHiPf&#xA;KyGyMrdq2rLaoYojW4Yf8CPE++ICylTGgHdwACzsdh1JJybW+50RI0VEHFFAVVHQAbAZwxL3IDzj&#xA;8+PLdlqPkufV2hje+0XjPG78hyhdgksdVKnoeQ9xmx7NzmGSuknX9pYBPHfWL5m+twf8scP3zf8A&#xA;VTOop5e2/rUH/LHD983/AFUxpbbW+RORjtYkZlZOQMpIDqVNKuR0ONLaFwoZB6nl/R/IkevX2lHU&#xA;7ufVJLFVNxJAqRpbpLX4AankxzE1GaUTQc7S6eM4klIv+Vg+Vf8AqUl/6T7j+mUfmZuT+SxvXPyb&#xA;8x6VBpWoeZrCwi0wAi2nheSe4UryDciTJHuKVGUan99GpdG/TwGGVx6ph+Yf/OSnl7RLj9H+VYF1&#xA;adyXvLxXMUSE/sozI5d/Hag6b9tZg0hJufydjl1AAqLzTWr/AE/zD5TsvNwtJbfVLzVbywumlupb&#xA;oultbW0yNyl3G9ywoNqDN9pD0A2dDrodbNsbzOdc7FXYq7FVT6tc/wC+n/4E40x4g76tc/76f/gT&#xA;jS8Qd9Wuf99P/wACcaXiDTQTqCWjYAdSVIGNLxBW1P8A46N1/wAZpP8AiRwDkzlzQ2FDsVROn/37&#xA;f8YZ/wDky+ApDo/+OdP/AMZof+Iy49V6IbCh7hp35V6/qNnZ2N+hsrS608QveIY5fSkEKleSq2/x&#xA;J4/TmgnroRnKQ3fSfExz7JjpyayCtv8AOv3MX8y/kn5z0fR1njWLU1hmkZ47L1HlEbhFV/TZFJ+z&#xA;8QWtPlmZh7UxTlX0+94jN2XlhGx6vc85kjkikaORSkiEq6MCGDA0IIPQjNkDbrSKW4VcCQQQaEbg&#xA;jFXEkkkmpO5JxVkflrSkRodRnUOVYPDE32TxNat92QnuKZR2NvpPyv8Ambpmtz2tm0TQahcyuhgo&#xA;WVUSMuG57A8iKeNfvzmNT2fLECb9Iep0mt8bYA318h3/AKEk/O26vP0bp9mshNhdmZbyICiO0XDi&#xA;H8RUnbMjsmMTKRP1dGjtYZOAEXwde7yv7XzXqEKQahcW6fYjei/IgED6K50ES85IKGSQ7FXYqmfm&#xA;n/yUNl/4EE//AFBRZr9X9QdpoPpPveZ5iuc9l/LOR4vyx1hdis0xZa/5Eluh/CTJjkwk8euXD3Er&#xA;jozsR9JrkGb0jSf/ACT+lf8AgRap/wBQGn5l6TmXB130hLMz3VoizsprpmEQDFByKVoSK9j0wEpA&#xA;tq9txBOUCuo/yx4eB7jEKQoYUPoT9I2X+/Pwb+mZ1vM/l59zv0jZf78/Bv6Y2v5efc79I2X+/Pwb&#xA;+mNr+Xn3InTBpGqX8Gn3arcW9ywSWB1biw8DtmJ2hMxwSIO9Ow7K0xOphxDbiZVf/lb+X99EY59E&#xA;t1qSTJEGikqd6l4yrH6TnFx1+aJviL6NLQYZCjEMH8yf846aLJayS6Bez212KskFyVlhag2QMArp&#xA;v+0S3yzPw9szB9YBHk4GbsaJHoJB83glzbT2tzNa3EZiuIHaKaJuquhKsp9wRnQRkJCxyLz8omJo&#xA;8wvsXjS4PqOEVo5U5kEgF42UV4gnqcJUL3EMVlJEs6SvJJGwCBxQIrg15qv8wxXohcKH0jo35iw6&#xA;N+Umm3sGm6ldyWqLbJqElpKbWQxEAr6oagQ7xK/Zh02pmo1Oix5JHpJ3Wn1k4QHMh6Lp17BqOn2u&#xA;oW/L6veQx3EPMUbjKodag9DRtxnOTiYyIPMO/hISAI5F89/85C6BBp/myz1KBFjj1W3YzBdi08DB&#xA;Xcj/ACkdPpGdF2PmMoGJ/hee7YwiMxIdXlubh07sVdirN9JIOm2xH++wPu2yssgnWi6jLpt/bX8I&#xA;5PazRzFP5lQ1I+R6ZiaiAlseoIHveg7Mkfy8uG9skJTr6vDF7+YB5+dWyTzl52tvMWnWkSWzQy28&#xA;lxJMxIKfvWqiqepPjUDMLS6WWKW/M19nN2ubNhkMhxHiwDEQZVQMiBwjfrx+r4e9435gt549Vmle&#xA;PjFLxMbjo1FAP05uYvFS5BLsmxdirsVTPzT/AOShsv8AwIJ/+oKLNfq/qDtNB9J97zPMVznvHljR&#xA;Lqz/ACRluShQ3EdxOQdjR7iDgf8AgYCRkxyYHm8HyDN6ZpP/AJJ/Sv8AwItU/wCoDT8y9JzLg676&#xA;QlmZ7q2S6BbelZmVtmmNf9iNhlci2RGyR6jdG5u5JK1StIx2oNvxyYDAm0NhQzX/AJWOn/VvP/I0&#xA;f805d43k435bzd/ysdP+ref+Ro/5px8byX8t5u/5WOn/AFbz/wAjR/zTj43kv5bzVbX81bmxuI7u&#xA;y09PrUJ5Res5aPl/lKoQkfI5TqP3kDA9W7TQ8LIJg8nuH5f/AJraD5ujEG1hrCj47CRgeVBXlC23&#xA;Me1KjwpvnI6vQTw784972Gk18M23KXcmNt5g19/Pk+h3VlDa6THaG4tLr1GeW5YuoquyqvD4g67n&#xA;oa0OUnFHwuIG5X8m4ZZeLwkemvm8L/OzytJYeZr7XWeG2ttSuVjtLFyVuZeEIE1ykXH+49VSvNiO&#xA;TdARvnR9myPhAF57tOA8QyDzjNi612KuxV6J5J/OvzN5eSz0+64X+jWwEfoutJkir0jkFPs9g1RT&#xA;bbNZquzIZLkNpF2Wl7TnjAid4h9H6Jq+m6xpVtqWmSiWxuEDQsu1ANipHYqRQjsc5nLjlCRjLmHp&#xA;cWSM4iUeReLf85Nogu/LMg+2y3qn5L6BH/Ejm67FP1fD9Lp+2htH4/oeK5v3QOxVckUriqIzAdaA&#xA;n9WBWU+W5ZPqbQSKytE3w8gRVW37+9ciWQTcEg1BofEZAgHYtuHNPFISgTGQ6g0W2d2+0SadK4Iw&#xA;jHkG7U67NnoZJykBysse83TusNtbrxpKxYsftDhTp865Lq4w5FjuWtbsVdiqZ+af/JQ2X/gQT/8A&#xA;UFFmv1f1B2mg+k+9hHlfQ7jXvMNhpFuPju5lRmNKLGPikc1I2RAW+jMUOcX1Ff6lZWPli4iYRSaV&#xA;a2hEkL7FoUjWVoyAa8jbuPpyxrfL3mzTrHTvMeoWdhKs1jHKWtJEbmPRcB4xyFakKwB98rLYGbaT&#xA;/wCSf0r/AMCLVP8AqA0/MvScy4Ou+kJavEsORotdyPDM91bJNQ1C2i04pA45MqoiA/EFYdx1Hw5W&#xA;Bu2E7MayxrdirsVbRGd1RRVmICj3OKplPoNxFDz9RWkALGMVrQdaZHiZGKWZJiuillhlSWF2jljI&#xA;aORCVZWBqCCNwRgIB2Kgkbh7noP54W+jeWbK58zWB1LzLbErYQ/ZklgkQcZ5nI/dqR16l6A0oa5o&#xA;p9nXlPB9HX3/AKfwHfY+0axjj+v9H4/W8Z8wa9qnmHXLzW9Ulaa9vZWkbkxYIpNVjSvREGyjwzdY&#xA;sfCKdNmy8crQGWNSK0+1Mt3CskbGJj8WxAp8xgJSA1fWzRXUypGwiViF2NKV8TiCpCGwoe0eQ9Y1&#xA;PS9BsbawuGggm4yyRijAu4HIjkDStOgwZNDhyeqUbNNUe0M2O4xlQtD/AJxyvf6DDfXh9a6tZVjt&#xA;5W2KLKRzAAoN+I64fymLCLgKtxNN2hn1GSskuIUe54/i7B2KosyyJp0PBytZpa8SR+zH4YOqeia+&#xA;VnmkluC7syqqjck7knx+WCShkWQS7FWFa7dNcatKPUEkUFEi49BUAtv41wx5plsEFljB2KuxVPdb&#xA;0zUr/wDKS0SxtJrt01+YusEbyEA2UW5Cg0zX6v6g7TQfSfewzR9H84abfLPHpOorG4MV0kdvKrSQ&#xA;SDjLHUoac0qMxXOei33m7Wruzvml8u6g02qXOqfWIVtJFZLe7tEtraknHjyUIA1BU8fvlbGnln+E&#xA;/NP/AFZr7/pGm/5pyLJn9vp2oWH5SaRDfW0trK3mHU3WOdGjYqbGwHIBgDSoOZek5lwdd9ISQUqK&#xA;9O+Z7q25HLuznqxrgVrCrsVdiq6GVopUlX7SMGH0GuBU6k8wQeg/pxv68goS1KD6fAZHhZ8SR5Ng&#xA;q20/oTLMI0kZN0WQcl5diVOzU8Dt41G2RkLFJiaNrJZZZpXmmdpZpCWkkcksxPUknCAByUklbhQ7&#xA;FUz03VLsTwQPKBbghSCFAoPemRIZCS3UdUu3mngEoaAsVAAWnGvjTEBTJLskxes+XiRodgRsRAlD&#xA;9GZUeTrsvMq35omMeVWMill+sQ1CkKfteJDfqyOo+lxOzP734F5T6mnf74m/5HL/ANUsxt3e7O9T&#xA;Tv8AfE3/ACOX/qljuuy2eeB4I4YY2RUZ3Jdw5JcKOyp/JipKM0vWk0+BkFuZXdqs3ILsBsOhwEKE&#xA;b/i7/lzP/Iwf805Giy2SCaRpp5pTyAldm4lidmNaYRHvUy7lqqqigFB7ZKmBLeFXYq7FUTa6pqdp&#xA;GY7S8nto2PJkhleME0pUhSMiYg82UZkclb/EGv8A/V0vP+kib/mrB4ce5Piy73f4g1//AKul5/0k&#xA;Tf8ANWPhx7l8WXe7/EGv/wDV0vP+kib/AJqx8OPcviy70Pd3+oXnD65dTXPp19P1pXk41605E0rh&#xA;EQOSDMnmVDJMXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXrHl7/jhWP/GBP+I5lR5Oty8yq/mr&#xA;/wAom3/MRD/xLI6j6XF7M/vfgXkWY7vHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;X//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:9ee27639-7a1e-cb44-aff8-c892e92bf7b9</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:9ee27639-7a1e-cb44-aff8-c892e92bf7b9</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:22890ed3-b1bf-7e41-9cf1-91ad063b12bd</stRef:instanceID>
            <stRef:documentID>xmp.did:22890ed3-b1bf-7e41-9cf1-91ad063b12bd</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68EB2F6BD264E411BAC9C27B1D136836</stEvt:instanceID>
                  <stEvt:when>2014-11-06T15:40:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07923ADE3D67E411B29DD507E314CD2A</stEvt:instanceID>
                  <stEvt:when>2014-11-08T21:50:40+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:22890ed3-b1bf-7e41-9cf1-91ad063b12bd</stEvt:instanceID>
                  <stEvt:when>2014-11-08T23:48:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9ee27639-7a1e-cb44-aff8-c892e92bf7b9</stEvt:instanceID>
                  <stEvt:when>2014-11-08T23:49:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.281289</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450.281 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450.281 li
450 450.281 li
450 0 li
cp
clp
450 300 mo
450 450.281 li
0 450.281 li
0 300 li
450 300 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .219608 .321569 rgb
f
307.715 356.499 mo
263.731 356.499 li
263.618 356.325 263.504 356.158 263.391 355.999 cv
307.215 355.999 li
307.215 337.56 li
366.107 337.56 li
366.007 337.731 365.916 337.896 365.829 338.06 cv
307.715 338.06 li
307.715 356.499 li
.501961 .611765 .662745 rgb
f
211.141 366.979 mo
209.025 366.979 194.295 353.019 194.295 347.108 cv
194.295 341.199 198.464 335.39 203.607 335.39 cv
206.703 335.39 209.448 337.133 211.141 339.811 cv
212.832 337.133 215.577 335.39 218.678 335.39 cv
223.818 335.39 227.987 341.199 227.987 347.108 cv
227.987 353.019 212.924 366.979 211.141 366.979 cv
.2 .376471 .458824 rgb
f
176.831 358.858 mo
176.399 356.683 li
176.112 355.228 175.866 353.765 175.602 352.309 cv
175.344 350.848 175.069 349.391 174.835 347.926 cv
174.107 343.536 li
173.718 341.013 li
172.941 342.048 172.154 343.075 171.378 344.111 cv
170.195 345.644 169.024 347.184 167.811 348.698 cv
167.678 348.862 li
167.507 348.854 li
165.678 348.761 163.848 348.637 162.018 348.483 cv
163.778 348.337 165.538 348.216 167.297 348.123 cv
168.29 346.526 169.321 344.956 170.342 343.377 cv
171.418 341.768 172.465 340.138 173.561 338.546 cv
174.637 336.981 li
174.997 338.869 li
175.828 343.242 li
176.609 347.62 li
176.88 349.077 177.108 350.542 177.354 352.007 cv
177.477 352.752 177.603 353.497 177.727 354.243 cv
178.268 353.414 178.811 352.585 179.365 351.764 cv
180.333 350.336 181.284 348.895 182.275 347.477 cv
182.463 347.207 li
182.743 347.22 li
185.823 347.343 188.904 347.517 191.984 347.772 cv
189.014 348.02 186.044 348.19 183.074 348.313 cv
182.269 349.734 181.431 351.135 180.609 352.547 cv
179.742 354.039 178.833 355.508 177.948 356.988 cv
176.831 358.858 li
f
242.536 357.524 mo
242.37 356.683 li
242.079 355.228 241.833 353.765 241.57 352.309 cv
241.535 352.106 241.499 351.903 241.463 351.7 cv
243.273 351.7 li
243.29 351.802 243.308 351.905 243.325 352.007 cv
243.391 352.408 243.457 352.809 243.524 353.21 cv
243.036 354.335 242.789 355.821 242.536 357.524 cv
233.648 348.862 mo
233.478 348.854 li
231.648 348.761 229.818 348.637 227.987 348.483 cv
229.747 348.337 231.506 348.216 233.265 348.123 cv
234.261 346.526 235.292 344.956 236.314 343.377 cv
237.386 341.768 238.436 340.138 239.531 338.546 cv
240.607 336.981 li
240.82 338.094 li
240.82 348.014 li
240.815 347.985 240.81 347.955 240.806 347.926 cv
240.075 343.536 li
239.686 341.014 li
238.91 342.049 238.123 343.076 237.35 344.111 cv
236.166 345.644 234.993 347.184 233.782 348.698 cv
233.648 348.862 li
f
217.75 427.979 mo
181.38 427.979 li
181.38 427.478 li
217.25 427.478 li
217.25 407.717 li
233.135 407.717 li
233.157 407.88 233.178 408.048 233.196 408.217 cv
217.75 408.217 li
217.75 427.979 li
.501961 .611765 .662745 rgb
f
120.646 389.377 mo
109.109 389.377 li
109.109 361.168 li
57.2803 361.168 li
57.2803 384.938 li
56.7803 384.939 li
56.7803 360.668 li
109.609 360.668 li
109.609 388.877 li
120.145 388.877 li
120.145 333.204 li
161.654 333.204 li
161.654 376.173 li
161.485 376.197 161.317 376.239 161.154 376.297 cv
161.154 333.704 li
120.646 333.704 li
120.646 389.377 li
f
26.9985 315.982 mo
23.9224 315.982 li
23.9224 324.602 li
22.2612 324.602 li
22.2612 315.982 li
19.2329 315.982 li
19.2329 314.648 li
26.9985 314.648 li
26.9985 315.982 li
cp
1 1 1 rgb
f
29.7329 318.162 mo
29.979 317.816 30.2788 317.547 30.6318 317.355 cv
30.9849 317.164 31.376 317.068 31.8042 317.068 cv
32.5879 317.068 33.1997 317.316 33.6396 317.81 cv
34.0796 318.305 34.2993 319.067 34.2993 320.098 cv
34.2993 324.602 li
32.6382 324.602 li
32.6382 320.084 li
32.6382 319.505 32.5254 319.084 32.2998 318.822 cv
32.0742 318.56 31.7383 318.43 31.2915 318.43 cv
30.936 318.43 30.6284 318.492 30.3687 318.617 cv
30.1089 318.742 29.897 318.917 29.7329 319.141 cv
29.7329 324.602 li
28.0718 324.602 li
28.0718 313.938 li
29.7329 313.938 li
29.7329 318.162 li
cp
f
38.9819 318.402 mo
38.5488 318.402 38.2026 318.559 37.9429 318.87 cv
37.6831 319.182 37.5215 319.589 37.4575 320.09 cv
37.4712 320.125 li
40.3628 320.125 li
40.3628 319.994 li
40.3628 319.521 40.2524 319.137 40.0313 318.843 cv
39.8101 318.549 39.4604 318.402 38.9819 318.402 cv
cp
39.1597 324.746 mo
38.0796 324.746 37.2354 324.404 36.627 323.724 cv
36.0186 323.043 35.7144 322.159 35.7144 321.074 cv
35.7144 320.801 li
35.7144 319.717 36.0186 318.822 36.627 318.118 cv
37.2354 317.414 38.0205 317.065 38.9819 317.068 cv
39.9756 317.068 40.7275 317.375 41.2378 317.988 cv
41.748 318.602 42.0034 319.42 42.0034 320.445 cv
42.0034 321.342 li
37.4302 321.342 li
37.4165 321.375 li
37.4346 321.981 37.5942 322.474 37.895 322.852 cv
38.1958 323.23 38.6494 323.42 39.2554 323.42 cv
39.7065 323.42 40.0972 323.365 40.4277 323.256 cv
40.7583 323.147 41.0645 322.988 41.3472 322.783 cv
41.8872 323.871 li
41.6045 324.117 41.231 324.324 40.7661 324.492 cv
40.3013 324.661 39.7656 324.746 39.1597 324.746 cv
cp
f
47.0347 318.703 mo
46.3237 318.676 li
46 318.676 45.73 318.744 45.5137 318.881 cv
45.2974 319.018 45.1299 319.211 45.0112 319.461 cv
45.0112 324.602 li
43.3501 324.602 li
43.3501 317.205 li
44.8677 317.205 li
44.9771 318.279 li
45.1641 317.9 45.4043 317.604 45.6982 317.391 cv
45.9922 317.176 46.3306 317.068 46.7134 317.068 cv
46.8135 317.068 46.9072 317.076 46.9937 317.093 cv
47.2329 317.15 li
47.0347 318.703 li
cp
f
50.6919 323.412 mo
51.1064 323.412 51.4814 323.308 51.8164 323.098 cv
52.1514 322.889 52.3735 322.649 52.4829 322.381 cv
52.4829 321.287 li
51.1636 321.287 li
50.6807 321.287 50.3022 321.406 50.0288 321.646 cv
49.7554 321.885 49.6187 322.166 49.6187 322.49 cv
49.6187 322.772 49.7109 322.996 49.8955 323.163 cv
50.0801 323.33 50.3457 323.412 50.6919 323.412 cv
cp
52.7222 324.602 mo
52.6631 324.415 52.6138 324.232 52.5752 324.055 cv
52.5366 323.877 52.5103 323.699 52.4966 323.522 cv
52.2734 323.868 51.9746 324.158 51.6011 324.394 cv
51.2275 324.629 50.8105 324.746 50.3501 324.746 cv
49.5801 324.746 48.9888 324.547 48.5762 324.15 cv
48.1636 323.754 47.9575 323.21 47.9575 322.518 cv
47.9575 321.802 48.2402 321.244 48.8052 320.846 cv
49.3701 320.447 50.1655 320.248 51.1909 320.248 cv
52.4829 320.248 li
52.4829 319.598 li
52.4829 319.211 52.3701 318.908 52.1445 318.69 cv
51.9189 318.471 51.5918 318.361 51.1636 318.361 cv
50.7852 318.361 50.4844 318.451 50.2612 318.631 cv
50.0381 318.81 49.9263 319.045 49.9263 319.332 cv
48.3267 319.338 li
48.3198 319.297 li
48.2881 318.714 48.5488 318.197 49.1025 317.746 cv
49.6563 317.295 50.3774 317.068 51.2661 317.068 cv
52.1274 317.068 52.8223 317.287 53.3511 317.725 cv
53.8799 318.162 54.144 318.791 54.144 319.611 cv
54.144 322.9 li
54.144 323.205 54.1646 323.498 54.2056 323.778 cv
54.2466 324.059 54.3125 324.333 54.4038 324.602 cv
52.7222 324.602 li
cp
f
60.7065 321.006 mo
60.7065 320.25 60.564 319.631 60.2793 319.15 cv
59.9946 318.67 59.5693 318.43 59.0044 318.43 cv
58.6582 318.43 58.3643 318.504 58.1226 318.651 cv
57.8809 318.799 57.6875 319.006 57.5415 319.27 cv
57.5415 322.613 li
57.6875 322.873 57.8809 323.072 58.1226 323.211 cv
58.3643 323.35 58.6626 323.42 59.0181 323.42 cv
59.583 323.42 60.0059 323.211 60.2861 322.794 cv
60.5664 322.377 60.7065 321.829 60.7065 321.15 cv
60.7065 321.006 li
cp
62.3608 321.15 mo
62.3608 322.226 62.1079 323.094 61.6021 323.754 cv
61.0962 324.415 60.3921 324.746 59.4897 324.746 cv
59.0703 324.746 58.6992 324.67 58.3755 324.52 cv
58.0518 324.369 57.7739 324.148 57.5415 323.857 cv
57.5415 327.445 li
55.8804 327.445 li
55.8804 317.205 li
57.2817 317.205 li
57.4458 318.135 li
57.6826 317.789 57.9688 317.524 58.3037 317.342 cv
58.6387 317.16 59.0273 317.068 59.4692 317.068 cv
60.3809 317.068 61.0903 317.43 61.5986 318.152 cv
62.1069 318.875 62.3608 319.826 62.3608 321.006 cv
62.3608 321.15 li
cp
f
66.189 321.635 mo
66.353 322.373 li
66.394 322.373 li
68.0142 317.205 li
69.8325 317.205 li
66.77 325.723 li
66.5742 326.238 66.2983 326.678 65.9429 327.043 cv
65.5874 327.407 65.084 327.59 64.4321 327.59 cv
64.2954 327.59 64.1484 327.576 63.9912 327.549 cv
63.834 327.522 63.6826 327.489 63.5366 327.453 cv
63.7212 326.168 li
63.7803 326.172 63.8647 326.179 63.9741 326.188 cv
64.0835 326.197 64.1655 326.201 64.2202 326.201 cv
64.521 326.201 64.7612 326.1 64.9414 325.895 cv
65.1216 325.69 65.2686 325.452 65.3823 325.184 cv
65.6558 324.514 li
62.9692 317.205 li
64.7808 317.205 li
66.189 321.635 li
cp
f
128.576 434.875 mo
124.333 434.875 li
124.333 425.541 li
114.999 425.541 li
114.999 421.299 li
124.333 421.299 li
124.333 411.965 li
128.576 411.965 li
128.576 421.299 li
137.91 421.299 li
137.91 425.541 li
128.576 425.541 li
128.576 434.875 li
.2 .376471 .458824 rgb
f
33.8982 430.946 mo
31.972 430.946 30.0454 430.211 28.5757 428.741 cv
25.6357 425.802 25.6353 421.036 28.5747 418.097 cv
30.0446 416.627 31.971 415.892 33.8974 415.892 cv
35.8239 415.892 37.7503 416.627 39.2202 418.097 cv
39.1986 418.075 39.1666 418.065 39.1245 418.065 cv
38.5418 418.065 36.0579 420.095 33.3159 422.838 cv
30.3765 425.777 28.2544 428.42 28.5757 428.741 cv
28.5973 428.763 28.6293 428.773 28.6713 428.773 cv
29.2533 428.773 31.7368 426.743 34.479 424 cv
37.4185 421.06 39.541 418.417 39.2202 418.097 cv
42.1597 421.036 42.1597 425.802 39.2202 428.741 cv
37.7503 430.211 35.8244 430.946 33.8982 430.946 cv
f
283.259 347.797 mo
281.144 347.797 279.029 346.99 277.415 345.376 cv
274.189 342.149 274.189 336.918 277.416 333.691 cv
277.064 334.044 279.393 336.944 282.619 340.172 cv
285.63 343.182 288.359 345.412 288.997 345.412 cv
289.043 345.412 289.078 345.401 289.102 345.377 cv
287.488 346.99 285.374 347.797 283.259 347.797 cv
289.102 345.377 mo
289.454 345.024 287.124 342.122 283.896 338.895 cv
280.886 335.885 278.16 333.656 277.521 333.656 cv
277.475 333.656 277.44 333.668 277.416 333.691 cv
279.03 332.077 281.145 331.27 283.261 331.27 cv
285.375 331.27 287.489 332.077 289.102 333.689 cv
292.328 336.917 292.329 342.149 289.102 345.377 cv
f
181.38 450.281 mo
160.1 450.281 li
160.1 413.48 li
163.39 413.48 li
163.39 412.15 li
162.44 411.11 161.88 409.61 161.36 408.03 cv
160.39 407.23 li
159.72 406.66 li
159.39 406.37 li
159.28 406.28 li
159.28 406.27 li
159.25 406.23 li
159.19 406.16 li
158.17 405.01 li
157.87 404.69 157.63 404.36 157.26 404 cv
156.92 403.64 156.57 403.3 156.2 402.96 cv
155.83 402.63 155.45 402.32 155.05 402.02 cv
154.85 401.87 154.65 401.73 154.45 401.59 cv
153.86 401.21 li
154.5 401.43 li
153.97 401.22 153.44 400.99 152.91 400.79 cv
152.37 400.61 151.84 400.4 151.3 400.25 cv
150.22 399.91 149.13 399.63 148 399.52 cv
146.65 399.38 145.67 398.17 145.81 396.82 cv
145.941 395.556 147.01 394.617 148.253 394.617 cv
148.338 394.617 148.424 394.621 148.51 394.63 cv
148.52 394.63 li
150.27 394.62 li
150.26 391.11 li
145.34 391.13 li
145.06 391.13 144.83 390.94 144.83 390.71 cv
144.83 390.59 li
144.83 390.35 145.06 390.16 145.34 390.16 cv
146.49 390.15 li
146.46 383.3 li
145.55 382.96 li
144.21 382.45 143.54 380.96 144.05 379.63 cv
144.43 378.61 145.41 377.99 146.44 377.98 cv
146.4 367.17 li
149.15 367.16 li
151.72 367.15 li
154.48 367.14 li
154.51 373.98 li
160.04 377.08 li
160.06 377.06 li
160.36 376.699 160.741 376.444 161.154 376.297 cv
161.154 389.127 li
161.654 389.127 li
161.654 376.173 li
161.777 376.155 161.901 376.146 162.025 376.146 cv
162.164 376.146 162.303 376.158 162.44 376.18 cv
162.585 376.156 162.733 376.144 162.88 376.144 cv
163.412 376.144 163.944 376.301 164.39 376.63 cv
169.8 380.62 li
170.152 380.389 170.552 380.276 170.949 380.276 cv
171.498 380.276 172.039 380.492 172.44 380.91 cv
172.46 380.93 li
172.46 380.93 173.08 381.59 173.96 382.62 cv
174.4 383.15 174.91 383.76 175.45 384.5 cv
175.72 384.89 176 385.26 176.29 385.84 cv
176.36 385.96 176.45 386.18 176.52 386.36 cv
176.55 386.43 li
176.56 386.46 li
176.57 386.48 li
176.61 386.61 li
176.63 386.68 li
176.67 386.84 li
176.85 387.47 li
176.95 387.96 177.06 388.46 177.16 388.95 cv
177.24 389.39 177.31 389.82 177.39 390.24 cv
177.47 390.75 177.54 391.23 177.61 391.68 cv
178.25 393.18 178.11 394.77 178.11 394.77 cv
178.84 406.75 li
178.57 408.61 178.41 410.1 178.04 411.2 cv
178.09 411.2 li
178.09 413.48 li
181.38 413.48 li
181.38 427.478 li
172.498 427.478 li
172.498 427.979 li
181.38 427.979 li
181.38 450.281 li
152.97 394.61 mo
153.23 394.61 153.44 394.82 153.44 395.09 cv
153.44 395.28 153.33 395.44 153.17 395.52 cv
153.46 395.54 153.74 395.56 154.02 395.59 cv
154.59 395.62 155.17 395.63 155.74 395.66 cv
155.89 395.69 li
156.38 395.88 li
157.2 396.19 li
157.45 396.29 157.72 396.39 157.99 396.48 cv
158.5 396.68 159.04 396.85 159.56 397.05 cv
159.49 395 159.57 393.34 159.9 392.85 cv
159.92 392.82 li
156.36 387.05 li
154.56 386.37 li
154.57 390.12 li
155.72 390.12 li
155.727 390.12 155.734 390.119 155.741 390.119 cv
156.011 390.119 156.23 390.306 156.24 390.54 cv
156.24 390.66 li
156.24 390.89 156.01 391.09 155.72 391.09 cv
150.81 391.11 li
150.83 394.62 li
152.97 394.61 li
0 .14902 .219608 rgb
f
181.38 427.979 mo
172.498 427.979 li
172.498 427.478 li
181.38 427.478 li
181.38 427.979 li
.341176 .415686 .45098 rgb
f
161.654 389.127 mo
161.154 389.127 li
161.154 376.297 li
161.317 376.239 161.485 376.197 161.654 376.173 cv
161.654 389.127 li
f
258.49 431.6 mo
232.77 431.6 li
233.467 429.601 li
255.49 429.601 li
255.49 429.601 li
255.49 429.601 254.324 427.131 254.501 424.047 cv
254.58 422.672 256.233 422.339 258.205 422.339 cv
259.13 422.339 260.126 422.413 261.063 422.486 cv
261.999 422.559 262.876 422.633 263.563 422.633 cv
264.009 422.633 264.374 422.602 264.625 422.52 cv
266.476 421.92 272.028 420.038 270.794 417.263 cv
269.56 414.486 269.869 412.636 270.794 412.636 cv
271.719 412.636 273.57 410.169 273.57 410.169 cv
273.57 410.169 272.028 407.701 273.57 407.393 cv
275.112 407.084 274.804 404.309 273.879 400.607 cv
273.671 399.777 273.568 399.577 273.637 399.577 cv
273.67 399.577 273.74 399.62 273.855 399.664 cv
273.97 399.708 274.13 399.752 274.342 399.752 cv
274.724 399.752 275.276 399.609 276.039 399.064 cv
278.196 397.522 276.963 395.363 273.57 392.312 cv
270.178 389.26 269.253 388.269 270.486 386.417 cv
271.719 384.567 271.719 384.875 270.486 381.791 cv
269.383 379.031 273.218 371.578 263.868 366.504 cv
264.101 366.315 li
265.133 365.467 265.285 364.181 264.592 362.83 cv
264.592 362.83 263.398 359.44 261.879 356.499 cv
263.731 356.499 li
265.75 359.605 267.59 364.83 267.59 364.83 cv
268.29 366.18 268.13 367.47 267.1 368.31 cv
266.86 368.51 li
276.21 373.58 272.38 381.03 273.49 383.79 cv
274.72 386.88 274.72 386.57 273.49 388.42 cv
272.25 390.27 273.18 391.26 276.57 394.31 cv
279.96 397.36 281.2 399.52 279.04 401.06 cv
278.275 401.608 277.722 401.752 277.339 401.752 cv
277.128 401.752 276.969 401.708 276.854 401.665 cv
276.74 401.621 276.669 401.578 276.637 401.578 cv
276.567 401.578 276.671 401.778 276.88 402.61 cv
277.8 406.31 278.11 409.08 276.57 409.39 cv
275.03 409.7 276.57 412.17 276.57 412.17 cv
276.57 412.17 274.72 414.64 273.79 414.64 cv
272.87 414.64 272.56 416.49 273.79 419.26 cv
275.03 422.04 269.48 423.92 267.63 424.52 cv
267.38 424.601 267.015 424.632 266.571 424.632 cv
265.885 424.632 265.008 424.558 264.071 424.485 cv
263.134 424.411 262.138 424.338 261.211 424.338 cv
259.237 424.338 257.58 424.671 257.5 426.05 cv
257.32 429.13 258.49 431.6 258.49 431.6 cv
242.237 365.426 mo
242.45 358.11 li
242.479 357.912 242.508 357.717 242.536 357.524 cv
242.8 358.858 li
243.918 356.988 li
244.64 355.781 245.378 354.582 246.096 353.371 cv
245.034 355.272 245.449 357.718 247.19 359.149 cv
252.288 363.345 li
252.068 363.338 251.848 363.335 251.63 363.335 cv
248.16 363.335 245.039 364.143 242.237 365.426 cv
263.391 355.999 mo
261.615 355.999 li
260.869 354.618 260.06 353.391 259.283 352.743 cv
258.536 352.121 257.149 350.35 255.75 350.35 cv
254.968 350.35 254.181 350.903 253.5 352.518 cv
253.353 352.355 253.192 352.201 253.022 352.061 cv
252.168 351.358 251.135 351.015 250.108 351.015 cv
248.784 351.015 247.47 351.586 246.562 352.689 cv
246.434 352.845 246.317 353.008 246.212 353.175 cv
246.335 352.966 246.458 352.757 246.58 352.547 cv
247.402 351.135 248.239 349.734 249.044 348.313 cv
252.014 348.19 254.984 348.02 257.954 347.772 cv
254.874 347.517 251.793 347.343 248.713 347.22 cv
248.434 347.207 li
248.245 347.477 li
247.254 348.895 246.305 350.336 245.336 351.764 cv
244.78 352.585 244.237 353.413 243.696 354.242 cv
243.639 353.898 243.582 353.554 243.524 353.21 cv
243.625 352.977 243.736 352.76 243.86 352.56 cv
243.78 351.7 li
243.273 351.7 li
243.044 350.337 242.832 348.975 242.58 347.62 cv
241.799 343.242 li
240.968 338.869 li
240.82 338.094 li
240.82 300 li
262.1 300 li
262.1 351.7 li
259.94 351.7 li
259.9 352.42 li
259.99 352.56 260.07 352.71 260.15 352.86 cv
261.02 353.43 261.79 354.33 262.28 354.74 cv
262.646 355.046 263.02 355.48 263.391 355.999 cv
241.463 351.7 mo
240.82 351.7 li
240.82 348.014 li
241.018 349.246 241.244 350.472 241.463 351.7 cv
0 .14902 .219608 rgb
f
263.731 356.499 mo
261.879 356.499 li
261.792 356.331 261.704 356.164 261.615 355.999 cv
263.391 355.999 li
263.504 356.158 263.618 356.325 263.731 356.499 cv
.341176 .415686 .45098 rgb
f
242.8 358.858 mo
242.536 357.524 li
242.789 355.821 243.036 354.335 243.524 353.21 cv
243.582 353.554 243.639 353.898 243.696 354.242 cv
244.237 353.413 244.78 352.585 245.336 351.764 cv
246.305 350.336 247.254 348.895 248.245 347.477 cv
248.434 347.207 li
248.713 347.22 li
251.793 347.343 254.874 347.517 257.954 347.772 cv
254.984 348.02 252.014 348.19 249.044 348.313 cv
248.239 349.734 247.402 351.135 246.58 352.547 cv
246.458 352.757 246.335 352.966 246.212 353.175 cv
246.172 353.24 246.133 353.305 246.096 353.371 cv
245.378 354.582 244.64 355.781 243.918 356.988 cv
242.8 358.858 li
243.273 351.7 mo
241.463 351.7 li
241.244 350.472 241.018 349.246 240.82 348.014 cv
240.82 338.094 li
240.968 338.869 li
241.799 343.242 li
242.58 347.62 li
242.832 348.975 243.044 350.337 243.273 351.7 cv
.137255 .254902 .313725 rgb
f
69.2999 429.73 mo
79.7899 419.55 li
79.71 419.27 79.7699 418.93 79.96 418.61 cv
79.8798 418.52 79.7899 418.41 79.7199 418.31 cv
78.84 417.01 77.83 415.83 76.7599 414.68 cv
76.2399 414.09 75.6699 413.55 75.1199 412.99 cv
74.5599 412.44 73.9699 411.9 73.3999 411.36 cv
73.84 411.81 li
72.59 410.91 li
71.3499 410.05 li
70.53 409.47 69.6599 408.91 68.78 408.32 cv
67.9099 407.73 67.0099 407.11 66.0999 406.36 cv
64.6299 405.14 li
63.6299 404.16 li
63.3599 403.97 63.15 403.86 62.8699 403.72 cv
62.6099 403.6 li
61.7599 403.2 61.03 402.66 60.4 402.03 cv
59.83 401.73 59.2999 401.39 58.8599 400.99 cv
56.5599 401 li
56.5599 403.1 li
0 403.1 li
0 381.83 li
56.5599 381.83 li
56.5599 384.94 li
56.7803 384.939 li
56.7803 387.424 li
57.2803 387.424 li
57.2803 384.938 li
59.84 384.93 li
59.84 384.99 li
61.0399 384.58 62.6699 384.4 64.6999 384.09 cv
77.4 387.23 li
77.59 387.24 77.7898 387.27 77.9899 387.33 cv
78.1599 387.38 li
78.1599 387.38 78.27 387.42 78.46 387.49 cv
79.3099 387.7 li
79.3099 387.7 80.15 387.86 81.14 388.45 cv
81.2599 388.49 li
81.84 388.55 82.4 388.75 82.89 389.08 cv
83.2399 389.21 83.59 389.33 83.9399 389.46 cv
84.27 389.58 li
84.4 389.64 84.3699 389.59 84.9499 389.85 cv
85.6999 390.26 85.9699 390.62 86.2599 390.92 cv
86.7599 391.53 87.0399 392.04 87.2999 392.53 cv
87.5599 393.02 87.77 393.48 87.9699 393.93 cv
87.9899 393.97 li
88.15 394.12 li
88.2899 394.24 li
88.69 394.59 88.96 395.05 89.0999 395.53 cv
90.64 400.93 li
90.9399 401.41 91.0699 401.94 91.08 402.47 cv
91.4499 403.77 li
91.8699 405.25 91.0099 406.79 89.53 407.21 cv
89.4299 407.23 li
89.0599 410.07 li
93.4399 406 li
93.4799 405.97 li
93.4899 405.62 93.64 405.28 93.9099 405.03 cv
94.172 404.787 94.5021 404.667 94.8311 404.667 cv
95.1927 404.667 95.5529 404.812 95.8199 405.1 cv
96.33 405.64 96.2999 406.5 95.7499 407.01 cv
95.4902 407.25 95.1568 407.37 94.8204 407.37 cv
94.807 407.37 94.7934 407.37 94.7799 407.37 cv
94.7498 407.41 li
88.6599 413.07 li
88.34 415.46 li
88.1475 416.88 86.9473 417.906 85.5628 417.906 cv
85.4365 417.906 85.3086 417.897 85.1799 417.88 cv
84.9199 417.85 84.6899 417.77 84.46 417.68 cv
84.33 418.07 84.1099 418.44 83.7899 418.75 cv
83.269 419.243 82.6062 419.486 81.9387 419.486 cv
81.8758 419.486 81.8128 419.484 81.7499 419.48 cv
81.59 419.63 li
81.2726 419.925 80.8954 420.079 80.5588 420.079 cv
80.4392 420.079 80.3248 420.059 80.2199 420.02 cv
69.2999 429.73 li
81.7499 400.35 mo
80.4099 401.59 78.7399 402.32 77.3599 402.79 cv
76.9499 402.93 76.1599 403.14 75.15 403.35 cv
75.2299 403.47 75.2999 403.6 75.39 403.73 cv
75.64 404.1 75.9098 404.47 76.1898 404.83 cv
76.4699 405.2 76.77 405.54 77.0699 405.89 cv
77.3599 406.22 77.6999 406.57 77.9799 406.87 cv
78.4199 407.32 li
78.8199 407.99 79.2198 408.67 79.64 409.34 cv
80.08 409.99 80.4899 410.67 80.9499 411.3 cv
81.5399 412.14 82.1699 412.96 82.8199 413.75 cv
83.1099 409.92 li
82.5099 409.83 81.9299 409.57 81.4699 409.1 cv
80.47 408.05 80.4399 406.43 81.34 405.34 cv
83.3099 402.96 li
81.7499 400.35 li
0 .14902 .219608 rgb
f
57.2803 387.424 mo
56.7803 387.424 li
56.7803 384.939 li
57.2803 384.938 li
57.2803 387.424 li
.341176 .415686 .45098 rgb
f
390.01 425 mo
332.64 425 li
332.64 358.25 li
362.01 358.25 li
362.21 358.15 362.42 358.08 362.65 358.05 cv
362.721 358.043 362.792 358.039 362.862 358.039 cv
363.174 358.039 363.467 358.111 363.72 358.25 cv
364.33 358.25 li
362.95 355.45 li
362.68 354.89 362.59 354.28 362.66 353.71 cv
361.53 353.02 360.96 351.64 361.33 350.32 cv
361.72 348.92 li
361.72 348.34 361.87 347.77 362.19 347.26 cv
363.83 341.43 li
363.99 340.87 364.29 340.4 364.69 340.04 cv
364.84 339.91 li
365.02 339.74 li
365.04 339.7 li
365.25 339.22 365.48 338.71 365.76 338.19 cv
365.783 338.147 365.806 338.103 365.829 338.06 cv
390.629 338.06 li
390.629 337.56 li
366.107 337.56 li
366.308 337.217 366.549 336.854 366.88 336.45 cv
367.18 336.12 367.47 335.73 368.29 335.29 cv
368.91 335.01 368.87 335.06 369.01 335 cv
369.37 334.87 li
369.76 334.72 370.14 334.59 370.52 334.45 cv
371.01 334.12 371.58 333.92 372.17 333.85 cv
372.39 333.77 li
373.45 333.12 374.37 332.94 374.37 332.94 cv
375.28 332.72 li
375.48 332.64 375.6 332.6 375.6 332.6 cv
375.85 332.51 376.12 332.46 376.37 332.44 cv
390.11 329 li
392.31 329.32 394.06 329.51 395.36 329.95 cv
395.36 329.89 li
397.67 329.89 li
397.67 327.43 li
450 327.43 li
450 348.71 li
397.67 348.71 li
397.67 347.21 li
396.47 347.21 li
396.1 347.55 395.67 347.85 395.21 348.12 cv
394.57 348.74 393.83 349.28 393 349.69 cv
392.2 350.08 li
392.05 350.16 391.94 350.19 391.78 350.33 cv
391.56 350.59 391.3 350.84 391.09 351.07 cv
390.72 351.38 390.38 351.67 390.05 351.92 cv
389.41 352.41 388.85 352.83 388.31 353.21 cv
387.23 353.97 386.2 354.55 385.2 355.09 cv
384.19 355.63 383.2 356.12 382.22 356.6 cv
379.5 357.93 li
379.16 358.25 li
390.01 358.25 li
390.01 425 li
372.04 356.1 mo
371.86 356.27 li
371.56 356.52 371.22 356.7 370.86 356.82 cv
371.05 357.28 li
372.04 356.1 li
372.66 347.32 mo
371.21 350.74 li
372.24 351.98 li
373.17 353.09 373.17 354.67 372.32 355.77 cv
374.96 352.67 li
375.01 352.63 li
375.68 352.09 li
376.19 351.67 li
376.72 351.21 li
377.06 350.89 377.41 350.56 377.73 350.22 cv
377.91 350.04 378.07 349.86 378.24 349.67 cv
377.47 349.5 376.87 349.34 376.52 349.22 cv
375.32 348.81 373.92 348.22 372.66 347.32 cv
0 .14902 .219608 rgb
f
390.629 338.06 mo
365.829 338.06 li
365.916 337.896 366.007 337.731 366.107 337.56 cv
390.629 337.56 li
390.629 338.06 li
.341176 .415686 .45098 rgb
f
73.84 411.81 mo
73.84 411.81 li
149.15 367.16 mo
149.15 366.54 li
150.04 366.18 li
150.4 357.83 li
150.83 366.18 li
151.72 366.53 li
151.72 367.15 li
149.15 367.16 li
0 .14902 .219608 rgb
f
360.211 342.838 mo
360.211 342.838 360.29 342.578 360.43 342.123 cv
360.569 341.679 360.773 341.049 361.038 340.293 cv
361.306 339.536 361.63 338.656 362.043 337.696 cv
362.251 337.216 362.48 336.715 362.757 336.188 cv
363.04 335.658 363.342 335.111 363.879 334.451 cv
364.185 334.118 364.473 333.733 365.289 333.289 cv
365.912 333.008 365.872 333.057 366.015 332.995 cv
366.369 332.866 li
366.84 332.694 367.304 332.526 367.752 332.362 cv
368.649 332.036 369.487 331.731 370.205 331.471 cv
371.641 330.948 372.598 330.6 372.598 330.6 cv
374.155 330.033 375.878 330.837 376.445 332.395 cv
377.012 333.952 376.208 335.675 374.65 336.242 cv
374.468 336.302 li
374.445 336.309 li
374.445 336.309 373.468 336.592 372 337.018 cv
371.267 337.23 370.411 337.478 369.494 337.744 cv
369.036 337.877 368.563 338.015 368.081 338.154 cv
367.719 338.259 li
367.621 338.276 367.338 338.396 367.731 338.225 cv
368.095 338.013 368.018 337.997 367.985 338.04 cv
367.86 338.154 367.619 338.475 367.41 338.816 cv
367.195 339.162 366.983 339.544 366.784 339.927 cv
366.387 340.694 366.037 341.465 365.748 342.13 cv
365.459 342.797 365.229 343.363 365.074 343.758 cv
364.924 344.146 364.838 344.367 364.838 344.367 cv
364.813 344.431 li
364.328 345.685 362.917 346.31 361.662 345.824 cv
360.464 345.361 359.844 344.047 360.211 342.838 cv
cp
.701961 .592157 .454902 rgb
f
358.326 348.323 mo
360.83 339.431 li
360.987 338.874 361.293 338.4 361.692 338.04 cv
361.844 337.905 li
367.647 332.7 li
369.088 331.409 371.302 331.529 372.593 332.969 cv
373.884 334.409 373.764 336.623 372.323 337.914 cv
372.155 338.056 li
366.034 342.886 li
367.046 341.36 li
364.072 350.108 li
363.537 351.682 361.828 352.523 360.254 351.989 cv
358.734 351.472 357.898 349.852 358.326 348.323 cv
cp
.8 .678431 .521569 rgb
f
369.837 342.566 mo
365.017 348.848 li
364.702 344.558 li
369.241 349.98 li
370.319 351.27 370.148 353.189 368.86 354.267 cv
367.662 355.27 365.908 355.182 364.802 354.131 cv
359.696 349.237 li
358.587 348.175 358.412 346.504 359.193 345.25 cv
359.382 344.947 li
363.563 338.225 li
364.678 336.433 367.033 335.884 368.824 336.998 cv
370.615 338.112 371.164 340.468 370.05 342.259 cv
369.984 342.364 369.911 342.47 369.837 342.566 cv
cp
.85098 .721569 .552941 rgb
f
366.096 338.2 mo
366.096 344.02 370.46 346.177 373.52 347.223 cv
375.234 347.809 383.11 349.417 387.026 348.128 cv
390.944 346.839 395.11 345.796 395.11 341.378 cv
395.11 332.208 li
395.11 327.79 392.36 327.763 387.11 327.003 cv
371.365 330.944 li
371.365 330.944 366.096 331.917 366.096 338.2 cv
cp
.94902 .807843 .619608 rgb
f
373.133 337.107 mo
366.267 353.321 li
366.214 350.664 li
369.798 359.685 li
370.418 361.245 369.655 363.013 368.095 363.633 cv
366.614 364.221 364.941 363.554 364.245 362.151 cv
359.952 353.447 li
359.559 352.65 359.538 351.768 359.822 350.994 cv
359.899 350.789 li
366.043 334.289 li
366.778 332.314 368.976 331.309 370.95 332.044 cv
372.926 332.779 373.93 334.977 373.195 336.951 cv
373.133 337.107 li
cp
f
409.11 327.89 mo
409.11 345.211 li
392.36 345.211 li
392.36 327.89 li
409.11 327.89 li
cp
f
329.637 422.997 mo
329.637 356.249 li
387.008 356.249 li
387.008 422.997 li
329.637 422.997 li
cp
1 1 1 rgb
f
385.008 420.997 mo
331.637 420.997 li
331.637 358.249 li
385.008 358.249 li
385.008 420.997 li
cp
0 0 0 rgb
f
362.405 405.503 mo
362.405 405.503 355.65 408.829 353.934 407.936 cv
352.217 407.042 351.178 407.571 349.67 407.043 cv
348.162 406.516 350.839 396.361 352.149 395.029 cv
353.461 393.695 354.488 393.6 354.795 391.843 cv
355.103 390.085 355.338 386.994 355.736 385.551 cv
356.133 384.11 356.773 373.806 356.763 369.479 cv
356.751 365.152 355.736 358.249 355.736 358.249 cv
366.23 358.249 li
366.23 358.249 367.055 373.703 365.612 378.494 cv
364.169 383.285 364.843 394.344 364.61 396.01 cv
364.378 397.677 365.022 400.819 365.551 402.79 cv
366.079 404.759 362.405 405.503 362.405 405.503 cv
cp
.247059 .278431 .290196 rgb
f
362.605 394.181 mo
362.605 394.18 362.748 394.575 363.052 395.087 cv
363.353 395.601 363.798 396.248 364.317 396.828 cv
364.828 397.417 365.403 397.948 365.887 398.299 cv
366.364 398.656 366.753 398.831 366.753 398.832 cv
367.457 399.149 367.77 399.978 367.452 400.681 cv
367.135 401.385 366.307 401.697 365.602 401.38 cv
365.229 401.211 364.964 400.894 364.847 400.531 cv
364.847 400.532 364.717 400.126 364.416 399.61 cv
364.123 399.09 363.661 398.457 363.135 397.883 cv
362.617 397.301 362.025 396.785 361.549 396.428 cv
361.075 396.067 360.699 395.881 360.699 395.88 cv
360.019 395.542 359.741 394.716 360.079 394.035 cv
360.417 393.354 361.243 393.077 361.924 393.416 cv
362.253 393.579 362.489 393.86 362.605 394.181 cv
cp
.666667 .694118 .717647 rgb
f
367.557 399.946 mo
367.558 399.946 367.557 400.284 367.609 400.774 cv
367.669 401.263 367.785 401.903 367.963 402.527 cv
368.133 403.153 368.356 403.764 368.568 404.209 cv
368.782 404.653 368.971 404.936 368.971 404.936 cv
369.382 405.554 369.215 406.387 368.599 406.798 cv
367.981 407.209 367.148 407.042 366.737 406.425 cv
366.575 406.182 366.504 405.905 366.514 405.634 cv
366.514 405.634 366.525 405.293 366.474 404.803 cv
366.421 404.311 366.291 403.675 366.107 403.053 cv
365.932 402.429 365.694 401.822 365.488 401.375 cv
365.276 400.93 365.099 400.644 365.1 400.644 cv
364.714 400.02 364.907 399.201 365.531 398.815 cv
366.155 398.431 366.974 398.624 367.359 399.248 cv
367.492 399.465 367.557 399.71 367.557 399.946 cv
cp
.603922 .627451 .65098 rgb
f
362.688 397.463 mo
362.688 397.463 362.648 397.879 362.642 398.498 cv
362.64 399.115 362.678 399.935 362.775 400.746 cv
362.865 401.559 363.013 402.363 363.17 402.962 cv
363.329 403.56 363.485 403.953 363.485 403.953 cv
363.755 404.63 363.425 405.398 362.747 405.668 cv
362.069 405.938 361.302 405.607 361.032 404.93 cv
360.945 404.713 360.922 404.48 360.95 404.264 cv
360.95 404.264 361.007 403.846 361.017 403.227 cv
361.024 402.607 360.973 401.791 360.863 400.98 cv
360.762 400.17 360.601 399.366 360.449 398.767 cv
360.293 398.168 360.153 397.773 360.153 397.773 cv
359.912 397.093 360.269 396.345 360.95 396.104 cv
361.631 395.863 362.379 396.22 362.62 396.901 cv
362.685 397.085 362.705 397.28 362.688 397.463 cv
cp
f
363.661 406.044 mo
363.661 406.044 363.565 406.258 363.494 406.57 cv
363.431 406.882 363.395 407.292 363.439 407.692 cv
363.476 408.095 363.583 408.489 363.722 408.778 cv
363.861 409.067 364.017 409.253 364.017 409.253 cv
364.558 409.902 364.47 410.868 363.82 411.41 cv
363.171 411.951 362.205 411.863 361.664 411.214 cv
361.259 410.728 361.207 410.064 361.477 409.534 cv
361.477 409.534 361.588 409.319 361.662 409.006 cv
361.733 408.693 361.752 408.286 361.699 407.886 cv
361.655 407.484 361.53 407.092 361.4 406.802 cv
361.262 406.513 361.122 406.325 361.122 406.325 cv
360.634 405.67 360.77 404.742 361.425 404.254 cv
362.081 403.766 363.008 403.901 363.496 404.557 cv
363.827 405.001 363.87 405.571 363.661 406.044 cv
cp
.666667 .694118 .717647 rgb
f
364.075 410.904 mo
364.075 410.904 364.031 411.114 364.02 411.423 cv
364.021 411.575 364.007 411.756 364.023 411.944 cv
364.041 412.134 364.06 412.335 364.08 412.536 cv
364.151 412.934 364.233 413.329 364.342 413.619 cv
364.442 413.91 364.55 414.099 364.55 414.099 cv
364.923 414.756 364.691 415.592 364.034 415.965 cv
363.376 416.338 362.541 416.107 362.168 415.449 cv
361.993 415.143 361.951 414.793 362.022 414.474 cv
362.022 414.474 362.07 414.263 362.082 413.955 cv
362.102 413.646 362.065 413.243 362.018 412.842 cv
361.977 412.644 361.938 412.446 361.9 412.26 cv
361.86 412.075 361.794 411.906 361.752 411.76 cv
361.651 411.469 361.548 411.279 361.548 411.279 cv
361.188 410.62 361.432 409.794 362.092 409.434 cv
362.752 409.074 363.578 409.318 363.938 409.978 cv
364.098 410.272 364.138 410.601 364.075 410.904 cv
cp
f
360.191 397.922 mo
360.191 397.922 360.081 398.359 359.97 399.019 cv
359.865 399.678 359.768 400.558 359.733 401.44 cv
359.689 402.322 359.706 403.207 359.769 403.872 cv
359.832 404.538 359.927 404.983 359.927 404.983 cv
360.084 405.723 359.612 406.451 358.872 406.608 cv
358.133 406.766 357.405 406.294 357.247 405.555 cv
357.199 405.326 357.212 405.094 357.272 404.884 cv
357.272 404.884 357.4 404.446 357.514 403.788 cv
357.625 403.129 357.708 402.248 357.73 401.365 cv
357.763 400.482 357.73 399.598 357.676 398.933 cv
357.615 398.268 357.537 397.822 357.537 397.822 cv
357.408 397.084 357.903 396.381 358.642 396.252 cv
359.381 396.123 360.084 396.617 360.213 397.356 cv
360.246 397.548 360.235 397.744 360.191 397.922 cv
cp
.603922 .627451 .65098 rgb
f
359.762 407.248 mo
359.762 407.248 359.629 407.459 359.503 407.78 cv
359.385 408.103 359.28 408.534 359.26 408.97 cv
359.229 409.404 359.273 409.844 359.367 410.176 cv
359.453 410.507 359.591 410.732 359.591 410.732 cv
360.055 411.489 359.816 412.478 359.06 412.941 cv
358.303 413.405 357.313 413.167 356.85 412.41 cv
356.495 411.831 356.554 411.113 356.938 410.602 cv
356.938 410.602 357.098 410.392 357.216 410.069 cv
357.341 409.748 357.428 409.316 357.44 408.88 cv
357.463 408.444 357.4 408.005 357.315 407.674 cv
357.222 407.342 357.109 407.117 357.109 407.117 cv
356.732 406.365 357.037 405.449 357.79 405.072 cv
358.543 404.695 359.458 405 359.835 405.753 cv
360.082 406.246 360.035 406.811 359.762 407.248 cv
cp
.666667 .694118 .717647 rgb
f
359.382 412.51 mo
359.382 412.51 359.302 412.727 359.237 413.053 cv
359.214 413.217 359.169 413.407 359.153 413.611 cv
359.141 413.815 359.127 414.033 359.112 414.252 cv
359.101 414.688 359.145 415.125 359.2 415.453 cv
359.255 415.781 359.333 416 359.333 416 cv
359.595 416.737 359.21 417.547 358.473 417.81 cv
357.735 418.071 356.926 417.686 356.663 416.949 cv
356.545 416.617 356.56 416.268 356.677 415.963 cv
356.677 415.963 356.761 415.746 356.824 415.42 cv
356.89 415.093 356.946 414.657 356.946 414.221 cv
356.938 414.003 356.93 413.784 356.923 413.58 cv
356.913 413.375 356.873 413.184 356.854 413.02 cv
356.8 412.691 356.726 412.473 356.726 412.473 cv
356.477 411.735 356.874 410.936 357.61 410.689 cv
358.348 410.44 359.146 410.836 359.395 411.573 cv
359.501 411.89 359.488 412.219 359.382 412.51 cv
cp
f
358.218 397.036 mo
358.218 397.036 358.015 397.44 357.763 398.058 cv
357.518 398.678 357.23 399.516 357.005 400.37 cv
356.77 401.222 356.594 402.089 356.51 402.751 cv
356.427 403.414 356.422 403.87 356.422 403.87 cv
356.415 404.626 355.796 405.233 355.039 405.227 cv
354.283 405.219 353.676 404.6 353.683 403.844 cv
353.685 403.61 353.749 403.386 353.853 403.194 cv
353.853 403.194 354.073 402.796 354.327 402.178 cv
354.579 401.559 354.852 400.718 355.066 399.86 cv
355.29 399.006 355.452 398.136 355.543 397.475 cv
355.628 396.811 355.649 396.36 355.649 396.36 cv
355.685 395.611 356.32 395.033 357.069 395.068 cv
357.818 395.103 358.397 395.739 358.361 396.488 cv
358.352 396.683 358.3 396.872 358.218 397.036 cv
cp
.603922 .627451 .65098 rgb
f
355.77 406.044 mo
355.77 406.044 355.593 406.222 355.4 406.508 cv
355.216 406.796 355.019 407.194 354.903 407.614 cv
354.779 408.032 354.727 408.471 354.746 408.815 cv
354.758 409.157 354.843 409.406 354.843 409.406 cv
355.13 410.246 354.682 411.16 353.842 411.447 cv
353.002 411.734 352.088 411.286 351.801 410.446 cv
351.582 409.804 351.795 409.116 352.282 408.701 cv
352.282 408.701 352.483 408.53 352.669 408.242 cv
352.861 407.956 353.041 407.553 353.148 407.131 cv
353.265 406.711 353.3 406.268 353.289 405.926 cv
353.27 405.581 353.209 405.339 353.209 405.339 cv
353.006 404.522 353.503 403.694 354.319 403.491 cv
355.137 403.287 355.964 403.784 356.167 404.602 cv
356.301 405.137 356.131 405.679 355.77 406.044 cv
cp
.666667 .694118 .717647 rgb
f
354.251 411.097 mo
354.251 411.097 354.125 411.291 353.991 411.596 cv
353.934 411.75 353.848 411.926 353.788 412.122 cv
353.73 412.318 353.669 412.528 353.608 412.738 cv
353.501 413.161 353.449 413.598 353.432 413.93 cv
353.413 414.262 353.441 414.492 353.441 414.492 cv
353.536 415.27 352.983 415.976 352.207 416.07 cv
351.431 416.165 350.724 415.612 350.629 414.836 cv
350.586 414.486 350.676 414.148 350.857 413.877 cv
350.857 413.877 350.987 413.684 351.12 413.379 cv
351.255 413.074 351.405 412.661 351.5 412.235 cv
351.54 412.021 351.58 411.806 351.617 411.604 cv
351.652 411.402 351.656 411.207 351.674 411.043 cv
351.691 410.711 351.667 410.481 351.667 410.481 cv
351.586 409.708 352.146 409.015 352.92 408.934 cv
353.693 408.852 354.387 409.413 354.468 410.186 cv
354.503 410.519 354.419 410.837 354.251 411.097 cv
cp
f
356.057 396.458 mo
356.057 396.458 355.837 396.749 355.554 397.208 cv
355.28 397.672 354.918 398.291 354.625 398.942 cv
354.318 399.586 354.06 400.253 353.903 400.77 cv
353.736 401.282 353.674 401.647 353.674 401.647 cv
353.568 402.25 352.994 402.655 352.39 402.55 cv
351.786 402.445 351.381 401.871 351.486 401.267 cv
351.52 401.071 351.605 400.894 351.723 400.75 cv
351.723 400.75 351.958 400.466 352.238 400.005 cv
352.527 399.549 352.865 398.919 353.154 398.266 cv
353.457 397.62 353.69 396.942 353.864 396.433 cv
354.027 395.919 354.105 395.561 354.105 395.561 cv
354.235 394.969 354.821 394.594 355.414 394.724 cv
356.007 394.853 356.382 395.44 356.252 396.032 cv
356.218 396.19 356.147 396.336 356.057 396.458 cv
cp
.603922 .627451 .65098 rgb
f
352.851 403.286 mo
352.851 403.286 352.685 403.403 352.492 403.604 cv
352.305 403.808 352.093 404.098 351.942 404.416 cv
351.785 404.732 351.683 405.073 351.649 405.351 cv
351.618 405.628 351.644 405.835 351.644 405.835 cv
351.73 406.532 351.236 407.168 350.539 407.255 cv
349.843 407.343 349.207 406.848 349.119 406.15 cv
349.057 405.646 349.3 405.172 349.704 404.917 cv
349.704 404.917 349.881 404.806 350.075 404.605 cv
350.269 404.404 350.468 404.108 350.612 403.787 cv
350.764 403.469 350.853 403.121 350.893 402.847 cv
350.925 402.569 350.911 402.368 350.911 402.368 cv
350.863 401.69 351.374 401.101 352.053 401.052 cv
352.731 401.004 353.32 401.516 353.368 402.193 cv
353.399 402.639 353.189 403.046 352.851 403.286 cv
cp
.666667 .694118 .717647 rgb
f
350.936 407.099 mo
350.936 407.099 350.81 407.235 350.66 407.459 cv
350.507 407.681 350.348 407.995 350.196 408.314 cv
350.066 408.642 349.944 408.973 349.89 409.237 cv
349.829 409.498 349.819 409.686 349.819 409.686 cv
349.787 410.317 349.248 410.803 348.617 410.771 cv
347.985 410.737 347.5 410.199 347.532 409.567 cv
347.547 409.283 347.666 409.026 347.849 408.835 cv
347.849 408.835 347.978 408.699 348.127 408.476 cv
348.282 408.255 348.439 407.94 348.589 407.62 cv
348.717 407.291 348.837 406.959 348.893 406.695 cv
348.953 406.434 348.966 406.247 348.966 406.247 cv
349.009 405.62 349.552 405.147 350.179 405.19 cv
350.806 405.232 351.279 405.775 351.236 406.402 cv
351.219 406.672 351.106 406.914 350.936 407.099 cv
cp
f
360.891 397.14 mo
360.891 398.019 360.178 398.732 359.298 398.732 cv
358.418 398.732 357.703 398.019 357.703 397.14 cv
357.703 396.26 358.418 395.545 359.298 395.545 cv
360.178 395.545 360.891 396.26 360.891 397.14 cv
cp
f
358.736 397.14 mo
358.736 398.019 358.022 398.732 357.143 398.732 cv
356.262 398.732 355.548 398.019 355.548 397.14 cv
355.548 396.26 356.262 395.545 357.143 395.545 cv
358.022 395.545 358.736 396.26 358.736 397.14 cv
cp
.603922 .627451 .65098 rgb
f
362.405 396.623 mo
362.405 397.504 361.691 398.218 360.81 398.218 cv
359.931 398.218 359.217 397.504 359.217 396.623 cv
359.217 395.743 359.931 395.03 360.81 395.03 cv
361.691 395.03 362.405 395.743 362.405 396.623 cv
cp
f
360.81 393.435 mo
360.81 394.316 360.098 395.03 359.217 395.03 cv
358.336 395.03 357.622 394.316 357.622 393.435 cv
357.622 392.557 358.336 391.843 359.217 391.843 cv
360.098 391.843 360.81 392.557 360.81 393.435 cv
cp
f
359.41 391.843 mo
359.41 392.724 358.697 393.435 357.816 393.435 cv
356.938 393.435 356.223 392.724 356.223 391.843 cv
356.223 390.963 356.938 390.248 357.816 390.248 cv
358.697 390.248 359.41 390.963 359.41 391.843 cv
cp
f
360.81 391.844 mo
360.81 392.725 360.098 393.436 359.217 393.436 cv
358.338 393.436 357.623 392.725 357.623 391.844 cv
357.623 390.964 358.338 390.249 359.217 390.249 cv
360.098 390.249 360.81 390.964 360.81 391.844 cv
cp
f
360.33 395.03 mo
360.33 395.911 359.615 396.623 358.736 396.623 cv
357.855 396.623 357.143 395.911 357.143 395.03 cv
357.143 394.149 357.855 393.435 358.736 393.435 cv
359.615 393.435 360.33 394.149 360.33 395.03 cv
cp
.666667 .694118 .717647 rgb
f
358.145 392.509 mo
358.145 393.39 357.432 394.103 356.549 394.103 cv
355.67 394.103 354.957 393.39 354.957 392.509 cv
354.957 391.629 355.67 390.915 356.549 390.915 cv
357.432 390.915 358.145 391.629 358.145 392.509 cv
cp
f
357.737 394.103 mo
357.737 394.982 357.023 395.696 356.145 395.696 cv
355.264 395.696 354.55 394.982 354.55 394.103 cv
354.55 393.223 355.264 392.509 356.145 392.509 cv
357.023 392.509 357.737 393.223 357.737 394.103 cv
cp
f
gsave
385.008 420.997 mo
331.637 420.997 li
331.637 358.249 li
385.008 358.249 li
385.008 420.997 li
clp
361.692 358.365 mo
361.693 358.365 361.127 360.723 360.591 364.279 cv
360.305 366.056 360.036 368.131 359.783 370.357 cv
359.667 371.472 359.515 372.62 359.428 373.792 cv
359.322 374.963 359.215 376.152 359.108 377.341 cv
359.026 378.533 358.944 379.725 358.863 380.897 cv
358.771 382.069 358.726 383.228 358.658 384.347 cv
358.582 385.466 358.569 386.552 358.523 387.581 cv
358.461 388.61 358.438 389.588 358.413 390.491 cv
358.395 391.398 358.377 392.23 358.362 392.967 cv
358.316 393.716 358.304 394.375 358.284 394.92 cv
358.255 396.01 358.258 396.644 358.258 396.644 cv
358.262 397.69 357.418 398.54 356.373 398.544 cv
355.328 398.548 354.477 397.704 354.473 396.659 cv
354.472 396.444 354.507 396.238 354.572 396.046 cv
354.627 395.888 li
354.627 395.888 354.813 395.343 355.106 394.37 cv
355.406 393.404 355.803 391.992 356.121 390.226 cv
356.484 388.478 356.836 386.423 357.115 384.203 cv
357.25 383.095 357.422 381.951 357.537 380.784 cv
357.645 379.615 357.756 378.429 357.866 377.241 cv
357.947 376.052 358.029 374.862 358.109 373.691 cv
358.195 372.521 358.213 371.363 358.261 370.246 cv
358.348 368.012 358.349 365.92 358.314 364.125 cv
358.262 360.539 357.99 358.133 357.991 358.133 cv
357.874 357.1 358.617 356.168 359.651 356.051 cv
360.685 355.935 361.617 356.678 361.733 357.711 cv
361.759 357.933 361.741 358.16 361.692 358.365 cv
cp
f
363.575 358.319 mo
363.575 358.319 363.182 360.676 362.844 364.229 cv
362.764 365.118 362.658 366.08 362.591 367.099 cv
362.52 368.118 362.42 369.191 362.364 370.305 cv
362.227 372.528 362.125 374.903 362.064 377.278 cv
362.016 378.466 362.026 379.654 362.012 380.824 cv
361.99 381.993 362.01 383.145 362.032 384.258 cv
362.041 385.371 362.079 386.446 362.131 387.466 cv
362.166 388.486 362.231 389.446 362.302 390.333 cv
362.355 391.222 362.45 392.023 362.531 392.737 cv
362.596 393.458 362.714 394.048 362.791 394.546 cv
362.856 395.069 362.977 395.353 363.032 395.584 cv
363.092 395.803 363.124 395.919 363.124 395.919 cv
363.175 396.107 li
363.448 397.109 362.857 398.144 361.855 398.417 cv
360.853 398.69 359.819 398.1 359.546 397.098 cv
359.503 396.939 359.481 396.77 359.479 396.612 cv
359.479 396.612 359.478 396.434 359.477 396.099 cv
359.48 395.773 359.468 395.249 359.517 394.73 cv
359.56 394.19 359.588 393.518 359.656 392.789 cv
359.716 392.056 359.783 391.228 359.857 390.326 cv
360.008 388.53 360.178 386.446 360.319 384.216 cv
360.397 383.101 360.476 381.948 360.533 380.778 cv
360.588 379.607 360.678 378.42 360.718 377.23 cv
360.769 376.042 360.818 374.853 360.868 373.683 cv
360.901 372.512 360.935 371.359 360.967 370.245 cv
361.016 368.014 361.043 365.932 361.032 364.145 cv
361.029 360.572 360.886 358.179 360.886 358.179 cv
360.84 357.432 361.408 356.789 362.155 356.743 cv
362.902 356.697 363.545 357.266 363.591 358.013 cv
363.598 358.114 363.591 358.223 363.575 358.319 cv
cp
f
grestore
389.203 348.082 mo
389.047 348.159 388.938 348.194 388.782 348.326 cv
388.559 348.585 388.3 348.844 388.09 349.066 cv
387.718 349.385 387.378 349.67 387.051 349.916 cv
386.41 350.414 385.846 350.825 385.31 351.215 cv
384.232 351.972 383.2 352.547 382.195 353.095 cv
381.186 353.634 380.199 354.12 379.225 354.6 cv
376.287 356.034 li
376.286 356.035 li
377.002 355.458 li
369.108 362.9 li
367.95 363.992 366.125 363.939 365.033 362.78 cv
364.019 361.703 364.003 360.04 364.935 358.935 cv
371.963 350.671 li
372.005 350.629 li
372.679 350.094 li
373.192 349.672 li
373.719 349.206 li
374.064 348.886 374.407 348.563 374.732 348.222 cv
375.39 347.552 376.004 346.844 376.545 346.126 cv
377.09 345.416 377.563 344.673 377.876 343.999 cv
378.034 343.671 378.137 343.338 378.107 343.046 cv
378.084 342.896 378.03 342.772 377.928 342.671 cv
377.847 342.681 377.712 342.723 377.614 342.766 cv
377.573 342.677 377.572 342.485 377.527 342.34 cv
376.077 337.643 378.711 332.659 383.409 331.209 cv
388.106 329.76 393.091 332.394 394.54 337.091 cv
395.845 341.32 393.841 345.781 390.001 347.686 cv
389.203 348.082 li
cp
.94902 .807843 .619608 rgb
f
450 325.427 mo
394.667 325.427 li
394.667 336.211 li
450 336.211 li
450 325.427 li
cp
.203922 .72549 .831373 rgb
f
450 346.706 mo
450 336.211 li
394.667 336.211 li
394.667 346.706 li
450 346.706 li
cp
.215686 .560784 .709804 rgb
f
232.239 422.52 mo
232.239 422.52 234.707 408.935 232.239 404.616 cv
229.773 400.298 223.911 381.791 230.08 375.005 cv
236.249 368.221 245.81 359.892 259.999 364.826 cv
274.186 369.763 269.253 378.707 270.486 381.791 cv
271.719 384.875 271.719 384.567 270.486 386.417 cv
269.253 388.269 270.178 389.26 273.57 392.312 cv
276.963 395.363 278.196 397.522 276.039 399.064 cv
274.854 399.91 274.178 399.787 273.855 399.664 cv
273.494 399.527 273.574 399.389 273.879 400.607 cv
274.804 404.309 275.112 407.084 273.57 407.393 cv
272.028 407.701 273.57 410.169 273.57 410.169 cv
273.57 410.169 271.719 412.636 270.794 412.636 cv
269.869 412.636 269.56 414.486 270.794 417.263 cv
272.028 420.038 266.476 421.92 264.625 422.52 cv
263.987 422.728 262.606 422.607 261.063 422.486 cv
258.132 422.256 254.617 422.027 254.501 424.047 cv
254.324 427.131 255.49 429.601 255.49 429.601 cv
229.773 429.601 li
232.239 422.52 li
.207843 .411765 .490196 rgb
f
255.382 377.872 mo
250.763 377.872 247.005 381.631 247.005 386.25 cv
247.005 390.869 250.763 394.628 255.382 394.628 cv
260.002 394.628 263.761 390.869 263.761 386.25 cv
263.761 381.631 260.002 377.872 255.382 377.872 cv
cp
255.382 396.19 mo
249.901 396.19 245.442 391.731 245.442 386.25 cv
245.442 380.769 249.901 376.31 255.382 376.31 cv
260.863 376.31 265.323 380.769 265.323 386.25 cv
265.323 391.731 260.863 396.19 255.382 396.19 cv
cp
.956863 .164706 .352941 rgb
f
259.201 386.25 mo
259.201 388.359 257.491 390.069 255.382 390.069 cv
253.273 390.069 251.563 388.359 251.563 386.25 cv
251.563 384.142 253.273 382.432 255.382 382.432 cv
257.491 382.432 259.201 384.142 259.201 386.25 cv
cp
f
259.283 352.743 mo
261.77 354.817 264.592 362.83 264.592 362.83 cv
265.285 364.181 265.133 365.467 264.101 366.315 cv
259.561 370.026 li
258.588 370.821 257.155 370.677 256.359 369.703 cv
255.714 368.912 255.69 367.817 256.226 367.007 cv
259.464 362.119 li
259.461 366.311 li
251.098 359.149 li
249.177 357.505 252.47 355.211 253.368 352.848 cv
255.272 347.835 258.091 351.75 259.283 352.743 cv
.980392 .847059 .666667 rgb
f
256.615 363.875 mo
255.117 363.555 253.676 363.385 252.288 363.345 cv
247.19 359.149 li
245.449 357.718 245.034 355.272 246.096 353.371 cv
246.135 353.306 246.173 353.24 246.212 353.175 cv
246.317 353.008 246.434 352.845 246.562 352.689 cv
247.47 351.586 248.784 351.015 250.108 351.015 cv
251.135 351.015 252.168 351.358 253.022 352.061 cv
253.192 352.201 253.353 352.355 253.5 352.518 cv
253.456 352.623 253.412 352.733 253.368 352.848 cv
252.47 355.211 249.177 357.505 251.098 359.149 cv
256.615 363.875 li
0 .109804 .164706 rgb
f
246.096 353.371 mo
246.133 353.305 246.172 353.24 246.212 353.175 cv
246.173 353.24 246.135 353.306 246.096 353.371 cv
.101961 .192157 .235294 rgb
f
254.137 370.505 mo
253.667 370.505 253.193 370.36 252.786 370.059 cv
251.957 369.445 251.667 368.37 252.006 367.447 cv
253.23 364.12 li
252.288 363.345 li
253.676 363.385 255.117 363.555 256.615 363.875 cv
257.691 364.795 li
256.226 367.007 li
255.764 367.707 255.718 368.618 256.129 369.363 cv
255.966 369.584 li
255.52 370.186 254.833 370.505 254.137 370.505 cv
.156863 .309804 .368627 rgb
f
256.129 369.363 mo
255.718 368.618 255.764 367.707 256.226 367.007 cv
257.691 364.795 li
256.615 363.875 li
251.098 359.149 li
249.177 357.505 252.47 355.211 253.368 352.848 cv
253.412 352.733 253.456 352.623 253.5 352.518 cv
253.66 352.694 253.804 352.88 253.931 353.069 cv
259.214 361.035 li
259.717 361.793 li
260.303 362.677 260.24 363.807 259.644 364.614 cv
256.129 369.363 li
.733333 .635294 .498039 rgb
f
252.003 385.431 mo
248.248 367.977 li
247.987 366.41 249.047 364.93 250.612 364.669 cv
252.179 364.408 253.66 365.468 253.92 367.034 cv
253.938 367.132 253.947 367.232 253.954 367.33 cv
255.886 384.991 li
255.951 386.07 255.131 386.998 254.052 387.064 cv
253.045 387.125 252.168 386.403 252.003 385.431 cv
cp
.968627 .835294 .658824 rgb
f
256.835 385.944 mo
254.447 369.613 li
254.024 367.94 254.056 366.942 255.731 366.521 cv
257.405 366.098 259.106 367.113 259.528 368.788 cv
259.569 368.974 li
260.971 385.522 li
261.239 386.944 260.881 388.469 259.29 388.609 cv
257.904 388.73 257.245 387.974 256.835 385.944 cv
cp
f
245.883 376.285 mo
245.77 376.285 245.657 376.278 245.543 376.265 cv
244.043 376.079 242.979 374.713 243.164 373.214 cv
243.994 366.513 li
244.181 365.013 245.551 363.958 247.045 364.134 cv
248.545 364.319 249.609 365.685 249.424 367.185 cv
248.594 373.886 li
248.422 375.272 247.243 376.285 245.883 376.285 cv
cp
f
240.926 373.061 mo
240.796 373.061 240.664 373.051 240.531 373.028 cv
239.255 372.813 238.395 371.603 238.611 370.325 cv
239.13 367.262 li
239.346 365.985 240.552 365.129 241.833 365.342 cv
243.109 365.558 243.97 366.768 243.753 368.045 cv
243.234 371.108 li
243.041 372.253 242.049 373.061 240.926 373.061 cv
cp
f
248.707 371.499 mo
255.218 369.54 256.079 369.813 259.157 368.672 cv
260.486 368.18 259.6 358.485 258.592 355.425 cv
257.584 352.361 257.538 348.99 254.085 348.99 cv
243.926 348.99 li
240.472 348.99 240.046 352.005 239.453 356.108 cv
239.095 368.28 li
242.548 365.19 244.005 372.914 248.707 371.499 cv
cp
f
239.626 338.048 mo
257.603 338.048 li
256.858 351.14 li
240.921 351.14 li
239.626 338.048 li
cp
f
259.102 349.704 mo
259.102 300 li
248.317 300 li
248.317 349.704 li
259.102 349.704 li
cp
.203922 .72549 .831373 rgb
f
237.822 349.704 mo
248.317 349.704 li
248.317 300 li
237.822 300 li
237.822 349.704 li
cp
.215686 .560784 .709804 rgb
f
169.456 378.93 mo
169.456 378.929 170.081 379.591 170.962 380.624 cv
171.404 381.147 171.913 381.759 172.451 382.502 cv
172.723 382.892 172.995 383.264 173.292 383.842 cv
173.36 383.958 173.449 384.181 173.52 384.355 cv
173.548 384.426 li
173.561 384.461 li
173.568 384.478 li
173.607 384.606 li
173.629 384.684 li
173.672 384.84 li
173.847 385.466 li
173.952 385.963 174.056 386.461 174.159 386.951 cv
174.237 387.389 174.313 387.82 174.388 388.238 cv
174.515 389.061 174.633 389.831 174.735 390.49 cv
174.913 391.809 175.032 392.689 175.032 392.689 cv
175.22 394.083 174.243 395.366 172.848 395.555 cv
171.454 395.743 170.17 394.765 169.982 393.371 cv
169.969 393.247 li
169.963 393.181 li
169.963 393.181 169.894 392.337 169.79 391.071 cv
169.727 390.441 169.652 389.705 169.573 388.917 cv
169.525 388.531 169.476 388.133 169.425 387.728 cv
169.375 387.379 169.324 387.023 169.273 386.668 cv
169.211 386.385 169.149 386.101 169.087 385.82 cv
169.022 385.626 168.836 385.29 168.667 384.998 cv
168.306 384.388 167.898 383.79 167.544 383.285 cv
166.825 382.27 166.314 381.62 166.314 381.619 cv
165.607 380.721 165.763 379.419 166.662 378.713 cv
167.509 378.047 168.713 378.147 169.44 378.912 cv
169.456 378.93 li
cp
.94902 .807843 .619608 rgb
f
161.393 374.633 mo
167.657 379.258 li
168.014 379.522 168.28 379.863 168.449 380.241 cv
168.507 380.374 li
172.325 388.997 li
172.99 390.498 172.312 392.253 170.811 392.917 cv
169.311 393.582 167.556 392.904 166.891 391.403 cv
166.841 391.282 li
163.408 382.498 li
164.258 383.612 li
158.251 378.658 li
157.162 377.761 157.007 376.15 157.905 375.063 cv
158.772 374.011 160.309 373.835 161.393 374.633 cv
cp
.870588 .737255 .568627 rgb
f
160.545 374.633 mo
166.809 379.258 li
167.166 379.522 167.432 379.863 167.601 380.241 cv
167.659 380.374 li
171.477 388.997 li
172.141 390.498 171.463 392.253 169.962 392.917 cv
168.462 393.582 166.706 392.903 166.042 391.403 cv
165.992 391.282 li
162.56 382.498 li
163.41 383.612 li
157.402 378.658 li
156.314 377.761 156.159 376.15 157.057 375.063 cv
157.924 374.011 159.461 373.835 160.545 374.633 cv
cp
.94902 .807843 .619608 rgb
f
162.784 389.433 mo
156.828 381.37 li
157.623 382.066 li
147.082 375.417 li
145.877 374.656 145.516 373.064 146.276 371.858 cv
147.011 370.694 148.529 370.322 149.717 370.983 cv
160.595 377.066 li
160.859 377.214 161.086 377.403 161.271 377.621 cv
161.391 377.763 li
167.863 385.415 li
169.019 386.781 168.848 388.825 167.481 389.981 cv
166.115 391.137 164.071 390.966 162.915 389.6 cv
162.784 389.433 li
cp
.870588 .737255 .568627 rgb
f
161.935 389.433 mo
155.979 381.37 li
156.774 382.066 li
146.233 375.417 li
145.029 374.656 144.668 373.064 145.428 371.858 cv
146.163 370.694 147.681 370.322 148.869 370.983 cv
159.747 377.066 li
160.011 377.214 160.237 377.403 160.423 377.621 cv
160.542 377.763 li
167.014 385.415 li
168.17 386.781 167.999 388.825 166.633 389.981 cv
165.267 391.137 163.223 390.966 162.067 389.6 cv
161.935 389.433 li
cp
.94902 .807843 .619608 rgb
f
170.331 387.094 mo
165.391 387.094 160.407 385.655 156.904 390.849 cv
156.044 392.124 156.818 401.353 157.913 404.676 cv
159.007 408.001 159.892 411.538 163.642 411.538 cv
171.425 411.538 li
175.175 411.538 175.198 409.203 175.843 404.748 cv
175.105 392.768 li
175.105 392.768 175.664 387.094 170.331 387.094 cv
cp
f
175.09 423.42 mo
160.387 423.42 li
160.387 409.203 li
175.09 409.203 li
175.09 423.42 li
cp
f
159.933 407.351 mo
157.392 405.23 li
156.72 404.659 li
156.385 404.374 li
156.218 404.231 li
156.213 404.228 li
156.257 404.261 156.11 404.149 156.312 404.302 cv
156.31 404.3 li
156.301 404.29 li
156.285 404.272 li
156.251 404.234 li
156.185 404.159 li
155.166 403.012 li
154.87 402.694 154.626 402.355 154.259 402.001 cv
153.922 401.644 153.57 401.298 153.2 400.965 cv
152.831 400.634 152.446 400.317 152.049 400.022 cv
151.852 399.873 151.651 399.728 151.446 399.595 cv
150.858 399.21 li
151.501 399.427 li
150.971 399.216 150.443 398.992 149.91 398.791 cv
149.373 398.608 148.843 398.397 148.3 398.246 cv
147.22 397.912 146.128 397.635 145.001 397.518 cv
143.651 397.378 142.67 396.171 142.81 394.82 cv
142.95 393.471 144.157 392.49 145.507 392.63 cv
145.682 392.647 145.862 392.689 146.023 392.74 cv
147.099 393.095 148.209 393.288 149.331 393.425 cv
149.889 393.509 150.46 393.533 151.023 393.587 cv
151.592 393.62 152.165 393.633 152.736 393.657 cv
152.891 393.689 li
153.379 393.875 li
154.196 394.185 li
154.454 394.292 154.719 394.388 154.985 394.481 cv
155.505 394.686 156.045 394.857 156.577 395.057 cv
158.212 395.624 li
158.745 395.801 159.357 396.063 159.935 396.318 cv
161.461 397.002 li
162.813 397.744 li
165.441 399.173 li
165.475 399.191 li
167.879 400.499 168.768 403.508 167.46 405.912 cv
166.153 408.316 163.144 409.205 160.74 407.898 cv
160.456 407.744 160.173 407.548 159.933 407.351 cv
cp
f
143.395 365.17 mo
151.478 365.137 li
151.571 388.12 li
143.488 388.153 li
143.395 365.17 li
cp
.835294 .901961 .980392 rgb
f
146.148 364.538 mo
147.432 364.019 li
148.718 364.528 li
148.721 365.147 li
146.151 365.158 li
146.148 364.538 li
cp
f
147.019 364.589 mo
147.398 355.827 li
147.85 364.585 li
147.019 364.589 li
cp
1 1 1 rgb
f
147.274 393.204 mo
147.221 380.292 li
147.775 380.29 li
147.828 393.202 li
147.274 393.204 li
cp
f
142.34 388.157 mo
152.72 388.116 li
153.003 388.114 153.234 388.304 153.235 388.539 cv
153.235 388.657 li
153.236 388.893 153.007 389.085 152.724 389.086 cv
142.343 389.127 li
142.06 389.129 141.83 388.94 141.829 388.705 cv
141.828 388.586 li
141.827 388.351 142.056 388.159 142.34 388.157 cv
cp
f
144.656 393.111 mo
144.655 392.848 144.867 392.634 145.129 392.634 cv
149.966 392.613 li
150.229 392.613 150.443 392.824 150.444 393.088 cv
150.445 393.351 150.233 393.565 149.97 393.566 cv
145.134 393.585 li
144.871 393.587 144.657 393.375 144.656 393.111 cv
cp
f
143.923 365.714 mo
143.984 380.307 li
147.378 380.293 li
147.378 365.699 li
143.923 365.714 li
cp
.956863 .164706 .352941 rgb
f
150.832 380.279 mo
150.771 365.686 li
147.479 365.699 li
147.378 365.699 li
147.378 380.293 li
147.541 380.293 li
150.832 380.279 li
cp
.815686 .0705882 .345098 rgb
f
143.602 380.308 mo
151.214 380.276 li
151.216 380.702 li
143.605 380.733 li
143.602 380.308 li
cp
0 0 0 rgb
f
157.272 390.377 mo
153.716 384.255 li
155.202 385.425 li
143.395 380.956 li
142.063 380.452 141.391 378.963 141.895 377.631 cv
142.383 376.343 143.797 375.675 145.094 376.087 cv
157.118 379.933 li
157.688 380.115 158.155 380.472 158.477 380.925 cv
158.604 381.103 li
162.715 386.867 li
163.754 388.324 163.415 390.349 161.957 391.388 cv
160.499 392.428 158.476 392.088 157.436 390.631 cv
157.272 390.377 li
cp
.870588 .737255 .568627 rgb
f
156.994 390.941 mo
152.903 384.309 li
154.354 385.425 li
142.546 380.956 li
141.213 380.452 140.542 378.963 141.046 377.631 cv
141.533 376.343 142.948 375.675 144.244 376.087 cv
156.27 379.933 li
156.823 380.109 157.279 380.451 157.6 380.885 cv
157.721 381.049 li
162.357 387.313 li
163.422 388.751 163.119 390.78 161.68 391.846 cv
160.242 392.91 158.212 392.607 157.147 391.169 cv
156.994 390.941 li
cp
.94902 .807843 .619608 rgb
f
178.378 450.281 mo
178.378 411.479 li
167.593 411.479 li
167.593 450.281 li
178.378 450.281 li
cp
.203922 .72549 .831373 rgb
f
157.099 450.281 mo
167.593 450.281 li
167.593 411.479 li
157.099 411.479 li
157.099 450.281 li
cp
.215686 .560784 .709804 rgb
f
82.3984 398.118 mo
82.3984 398.118 82.3184 397.913 82.1782 397.555 cv
82.0322 397.189 81.8184 396.664 81.5483 396.047 cv
81.2778 395.432 80.9517 394.719 80.5801 394.008 cv
80.395 393.654 80.1978 393.301 79.9971 392.981 cv
79.8027 392.665 79.5776 392.368 79.4614 392.263 cv
79.4312 392.223 79.3599 392.237 79.6958 392.433 cv
80.0605 392.59 79.8027 392.481 79.7104 392.466 cv
79.374 392.369 li
78.9277 392.241 78.4878 392.115 78.0625 391.994 cv
77.2119 391.75 76.418 391.523 75.7373 391.328 cv
74.3765 390.939 73.4688 390.679 73.4688 390.679 cv
73.4551 390.675 li
71.9775 390.252 71.1226 388.712 71.5454 387.234 cv
71.9683 385.757 73.5088 384.901 74.9863 385.325 cv
75.1631 385.382 li
75.1631 385.382 76.0513 385.701 77.3833 386.181 cv
78.0498 386.421 78.8267 386.7 79.6597 387 cv
80.0762 387.15 80.5063 387.305 80.9434 387.462 cv
81.2725 387.58 li
81.4023 387.637 81.3706 387.593 81.9478 387.852 cv
82.7046 388.261 82.9727 388.616 83.2568 388.925 cv
83.7573 389.534 84.0381 390.04 84.3022 390.53 cv
84.5601 391.019 84.7744 391.481 84.9688 391.927 cv
85.354 392.815 85.6572 393.63 85.9077 394.33 cv
86.1558 395.029 86.3467 395.612 86.4775 396.024 cv
86.6084 396.445 86.6826 396.686 86.6826 396.686 cv
87.0522 397.878 86.3857 399.144 85.1943 399.513 cv
84.0571 399.865 82.853 399.274 82.4238 398.185 cv
82.3984 398.118 li
cp
.901961 .764706 .588235 rgb
f
83.1274 403.438 mo
80.3428 395.338 li
81.2866 396.749 li
75.5977 392.294 li
74.186 391.189 73.938 389.148 75.0435 387.737 cv
76.1484 386.325 78.1885 386.077 79.6001 387.183 cv
79.7568 387.314 li
85.1538 392.118 li
85.2856 392.236 li
85.686 392.592 85.9595 393.05 86.0977 393.529 cv
88.4478 401.766 li
88.8706 403.247 88.0122 404.791 86.5308 405.213 cv
85.0996 405.622 83.6079 404.827 83.1274 403.438 cv
cp
f
83.561 392.421 mo
87.4585 398.641 li
87.6328 398.92 li
88.3892 400.126 88.166 401.668 87.1797 402.618 cv
82.4619 407.169 li
81.3408 408.25 79.5557 408.218 78.4741 407.097 cv
77.4692 406.054 77.4355 404.427 78.3359 403.335 cv
82.5259 398.296 li
82.2476 402.273 li
77.7603 396.466 li
76.5645 394.918 76.8496 392.695 78.397 391.5 cv
79.9438 390.304 82.167 390.589 83.3628 392.137 cv
83.4331 392.228 83.501 392.325 83.561 392.421 cv
cp
f
81.2124 392.406 mo
81.231 397.8 77.1948 399.815 74.3618 400.793 cv
72.772 401.342 65.479 402.857 61.8452 401.674 cv
58.2085 400.492 54.3433 399.539 54.3306 395.444 cv
54.3013 386.945 li
54.2866 382.85 56.8354 382.815 61.6997 382.094 cv
76.3062 385.697 li
76.3062 385.697 81.1938 386.583 81.2124 392.406 cv
cp
.94902 .807843 .619608 rgb
f
41.311 382.985 mo
41.3657 399.041 li
56.8901 398.988 li
56.8374 382.933 li
41.311 382.985 li
cp
f
81.061 388.384 mo
86.6123 399.146 li
86.6978 399.31 li
86.979 399.855 87.0693 400.447 86.9937 401.013 cv
85.3384 413.463 li
85.1333 415.005 83.7168 416.089 82.1748 415.884 cv
80.689 415.686 79.6289 414.356 79.7368 412.881 cv
80.6753 400.356 li
81.0566 402.224 li
74.8755 391.811 li
73.8779 390.132 74.4316 387.961 76.1113 386.964 cv
77.7915 385.967 79.9619 386.52 80.959 388.2 cv
81.061 388.384 li
cp
f
79.4663 416.027 mo
66.3022 427.728 li
78.9409 415.461 li
79.4663 416.027 li
cp
f
77.2759 416.221 mo
76.728 416.729 76.5786 417.457 76.939 417.847 cv
77.3022 418.236 78.0386 418.141 78.5854 417.633 cv
91.7456 405.41 li
92.2915 404.902 92.4409 404.174 92.0806 403.785 cv
91.7183 403.397 90.9819 403.49 90.4351 404 cv
77.2759 416.221 li
cp
1 1 1 rgb
f
90.9116 403.025 mo
90.3647 403.533 90.3325 404.389 90.8413 404.935 cv
91.3501 405.482 92.2056 405.515 92.7515 405.006 cv
93.2983 404.496 93.3306 403.643 92.8208 403.096 cv
92.314 402.549 91.4575 402.518 90.9116 403.025 cv
cp
f
70.5884 396.196 mo
70.5254 396.483 70.5298 396.791 70.4946 397.019 cv
70.4033 397.084 70.3315 397.154 70.2588 397.24 cv
70.2632 397.393 70.2949 397.593 70.3374 397.755 cv
70.3682 397.926 70.4595 398.115 70.5254 398.292 cv
70.6602 398.651 70.8545 399.037 71.0371 399.419 cv
71.229 399.808 71.4414 400.19 71.6724 400.574 cv
71.8979 400.956 72.1333 401.35 72.3872 401.726 cv
72.6431 402.102 72.9087 402.474 73.1924 402.831 cv
73.4688 403.197 73.7705 403.538 74.0674 403.887 cv
74.3633 404.223 74.6958 404.568 74.9761 404.868 cv
75.415 405.315 li
75.8242 405.989 76.2236 406.672 76.6416 407.339 cv
77.0767 407.992 77.4863 408.666 77.9478 409.298 cv
78.8438 410.584 79.7896 411.83 80.8745 412.964 cv
81.8975 414.031 81.8604 415.727 80.7925 416.749 cv
79.7246 417.772 78.0298 417.735 77.0068 416.667 cv
76.9038 416.56 76.8037 416.433 76.7222 416.314 cv
75.8438 415.014 74.8257 413.826 73.7583 412.679 cv
73.2378 412.094 72.666 411.551 72.1191 410.987 cv
71.5552 410.439 70.9731 409.903 70.4009 409.36 cv
70.8394 409.808 li
69.5928 408.914 li
68.353 408.049 li
67.5254 407.468 66.6582 406.911 65.7783 406.322 cv
64.9087 405.726 64.0063 405.109 63.0967 404.364 cv
61.6328 403.145 li
60.6265 402.164 li
60.3618 401.974 60.1528 401.855 59.8677 401.722 cv
59.6147 401.603 li
55.7075 399.762 54.0317 395.103 55.8726 391.195 cv
57.7129 387.287 62.3726 385.611 66.2803 387.452 cv
69.6431 389.036 71.3501 392.713 70.5884 396.196 cv
cp
.94902 .807843 .619608 rgb
f
53.5576 379.825 mo
0 379.825 li
0 390.609 li
53.5576 390.609 li
53.5576 379.825 li
cp
.203922 .72549 .831373 rgb
f
53.5576 401.104 mo
53.5576 390.609 li
0 390.609 li
0 401.104 li
53.5576 401.104 li
cp
.215686 .560784 .709804 rgb
f
gsave
407.269 415.534 mo
410.628 405.727 li
409.768 404.911 li
410.05 404.196 li
410.067 404.203 li
413.012 405.371 li
412.728 406.086 li
411.54 406.089 li
407.269 415.534 li
clp
407.269 404.196 mo
413.012 404.196 li
413.012 415.534 li
407.269 415.534 li
cp
.2 .376471 .458824 rgb
f
grestore
416.189 406.629 mo
410.067 404.203 li
410.05 404.196 li
406.87 402.936 li
417.374 376.442 li
421.714 378.163 li
416.049 375.916 li
415.723 375.788 415.545 375.462 415.653 375.192 cv
415.708 375.056 li
415.785 374.859 415.99 374.745 416.221 374.745 cv
416.31 374.745 416.403 374.762 416.494 374.798 cv
422.156 377.044 li
423.763 372.99 li
421.296 372.012 li
420.993 371.89 420.845 371.55 420.965 371.244 cv
421.056 371.013 421.279 370.872 421.514 370.872 cv
421.587 370.872 421.661 370.886 421.732 370.914 cv
427.306 373.125 li
427.61 373.245 427.758 373.586 427.637 373.89 cv
427.545 374.123 427.324 374.264 427.09 374.264 cv
427.017 374.264 426.943 374.25 426.871 374.222 cv
424.401 373.241 li
422.794 377.297 li
428.459 379.544 li
428.787 379.672 428.964 379.997 428.856 380.266 cv
428.803 380.404 li
428.725 380.6 428.519 380.714 428.287 380.714 cv
428.199 380.714 428.106 380.697 428.016 380.662 cv
426.692 380.137 li
416.189 406.629 li
.2 .376471 .458824 rgb
f
93.103 334.972 mo
93.0815 333.093 li
95.4272 333.078 li
95.4478 334.958 li
93.103 334.972 li
f
97.1596 339.533 mo
97.1392 337.654 li
99.4849 337.642 li
99.4829 337.378 li
99.5063 339.519 li
97.1596 339.533 li
f
93.1528 339.558 mo
93.1323 337.678 li
95.4768 337.664 li
95.4925 339.069 li
95.4977 339.543 li
93.1528 339.558 li
f
97.0854 332.654 mo
97.0649 330.777 li
99.4106 330.764 li
99.4058 330.347 li
97.0601 330.361 li
97.0396 328.484 li
99.3843 328.471 li
99.3833 328.224 li
99.4312 332.64 li
97.0854 332.654 li
f
97.1353 337.24 mo
97.1147 335.363 li
99.4595 335.349 li
99.4565 334.986 li
99.4809 337.226 li
97.1353 337.24 li
f
97.1099 334.948 mo
97.0894 333.068 li
99.436 333.055 li
99.4565 334.935 li
97.1099 334.948 li
f
96.516 350.217 mo
95.8975 350.217 95.3959 349.85 95.3901 349.394 cv
95.3687 347.472 li
94.1265 347.161 93.2271 346.306 93.2162 345.282 cv
93.2085 344.558 li
95.5522 344.543 li
95.5737 346.511 li
95.5483 344.13 li
93.2036 344.144 li
93.1831 342.265 li
95.5268 342.251 li
95.5229 341.836 li
93.1781 341.85 li
93.1577 339.971 li
95.5024 339.957 li
95.4925 339.069 li
95.4768 337.664 li
95.4722 337.25 li
93.1274 337.265 li
93.1069 335.386 li
95.4526 335.373 li
95.4478 334.972 li
95.8664 335.061 96.2802 335.103 96.6809 335.103 cv
96.826 335.103 96.9696 335.098 97.1108 335.087 cv
97.2144 344.534 li
99.561 344.519 li
99.5688 345.245 li
99.5796 346.222 98.772 347.055 97.6216 347.411 cv
97.644 349.381 li
97.6489 349.84 97.1479 350.214 96.5259 350.217 cv
96.5226 350.217 96.5193 350.217 96.516 350.217 cv
f
93.0776 332.68 mo
93.0532 330.459 li
93.0571 330.8 li
95.4028 330.787 li
95.4232 332.665 li
93.0776 332.68 li
f
93.0522 330.386 mo
93.0288 328.244 li
93.0317 328.507 li
95.3774 328.493 li
95.3979 330.371 li
93.0522 330.386 li
f
93.0532 330.459 mo
93.0522 330.386 li
93.0532 330.459 li
f
93.0269 328.094 mo
92.9341 319.685 li
92.9214 318.393 94.3325 317.337 96.0864 317.328 cv
96.097 317.328 96.1074 317.328 96.118 317.328 cv
97.8584 317.328 99.276 318.363 99.2895 319.648 cv
99.3813 328.054 li
97.0347 328.068 li
96.9272 318.182 li
96.9233 317.847 96.5481 317.575 96.096 317.575 cv
96.0944 317.575 96.0928 317.575 96.0912 317.575 cv
95.6304 317.578 95.2603 317.853 95.2651 318.191 cv
95.3726 328.079 li
93.0269 328.094 li
f
93.0288 328.244 mo
93.0269 328.094 li
93.0288 328.244 li
f
99.5601 344.487 mo
99.5552 344.105 li
97.2104 344.12 li
97.1898 342.241 li
99.5347 342.227 li
99.5308 341.812 li
97.1851 341.826 li
97.1646 339.948 li
99.5103 339.935 li
99.5092 339.831 li
99.5601 344.487 li
f
450 0 mo
450 150 li
0 150 li
0 0 li
450 0 li
0 .45098 .666667 rgb
f
329.756 60.4688 mo
328.277 60.4688 317.985 50.7144 317.985 46.5844 cv
317.985 42.4565 320.899 38.397 324.492 38.397 cv
326.655 38.397 328.573 39.6152 329.756 41.4868 cv
330.937 39.6152 332.855 38.397 335.021 38.397 cv
338.614 38.397 341.526 42.4565 341.526 46.5844 cv
341.526 50.7144 331.002 60.4688 329.756 60.4688 cv
.2 .560784 .733333 rgb
f
305.783 54.7949 mo
305.482 53.2743 li
305.28 52.2572 305.109 51.2357 304.925 50.2177 cv
304.745 49.1973 304.554 48.1797 304.389 47.1558 cv
303.88 44.0884 li
303.609 42.326 li
303.066 43.0496 302.516 43.7672 301.975 44.4907 cv
301.148 45.5615 300.329 46.6372 299.481 47.6953 cv
299.389 47.8101 li
299.269 47.8047 li
298.074 47.7436 296.879 47.664 295.684 47.5665 cv
295.684 47.5253 li
296.83 47.4321 297.977 47.354 299.123 47.2938 cv
299.817 46.1777 300.536 45.0807 301.25 43.978 cv
302.001 42.853 302.732 41.7144 303.499 40.6025 cv
304.251 39.5093 li
304.502 40.8281 li
305.084 43.8838 li
305.629 46.9423 li
305.818 47.9604 305.977 48.9839 306.149 50.0073 cv
306.235 50.5277 306.323 51.0482 306.409 51.5693 cv
306.788 50.99 307.167 50.4111 307.555 49.8374 cv
308.231 48.8398 308.895 47.833 309.588 46.8428 cv
309.719 46.6533 li
309.914 46.6631 li
312.066 46.7485 314.22 46.8701 316.371 47.0479 cv
314.296 47.2216 312.22 47.3409 310.144 47.4266 cv
309.583 48.4197 308.997 49.3981 308.424 50.3843 cv
307.817 51.4272 307.184 52.4536 306.564 53.4878 cv
305.783 54.7949 li
f
351.876 54.7949 mo
351.575 53.2743 li
351.373 52.2572 351.2 51.2357 351.017 50.2177 cv
350.838 49.1973 350.646 48.1797 350.482 47.1558 cv
349.973 44.0884 li
349.7 42.3276 li
349.158 43.0507 348.609 43.7677 348.068 44.4907 cv
347.241 45.5615 346.422 46.6372 345.575 47.6953 cv
345.482 47.8101 li
345.362 47.8047 li
344.085 47.7393 342.807 47.6528 341.526 47.5459 cv
342.757 47.4436 343.986 47.3585 345.214 47.2939 cv
345.909 46.1777 346.631 45.0807 347.344 43.978 cv
348.093 42.853 348.828 41.7144 349.593 40.6025 cv
350.344 39.5093 li
350.596 40.8281 li
351.176 43.8838 li
351.723 46.9423 li
351.911 47.9604 352.069 48.9839 352.243 50.0073 cv
352.328 50.5276 352.416 51.048 352.502 51.569 cv
352.88 50.9898 353.259 50.4111 353.647 49.8374 cv
354.324 48.8398 354.988 47.833 355.68 46.8428 cv
355.812 46.6533 li
356.008 46.6631 li
358.159 46.7485 360.312 46.8701 362.464 47.0479 cv
360.39 47.2215 358.313 47.3408 356.239 47.4265 cv
355.676 48.4196 355.091 49.3981 354.518 50.3843 cv
353.912 51.4272 353.276 52.4536 352.657 53.4878 cv
351.876 54.7949 li
f
295.684 98.9114 mo
295.184 96.2966 li
295.184 47.7026 li
226.672 47.7026 li
226.659 47.536 226.638 47.3693 226.609 47.2026 cv
295.684 47.2026 li
295.684 47.5253 li
295.6 47.5321 295.517 47.5389 295.434 47.5459 cv
295.517 47.5528 295.6 47.5597 295.684 47.5665 cv
295.684 98.9114 li
205.725 68.978 mo
205.225 68.978 li
205.225 59.8719 li
205.725 59.6862 li
205.725 68.978 li
205.225 48.3182 mo
205.225 47.2026 li
208.229 47.2026 li
206.882 47.7026 li
205.725 47.7026 li
205.725 48.1324 li
205.225 48.3182 li
.501961 .72549 .835294 rgb
f
295.684 47.5665 mo
295.6 47.5597 295.517 47.5528 295.434 47.5459 cv
295.517 47.5389 295.6 47.5321 295.684 47.5253 cv
295.684 47.5665 li
.6 .780392 .866667 rgb
f
238.187 119.662 mo
139.542 119.662 li
139.542 77.6743 li
128.008 77.6743 li
127.809 77.4792 127.581 77.3102 127.33 77.1743 cv
140.042 77.1743 li
140.042 119.162 li
237.686 119.162 li
237.686 91.2327 li
237.97 91.61 li
238.187 91.8968 li
238.187 119.662 li
.501961 .72549 .835294 rgb
f
372.81 137.245 mo
314.14 137.245 li
314.14 136.745 li
372.31 136.745 li
372.31 102.285 li
372.81 102.334 li
372.81 137.245 li
f
21.7075 21.4956 mo
23.8608 21.4956 li
24.4761 21.4956 24.9385 21.3315 25.2485 21.0034 cv
25.5586 20.6753 25.7134 20.2583 25.7134 19.7524 cv
25.7134 19.2466 25.5586 18.8252 25.2485 18.4878 cv
24.9385 18.1504 24.4761 17.9819 23.8608 17.9819 cv
21.7075 17.9819 li
21.7075 21.4956 li
cp
21.7075 22.8286 mo
21.7075 26.6021 li
20.0464 26.6021 li
20.0464 16.6489 li
23.8608 16.6489 li
24.959 16.6489 25.8193 16.9326 26.4414 17.5 cv
27.0635 18.0674 27.3745 18.8135 27.3745 19.7388 cv
27.3745 20.6729 27.0635 21.4214 26.4414 21.9844 cv
25.8193 22.5474 24.959 22.8286 23.8608 22.8286 cv
21.7075 22.8286 li
cp
1 1 1 rgb
f
30.4302 20.1626 mo
30.6763 19.8164 30.9761 19.5474 31.3291 19.356 cv
31.6821 19.1646 32.0732 19.0688 32.5015 19.0688 cv
33.2852 19.0688 33.897 19.3159 34.3369 19.8105 cv
34.7769 20.3052 34.9966 21.0674 34.9966 22.0972 cv
34.9966 26.6021 li
33.3354 26.6021 li
33.3354 22.0835 li
33.3354 21.5049 33.2227 21.0845 32.9971 20.8223 cv
32.7715 20.5601 32.4355 20.4292 31.9888 20.4292 cv
31.6333 20.4292 31.3257 20.4917 31.0659 20.6172 cv
30.8062 20.7427 30.5942 20.917 30.4302 21.1401 cv
30.4302 26.6021 li
28.769 26.6021 li
28.769 15.938 li
30.4302 15.938 li
30.4302 20.1626 li
cp
f
39.146 25.4126 mo
39.5605 25.4126 39.9355 25.3076 40.2705 25.0981 cv
40.6055 24.8887 40.8276 24.6494 40.937 24.3804 cv
40.937 23.2866 li
39.6177 23.2866 li
39.1348 23.2866 38.7563 23.4063 38.4829 23.6455 cv
38.2095 23.8848 38.0728 24.166 38.0728 24.4897 cv
38.0728 24.7725 38.165 24.9966 38.3496 25.1631 cv
38.5342 25.3296 38.7998 25.4126 39.146 25.4126 cv
cp
41.1763 26.6021 mo
41.1172 26.415 41.0679 26.2329 41.0293 26.0552 cv
40.9907 25.8774 40.9644 25.6997 40.9507 25.522 cv
40.7275 25.8682 40.4287 26.1587 40.0552 26.3936 cv
39.6816 26.6284 39.2646 26.7456 38.8042 26.7456 cv
38.0342 26.7456 37.4429 26.5474 37.0303 26.1509 cv
36.6177 25.7544 36.4116 25.21 36.4116 24.5171 cv
36.4116 23.8018 36.6943 23.2446 37.2593 22.8457 cv
37.8242 22.4468 38.6196 22.2476 39.645 22.2476 cv
40.937 22.2476 li
40.937 21.5981 li
40.937 21.2109 40.8242 20.9077 40.5986 20.689 cv
40.373 20.4702 40.0459 20.3608 39.6177 20.3608 cv
39.2393 20.3608 38.9385 20.4507 38.7153 20.6309 cv
38.4922 20.811 38.3804 21.0444 38.3804 21.3315 cv
36.7808 21.3384 li
36.7739 21.2974 li
36.7422 20.7139 37.0029 20.1968 37.5566 19.7456 cv
38.1104 19.2944 38.8315 19.0688 39.7202 19.0688 cv
40.5815 19.0688 41.2764 19.2876 41.8052 19.7251 cv
42.334 20.1626 42.5981 20.7915 42.5981 21.6118 cv
42.5981 24.8999 li
42.5981 25.2051 42.6187 25.498 42.6597 25.7783 cv
42.7007 26.0586 42.7666 26.333 42.8579 26.6021 cv
41.1763 26.6021 li
cp
f
48.019 20.7026 mo
47.3081 20.6753 li
46.9844 20.6753 46.7144 20.7437 46.498 20.8804 cv
46.2817 21.0171 46.1143 21.2109 45.9956 21.4614 cv
45.9956 26.6021 li
44.3345 26.6021 li
44.3345 19.2056 li
45.8521 19.2056 li
45.9614 20.2788 li
46.1484 19.9004 46.3887 19.6045 46.6826 19.3901 cv
46.9766 19.1758 47.3149 19.0688 47.6978 19.0688 cv
47.7979 19.0688 47.8916 19.0767 47.978 19.0928 cv
48.2173 19.1509 li
48.019 20.7026 li
cp
f
50.7671 19.2056 mo
50.856 20.1694 li
51.0977 19.8184 51.4004 19.5474 51.7651 19.356 cv
52.1299 19.1646 52.5513 19.0688 53.0298 19.0688 cv
53.5127 19.0688 53.9277 19.1782 54.2739 19.397 cv
54.6201 19.6157 54.8799 19.9438 55.0532 20.3813 cv
55.2813 19.9712 55.582 19.6499 55.9556 19.4175 cv
56.3291 19.1851 56.7666 19.0688 57.2681 19.0688 cv
58.0107 19.0688 58.5977 19.3276 59.0283 19.8447 cv
59.459 20.3618 59.6743 21.1445 59.6743 22.1929 cv
59.6743 26.6021 li
58.0132 26.6021 li
58.0132 22.186 li
58.0132 21.5391 57.9048 21.0845 57.6885 20.8223 cv
57.4722 20.5601 57.1475 20.4292 56.7144 20.4292 cv
56.3589 20.4292 56.0581 20.5249 55.812 20.7163 cv
55.5659 20.9077 55.3882 21.165 55.2788 21.4888 cv
55.2856 21.6665 li
55.2925 21.8101 li
55.2925 26.6021 li
53.6313 26.6021 li
53.6313 22.186 li
53.6313 21.5615 53.521 21.1128 53.2998 20.8394 cv
53.0786 20.5659 52.7539 20.4292 52.3257 20.4292 cv
51.9883 20.4292 51.7026 20.4941 51.4678 20.624 cv
51.2329 20.7539 51.0474 20.9375 50.9106 21.1743 cv
50.9106 26.6021 li
49.2495 26.6021 li
49.2495 19.2056 li
50.7671 19.2056 li
cp
f
63.8511 25.4126 mo
64.2656 25.4126 64.6406 25.3076 64.9756 25.0981 cv
65.3105 24.8887 65.5327 24.6494 65.6421 24.3804 cv
65.6421 23.2866 li
64.3228 23.2866 li
63.8398 23.2866 63.4614 23.4063 63.188 23.6455 cv
62.9146 23.8848 62.7778 24.166 62.7778 24.4897 cv
62.7778 24.7725 62.8701 24.9966 63.0547 25.1631 cv
63.2393 25.3296 63.5049 25.4126 63.8511 25.4126 cv
cp
65.8813 26.6021 mo
65.8223 26.415 65.7729 26.2329 65.7344 26.0552 cv
65.6958 25.8774 65.6694 25.6997 65.6558 25.522 cv
65.4326 25.8682 65.1338 26.1587 64.7603 26.3936 cv
64.3867 26.6284 63.9697 26.7456 63.5093 26.7456 cv
62.7393 26.7456 62.1479 26.5474 61.7354 26.1509 cv
61.3228 25.7544 61.1167 25.21 61.1167 24.5171 cv
61.1167 23.8018 61.3994 23.2446 61.9644 22.8457 cv
62.5293 22.4468 63.3247 22.2476 64.3501 22.2476 cv
65.6421 22.2476 li
65.6421 21.5981 li
65.6421 21.2109 65.5293 20.9077 65.3037 20.689 cv
65.0781 20.4702 64.751 20.3608 64.3228 20.3608 cv
63.9443 20.3608 63.6436 20.4507 63.4204 20.6309 cv
63.1973 20.811 63.0854 21.0444 63.0854 21.3315 cv
61.4858 21.3384 li
61.479 21.2974 li
61.4473 20.7139 61.708 20.1968 62.2617 19.7456 cv
62.8154 19.2944 63.5366 19.0688 64.4253 19.0688 cv
65.2866 19.0688 65.9814 19.2876 66.5103 19.7251 cv
67.0391 20.1626 67.3032 20.7915 67.3032 21.6118 cv
67.3032 24.8999 li
67.3032 25.2051 67.3237 25.498 67.3647 25.7783 cv
67.4058 26.0586 67.4717 26.333 67.563 26.6021 cv
65.8813 26.6021 li
cp
f
72.0542 25.4194 mo
72.4326 25.4194 72.7524 25.3008 73.0146 25.064 cv
73.2769 24.8271 73.4077 24.5264 73.4077 24.1616 cv
74.9116 24.1616 li
74.9253 24.2026 li
74.9434 24.8955 74.6689 25.4922 74.1016 25.9937 cv
73.5342 26.4951 72.8516 26.7456 72.0542 26.7456 cv
70.9878 26.7456 70.165 26.3936 69.5864 25.6895 cv
69.0078 24.9854 68.7183 24.0977 68.7183 23.0269 cv
68.7183 22.7876 li
68.7183 21.7212 69.0078 20.835 69.5864 20.1284 cv
70.165 19.4219 70.9854 19.0688 72.0474 19.0688 cv
72.9087 19.0688 73.6084 19.3276 74.146 19.8447 cv
74.6836 20.3618 74.9434 21.0195 74.9253 21.8169 cv
74.9116 21.8579 li
73.4077 21.8579 li
73.4077 21.4521 73.2822 21.1084 73.0317 20.8257 cv
72.7813 20.543 72.4531 20.4019 72.0474 20.4019 cv
71.4551 20.4019 71.0288 20.6309 70.769 21.0889 cv
70.5093 21.5469 70.3794 22.1133 70.3794 22.7876 cv
70.3794 23.0269 li
70.3794 23.7148 70.5083 24.2856 70.7656 24.7393 cv
71.0229 25.1929 71.4526 25.4194 72.0542 25.4194 cv
cp
f
78.7739 23.6353 mo
78.938 24.3735 li
78.979 24.3735 li
80.5991 19.2056 li
82.4175 19.2056 li
79.355 27.7231 li
79.1592 28.2383 78.8833 28.6777 78.5278 29.0425 cv
78.1724 29.4072 77.6689 29.5894 77.0171 29.5894 cv
76.8804 29.5894 76.7334 29.5757 76.5762 29.5483 cv
76.4189 29.521 76.2676 29.4893 76.1216 29.4526 cv
76.3062 28.1675 li
76.3652 28.1719 76.4497 28.1787 76.5591 28.188 cv
76.6685 28.1973 76.7505 28.2017 76.8052 28.2017 cv
77.106 28.2017 77.3462 28.0991 77.5264 27.894 cv
77.7065 27.689 77.8535 27.4521 77.9673 27.1831 cv
78.2407 26.5132 li
75.5542 19.2056 li
77.3657 19.2056 li
78.7739 23.6353 li
cp
f
105.089 128.35 mo
100.848 128.35 li
100.848 119.016 li
91.5142 119.016 li
91.5142 114.773 li
100.848 114.773 li
100.848 105.439 li
105.089 105.439 li
105.089 114.773 li
114.423 114.773 li
114.423 119.016 li
105.089 119.016 li
105.089 128.35 li
.2 .560784 .733333 rgb
f
420 53.1807 mo
415.758 53.1807 li
415.758 43.8467 li
406.425 43.8467 li
406.425 39.604 li
415.758 39.604 li
415.758 30.2705 li
420 30.2705 li
420 39.604 li
429.334 39.604 li
429.334 43.8467 li
420 43.8467 li
420 53.1807 li
f
314.14 150 mo
303.49 150 li
303.49 135.23 li
303.49 150 li
292.86 150 li
292.86 127.99 li
294.73 127.99 li
294.73 124.83 li
294.73 124.83 li
294.35 124.49 294.03 124.09 293.78 123.65 cv
293.78 123.65 293.63 123.39 293.33 122.96 cv
293.169 122.716 292.968 122.407 292.731 122.056 cv
292.799 122.059 292.868 122.06 292.936 122.06 cv
293.722 122.06 294.495 121.866 295.184 121.503 cv
295.184 133.5 li
295.684 133.5 li
295.684 121.352 li
303.486 121.352 li
306.603 121.352 306.623 119.412 307.16 115.708 cv
307.372 106.019 li
307.624 106.146 307.845 106.333 308.01 106.57 cv
308.01 106.57 li
308.33 104.93 li
308.06 104.876 307.786 104.821 307.506 104.765 cv
310.369 93.5991 li
310.591 92.7295 310.103 91.8198 309.238 91.5366 cv
309.06 91.4783 308.88 91.4506 308.702 91.4506 cv
307.979 91.4506 307.305 91.9112 307.068 92.6362 cv
304.361 100.907 li
306.64 91.2999 li
306.871 90.3252 307.745 89.6721 308.706 89.6721 cv
308.869 89.6721 309.035 89.6909 309.2 89.73 cv
310.31 89.99 311 91.0899 310.79 92.2 cv
308.33 104.93 li
308.65 104.99 308.97 105.06 309.29 105.12 cv
309.29 105.12 li
312.07 96.64 li
312.302 95.9112 312.977 95.4518 313.699 95.4518 cv
313.878 95.4518 314.061 95.4803 314.24 95.54 cv
315.1 95.82 315.59 96.73 315.37 97.6001 cv
312.39 109.19 li
312.16 119.71 li
311.84 121.93 311.7 123.52 310.96 124.43 cv
310.96 124.43 li
310.96 127.99 li
314.14 127.99 li
314.14 136.745 li
307.015 136.745 li
307.015 137.245 li
314.14 137.245 li
314.14 150 li
290.987 100.89 mo
289.63 90.87 li
289.46 89.66 290.31 88.54 291.53 88.37 cv
291.63 88.3563 291.73 88.3497 291.828 88.3497 cv
292.879 88.3497 293.8 89.1086 294.01 90.16 cv
295.184 96.2966 li
295.184 99.647 li
293.563 99.7646 292.2 100.293 290.987 100.89 cv
298.625 99.9828 mo
298.396 99.9369 298.16 99.8896 297.917 99.8407 cv
298.29 88.02 li
298.329 86.8547 299.279 85.9387 300.427 85.9387 cv
300.451 85.9387 300.475 85.9391 300.5 85.94 cv
301.074 85.9601 301.587 86.2035 301.961 86.5831 cv
301.814 86.7948 301.703 87.0369 301.64 87.3027 cv
298.625 99.9828 li
295.684 99.6243 mo
295.684 98.9114 li
295.82 99.6227 li
295.774 99.6229 295.729 99.6234 295.684 99.6243 cv
0 .345098 .505882 rgb
f
295.684 133.5 mo
295.184 133.5 li
295.184 121.503 li
295.273 121.455 295.362 121.405 295.448 121.352 cv
295.684 121.352 li
295.684 133.5 li
295.184 99.647 mo
295.184 96.2966 li
295.684 98.9114 li
295.684 99.6243 li
295.514 99.6274 295.347 99.6352 295.184 99.647 cv
.380392 .552941 .635294 rgb
f
314.14 137.245 mo
307.015 137.245 li
307.015 136.745 li
314.14 136.745 li
314.14 137.245 li
f
212.227 106.164 mo
209.387 106.164 206.866 104.143 206.35 101.25 cv
206.35 101.25 li
205.76 98 207.91 94.89 211.17 94.3 cv
211.531 94.2345 211.89 94.2029 212.244 94.2029 cv
215.079 94.2029 217.594 96.2308 218.11 99.12 cv
218.11 99.12 li
218.7 102.37 216.54 105.49 213.29 106.07 cv
212.933 106.134 212.578 106.164 212.227 106.164 cv
0 .345098 .505882 rgb
f
450 105.34 mo
399.67 105.34 li
399.67 103.94 li
398.81 103.94 li
398.81 103.72 li
397.46 104.06 395.63 104.07 393.33 104.07 cv
387.43 104.07 383.25 103.61 380.43 103.09 cv
380.43 103.09 li
372.81 102.334 li
372.81 76.4857 li
372.31 76.4857 li
372.31 102.285 li
362.28 101.29 li
362.14 101.28 li
361.83 101.25 361.52 101.16 361.25 101.03 cv
349.53 95.42 li
348.12 94.75 347.52 93.05 348.2 91.64 cv
348.686 90.6232 349.703 90.0312 350.762 90.0312 cv
351.119 90.0312 351.482 90.0987 351.83 90.24 cv
353.99 91.13 li
353.9 90.75 353.92 90.34 354.06 89.95 cv
354.37 89.0435 355.227 88.4706 356.141 88.4706 cv
356.346 88.4706 356.555 88.4995 356.76 88.56 cv
357.96 88.91 li
357.85 88.58 357.83 88.22 357.91 87.86 cv
358.113 86.909 358.958 86.2528 359.895 86.2528 cv
360.022 86.2528 360.151 86.2649 360.28 86.29 cv
360.28 86.29 361.45 86.51 363.2 86.85 cv
363.2 71.51 li
363.25 71.51 li
363.27 64.7601 li
363.28 62.96 364.19 60.53 365.35 59.37 cv
366.09 58.64 367.12 57.65 367.71 57.18 cv
367.71 57.18 li
367.55 57.18 li
367.55 45.73 li
368.34 45.73 li
368.99 45.73 li
370.01 45.73 li
370.66 45.73 li
371.68 45.73 li
372.34 45.73 li
373.35 45.73 li
374.01 45.73 li
375.03 45.73 li
375.68 45.73 li
376.7 45.73 li
377.35 45.73 li
378.37 45.73 li
379.02 45.73 li
379.82 45.73 li
379.82 57.18 li
379.69 57.18 li
379.69 57.18 li
380.29 57.67 381.08 58.4201 381.82 59.16 cv
383.09 60.43 384.08 62.96 384.08 64.7601 cv
384.08 81.78 li
384.2 81.7901 384.32 81.8 384.44 81.82 cv
385.13 81.9 385.76 81.96 386.42 82.1 cv
387.08 82.24 387.55 82.2799 388.36 82.56 cv
388.72 82.67 389.06 82.79 389.36 82.9 cv
389.46 82.9399 li
389.46 82.9399 li
389.98 83.03 390.49 83.1499 390.97 83.31 cv
392.87 83.94 395.32 85.64 397.4 86.05 cv
397.9 86.15 398.37 86.23 398.81 86.33 cv
398.81 86.33 li
399.67 86.33 li
399.67 84.06 li
450 84.06 li
450 94.7 li
416.3 94.7 li
450 94.7 li
450 105.34 li
373.68 54.32 mo
373.68 54.32 li
373.68 52.3601 li
373.68 54.32 li
f
372.81 102.334 mo
372.31 102.285 li
372.31 76.4857 li
372.81 76.4857 li
372.81 102.334 li
.380392 .552941 .635294 rgb
f
246.318 100.277 mo
245.219 100.277 244.134 99.7805 243.43 98.84 cv
238.187 91.8968 li
238.187 81.4531 li
237.686 81.4531 li
237.686 91.2327 li
232.53 84.3699 li
231.32 82.77 231.64 80.5 233.24 79.3 cv
233.889 78.8105 234.652 78.5739 235.41 78.5739 cv
236.51 78.5739 237.599 79.0726 238.31 80.02 cv
243.75 87.25 li
249.21 94.4699 li
250.4 96.08 250.09 98.34 248.49 99.55 cv
247.84 100.04 247.076 100.277 246.318 100.277 cv
0 .345098 .505882 rgb
f
238.187 91.8968 mo
237.97 91.61 li
237.686 91.2327 li
237.686 81.4531 li
238.187 81.4531 li
238.187 91.8968 li
.380392 .552941 .635294 rgb
f
118.36 98.62 mo
116.12 98.62 114.3 97.82 114.3 94.83 cv
114.3 92.82 li
105.81 92.05 li
104.05 91.79 102.64 91.36 101.59 90.6699 cv
101.58 90.6699 li
101.58 90.6699 li
98.56 90.6699 li
98.56 92.06 li
0 92.06 li
0 81.42 li
88.12 81.42 li
0 81.42 li
0 70.79 li
98.56 70.79 li
98.56 72.1799 li
100.95 72.1799 li
102.21 70.95 104.08 70.15 105.88 69.56 cv
106.67 69.3 107.86 69.02 109.21 68.77 cv
109.21 68.77 li
114.3 67.32 li
114.3 64.66 li
113.86 64.66 li
113.86 59.38 li
114.12 59.38 li
115.31 59.38 li
116.52 59.38 li
116.52 59.38 li
117.73 59.38 li
117.73 59.38 li
118.94 59.38 li
118.94 59.38 li
120.14 59.38 li
120.14 59.38 li
120.16 59.38 li
121.37 59.38 li
121.37 59.38 li
122.57 59.38 li
122.57 59.38 li
122.86 59.38 li
122.86 64.66 li
122.42 64.66 li
122.42 69.65 li
125.46 69.3599 li
125.564 69.3499 125.667 69.345 125.769 69.345 cv
127.401 69.345 128.81 70.5945 128.97 72.26 cv
129.14 74.03 127.84 75.6 126.07 75.76 cv
123.41 76.0099 li
123.21 76.17 li
123.21 76.17 li
126.5 76.87 li
126.797 76.9327 127.076 77.0365 127.33 77.1743 cv
99.9453 77.1743 li
99.9453 77.6743 li
128.008 77.6743 li
128.736 78.3846 129.095 79.4411 128.87 80.51 cv
128.565 81.9562 127.289 82.9469 125.868 82.9468 cv
125.657 82.9468 125.444 82.9251 125.23 82.88 cv
125.03 82.83 li
122.51 82.11 li
122.51 82.11 li
122.5 82.26 122.48 82.4 122.46 82.55 cv
125.49 83.5 li
126.97 83.96 127.8 85.54 127.34 87.02 cv
126.96 88.23 125.85 88.9999 124.65 88.9999 cv
124.38 88.9999 124.09 88.96 123.82 88.87 cv
122.42 88.43 li
122.42 88.59 li
123.58 88.91 124.33 90.07 124.13 91.29 cv
123.98 92.2399 123.29 92.9699 122.42 93.21 cv
122.42 94.83 li
122.42 97.82 120.6 98.62 118.36 98.62 cv
118.36 98.62 li
0 .345098 .505882 rgb
f
128.008 77.6743 mo
99.9453 77.6743 li
99.9453 77.1743 li
127.33 77.1743 li
127.581 77.3102 127.809 77.4792 128.008 77.6743 cv
.380392 .552941 .635294 rgb
f
210.47 81.33 mo
206.76 81.33 203.76 78.32 203.76 74.6 cv
203.76 70.9 206.76 67.89 210.47 67.89 cv
210.47 67.89 li
214.19 67.89 217.2 70.9 217.2 74.6 cv
217.2 78.32 214.19 81.33 210.47 81.33 cv
210.47 81.33 li
195.915 62.9695 mo
193.714 62.9693 191.65 61.6198 190.84 59.44 cv
189.8 56.64 191.22 53.53 194.03 52.48 cv
205.225 48.3182 li
205.225 59.8719 li
197.8 62.63 li
197.178 62.8604 196.541 62.9696 195.915 62.9695 cv
205.725 59.6862 mo
205.725 48.1324 li
206.7 47.77 li
210.48 57.92 li
205.725 59.6862 li
0 .345098 .505882 rgb
f
205.225 59.8719 mo
205.225 48.3182 li
205.725 48.1324 li
205.725 59.6862 li
205.225 59.8719 li
.380392 .552941 .635294 rgb
f
210.48 57.92 mo
206.7 47.77 li
206.882 47.7026 li
226.672 47.7026 li
226.861 50.0563 225.481 52.3479 223.16 53.21 cv
210.48 57.92 li
226.609 47.2026 mo
208.229 47.2026 li
219.39 43.06 li
220.012 42.829 220.649 42.7194 221.276 42.7194 cv
223.47 42.7194 225.533 44.0643 226.35 46.25 cv
226.467 46.5646 226.553 46.8833 226.609 47.2026 cv
0 .345098 .505882 rgb
f
226.672 47.7026 mo
206.882 47.7026 li
208.229 47.2026 li
226.609 47.2026 li
226.638 47.3693 226.659 47.536 226.672 47.7026 cv
.380392 .552941 .635294 rgb
f
305.79 88.1963 mo
302.725 104.085 li
302.467 105.425 301.171 106.302 299.831 106.043 cv
298.492 105.785 297.615 104.489 297.874 103.15 cv
297.896 103.046 li
301.64 87.3027 li
301.911 86.1621 303.056 85.4571 304.196 85.728 cv
305.306 85.9921 306.002 87.0869 305.79 88.1963 cv
.94902 .807843 .619608 rgb
f
310.369 93.5991 mo
307.343 105.4 li
307.052 106.534 305.898 107.216 304.765 106.926 cv
303.632 106.635 302.949 105.481 303.239 104.348 cv
303.278 104.216 li
307.068 92.6362 li
307.363 91.7334 308.335 91.2407 309.238 91.5366 cv
310.103 91.8198 310.591 92.7295 310.369 93.5991 cv
f
292.742 101.307 mo
293.29 84.0151 li
293.327 82.8311 294.317 81.9019 295.502 81.9395 cv
296.638 81.9756 297.539 82.8955 297.577 84.0151 cv
298.125 101.307 li
298.173 102.794 297.006 104.037 295.519 104.084 cv
294.032 104.131 292.789 102.964 292.742 101.478 cv
292.742 101.307 li
cp
f
289.006 86.1567 mo
291.996 101.812 li
292.271 103.248 291.329 104.635 289.893 104.909 cv
288.457 105.183 287.07 104.241 286.796 102.806 cv
286.773 102.665 li
284.627 86.8716 li
284.462 85.6572 285.313 84.5391 286.527 84.374 cv
287.7 84.2144 288.784 85.0088 289.006 86.1567 cv
cp
f
297.842 99.8257 mo
292.516 98.7553 289.615 102.239 286.816 102.802 cv
286.834 103.478 287.098 104.287 286.885 105.666 cv
286.805 106.189 286.34 106.475 286.295 107.11 cv
286.117 109.696 286.705 113.432 287.435 115.65 cv
288.344 118.413 289.08 121.352 292.197 121.352 cv
303.486 121.352 li
306.603 121.352 306.623 119.412 307.16 115.708 cv
307.465 101.767 li
304.117 101.081 302.189 100.699 297.842 99.8257 cv
f
305.955 131.231 mo
289.727 131.231 li
289.727 119.412 li
305.955 119.412 li
305.955 131.231 li
cp
f
288.777 119.648 mo
288.777 119.648 288.626 119.386 288.334 118.956 cv
288.037 118.517 287.619 117.873 287.087 117.144 cv
286.821 116.776 286.534 116.378 286.231 115.957 cv
285.918 115.541 285.589 115.102 285.249 114.648 cv
284.896 114.181 284.533 113.699 284.164 113.208 cv
284.025 113.025 li
283.956 112.934 li
283.939 112.911 li
283.931 112.899 li
284.055 113.03 284.04 113.014 284.025 112.998 cv
284.017 112.989 284.008 112.98 284.023 112.996 cv
284.019 112.991 li
283.986 112.948 li
283.716 112.608 li
283.18 111.94 li
282.849 111.57 282.566 111.212 282.187 110.826 cv
281.799 110.434 281.417 110.047 281.047 109.673 cv
280.279 108.938 279.545 108.263 278.897 107.702 cv
278.245 107.146 277.69 106.694 277.305 106.378 cv
276.913 106.076 276.689 105.903 276.689 105.903 cv
276.665 105.884 li
275.671 105.117 275.487 103.69 276.255 102.696 cv
277.001 101.73 278.377 101.532 279.366 102.228 cv
279.366 102.228 279.607 102.4 280.031 102.699 cv
280.457 102.989 281.064 103.402 281.794 103.899 cv
282.535 104.389 283.399 104.961 284.326 105.575 cv
284.797 105.888 285.282 106.211 285.776 106.54 cv
286.31 106.92 286.853 107.305 287.396 107.69 cv
288.103 108.231 li
288.447 108.497 li
288.49 108.53 li
288.496 108.535 li
288.512 108.551 288.505 108.544 288.498 108.536 cv
288.485 108.522 288.472 108.508 288.599 108.641 cv
288.608 108.648 li
288.629 108.664 li
288.709 108.727 li
288.868 108.851 li
289.292 109.18 289.709 109.503 290.113 109.816 cv
290.522 110.118 290.962 110.428 291.362 110.703 cv
291.772 110.976 292.15 111.242 292.516 111.472 cv
293.244 111.938 293.875 112.29 294.315 112.548 cv
294.764 112.81 295.035 112.942 295.035 112.942 cv
295.041 112.945 li
297.425 114.106 298.415 116.979 297.254 119.362 cv
296.094 121.745 293.221 122.735 290.838 121.575 cv
289.938 121.136 289.239 120.456 288.777 119.648 cv
f
294.406 109.547 mo
293.688 109.547 293.014 109.107 292.748 108.395 cv
292.408 107.479 292.875 106.463 293.791 106.125 cv
297.93 104.585 li
302.072 103.046 li
302.275 102.971 302.483 102.935 302.688 102.935 cv
303.404 102.935 304.077 103.375 304.342 104.086 cv
304.682 105.001 304.217 106.018 303.303 106.358 cv
299.162 107.897 li
295.021 109.436 li
294.818 109.511 294.61 109.547 294.406 109.547 cv
.760784 .647059 .494118 rgb
f
292.689 105.022 mo
291.773 105.363 291.309 106.38 291.648 107.294 cv
291.988 108.21 293.004 108.675 293.92 108.335 cv
298.06 106.797 li
296.828 103.483 li
292.689 105.022 li
cp
1 1 1 rgb
f
300.971 101.944 mo
296.828 103.483 li
298.06 106.797 li
302.201 105.258 li
303.115 104.919 303.582 103.9 303.242 102.986 cv
302.9 102.071 301.885 101.605 300.971 101.944 cv
cp
.956863 .164706 .352941 rgb
f
304.564 116.658 mo
304.205 116.658 303.85 116.495 303.619 116.188 cv
301.838 113.826 li
300.059 111.464 li
299.666 110.943 299.769 110.202 300.293 109.808 cv
300.506 109.648 300.756 109.57 301.004 109.57 cv
301.363 109.57 301.716 109.732 301.947 110.041 cv
303.728 112.402 li
305.506 114.763 li
305.9 115.285 305.795 116.027 305.273 116.42 cv
305.061 116.581 304.811 116.658 304.564 116.658 cv
.760784 .647059 .494118 rgb
f
300.531 109.126 mo
300.139 108.602 299.395 108.498 298.875 108.892 cv
298.352 109.284 298.248 110.025 298.643 110.547 cv
300.42 112.91 li
302.309 111.486 li
300.531 109.126 li
cp
1 1 1 rgb
f
304.09 113.846 mo
302.309 111.486 li
300.42 112.91 li
302.201 115.27 li
302.592 115.79 303.336 115.897 303.855 115.503 cv
304.377 115.11 304.48 114.369 304.09 113.846 cv
cp
.956863 .164706 .352941 rgb
f
291.801 110.999 mo
291.659 110.902 291.513 110.803 291.362 110.703 cv
290.962 110.428 290.522 110.118 290.113 109.816 cv
289.709 109.503 289.292 109.18 288.868 108.851 cv
288.709 108.727 li
288.629 108.664 li
288.608 108.648 li
288.599 108.641 li
288.511 108.549 288.49 108.527 288.49 108.527 cv
288.49 108.527 288.494 108.532 288.498 108.536 cv
288.502 108.54 288.506 108.545 288.506 108.545 cv
288.506 108.545 288.503 108.542 288.496 108.535 cv
288.49 108.53 li
288.447 108.497 li
288.393 108.456 li
288.77 108.151 289.25 107.968 289.771 107.968 cv
290.982 107.968 291.967 108.951 291.967 110.163 cv
291.967 110.459 291.908 110.741 291.801 110.999 cv
.760784 .647059 .494118 rgb
f
289.771 112.356 mo
288.561 112.356 287.578 111.374 287.578 110.163 cv
287.578 109.473 287.896 108.858 288.393 108.456 cv
288.447 108.497 li
288.49 108.53 li
288.496 108.535 li
288.503 108.542 288.506 108.545 288.506 108.545 cv
288.506 108.545 288.502 108.54 288.498 108.536 cv
288.494 108.532 288.49 108.527 288.49 108.527 cv
288.49 108.527 288.511 108.549 288.599 108.641 cv
288.608 108.648 li
288.629 108.664 li
288.709 108.727 li
288.868 108.851 li
289.292 109.18 289.709 109.503 290.113 109.816 cv
290.522 110.118 290.962 110.428 291.362 110.703 cv
291.513 110.803 291.659 110.902 291.801 110.999 cv
291.472 111.796 290.686 112.356 289.771 112.356 cv
f
286.809 109.394 mo
286.809 110.606 287.791 111.589 289.002 111.589 cv
289.002 107.201 li
287.791 107.201 286.809 108.183 286.809 109.394 cv
cp
.956863 .164706 .352941 rgb
f
289.002 107.201 mo
289.002 111.589 li
290.215 111.589 291.197 110.606 291.197 109.394 cv
291.197 108.183 290.215 107.201 289.002 107.201 cv
cp
.258824 .815686 1 rgb
f
297.294 115.242 mo
297.082 114.782 296.796 114.355 296.444 113.979 cv
296.871 114.258 297.189 114.703 297.294 115.242 cv
.760784 .647059 .494118 rgb
f
295.375 117.566 mo
294.448 117.566 293.627 116.902 293.455 115.96 cv
293.266 114.898 293.969 113.883 295.031 113.693 cv
295.149 113.672 295.265 113.661 295.38 113.661 cv
295.766 113.661 296.134 113.777 296.444 113.979 cv
296.796 114.355 297.082 114.782 297.294 115.242 cv
297.296 115.25 297.297 115.258 297.299 115.266 cv
297.49 116.327 296.783 117.343 295.725 117.535 cv
295.607 117.556 295.49 117.566 295.375 117.566 cv
f
294.068 112.888 mo
293.004 113.081 292.301 114.098 292.492 115.158 cv
296.334 114.463 li
296.143 113.402 295.127 112.698 294.068 112.888 cv
cp
.956863 .164706 .352941 rgb
f
296.334 114.463 mo
292.492 115.158 li
292.682 116.219 293.699 116.922 294.76 116.732 cv
295.82 116.54 296.525 115.524 296.334 114.463 cv
cp
.258824 .815686 1 rgb
f
298.491 150 mo
309.135 150 li
309.135 123.991 li
298.491 123.991 li
298.491 150 li
cp
.764706 .137255 .286275 rgb
f
287.857 123.991 mo
287.857 150 li
298.491 150 li
298.491 123.991 li
287.857 123.991 li
cp
.956863 .164706 .352941 rgb
f
368.615 82.7383 mo
368.615 82.7383 368.705 82.9692 368.861 83.374 cv
369.024 83.7866 369.264 84.3779 369.565 85.0737 cv
369.867 85.7681 370.232 86.5718 370.647 87.3735 cv
370.855 87.772 371.076 88.1709 371.301 88.5317 cv
371.519 88.8882 371.771 89.2236 371.901 89.3423 cv
371.935 89.3877 372.016 89.3716 371.638 89.1499 cv
371.227 88.9717 371.521 89.0957 371.623 89.1138 cv
372.002 89.2236 li
372.504 89.3691 372.998 89.5127 373.477 89.6514 cv
374.434 89.9287 375.327 90.188 376.093 90.4102 cv
377.624 90.854 378.645 91.1499 378.645 91.1499 cv
378.66 91.1543 li
380.322 91.6362 381.279 93.3745 380.797 95.0366 cv
380.315 96.6987 378.577 97.6558 376.915 97.1738 cv
376.716 97.1089 li
376.716 97.1089 375.717 96.7456 374.219 96.2002 cv
373.47 95.9277 372.596 95.6099 371.658 95.269 cv
371.19 95.0986 370.706 94.9224 370.215 94.7437 cv
369.845 94.6089 li
369.696 94.5449 369.737 94.5957 369.087 94.3018 cv
368.235 93.8389 367.935 93.437 367.616 93.0889 cv
367.055 92.4004 366.74 91.8301 366.443 91.2769 cv
366.155 90.7266 365.916 90.2041 365.698 89.7021 cv
365.268 88.7002 364.929 87.7817 364.649 86.9922 cv
364.373 86.2036 364.16 85.5459 364.014 85.0815 cv
363.868 84.6069 363.785 84.3359 363.785 84.3359 cv
363.373 82.9927 364.128 81.5698 365.472 81.1582 cv
366.754 80.7651 368.107 81.4346 368.587 82.6641 cv
368.615 82.7383 li
cp
.901961 .764706 .588235 rgb
f
355.282 82.2871 mo
355.282 82.2871 359.987 83.1797 364.691 84.0723 cv
365.906 84.3047 367.121 84.5376 368.261 84.7554 cv
369.354 85.0068 370.376 85.2417 371.251 85.4429 cv
373.002 85.8452 374.169 86.1133 374.169 86.1133 cv
375.446 86.4072 376.244 87.6807 375.95 88.958 cv
375.656 90.2354 374.383 91.0332 373.105 90.7393 cv
372.979 90.707 li
372.979 90.707 371.829 90.3755 370.103 89.8779 cv
369.24 89.6294 368.233 89.3389 367.154 89.0283 cv
366.094 88.7988 364.963 88.5537 363.832 88.3091 cv
359.151 87.2964 354.472 86.2842 354.472 86.2842 cv
353.37 86.0459 352.671 84.9604 352.909 83.8599 cv
353.144 82.7769 354.2 82.0825 355.282 82.2871 cv
cp
.8 .678431 .521569 rgb
f
373.848 92.6914 mo
361.65 92.5171 li
361.53 92.5156 li
361.302 92.5122 361.074 92.4692 360.87 92.3989 cv
350.413 88.7573 li
349.263 88.3564 348.655 87.0996 349.056 85.9497 cv
349.443 84.8369 350.639 84.2339 351.757 84.5581 cv
362.386 87.6636 li
361.606 87.5454 li
373.799 87.1563 li
375.327 87.1074 376.605 88.3066 376.654 89.835 cv
376.703 91.3633 375.504 92.6416 373.976 92.6904 cv
373.848 92.6914 li
cp
.85098 .721569 .552941 rgb
f
358.27 60.7646 mo
358.275 58.9624 359.188 56.5278 360.354 55.3726 cv
361.173 54.5645 362.364 53.4233 362.887 53.0547 cv
364.273 52.0757 366.93 50.3789 368.643 50.3232 cv
368.643 93.8394 li
359.828 93.8394 li
358.927 93.8394 358.197 93.1084 358.201 92.208 cv
358.27 60.7646 li
cp
.329412 .137255 0 rgb
f
368.682 50.3198 mo
370.214 50.293 372.994 51.9985 374.262 52.8599 cv
374.871 53.2749 375.878 54.2231 376.815 55.1558 cv
378.093 56.4268 379.084 58.9624 379.084 60.7646 cv
379.084 92.208 li
379.084 93.1084 378.353 93.8394 377.454 93.8394 cv
368.643 93.8394 li
368.643 50.3232 li
368.682 50.3198 li
cp
.215686 .0901961 0 rgb
f
373.211 55.3237 mo
374.645 55.645 376.909 57.0664 376.909 59.8931 cv
376.909 62.7217 376.909 72.0796 376.909 72.0796 cv
373.211 72.0796 li
373.211 59.8931 li
373.211 59.8931 369.692 54.5376 373.211 55.3237 cv
cp
.568627 .529412 .521569 rgb
f
374.815 41.7256 mo
374.815 53.1797 li
368.682 53.1797 li
368.682 41.7256 li
374.815 41.7256 li
cp
.941176 .909804 .87451 rgb
f
362.549 41.7256 mo
368.682 41.7256 li
368.682 53.1797 li
362.549 53.1797 li
362.549 41.7256 li
cp
.85098 .823529 .788235 rgb
f
360.044 68.4893 mo
360.044 84.0474 li
362.493 81.5986 li
362.493 63.6631 li
360.044 68.4893 li
cp
.568627 .529412 .521569 rgb
f
373.371 48.3623 mo
374.024 48.3623 li
374.024 41.7256 li
373.371 41.7256 li
373.371 48.3623 li
cp
.639216 .65098 .647059 rgb
f
371.699 48.3623 mo
372.352 48.3623 li
372.352 41.7256 li
371.699 41.7256 li
371.699 48.3623 li
cp
f
370.027 48.3623 mo
370.681 48.3623 li
370.681 41.7256 li
370.027 41.7256 li
370.027 48.3623 li
cp
f
368.354 48.3623 mo
369.008 48.3623 li
369.008 41.7256 li
368.354 41.7256 li
368.354 48.3623 li
cp
f
366.684 48.3623 mo
367.337 48.3623 li
367.337 41.7256 li
366.684 41.7256 li
366.684 48.3623 li
cp
f
365.012 48.3623 mo
365.664 48.3623 li
365.664 41.7256 li
365.012 41.7256 li
365.012 48.3623 li
cp
f
363.34 48.3623 mo
363.992 48.3623 li
363.992 41.7256 li
363.34 41.7256 li
363.34 48.3623 li
cp
f
358.201 85.4619 mo
379.084 85.4619 li
379.084 67.5103 li
358.201 67.5103 li
358.201 85.4619 li
cp
.956863 .164706 .352941 rgb
f
360.519 71.7529 mo
376.766 71.7529 li
376.766 69.6318 li
360.519 69.6318 li
360.519 71.7529 li
cp
1 1 1 rgb
f
360.519 74.564 mo
376.766 74.564 li
376.766 73.147 li
360.519 73.147 li
360.519 74.564 li
cp
f
368.354 77.1938 mo
376.766 77.1938 li
376.766 75.7778 li
368.354 75.7778 li
368.354 77.1938 li
cp
f
363.992 81.0493 mo
376.766 81.0493 li
376.766 79.6313 li
363.992 79.6313 li
363.992 81.0493 li
cp
f
378.785 93.1479 mo
378.488 93.5649 378.005 93.8394 377.454 93.8394 cv
368.643 93.8394 li
359.829 93.8394 li
359.279 93.8394 358.795 93.5649 358.5 93.1479 cv
378.785 93.1479 li
cp
.129412 .054902 0 rgb
f
370.042 87.8955 mo
374.051 83.3306 370.953 80.8496 374.146 79.7573 cv
375.936 79.1455 381.877 77.9668 385.965 79.312 cv
387.868 79.9395 390.322 81.6411 392.403 82.0547 cv
394.79 82.5298 396.685 82.6021 396.685 85.0674 cv
396.685 95.4297 li
396.685 100.042 393.871 100.073 388.334 100.073 cv
375.15 100.073 370.541 97.7529 370.541 97.7529 cv
370.541 97.7529 363.723 95.4561 363.587 91.8696 cv
363.547 90.8228 367.956 90.271 370.042 87.8955 cv
cp
.94902 .807843 .619608 rgb
f
411.298 99.9385 mo
411.298 82.3311 li
393.813 82.3311 li
393.813 99.9385 li
411.298 99.9385 li
cp
f
380.491 89.1689 mo
380.491 89.1689 380.209 88.9678 379.715 88.6152 cv
379.554 88.5034 li
379.508 88.4805 li
379.41 88.3994 li
379.449 88.3413 378.997 88.1655 378.668 88.0088 cv
378.337 87.835 377.863 87.6841 377.395 87.5078 cv
376.938 87.3232 376.374 87.1772 375.824 87 cv
375.271 86.8232 374.652 86.6816 374.046 86.5132 cv
373.42 86.3643 372.784 86.2129 372.148 86.0615 cv
369.569 85.4902 366.897 85.042 364.891 84.7402 cv
363.886 84.5986 363.049 84.481 362.462 84.3984 cv
361.888 84.3247 361.56 84.2827 361.56 84.2827 cv
361.467 84.271 li
359.806 84.0581 358.632 82.5391 358.845 80.8784 cv
359.027 79.4517 360.176 78.3848 361.548 78.2466 cv
361.548 78.2466 361.909 78.21 362.541 78.1465 cv
363.162 78.0918 364.048 78.0142 365.111 77.9209 cv
367.239 77.7549 370.08 77.5786 372.991 77.5493 cv
373.726 77.5537 374.46 77.5576 375.183 77.5615 cv
375.919 77.5908 376.63 77.5908 377.35 77.6455 cv
378.071 77.7017 378.747 77.7222 379.442 77.8179 cv
380.131 77.9038 380.761 77.958 381.416 78.0981 cv
382.079 78.2354 382.553 78.2773 383.364 78.5576 cv
383.723 78.6724 384.057 78.7881 384.364 78.9004 cv
384.518 78.958 384.665 79.0132 384.806 79.0659 cv
384.897 79.103 384.984 79.1382 385.067 79.1719 cv
385.629 79.4043 385.95 79.5371 385.95 79.5371 cv
388.796 80.7153 390.148 83.9775 388.971 86.8237 cv
387.792 89.6699 384.529 91.022 381.684 89.8438 cv
381.294 89.6821 380.932 89.4819 380.601 89.2485 cv
380.491 89.1689 li
cp
f
380.111 99.5635 mo
357.278 97.292 li
357.144 97.2788 li
356.826 97.2476 356.518 97.1567 356.245 97.0278 cv
344.53 91.4229 li
343.118 90.7471 342.52 89.0542 343.196 87.6416 cv
343.848 86.2793 345.453 85.6787 346.833 86.2432 cv
358.843 91.186 li
357.81 90.9219 li
380.703 92.4707 li
382.665 92.6035 384.146 94.3008 384.015 96.2622 cv
383.882 98.2231 382.184 99.7056 380.223 99.5728 cv
380.111 99.5635 li
cp
f
394.667 90.6978 mo
394.667 101.341 li
450 101.341 li
450 90.6978 li
394.667 90.6978 li
cp
.764706 .137255 .286275 rgb
f
450 80.063 mo
394.667 80.063 li
394.667 90.6978 li
450 90.6978 li
450 80.063 li
cp
.956863 .164706 .352941 rgb
f
117.541 77.3286 mo
113.681 71.4932 115.156 67.7734 113.984 64.6064 cv
113.477 63.2383 104.03 64.5244 100.879 65.561 cv
97.7295 66.5972 94.3789 68.2402 94.3789 71.793 cv
94.3789 82.249 li
94.3789 85.8037 96.5898 87.4331 100.812 88.0454 cv
116.753 89.4888 li
113.573 85.9341 117.541 82.3813 117.541 77.3286 cv
cp
.94902 .807843 .619608 rgb
f
109.299 55.3833 mo
109.299 90.8335 li
109.299 93.8179 111.117 94.6167 113.361 94.6167 cv
113.361 55.3833 li
109.299 55.3833 li
cp
.843137 .94902 .968627 rgb
f
113.361 55.3833 mo
113.361 94.6167 li
115.603 94.6167 117.421 93.8179 117.421 90.8335 cv
117.421 55.3833 li
113.361 55.3833 li
cp
1 1 1 rgb
f
113.036 64.3794 mo
113.143 64.3794 113.252 64.3882 113.361 64.3901 cv
113.361 55.3833 li
109.299 55.3833 li
109.299 64.3999 li
110.778 64.3999 111.767 64.3794 113.036 64.3794 cv
cp
.721569 .862745 .901961 rgb
f
117.421 64.354 mo
117.421 55.3833 li
113.361 55.3833 li
113.361 64.3901 li
114.742 64.4131 115.917 64.3906 117.421 64.354 cv
cp
.831373 .886275 .901961 rgb
f
117.864 60.6616 mo
108.858 60.6616 li
108.858 55.3833 li
117.864 55.3833 li
117.864 60.6616 li
cp
.121569 .254902 .290196 rgb
f
110.026 57.082 mo
109.859 58.0205 109.588 58.0205 109.422 57.082 cv
109.121 55.3833 li
110.328 55.3833 li
110.328 55.3833 110.192 56.1431 110.026 57.082 cv
cp
.219608 .454902 .521569 rgb
f
111.219 57.082 mo
111.053 58.0205 110.783 58.0205 110.616 57.082 cv
110.314 55.3833 li
111.52 55.3833 li
111.52 55.3833 111.385 56.1431 111.219 57.082 cv
cp
f
112.428 57.082 mo
112.26 58.0205 111.99 58.0205 111.823 57.082 cv
111.52 55.3833 li
112.728 55.3833 li
112.728 55.3833 112.594 56.1431 112.428 57.082 cv
cp
f
113.633 57.082 mo
113.467 58.0205 113.197 58.0205 113.029 57.082 cv
112.728 55.3833 li
113.937 55.3833 li
113.937 55.3833 113.8 56.1431 113.633 57.082 cv
cp
f
114.841 57.082 mo
114.675 58.0205 114.405 58.0205 114.238 57.082 cv
113.937 55.3833 li
115.142 55.3833 li
115.142 55.3833 115.008 56.1431 114.841 57.082 cv
cp
f
116.063 57.082 mo
115.897 58.0205 115.625 58.0205 115.458 57.082 cv
115.158 55.3833 li
116.366 55.3833 li
116.366 55.3833 116.231 56.1431 116.063 57.082 cv
cp
f
117.271 57.082 mo
117.104 58.0205 116.832 58.0205 116.666 57.082 cv
116.366 55.3833 li
117.572 55.3833 li
117.572 55.3833 117.436 56.1431 117.271 57.082 cv
cp
f
116.365 85.3896 mo
116.365 86.0884 115.797 86.6538 115.098 86.6538 cv
114.4 86.6538 113.833 86.0884 113.833 85.3896 cv
113.833 84.6904 114.4 84.125 115.098 84.125 cv
115.797 84.125 116.365 84.6904 116.365 85.3896 cv
cp
.45098 .909804 1 rgb
f
116.252 71.3735 mo
116.252 72.2627 115.532 72.9834 114.643 72.9834 cv
113.753 72.9834 113.034 72.2627 113.034 71.3735 cv
113.034 70.4854 113.753 69.7651 114.643 69.7651 cv
115.532 69.7651 116.252 70.4854 116.252 71.3735 cv
cp
f
111.302 79.8711 mo
111.302 80.1875 111.045 80.4453 110.728 80.4453 cv
110.41 80.4453 110.153 80.1875 110.153 79.8711 cv
110.153 79.5537 110.41 79.2964 110.728 79.2964 cv
111.045 79.2964 111.302 79.5537 111.302 79.8711 cv
cp
f
114.511 76.3857 mo
114.511 76.8247 114.153 77.1812 113.714 77.1812 cv
113.275 77.1812 112.919 76.8247 112.919 76.3857 cv
112.919 75.9458 113.275 75.5898 113.714 75.5898 cv
114.153 75.5898 114.511 75.9458 114.511 76.3857 cv
cp
f
112.213 89.2988 mo
112.213 89.7388 111.857 90.0933 111.418 90.0933 cv
110.978 90.0933 110.623 89.7388 110.623 89.2988 cv
110.623 88.8594 110.978 88.5029 111.418 88.5029 cv
111.857 88.5029 112.213 88.8594 112.213 89.2988 cv
cp
f
112.213 67.2192 mo
112.213 67.6577 111.857 68.0146 111.418 68.0146 cv
110.978 68.0146 110.623 67.6577 110.623 67.2192 cv
110.623 66.7788 110.978 66.4229 111.418 66.4229 cv
111.857 66.4229 112.213 66.7788 112.213 67.2192 cv
cp
f
115.006 72.3257 mo
113.367 72.3257 111.966 71.0781 111.808 69.4131 cv
111.639 67.644 112.937 66.0737 114.706 65.9058 cv
120.459 65.3584 li
122.225 65.1895 123.799 66.4878 123.967 68.2563 cv
124.135 70.0254 122.837 71.5957 121.069 71.7637 cv
115.315 72.311 li
115.211 72.3208 115.108 72.3257 115.006 72.3257 cv
cp
.94902 .807843 .619608 rgb
f
120.029 78.8271 mo
112.909 76.8091 li
111.413 76.3853 110.543 74.8281 110.967 73.3311 cv
111.373 71.8999 112.824 71.0444 114.258 71.3433 cv
121.499 72.8691 li
123.158 73.2188 124.22 74.8472 123.87 76.5063 cv
123.521 78.1655 121.892 79.2271 120.233 78.8774 cv
120.029 78.8271 li
cp
f
83.1196 86.6733 mo
83.1196 68.1748 li
96.5898 68.1748 li
96.5898 86.6733 li
83.1196 86.6733 li
cp
f
119.653 84.9995 mo
119.375 84.9995 119.094 84.958 118.815 84.8716 cv
111.675 82.6494 li
110.19 82.1875 109.361 80.6094 109.823 79.125 cv
110.286 77.6401 111.867 76.8125 113.348 77.2734 cv
120.488 79.4956 li
121.973 79.9575 122.802 81.5356 122.34 83.02 cv
121.964 84.2261 120.852 84.9995 119.653 84.9995 cv
cp
f
116.756 89.3101 mo
116.625 89.3101 116.493 89.2993 116.359 89.2773 cv
112.117 88.5752 li
110.803 88.3579 109.913 87.1157 110.131 85.8008 cv
110.349 84.4863 111.593 83.6025 112.905 83.8145 cv
117.147 84.5166 li
118.462 84.7339 119.352 85.9761 119.134 87.291 cv
118.938 88.4722 117.915 89.3101 116.756 89.3101 cv
cp
f
102.948 65.4097 mo
109.585 63.3477 li
110.682 63.0068 li
111.538 62.7407 112.434 62.9775 113.048 63.5459 cv
118.445 68.5654 li
119.388 69.4429 119.441 70.9189 118.564 71.8623 cv
117.82 72.6616 116.645 72.8203 115.73 72.3164 cv
109.275 68.7588 li
112.738 68.957 li
107.525 73.5542 li
105.546 75.2988 102.528 75.1094 100.783 73.1309 cv
99.0386 71.1523 99.228 68.1338 101.206 66.3887 cv
101.723 65.9336 102.332 65.6045 102.948 65.4097 cv
cp
.85098 .72549 .556863 rgb
f
102.36 65.2954 mo
110.093 63.0908 li
111.109 62.8013 li
112.095 62.52 113.113 62.8784 113.721 63.6279 cv
117.866 68.7524 li
118.678 69.7559 118.522 71.2271 117.519 72.0391 cv
116.687 72.7119 115.532 72.7183 114.699 72.1294 cv
109.319 68.3218 li
112.947 68.8584 li
106.504 73.6685 li
104.402 75.2373 101.426 74.8057 99.8569 72.7041 cv
98.2876 70.6021 98.7197 67.626 100.821 66.0571 cv
101.293 65.7051 101.827 65.4497 102.36 65.2954 cv
cp
.94902 .807843 .619608 rgb
f
0 77.4194 mo
0 88.063 li
93.5596 88.063 li
93.5596 77.4194 li
0 77.4194 li
cp
.764706 .137255 .286275 rgb
f
93.5596 66.7856 mo
0 66.7856 li
0 77.4194 li
93.5596 77.4194 li
93.5596 66.7856 li
cp
.956863 .164706 .352941 rgb
f
189.027 48.4824 mo
186.222 49.5264 184.799 52.6426 185.839 55.4419 cv
186.879 58.2441 189.99 59.6704 192.795 58.6299 cv
205.475 53.9199 li
201.701 43.769 li
189.027 48.4824 li
cp
1 1 1 rgb
f
214.388 39.0557 mo
201.701 43.769 li
205.475 53.9199 li
218.157 49.2065 li
220.955 48.1655 222.386 45.0464 221.345 42.2466 cv
220.297 39.4443 217.188 38.0181 214.388 39.0557 cv
cp
.956863 .164706 .352941 rgb
f
233.31 76.019 mo
232.106 74.4155 229.83 74.0991 228.238 75.3037 cv
226.635 76.5034 226.318 78.7734 227.525 80.3735 cv
232.969 87.6094 li
238.753 83.2485 li
233.31 76.019 li
cp
1 1 1 rgb
f
244.206 90.4741 mo
238.753 83.2485 li
232.969 87.6094 li
238.425 94.835 li
239.619 96.4312 241.898 96.7544 243.49 95.5522 cv
245.088 94.3438 245.403 92.0771 244.206 90.4741 cv
cp
.956863 .164706 .352941 rgb
f
198.755 70.6045 mo
198.755 74.3154 201.764 77.3291 205.472 77.3291 cv
205.472 63.8877 li
201.764 63.8877 198.755 66.896 198.755 70.6045 cv
cp
f
205.472 63.8877 mo
205.472 77.3291 li
209.186 77.3291 212.195 74.3154 212.195 70.6045 cv
212.195 66.896 209.186 63.8877 205.472 63.8877 cv
cp
1 1 1 rgb
f
206.174 90.2998 mo
202.915 90.8857 200.76 94.0015 201.346 97.25 cv
213.112 95.1211 li
212.525 91.8726 209.416 89.7134 206.174 90.2998 cv
cp
.956863 .164706 .352941 rgb
f
213.112 95.1211 mo
201.346 97.25 li
201.926 100.497 205.043 102.651 208.29 102.07 cv
211.539 101.485 213.698 98.3682 213.112 95.1211 cv
cp
1 1 1 rgb
f
253.137 27.3042 mo
248.979 27.3042 245.609 23.9341 245.609 19.7773 cv
245.609 15.6201 248.979 12.25 253.137 12.25 cv
252.683 12.25 252.314 15.6201 252.314 19.7773 cv
252.314 23.9346 252.683 27.3037 253.137 27.3037 cv
253.591 27.3037 253.959 23.9346 253.959 19.7773 cv
253.959 15.6201 253.591 12.25 253.137 12.25 cv
257.294 12.25 260.664 15.6201 260.664 19.7773 cv
260.664 23.9341 257.294 27.3042 253.137 27.3042 cv
.2 .560784 .733333 rgb
f
406.425 132.849 mo
402.268 132.849 398.898 129.479 398.898 125.321 cv
398.898 125.321 li
398.898 125.775 402.268 126.144 406.425 126.144 cv
410.582 126.144 413.952 125.775 413.952 125.321 cv
413.952 125.321 li
413.952 129.479 410.582 132.849 406.425 132.849 cv
413.952 125.321 mo
413.952 125.321 li
413.952 125.321 li
413.952 125.321 li
413.952 125.321 mo
413.952 124.867 410.582 124.499 406.425 124.499 cv
402.268 124.499 398.898 124.867 398.898 125.321 cv
398.898 121.164 402.268 117.794 406.425 117.794 cv
410.582 117.794 413.952 121.164 413.952 125.321 cv
f
51.6501 120.308 mo
50.0374 120.308 48.4248 119.693 47.1943 118.463 cv
44.7334 116.002 44.7344 112.013 47.1948 109.552 cv
46.9263 109.821 48.7026 112.033 51.1632 114.494 cv
53.4588 116.789 55.5386 118.49 56.0256 118.49 cv
56.0607 118.49 56.0875 118.481 56.1055 118.463 cv
54.8752 119.693 53.2627 120.308 51.6501 120.308 cv
56.1055 118.463 mo
56.3745 118.194 54.5977 115.981 52.1367 113.521 cv
49.8417 111.225 47.7625 109.525 47.275 109.525 cv
47.2399 109.525 47.2129 109.534 47.1948 109.552 cv
48.4256 108.321 50.0382 107.706 51.6511 107.706 cv
53.2631 107.706 54.8755 108.321 56.1055 109.551 cv
58.5664 112.012 58.5664 116.002 56.1055 118.463 cv
f
194.646 139.151 mo
186.609 139.151 li
178.574 139.151 li
177.573 139.151 176.762 138.34 176.762 137.34 cv
176.762 127.38 li
176.762 126.38 177.573 125.569 178.574 125.569 cv
186.609 125.569 li
194.646 125.569 li
195.645 125.569 196.457 126.38 196.457 127.38 cv
196.457 137.34 li
196.457 138.34 195.645 139.151 194.646 139.151 cv
188.477 131.794 mo
188.477 132.926 li
190.967 132.926 li
190.967 135.416 li
192.099 135.416 li
192.099 132.926 li
194.588 132.926 li
194.588 131.794 li
192.099 131.794 li
192.099 129.304 li
190.967 129.304 li
190.967 131.794 li
188.477 131.794 li
f
146.176 30.4736 mo
141.8 34.8496 141.8 41.9443 146.176 46.3203 cv
162.023 30.4736 li
157.647 26.0977 150.552 26.0977 146.176 30.4736 cv
cp
.992157 .752941 .0588235 rgb
f
162.023 30.4736 mo
146.176 46.3203 li
150.552 50.6963 157.647 50.6963 162.023 46.3203 cv
166.399 41.9443 166.399 34.8496 162.023 30.4736 cv
cp
.968627 .603922 .129412 rgb
f
165.906 88.6475 mo
165.884 86.7686 li
168.23 86.7539 li
168.25 88.6338 li
165.906 88.6475 li
.2 .560784 .733333 rgb
f
169.962 93.209 mo
169.942 91.33 li
172.288 91.3174 li
172.286 91.0536 li
172.309 93.1943 li
169.962 93.209 li
f
165.956 93.2334 mo
165.935 91.3535 li
168.28 91.3397 li
168.288 92.0808 li
168.3 93.2188 li
165.956 93.2334 li
f
169.888 86.3301 mo
169.868 84.4531 li
172.213 84.4395 li
172.209 84.0225 li
169.863 84.0371 li
169.842 82.1602 li
172.187 82.1465 li
172.186 81.8994 li
172.234 86.3154 li
169.888 86.3301 li
f
169.938 90.916 mo
169.918 89.0391 li
172.262 89.0244 li
172.259 88.6621 li
172.284 90.9014 li
169.938 90.916 li
f
169.913 88.624 mo
169.892 86.7441 li
172.239 86.7305 li
172.259 88.6104 li
169.913 88.624 li
f
169.319 103.893 mo
168.7 103.893 168.199 103.526 168.193 103.069 cv
168.171 101.147 li
166.929 100.837 166.03 99.9814 166.019 98.958 cv
166.011 98.2334 li
168.355 98.2188 li
168.376 100.186 li
168.351 97.8057 li
166.006 97.8203 li
165.986 95.9404 li
168.33 95.9268 li
168.326 95.5117 li
165.981 95.5254 li
165.96 93.6465 li
168.305 93.6328 li
168.288 92.0808 li
168.28 91.3397 li
168.275 90.9258 li
165.93 90.9404 li
165.91 89.0615 li
168.255 89.0488 li
168.25 88.6475 li
168.669 88.7371 169.083 88.7788 169.484 88.7788 cv
169.629 88.7788 169.772 88.7733 169.914 88.7627 cv
170.017 98.21 li
172.364 98.1953 li
172.372 98.9209 li
172.382 99.8975 171.575 100.73 170.424 101.087 cv
170.447 103.057 li
170.452 103.516 169.951 103.89 169.329 103.893 cv
169.325 103.893 169.322 103.893 169.319 103.893 cv
f
165.88 86.3555 mo
165.856 84.1348 li
165.86 84.4756 li
168.206 84.4629 li
168.226 86.3408 li
165.88 86.3555 li
f
165.855 84.0615 mo
165.832 81.9199 li
165.834 82.1826 li
168.18 82.1689 li
168.201 84.0469 li
165.855 84.0615 li
f
165.856 84.1348 mo
165.855 84.0615 li
165.856 84.1348 li
f
165.83 81.7695 mo
165.737 73.3613 li
165.724 72.0684 167.135 71.0127 168.889 71.0039 cv
168.9 71.0038 168.91 71.0038 168.921 71.0038 cv
170.661 71.0038 172.079 72.0392 172.092 73.3242 cv
172.184 81.7295 li
169.837 81.7441 li
169.73 71.8574 li
169.726 71.5228 169.351 71.251 168.899 71.251 cv
168.897 71.251 168.896 71.251 168.894 71.251 cv
168.433 71.2539 168.063 71.5293 168.068 71.8673 cv
168.175 81.7549 li
165.83 81.7695 li
f
165.832 81.9199 mo
165.83 81.7695 li
165.832 81.9199 li
f
172.363 98.1631 mo
172.358 97.7813 li
170.013 97.7959 li
169.993 95.917 li
172.337 95.9033 li
172.334 95.4883 li
169.988 95.502 li
169.967 93.624 li
172.313 93.6104 li
172.312 93.5068 li
172.363 98.1631 li
f
253.306 122.551 mo
253.284 120.672 li
255.63 120.658 li
255.65 122.538 li
253.306 122.551 li
f
257.362 127.113 mo
257.342 125.234 li
259.687 125.221 li
259.685 124.958 li
259.709 127.098 li
257.362 127.113 li
f
253.355 127.137 mo
253.335 125.257 li
255.679 125.244 li
255.692 126.381 li
255.7 127.123 li
253.355 127.137 li
f
257.288 120.234 mo
257.268 118.357 li
259.613 118.343 li
259.608 117.926 li
257.263 117.941 li
257.242 116.064 li
259.587 116.05 li
259.586 115.803 li
259.634 120.219 li
257.288 120.234 li
f
257.338 124.82 mo
257.317 122.943 li
259.662 122.928 li
259.659 122.566 li
259.684 124.805 li
257.338 124.82 li
f
257.313 122.528 mo
257.292 120.648 li
259.639 120.634 li
259.659 122.514 li
257.313 122.528 li
f
256.719 137.796 mo
256.1 137.796 255.599 137.43 255.593 136.973 cv
255.571 135.051 li
254.329 134.741 253.43 133.885 253.419 132.862 cv
253.411 132.137 li
255.755 132.123 li
255.776 134.09 li
255.751 131.71 li
253.406 131.724 li
253.386 129.844 li
255.729 129.831 li
255.726 129.415 li
253.381 129.429 li
253.36 127.55 li
255.705 127.537 li
255.692 126.381 li
255.679 125.244 li
255.675 124.83 li
253.33 124.844 li
253.31 122.965 li
255.655 122.953 li
255.65 122.551 li
256.069 122.641 256.483 122.683 256.884 122.683 cv
257.029 122.683 257.172 122.677 257.314 122.667 cv
257.417 132.114 li
259.764 132.099 li
259.771 132.825 li
259.782 133.801 258.975 134.634 257.824 134.991 cv
257.847 136.96 li
257.852 137.419 257.351 137.794 256.728 137.796 cv
256.725 137.796 256.722 137.796 256.719 137.796 cv
f
253.28 120.259 mo
253.256 118.039 li
253.26 118.379 li
255.606 118.367 li
255.626 120.245 li
253.28 120.259 li
f
253.255 117.965 mo
253.231 115.824 li
253.234 116.086 li
255.58 116.073 li
255.601 117.951 li
253.255 117.965 li
f
253.256 118.039 mo
253.255 117.965 li
253.256 118.039 li
f
253.229 115.673 mo
253.137 107.265 li
253.124 105.972 254.535 104.916 256.289 104.908 cv
256.3 104.908 256.31 104.908 256.321 104.908 cv
258.061 104.908 259.479 105.943 259.492 107.228 cv
259.584 115.633 li
257.237 115.648 li
257.13 105.761 li
257.126 105.426 256.751 105.155 256.299 105.155 cv
256.297 105.155 256.295 105.155 256.294 105.155 cv
255.833 105.158 255.463 105.433 255.468 105.771 cv
255.575 115.659 li
253.229 115.673 li
f
253.231 115.824 mo
253.229 115.673 li
253.231 115.824 li
f
259.763 132.067 mo
259.758 131.685 li
257.413 131.7 li
257.393 129.821 li
259.737 129.807 li
259.733 129.392 li
257.388 129.406 li
257.367 127.528 li
259.713 127.514 li
259.712 127.411 li
259.763 132.067 li
f
450 150 mo
450 300 li
0 300 li
0 150 li
450 150 li
.419608 .835294 1 rgb
f
126.304 237.178 mo
151.216 237.178 li
151.216 236.678 li
125.804 236.678 li
125.804 282.316 li
65.228 282.316 li
65.228 282.816 li
126.304 282.816 li
126.304 237.178 li
284.967 240.627 mo
235.297 240.627 li
235.297 176.545 li
156.611 176.545 li
156.611 233.814 li
157.111 233.814 li
157.111 177.045 li
234.797 177.045 li
234.797 241.127 li
284.967 241.127 li
284.967 240.627 li
308.969 259.997 mo
294.009 259.997 li
294.009 259.497 li
308.469 259.497 li
308.469 234.17 li
345.212 234.17 li
345.212 212.867 li
380.987 212.867 li
380.987 213.367 li
345.712 213.367 li
345.712 234.67 li
308.969 234.67 li
308.969 259.997 li
0 .458824 .560784 rgb
f
27.8188 175.602 mo
26.1577 175.602 li
26.1577 171.357 li
21.7075 171.357 li
21.7075 175.602 li
20.0464 175.602 li
20.0464 165.649 li
21.7075 165.649 li
21.7075 170.024 li
26.1577 170.024 li
26.1577 165.649 li
27.8188 165.649 li
27.8188 175.602 li
cp
0 .45098 .666667 rgb
f
32.6997 169.402 mo
32.2666 169.402 31.9204 169.558 31.6606 169.87 cv
31.4009 170.182 31.2393 170.589 31.1753 171.09 cv
31.189 171.124 li
34.0806 171.124 li
34.0806 170.995 li
34.0806 170.52 33.9702 170.137 33.749 169.843 cv
33.5278 169.549 33.1782 169.402 32.6997 169.402 cv
cp
32.8774 175.746 mo
31.7974 175.746 30.9531 175.405 30.3447 174.724 cv
29.7363 174.042 29.4321 173.159 29.4321 172.075 cv
29.4321 171.801 li
29.4321 170.717 29.7363 169.822 30.3447 169.118 cv
30.9531 168.414 31.7383 168.064 32.6997 168.069 cv
33.6934 168.069 34.4453 168.376 34.9556 168.988 cv
35.4658 169.601 35.7212 170.42 35.7212 171.446 cv
35.7212 172.341 li
31.1479 172.341 li
31.1343 172.376 li
31.1523 172.981 31.312 173.474 31.6128 173.852 cv
31.9136 174.23 32.3672 174.419 32.9731 174.419 cv
33.4243 174.419 33.8149 174.365 34.1455 174.255 cv
34.4761 174.146 34.7822 173.989 35.0649 173.784 cv
35.605 174.871 li
35.3223 175.117 34.9487 175.324 34.4839 175.493 cv
34.019 175.661 33.4834 175.746 32.8774 175.746 cv
cp
f
39.4946 174.413 mo
39.9092 174.413 40.2842 174.308 40.6191 174.098 cv
40.9541 173.889 41.1763 173.649 41.2856 173.38 cv
41.2856 172.287 li
39.9663 172.287 li
39.4834 172.287 39.105 172.406 38.8315 172.645 cv
38.5581 172.885 38.4214 173.166 38.4214 173.49 cv
38.4214 173.773 38.5137 173.997 38.6982 174.163 cv
38.8828 174.33 39.1484 174.413 39.4946 174.413 cv
cp
41.5249 175.602 mo
41.4658 175.415 41.4165 175.233 41.3779 175.055 cv
41.3394 174.877 41.313 174.7 41.2993 174.522 cv
41.0762 174.868 40.7773 175.159 40.4038 175.394 cv
40.0303 175.628 39.6133 175.746 39.1528 175.746 cv
38.3828 175.746 37.7915 175.547 37.3789 175.151 cv
36.9663 174.754 36.7603 174.21 36.7603 173.517 cv
36.7603 172.802 37.043 172.245 37.6079 171.846 cv
38.1729 171.447 38.9683 171.248 39.9937 171.248 cv
41.2856 171.248 li
41.2856 170.598 li
41.2856 170.211 41.1729 169.908 40.9473 169.689 cv
40.7217 169.47 40.3945 169.361 39.9663 169.361 cv
39.5879 169.361 39.2871 169.451 39.064 169.631 cv
38.8408 169.811 38.729 170.044 38.729 170.331 cv
37.1294 170.338 li
37.1226 170.297 li
37.0908 169.714 37.3516 169.197 37.9053 168.746 cv
38.459 168.294 39.1802 168.069 40.0688 168.069 cv
40.9302 168.069 41.625 168.288 42.1538 168.725 cv
42.6826 169.163 42.9468 169.792 42.9468 170.612 cv
42.9468 173.9 li
42.9468 174.205 42.9673 174.498 43.0083 174.778 cv
43.0493 175.059 43.1152 175.333 43.2065 175.602 cv
41.5249 175.602 li
cp
f
46.4536 175.602 mo
44.7925 175.602 li
44.7925 164.938 li
46.4536 164.938 li
46.4536 175.602 li
cp
f
50.439 166.408 mo
50.439 168.206 li
51.7651 168.206 li
51.7651 169.436 li
50.439 169.436 li
50.439 173.524 li
50.439 173.829 50.5049 174.047 50.6372 174.177 cv
50.7695 174.307 50.9448 174.372 51.1636 174.372 cv
51.2549 174.372 51.3438 174.364 51.4302 174.348 cv
51.6763 174.283 li
51.854 175.499 li
51.7129 175.577 51.5454 175.637 51.3516 175.681 cv
51.1577 175.724 50.9561 175.746 50.7466 175.746 cv
50.1357 175.746 49.6563 175.567 49.3076 175.209 cv
48.959 174.851 48.7847 174.29 48.7847 173.524 cv
48.7847 169.436 li
47.6567 169.436 li
47.6567 168.206 li
48.7847 168.206 li
48.7847 166.408 li
50.439 166.408 li
cp
f
54.7456 169.163 mo
54.9917 168.816 55.2915 168.547 55.6445 168.356 cv
55.9976 168.165 56.3887 168.069 56.8169 168.069 cv
57.6006 168.069 58.2124 168.316 58.6523 168.811 cv
59.0923 169.305 59.312 170.067 59.312 171.097 cv
59.312 175.602 li
57.6509 175.602 li
57.6509 171.083 li
57.6509 170.505 57.5381 170.085 57.3125 169.822 cv
57.0869 169.56 56.751 169.429 56.3042 169.429 cv
55.9487 169.429 55.6411 169.492 55.3813 169.617 cv
55.1216 169.743 54.9097 169.917 54.7456 170.14 cv
54.7456 175.602 li
53.0845 175.602 li
53.0845 164.938 li
54.7456 164.938 li
54.7456 169.163 li
cp
f
64.0493 174.419 mo
64.4277 174.419 64.7476 174.301 65.0098 174.064 cv
65.272 173.827 65.4028 173.526 65.4028 173.162 cv
66.9067 173.162 li
66.9204 173.203 li
66.9385 173.895 66.6641 174.492 66.0967 174.994 cv
65.5293 175.495 64.8467 175.746 64.0493 175.746 cv
62.9829 175.746 62.1602 175.394 61.5815 174.689 cv
61.0029 173.985 60.7134 173.098 60.7134 172.027 cv
60.7134 171.788 li
60.7134 170.721 61.0029 169.835 61.5815 169.128 cv
62.1602 168.422 62.9805 168.069 64.0425 168.069 cv
64.9038 168.069 65.6035 168.328 66.1411 168.845 cv
66.6787 169.362 66.9385 170.02 66.9204 170.817 cv
66.9067 170.858 li
65.4028 170.858 li
65.4028 170.452 65.2773 170.108 65.0269 169.826 cv
64.7764 169.543 64.4482 169.402 64.0425 169.402 cv
63.4502 169.402 63.0239 169.631 62.7642 170.089 cv
62.5044 170.547 62.3745 171.113 62.3745 171.788 cv
62.3745 172.027 li
62.3745 172.715 62.5034 173.286 62.7607 173.739 cv
63.0181 174.193 63.4478 174.419 64.0493 174.419 cv
cp
f
70.7417 174.413 mo
71.1563 174.413 71.5313 174.308 71.8662 174.098 cv
72.2012 173.889 72.4233 173.649 72.5327 173.38 cv
72.5327 172.287 li
71.2134 172.287 li
70.7305 172.287 70.3521 172.406 70.0786 172.645 cv
69.8052 172.885 69.6685 173.166 69.6685 173.49 cv
69.6685 173.773 69.7607 173.997 69.9453 174.163 cv
70.1299 174.33 70.3955 174.413 70.7417 174.413 cv
cp
72.772 175.602 mo
72.7129 175.415 72.6636 175.233 72.625 175.055 cv
72.5864 174.877 72.5601 174.7 72.5464 174.522 cv
72.3232 174.868 72.0244 175.159 71.6509 175.394 cv
71.2773 175.628 70.8604 175.746 70.3999 175.746 cv
69.6299 175.746 69.0386 175.547 68.626 175.151 cv
68.2134 174.754 68.0073 174.21 68.0073 173.517 cv
68.0073 172.802 68.29 172.245 68.855 171.846 cv
69.4199 171.447 70.2153 171.248 71.2407 171.248 cv
72.5327 171.248 li
72.5327 170.598 li
72.5327 170.211 72.4199 169.908 72.1943 169.689 cv
71.9688 169.47 71.6416 169.361 71.2134 169.361 cv
70.835 169.361 70.5342 169.451 70.311 169.631 cv
70.0879 169.811 69.9761 170.044 69.9761 170.331 cv
68.3765 170.338 li
68.3696 170.297 li
68.3379 169.714 68.5986 169.197 69.1523 168.746 cv
69.7061 168.294 70.4272 168.069 71.3159 168.069 cv
72.1772 168.069 72.8721 168.288 73.4009 168.725 cv
73.9297 169.163 74.1938 169.792 74.1938 170.612 cv
74.1938 173.9 li
74.1938 174.205 74.2144 174.498 74.2554 174.778 cv
74.2964 175.059 74.3623 175.333 74.4536 175.602 cv
72.772 175.602 li
cp
f
79.6147 169.703 mo
78.9038 169.675 li
78.5801 169.675 78.3101 169.744 78.0938 169.88 cv
77.8774 170.017 77.71 170.211 77.5913 170.461 cv
77.5913 175.602 li
75.9302 175.602 li
75.9302 168.206 li
77.4478 168.206 li
77.5571 169.279 li
77.7441 168.9 77.9844 168.605 78.2783 168.39 cv
78.5723 168.176 78.9106 168.069 79.2935 168.069 cv
79.3936 168.069 79.4873 168.077 79.5737 168.093 cv
79.813 168.151 li
79.6147 169.703 li
cp
f
83.6753 169.402 mo
83.2422 169.402 82.896 169.558 82.6362 169.87 cv
82.3765 170.182 82.2148 170.589 82.1509 171.09 cv
82.1646 171.124 li
85.0562 171.124 li
85.0562 170.995 li
85.0562 170.52 84.9458 170.137 84.7246 169.843 cv
84.5034 169.549 84.1538 169.402 83.6753 169.402 cv
cp
83.853 175.746 mo
82.7729 175.746 81.9287 175.405 81.3203 174.724 cv
80.7119 174.042 80.4077 173.159 80.4077 172.075 cv
80.4077 171.801 li
80.4077 170.717 80.7119 169.822 81.3203 169.118 cv
81.9287 168.414 82.7139 168.064 83.6753 168.069 cv
84.6689 168.069 85.4209 168.376 85.9312 168.988 cv
86.4414 169.601 86.6968 170.42 86.6968 171.446 cv
86.6968 172.341 li
82.1235 172.341 li
82.1099 172.376 li
82.1279 172.981 82.2876 173.474 82.5884 173.852 cv
82.8892 174.23 83.3428 174.419 83.9487 174.419 cv
84.3999 174.419 84.7905 174.365 85.1211 174.255 cv
85.4517 174.146 85.7578 173.989 86.0405 173.784 cv
86.5806 174.871 li
86.2979 175.117 85.9243 175.324 85.4595 175.493 cv
84.9946 175.661 84.459 175.746 83.853 175.746 cv
cp
f
431.455 193.407 mo
427.213 193.407 li
427.213 184.073 li
417.879 184.073 li
417.879 179.831 li
427.213 179.831 li
427.213 170.497 li
431.455 170.497 li
431.455 179.831 li
440.789 179.831 li
440.789 184.073 li
431.455 184.073 li
431.455 193.407 li
.196078 .643137 .870588 rgb
f
429.333 283.584 mo
425.176 283.584 421.807 280.214 421.807 276.057 cv
421.807 276.057 li
421.807 276.511 425.176 276.879 429.333 276.879 cv
433.49 276.879 436.86 276.511 436.86 276.057 cv
436.86 276.057 li
436.86 280.214 433.49 283.584 429.333 283.584 cv
436.86 276.057 mo
436.86 276.057 li
436.86 276.057 li
436.86 276.057 li
436.86 276.057 mo
436.86 275.603 433.49 275.234 429.333 275.234 cv
425.176 275.234 421.807 275.603 421.807 276.057 cv
421.807 271.899 425.176 268.529 429.333 268.529 cv
433.49 268.529 436.86 271.899 436.86 276.057 cv
f
23.2196 281.377 mo
21.2934 281.377 19.3667 280.642 17.897 279.172 cv
14.957 276.232 14.9565 271.467 17.8961 268.527 cv
19.366 267.058 21.2923 266.323 23.2187 266.323 cv
25.1451 266.323 27.0716 267.058 28.5415 268.527 cv
28.5199 268.506 28.4878 268.495 28.4458 268.495 cv
27.8633 268.495 25.3794 270.526 22.6372 273.269 cv
19.6978 276.208 17.5757 278.851 17.897 279.172 cv
17.9185 279.194 17.9506 279.204 17.9926 279.204 cv
18.5746 279.204 21.0582 277.173 23.8003 274.431 cv
26.7398 271.491 28.8623 268.848 28.5415 268.527 cv
31.481 271.467 31.481 276.232 28.5415 279.172 cv
27.0716 280.642 25.1458 281.377 23.2196 281.377 cv
f
300.28 300 mo
289.64 300 li
279 300 li
300.28 300 li
0 .168627 .243137 rgb
f
300.28 300 mo
279 300 li
279 254.39 li
281.78 254.39 li
281.693 254.185 281.606 253.975 281.521 253.76 cv
291.935 253.698 li
295.026 253.68 293.544 248.503 295.269 246.189 cv
297.481 243.224 298.204 238.371 297.488 237.323 cv
296.56 235.965 295.687 230.496 294.618 228.623 cv
305.192 217.923 li
305.833 217.276 306.119 216.411 306.054 215.57 cv
308.17 217.66 li
309.35 218.83 309.36 220.74 308.19 221.92 cv
300.09 230.12 li
301.73 232.11 li
302.19 232.67 302.36 233.37 302.26 234.03 cv
302.17 234.57 li
300.66 243.93 li
300.65 244.03 li
300.62 244.36 li
300.59 244.7 300.52 245.03 300.4 245.34 cv
300.4 245.34 li
300.39 245.38 li
300.01 247.01 299.3 248.8 298.27 250.19 cv
297.47 251.24 297.36 252.9 297.16 254.39 cv
300.28 254.39 li
300.28 259.497 li
294.009 259.497 li
294.009 259.997 li
300.28 259.997 li
300.28 300 li
273.859 255.391 mo
273.093 255.391 272.326 255.101 271.74 254.52 cv
259.45 242.38 li
258.183 241.127 li
259.233 241.127 li
268.741 250.523 li
269.328 251.103 270.093 251.392 270.858 251.392 cv
271.635 251.392 272.412 251.093 273.001 250.497 cv
277.306 246.141 li
277.872 248.093 278.509 249.878 279.172 251.284 cv
276 254.5 li
275.411 255.094 274.635 255.391 273.859 255.391 cv
258.727 240.627 mo
257.677 240.627 li
247.17 230.24 li
246.629 229.708 246.332 229.024 246.279 228.324 cv
256.454 238.381 li
257.854 236.964 li
256.454 238.381 li
258.727 240.627 li
.321569 .635294 .760784 rgb
f
300.28 259.997 mo
294.009 259.997 li
294.009 259.497 li
300.28 259.497 li
300.28 259.997 li
259.233 241.127 mo
258.183 241.127 li
257.677 240.627 li
258.727 240.627 li
259.233 241.127 li
0 .34902 .427451 rgb
f
163.43 300 mo
152.79 300 li
142.15 300 li
163.43 300 li
0 .168627 .243137 rgb
f
163.43 300 mo
142.15 300 li
142.15 269.13 li
144.55 269.13 li
144.6 265.37 li
143.85 264.12 143.69 262.23 143.85 259.73 cv
144.09 255.96 147.72 245.14 147.72 245.14 cv
147.72 245.14 147.89 244.28 148.53 243.28 cv
148.53 243.28 li
148.63 242.07 149.36 240.94 150.54 240.38 cv
150.74 240.3 li
151.03 240.18 li
151.44 239.91 151.9 239.71 152.41 239.63 cv
152.41 239.63 li
161.73 235.9 li
161.91 235.83 li
162.274 235.684 162.65 235.615 163.02 235.615 cv
163.463 235.615 163.897 235.715 164.29 235.9 cv
171.33 239.27 li
172.72 238.56 li
173.22 238.3 li
175.49 237.14 li
175.99 236.88 li
178.26 235.72 li
178.76 235.46 li
181.03 234.3 li
181.53 234.04 li
182.41 233.59 li
182.87 233.35 183.37 233.24 183.85 233.24 cv
184.61 233.24 185.35 233.51 185.92 234.01 cv
185.92 234.01 li
188.29 232.8 li
188.45 232.71 188.63 232.67 188.8 232.67 cv
189.21 232.67 189.6 232.9 189.8 233.29 cv
190.09 233.84 189.87 234.52 189.32 234.8 cv
187.01 235.98 li
187.01 235.98 li
187.19 237.29 186.55 238.62 185.31 239.25 cv
184.43 239.7 li
183.93 239.96 li
181.66 241.12 li
181.16 241.38 li
178.89 242.54 li
178.39 242.8 li
177.71 243.14 li
177.7 243.15 li
177.68 243.19 li
177.66 243.24 li
177.63 243.32 li
177.58 243.43 177.53 243.53 177.46 243.64 cv
177.39 243.78 177.3 243.91 177.19 244.04 cv
177.03 244.23 176.84 244.41 176.65 244.55 cv
176.47 244.69 li
176.44 244.72 li
176.44 244.72 li
176.36 244.81 176.26 244.91 176.15 245.02 cv
175.81 245.37 175.38 245.85 174.89 246.44 cv
174.89 246.44 li
176.15 247.28 176.52 248.97 175.72 250.27 cv
175.185 251.13 174.257 251.604 173.309 251.604 cv
172.857 251.604 172.4 251.496 171.98 251.27 cv
171.59 251.06 li
171.5 251.21 171.41 251.36 171.32 251.51 cv
171.32 251.51 li
171.32 251.51 li
172.06 252.28 172.17 253.5 171.52 254.39 cv
171.078 255.012 170.389 255.339 169.693 255.339 cv
169.538 255.339 169.383 255.323 169.23 255.29 cv
169.23 255.29 li
168.91 256.01 168.63 256.74 168.34 257.43 cv
168.07 258.08 167.8 258.69 167.52 259.26 cv
167.28 259.85 166.92 260.28 166.62 260.74 cv
165.4 262.49 164.47 263.56 164.47 263.56 cv
163.53 264.65 162.29 265.32 160.98 265.56 cv
160.98 265.56 li
160.89 265.67 160.79 265.78 160.7 265.89 cv
160.7 265.89 li
160.65 269.13 li
163.43 269.13 li
163.43 300 li
.321569 .635294 .760784 rgb
f
71.8299 300 mo
61.2 300 li
50.5501 300 li
71.8299 300 li
0 .168627 .243137 rgb
f
71.8299 300 mo
50.5501 300 li
50.5501 273.36 li
53.26 273.36 li
53.56 269.81 li
53.29 269.38 53.1 268.88 52.93 268.34 cv
52.93 268.34 li
52.27 268.13 51.69 267.82 51.32 267.49 cv
50.5269 266.791 49.7167 265.438 48.9913 263.951 cv
49.6724 264.322 50.5838 264.602 51.4973 264.602 cv
52.3264 264.602 53.1572 264.372 53.8192 263.771 cv
53.9784 263.968 54.1561 264.155 54.3481 264.323 cv
55.1893 265.056 56.2283 265.416 57.2626 265.416 cv
58.5003 265.416 59.7314 264.901 60.6089 263.895 cv
62.2197 262.048 62.0283 259.245 60.1816 257.637 cv
54.4819 252.666 li
55.7573 249.484 li
56.1104 248.601 55.8604 247.554 55.0752 246.938 cv
54.6722 246.622 54.1934 246.469 53.7179 246.469 cv
53.067 246.469 52.4227 246.757 51.9893 247.309 cv
51.8251 247.518 li
51.7651 247.401 51.694 247.289 51.6113 247.182 cv
51.1786 246.62 50.5269 246.325 49.8682 246.325 cv
49.3995 246.325 48.9273 246.475 48.5278 246.783 cv
44.0386 250.242 li
43.8698 250.373 43.7239 250.516 43.6008 250.67 cv
0 250.67 li
0 240.02 li
48.07 240.02 li
0 240.02 li
0 229.39 li
49.44 229.39 li
49.44 232.46 li
59.34 232.31 li
59.34 232.31 li
59.7 232.01 60.1 231.77 60.52 231.6 cv
60.54 231.59 li
60.54 231.59 60.61 231.56 60.74 231.51 cv
60.87 231.45 61.0699 231.36 61.33 231.25 cv
61.81 231.04 62.5 230.74 63.32 230.39 cv
64.14 230.03 65.1 229.62 66.1199 229.18 cv
66.6401 228.97 67.17 228.73 67.73 228.52 cv
68.24 228.33 68.76 228.13 69.28 227.93 cv
71.34 227.14 73.3999 226.3 74.87 225.6 cv
76.35 224.91 77.31 224.41 77.31 224.41 cv
77.32 224.4 li
77.6367 224.234 77.9753 224.156 78.3088 224.156 cv
79.0809 224.156 79.8259 224.577 80.21 225.31 cv
80.75 226.33 80.37 227.59 79.37 228.16 cv
79.37 228.16 78.4 228.71 76.99 229.59 cv
76.59 229.84 76.1499 230.12 75.68 230.42 cv
75.68 230.42 li
75.68 230.42 li
76.18 230.35 76.61 230.27 76.8799 230.26 cv
76.9 230.33 li
76.9 230.33 li
83.23 229.32 li
83.5 229.28 li
83.62 229.28 li
91.39 229.27 li
92.54 229.27 93.48 230.2 93.48 231.36 cv
93.48 232.48 92.59 233.4 91.47 233.45 cv
83.92 233.75 li
79.19 234.87 li
79.2499 235.02 79.31 235.17 79.35 235.33 cv
79.35 235.33 li
86.24 235.27 li
86.39 235.27 li
86.4901 235.27 li
94.3299 236.08 li
95.44 236.19 96.25 237.19 96.13 238.3 cv
96.0227 239.334 95.1441 240.112 94.1169 240.111 cv
94.0913 240.111 94.0657 240.111 94.04 240.11 cv
86.33 239.81 li
79.39 240.31 li
79.37 240.45 79.34 240.57 79.31 240.7 cv
79.31 240.7 li
90.69 242.59 li
91.78 242.77 92.52 243.8 92.34 244.89 cv
92.174 245.868 91.327 246.565 90.3723 246.565 cv
90.2922 246.565 90.2113 246.56 90.13 246.55 cv
78.19 245.12 li
78.16 245.23 78.13 245.34 78.09 245.45 cv
78.09 245.45 li
85.91 247.85 li
86.76 248.12 87.24 249.02 86.9799 249.88 cv
86.7673 250.578 86.1203 251.022 85.4269 251.022 cv
85.3054 251.022 85.1824 251.008 85.06 250.98 cv
75.74 248.8 li
71.52 247.92 li
67.43 248.34 li
66.91 251.78 li
67 251.88 li
67 251.88 li
67.34 250.19 li
67.5504 249.112 68.4981 248.364 69.5504 248.364 cv
69.6988 248.364 69.8493 248.379 70 248.41 cv
71.23 248.65 72.03 249.84 71.78 251.07 cv
71.21 253.93 li
70.57 264.79 li
70.19 267.01 69.86 268.9 69.06 270.11 cv
69.2899 273.36 li
71.8299 273.36 li
71.8299 282.316 li
65.228 282.316 li
65.228 282.816 li
71.8299 282.816 li
71.8299 300 li
55.76 247.56 mo
56.31 250.51 li
56.4701 250.48 li
56.0899 247.55 li
55.76 247.56 li
61.22 248.04 mo
61.63 249.78 li
61.8699 249.71 li
62.09 248.26 li
61.77 248.2 61.48 248.13 61.22 248.04 cv
.321569 .635294 .760784 rgb
f
71.8299 282.816 mo
65.228 282.816 li
65.228 282.316 li
71.8299 282.316 li
71.8299 282.816 li
0 .34902 .427451 rgb
f
405.89 266.94 mo
386.89 266.94 li
386.89 239.5 li
386.89 266.94 li
367.88 266.94 li
365.51 266.94 363.59 265.03 363.59 262.66 cv
363.59 239.1 li
363.59 236.73 365.51 234.82 367.88 234.82 cv
372.64 234.82 li
372.64 224.49 li
375.65 224.49 li
375.69 224.36 li
375.68 224.49 li
375.82 224.49 li
376.31 223.12 li
376.625 222.23 377.468 221.675 378.364 221.675 cv
378.605 221.675 378.85 221.715 379.09 221.8 cv
379.86 222.07 380.39 222.74 380.51 223.5 cv
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.51 223.5 li
380.49 223.59 380.47 223.68 380.44 223.77 cv
380.21 224.49 li
380.44 224.49 li
380.41 224.58 li
379.64 226.77 li
379.82 226.81 li
380.65 224.49 li
380.44 224.49 li
380.54 224.16 380.56 223.82 380.51 223.5 cv
380.7 222.45 380.07 221.37 379.01 221.05 cv
378.795 220.982 378.576 220.95 378.361 220.95 cv
377.436 220.95 376.572 221.545 376.28 222.47 cv
375.69 224.36 li
376.683 213.367 li
380.987 213.367 li
380.987 212.867 li
376.756 212.867 li
376.992 211.472 377.366 210.335 377.93 209.48 cv
394.63 209.48 li
394.63 208.9 li
395.59 209.89 396.26 211.29 396.77 212.7 cv
395.973 211.984 394.943 211.597 393.895 211.597 cv
393.142 211.597 392.38 211.798 391.69 212.22 cv
390.12 213.17 389.38 214.96 389.71 216.66 cv
389.43 217.42 389.4 218.27 389.69 219.09 cv
391.02 222.88 li
390.7 222.39 390.2 222.02 389.58 221.85 cv
389.361 221.792 389.141 221.764 388.924 221.764 cv
387.835 221.764 386.835 222.466 386.51 223.55 cv
386.523 223.652 386.53 223.755 386.53 223.858 cv
386.53 223.858 li
386.53 223.858 li
386.53 223.858 li
386.53 223.858 li
386.53 223.858 li
386.53 223.858 li
386.53 224.069 386.504 224.282 386.45 224.49 cv
386.73 224.49 li
386.88 224.05 li
387.243 223.009 388.221 222.354 389.271 222.354 cv
389.552 222.354 389.839 222.401 390.12 222.5 cv
390.51 222.64 390.85 222.86 391.11 223.14 cv
391.02 222.88 li
391.19 223.15 li
391.27 223.33 li
391.34 223.41 li
391.72 223.11 392.17 222.88 392.66 222.75 cv
392.83 222.71 li
393.02 222.68 li
392.81 222.33 li
392.47 221.77 li
390.25 218.1 li
389.97 217.64 389.79 217.16 389.71 216.66 cv
389.71 216.66 li
389.71 216.66 li
389.71 216.66 li
389.71 216.66 li
390.06 215.67 390.84 214.84 391.91 214.46 cv
392.307 214.321 392.712 214.256 393.11 214.256 cv
394.61 214.256 396.019 215.189 396.54 216.69 cv
398.36 221.85 li
398.22 219 397.56 215.1 396.99 213.35 cv
396.92 213.13 396.84 212.91 396.77 212.7 cv
397.08 212.97 397.35 213.29 397.57 213.66 cv
397.83 214.09 398 214.56 398.1 215.02 cv
399.64 222.55 li
399.84 223.51 li
399.91 223.84 399.9 224.18 399.83 224.49 cv
399.83 224.49 li
401.13 224.49 li
401.13 234.82 li
405.89 234.82 li
408.26 234.82 410.18 236.73 410.18 239.1 cv
410.18 262.66 li
410.18 265.03 408.26 266.94 405.89 266.94 cv
394.91 234.82 mo
397.5 234.82 li
397.5 228.12 li
397.22 228.12 li
397.2 231.88 li
397.19 233.3 396.22 234.49 394.91 234.82 cv
386.89 234.82 mo
393.38 234.82 li
392.25 234.54 391.38 233.63 391.15 232.49 cv
390.57 229.7 li
390.3 230.66 li
390.25 230.92 li
390.21 231.14 390.14 231.35 390.05 231.55 cv
390.05 231.55 li
389.78 232.52 li
389.431 233.742 388.322 234.542 387.108 234.542 cv
386.861 234.542 386.61 234.509 386.36 234.44 cv
385.137 234.09 384.336 232.973 384.338 231.76 cv
384.338 231.76 li
384.338 231.76 li
384.338 231.76 li
384.338 231.76 li
384.338 231.76 li
384.338 231.76 li
384.338 231.516 384.371 231.267 384.44 231.02 cv
384.5 230.85 li
384.79 230.03 li
384.79 230.03 li
384.81 229.88 li
384.85 229.68 li
385.22 228.31 li
385.1 228.3 384.99 228.29 384.88 228.26 cv
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.88 228.26 li
384.94 228.12 li
384.75 228.12 li
384.71 228.24 li
384.88 228.26 li
383.6 231.29 li
383.19 232.26 382.25 232.84 381.26 232.84 cv
380.92 232.84 380.59 232.77 380.27 232.64 cv
379.295 232.228 378.714 231.286 378.716 230.297 cv
378.716 230.297 li
378.716 230.297 li
378.716 230.297 li
378.716 230.297 li
378.716 230.297 li
378.716 230.297 li
378.717 229.968 378.783 229.633 378.92 229.31 cv
378.96 229.21 li
378.99 229.1 li
379.34 228.12 li
379.16 228.12 li
379.06 228.41 li
378.74 229.3 377.9 229.86 377 229.86 cv
376.76 229.86 376.52 229.82 376.27 229.73 cv
376.27 234.82 li
386.89 234.82 li
390.05 231.55 mo
390.05 231.55 li
390.05 231.55 mo
390.05 231.55 li
390.05 231.55 mo
390.05 231.55 li
385.22 228.31 mo
385.38 228.33 li
385.46 228.12 li
385.27 228.12 li
385.84 226 li
384.94 228.12 li
385.27 228.12 li
385.22 228.31 li
386.06 224.49 mo
386.24 224.49 li
386.47 223.65 li
386.51 223.55 li
386.49 223.37 386.45 223.19 386.38 223.02 cv
386.383 223.072 386.385 223.125 386.385 223.178 cv
386.385 223.178 li
386.385 223.178 li
386.385 223.178 li
386.385 223.178 li
386.385 223.178 li
386.385 223.178 li
386.385 223.448 386.34 223.723 386.24 223.99 cv
386.06 224.49 li
380.65 224.49 mo
380.96 224.49 li
381.65 222.86 li
382.055 221.893 383 221.307 383.991 221.307 cv
384.322 221.307 384.658 221.373 384.98 221.51 cv
385.67 221.8 386.16 222.36 386.38 223.02 cv
386.35 222.02 385.72 221.1 384.72 220.73 cv
384.437 220.629 384.147 220.581 383.862 220.581 cv
382.819 220.581 381.837 221.223 381.46 222.26 cv
380.65 224.49 li
.321569 .635294 .760784 rgb
f
380.987 213.367 mo
376.683 213.367 li
376.69 213.29 li
376.711 213.147 376.733 213.006 376.756 212.867 cv
380.987 212.867 li
380.987 213.367 li
0 .34902 .427451 rgb
f
391.02 222.88 mo
391.02 222.88 li
391.02 222.88 li
377.93 209.48 mo
377.93 207.59 li
375.58 207.59 li
375.58 150 li
386.23 150 li
396.86 150 li
396.86 207.59 li
394.63 207.59 li
394.63 208.9 li
394.01 208.25 393.25 207.78 392.33 207.59 cv
392.33 207.59 li
392.33 207.59 li
380.72 207.59 li
380.72 207.59 li
379.49 207.83 378.58 208.46 377.93 209.48 cv
.321569 .635294 .760784 rgb
f
383.365 224.391 mo
388.632 220.907 391.99 222.237 394.85 221.179 cv
396.084 220.723 394.924 212.194 393.988 209.352 cv
393.052 206.507 391.568 203.482 388.361 203.482 cv
378.923 203.482 li
375.716 203.482 374.244 205.48 373.692 209.291 cv
372.389 223.68 li
375.597 220.809 378.804 224.391 383.365 224.391 cv
cp
.94902 .807843 .619608 rgb
f
381.853 225.678 mo
383.47 219.646 li
383.833 218.29 385.227 217.485 386.584 217.849 cv
387.877 218.195 388.667 219.487 388.423 220.781 cv
387.252 226.915 li
386.966 228.419 385.514 229.405 384.011 229.118 cv
382.507 228.831 381.52 227.38 381.808 225.876 cv
381.853 225.678 li
cp
.870588 .717647 .505882 rgb
f
373.273 231.868 mo
394.5 231.868 li
394.5 224.119 li
373.273 224.119 li
373.273 231.868 li
cp
398.131 235.499 mo
369.643 235.499 li
369.643 220.489 li
398.131 220.489 li
398.131 235.499 li
cp
0 0 0 rgb
f
402.895 230.817 mo
383.887 230.817 li
383.887 262.943 li
402.895 262.943 li
405.261 262.943 407.179 261.026 407.179 258.659 cv
407.179 235.101 li
407.179 232.734 405.261 230.817 402.895 230.817 cv
cp
.764706 .137255 .286275 rgb
f
364.879 230.817 mo
362.513 230.817 360.595 232.734 360.595 235.101 cv
360.595 258.659 li
360.595 261.026 362.513 262.943 364.879 262.943 cv
383.887 262.943 li
383.887 230.817 li
364.879 230.817 li
cp
.956863 .164706 .352941 rgb
f
364.951 244.697 mo
364.951 258.587 li
379.53 258.587 li
379.53 257.065 li
372.743 256.008 367.098 251.096 364.951 244.697 cv
cp
.956863 .392157 .52549 rgb
f
402.761 245.542 mo
396.871 245.542 li
396.871 239.652 li
394.194 239.652 li
394.194 245.542 li
388.305 245.542 li
388.305 248.219 li
394.194 248.219 li
394.194 254.108 li
396.871 254.108 li
396.871 248.219 li
402.761 248.219 li
402.761 245.542 li
cp
1 1 1 rgb
f
381.495 226.851 mo
383.877 220.054 li
384.342 218.73 385.792 218.032 387.117 218.496 cv
388.389 218.941 389.08 220.303 388.725 221.583 cv
386.778 228.517 li
386.364 229.989 384.835 230.849 383.361 230.436 cv
381.888 230.021 381.029 228.492 381.442 227.019 cv
381.495 226.851 li
cp
.968627 .835294 .658824 rgb
f
388.146 228.488 mo
387.008 223.034 li
386.595 221.061 387.86 219.126 389.834 218.714 cv
391.808 218.302 393.741 219.567 394.154 221.541 cv
394.206 221.791 394.23 222.06 394.23 222.306 cv
394.203 227.877 li
394.194 229.567 392.817 230.931 391.127 230.923 cv
389.657 230.915 388.435 229.871 388.146 228.488 cv
cp
f
374.93 193.318 mo
391.628 193.318 li
391.628 205.48 li
374.93 205.48 li
374.93 193.318 li
cp
.94902 .807843 .619608 rgb
f
378.38 228.51 mo
378.093 228.51 377.801 228.461 377.516 228.357 cv
376.196 227.88 375.513 226.424 375.99 225.104 cv
378.465 218.26 li
378.942 216.94 380.4 216.258 381.719 216.734 cv
383.038 217.211 383.722 218.669 383.244 219.988 cv
380.77 226.832 li
380.395 227.866 379.42 228.51 378.38 228.51 cv
cp
.870588 .717647 .505882 rgb
f
374.104 225.329 mo
373.889 225.329 373.67 225.297 373.454 225.23 cv
372.306 224.871 371.666 223.649 372.024 222.501 cv
373.282 218.475 li
373.642 217.325 374.869 216.689 376.011 217.045 cv
377.159 217.404 377.799 218.626 377.44 219.773 cv
376.183 223.8 li
375.892 224.732 375.031 225.329 374.104 225.329 cv
cp
f
378.256 228.839 mo
377.925 228.839 377.589 228.773 377.266 228.637 cv
375.974 228.089 375.37 226.598 375.917 225.306 cv
378.647 218.859 li
379.194 217.566 380.688 216.963 381.978 217.511 cv
383.27 218.058 383.874 219.549 383.327 220.842 cv
380.597 227.288 li
380.186 228.257 379.245 228.839 378.256 228.839 cv
cp
.968627 .835294 .658824 rgb
f
374.003 225.858 mo
373.761 225.858 373.516 225.818 373.274 225.732 cv
372.141 225.33 371.548 224.085 371.95 222.952 cv
373.309 219.123 li
373.71 217.988 374.955 217.396 376.09 217.798 cv
377.224 218.2 377.816 219.445 377.414 220.579 cv
376.056 224.408 li
375.739 225.301 374.899 225.858 374.003 225.858 cv
cp
f
393.54 212.686 mo
395.657 218.716 li
395.943 219.532 li
396.436 220.936 395.698 222.474 394.294 222.967 cv
394.114 223.023 li
390.355 224.055 li
388.936 224.444 387.47 223.609 387.08 222.19 cv
386.828 221.27 387.094 220.325 387.697 219.672 cv
390.35 216.815 li
388.808 221.122 li
386.69 215.091 li
386.026 213.2 387.021 211.128 388.913 210.463 cv
390.805 209.799 392.876 210.794 393.54 212.686 cv
cp
.870588 .717647 .505882 rgb
f
395.101 211.02 mo
396.643 218.553 li
396.839 219.512 li
397.082 220.702 396.364 221.869 395.225 222.216 cv
390.508 223.638 li
389.388 223.976 388.205 223.341 387.867 222.221 cv
387.6 221.333 387.945 220.406 388.656 219.891 cv
392.652 217.009 li
391.234 220.671 li
387.249 214.096 li
386.024 212.075 386.67 209.443 388.69 208.218 cv
390.712 206.993 393.343 207.639 394.568 209.66 cv
394.826 210.086 395.004 210.558 395.101 211.02 cv
cp
.94902 .807843 .619608 rgb
f
383.226 150 mo
372.582 150 li
372.582 203.59 li
383.226 203.59 li
383.226 150 li
cp
1 .501961 0 rgb
f
393.859 203.59 mo
393.859 150 li
383.226 150 li
383.226 203.59 li
393.859 203.59 li
cp
1 .682353 0 rgb
f
165.384 250.927 mo
165.384 250.927 164.231 250.162 162.501 249.015 cv
160.761 247.889 158.408 246.383 156.064 245.091 cv
155.482 244.773 154.897 244.468 154.361 244.225 cv
154.095 244.105 153.837 244 153.648 243.939 cv
153.556 243.907 153.477 243.891 153.491 243.898 cv
153.496 243.898 153.522 243.91 153.64 243.92 cv
153.728 243.922 li
153.895 243.916 li
153.97 243.909 154.224 243.875 154.408 243.799 cv
154.697 243.693 154.97 243.547 155.292 243.222 cv
155.439 243.061 155.555 242.901 155.652 242.729 cv
155.7 242.641 155.742 242.549 155.776 242.457 cv
155.801 242.388 li
155.828 242.314 155.678 242.708 155.739 242.548 cv
155.733 242.563 li
155.689 242.676 li
155.661 242.746 li
155.554 242.961 li
155.479 243.102 155.396 243.241 155.307 243.373 cv
155.229 243.485 155.172 243.553 155.101 243.643 cv
154.96 243.818 154.824 243.95 154.684 244.081 cv
154.121 244.588 153.613 244.842 153.169 245.041 cv
152.277 245.422 151.566 245.566 150.921 245.688 cv
149.648 245.905 148.673 245.94 147.975 245.962 cv
147.281 245.979 146.879 245.962 146.837 245.959 cv
145.3 245.856 144.137 244.527 144.24 242.99 cv
144.343 241.452 145.672 240.29 147.21 240.393 cv
147.167 240.389 147.466 240.423 148.001 240.445 cv
148.529 240.468 149.315 240.48 150.127 240.396 cv
150.521 240.356 150.938 240.276 151.165 240.2 cv
151.276 240.17 151.326 240.131 151.237 240.216 cv
151.153 240.314 li
151.098 240.396 li
150.979 240.604 li
150.936 240.716 li
150.956 240.674 li
151.007 240.564 li
151.014 240.55 li
151.077 240.384 150.929 240.774 150.958 240.696 cv
150.99 240.613 li
151.034 240.502 151.085 240.393 151.142 240.287 cv
151.254 240.075 151.392 239.881 151.572 239.695 cv
151.947 239.305 152.299 239.126 152.66 238.985 cv
152.925 238.891 153.257 238.828 153.415 238.821 cv
153.511 238.814 153.619 238.808 153.706 238.808 cv
153.918 238.815 li
154.202 238.833 154.393 238.872 154.56 238.909 cv
154.9 238.986 155.144 239.071 155.369 239.156 cv
155.817 239.326 156.186 239.5 156.544 239.678 cv
157.252 240.034 157.897 240.406 158.534 240.786 cv
161.052 242.305 163.37 243.924 165.12 245.151 cv
166.853 246.399 168.009 247.231 168.009 247.231 cv
169.024 247.963 169.255 249.379 168.523 250.395 cv
167.811 251.385 166.445 251.629 165.436 250.961 cv
165.384 250.927 li
cp
.85098 .721569 .552941 rgb
f
163.472 242.153 mo
155.778 240.698 li
157.233 240.659 li
149.727 242.971 li
148.008 243.5 146.186 242.536 145.656 240.817 cv
145.127 239.099 146.091 237.276 147.81 236.747 cv
147.992 236.697 li
155.621 234.825 li
155.792 234.783 li
156.225 234.677 156.671 234.686 157.076 234.786 cv
164.672 236.689 li
166.171 237.064 167.082 238.584 166.707 240.083 cv
166.346 241.526 164.915 242.424 163.472 242.153 cv
cp
f
150.106 235.578 mo
160.372 235.869 li
160.585 235.876 li
161.096 235.89 161.58 236.047 161.986 236.296 cv
171.804 242.378 li
173.131 243.2 173.54 244.942 172.718 246.27 cv
171.929 247.544 170.284 247.968 168.98 247.273 cv
158.801 241.815 li
160.415 242.242 li
150.154 242.672 li
148.196 242.755 146.541 241.233 146.459 239.274 cv
146.377 237.316 147.898 235.661 149.857 235.579 cv
150.106 235.578 li
cp
.901961 .764706 .588235 rgb
f
151.533 236.333 mo
156.943 236.408 158.893 240.494 159.826 243.352 cv
160.349 244.953 161.742 252.299 160.492 255.922 cv
159.244 259.549 158.218 263.409 154.112 263.352 cv
145.585 263.233 li
141.477 263.175 140.529 260.649 140.849 255.727 cv
141.093 251.962 144.717 241.139 144.717 241.139 cv
144.717 241.139 145.69 236.251 151.533 236.333 cv
cp
.94902 .807843 .619608 rgb
f
141.388 276.195 mo
157.494 276.419 li
157.71 260.845 li
141.605 260.621 li
141.388 276.195 li
cp
f
147.743 236.295 mo
158.73 231.898 li
158.911 231.826 li
159.708 231.507 160.571 231.564 161.29 231.904 cv
171.876 236.974 li
173.284 237.648 173.879 239.335 173.205 240.743 cv
172.558 242.096 170.966 242.694 169.594 242.142 cv
158.717 237.734 li
161.277 237.74 li
150.579 242.799 li
148.807 243.637 146.691 242.879 145.853 241.107 cv
145.015 239.335 145.772 237.22 147.544 236.382 cv
147.743 236.295 li
cp
f
182.305 235.249 mo
183.869 234.448 184.485 232.535 183.686 230.974 cv
182.886 229.412 180.97 228.794 179.408 229.595 cv
148.475 245.44 li
146.913 246.241 146.295 248.156 147.097 249.717 cv
147.895 251.279 149.809 251.896 151.372 251.098 cv
182.305 235.249 li
cp
.835294 .901961 .980392 rgb
f
183.926 231.35 mo
183.937 231.198 183.911 231.042 183.839 230.895 cv
183.627 230.486 183.128 230.325 182.72 230.534 cv
147.756 248.445 li
147.349 248.654 147.188 249.157 147.395 249.563 cv
147.604 249.973 148.105 250.135 148.514 249.925 cv
183.476 232.015 li
183.74 231.88 183.899 231.624 183.926 231.35 cv
cp
1 1 1 rgb
f
162.032 245.636 mo
159.136 239.98 li
158.633 240.236 li
161.532 245.892 li
162.032 245.636 li
cp
.203922 .72549 .831373 rgb
f
164.802 244.216 mo
161.908 238.56 li
161.404 238.817 li
164.302 244.472 li
164.802 244.216 li
cp
f
167.575 242.797 mo
164.676 237.141 li
164.175 237.398 li
167.074 243.053 li
167.575 242.797 li
cp
f
170.346 241.377 mo
167.449 235.723 li
166.948 235.977 li
169.844 241.634 li
170.346 241.377 li
cp
f
173.116 239.959 mo
170.219 234.303 li
169.716 234.559 li
172.616 240.215 li
173.116 239.959 li
cp
f
175.887 238.54 mo
172.99 232.883 li
172.487 233.139 li
175.387 238.796 li
175.887 238.54 li
cp
f
178.659 237.119 mo
175.761 231.464 li
175.259 231.721 li
178.156 237.375 li
178.659 237.119 li
cp
f
181.429 235.7 mo
178.532 230.044 li
178.031 230.301 li
180.929 235.956 li
181.429 235.7 li
cp
f
168.185 237.981 mo
182.72 230.534 li
183.128 230.325 183.627 230.486 183.839 230.895 cv
183.911 231.042 183.937 231.198 183.926 231.35 cv
183.899 231.624 183.74 231.88 183.476 232.015 cv
168.792 239.537 li
168.683 238.953 168.473 238.431 168.185 237.981 cv
cp
.956863 .164706 .352941 rgb
f
186.316 230.802 mo
186.871 230.517 187.089 229.839 186.805 229.285 cv
186.522 228.73 185.843 228.511 185.29 228.795 cv
182.365 230.294 li
181.81 230.578 181.592 231.256 181.875 231.811 cv
182.16 232.363 182.837 232.584 183.392 232.3 cv
186.316 230.802 li
cp
f
151.447 251.28 mo
151.748 250.888 152.06 250.515 152.391 250.138 cv
152.768 249.723 153.154 249.315 153.545 248.916 cv
154.14 248.325 li
154.331 248.165 154.551 248.028 154.755 247.879 cv
155.164 247.58 155.604 247.309 156.033 247.026 cv
156.911 246.48 157.805 245.948 158.658 245.381 cv
159.513 244.815 160.295 244.189 161.023 243.515 cv
161.279 243.243 li
162.784 242.213 164.244 241.135 165.621 239.972 cv
166.32 239.401 166.987 238.796 167.646 238.184 cv
168.289 237.553 168.936 236.928 169.508 236.225 cv
170.562 234.934 172.463 234.74 173.755 235.793 cv
175.047 236.847 175.24 238.748 174.187 240.04 cv
174.03 240.232 173.841 240.409 173.652 240.553 cv
172.925 241.095 172.272 241.714 171.614 242.327 cv
170.974 242.96 170.341 243.6 169.74 244.273 cv
168.519 245.6 167.378 247.011 166.283 248.469 cv
166.539 248.198 li
165.993 249.026 165.501 249.9 165.082 250.836 cv
164.661 251.77 164.281 252.738 163.885 253.694 cv
163.676 254.162 163.479 254.642 163.251 255.093 cv
163.138 255.32 163.035 255.555 162.914 255.776 cv
162.587 256.339 li
162.365 256.709 162.137 257.072 161.9 257.427 cv
161.631 257.83 161.346 258.239 161.047 258.628 cv
161.039 258.639 li
159.003 261.284 155.208 261.778 152.563 259.742 cv
149.917 257.706 149.412 253.926 151.447 251.28 cv
cp
.870588 .737255 .568627 rgb
f
152.251 251.742 mo
152.251 251.742 153.155 250.65 154.679 249.154 cv
155.069 248.793 155.448 248.348 155.993 248.013 cv
156.502 247.645 157.068 247.283 157.66 246.913 cv
158.848 246.179 160.142 245.417 161.27 244.515 cv
161.553 244.29 161.827 244.058 162.09 243.818 cv
162.288 243.64 li
162.381 243.546 162.432 243.516 162.506 243.45 cv
162.916 243.11 li
163.46 242.657 163.986 242.203 164.48 241.752 cv
164.977 241.303 165.45 240.861 165.877 240.426 cv
166.301 239.986 166.726 239.592 167.074 239.19 cv
167.796 238.409 168.365 237.73 168.738 237.231 cv
169.119 236.741 169.308 236.436 169.308 236.436 cv
170.192 235.015 172.061 234.579 173.483 235.463 cv
174.904 236.348 175.34 238.217 174.456 239.638 cv
174.29 239.905 174.078 240.145 173.852 240.341 cv
173.852 240.341 173.58 240.574 173.152 241.024 cv
172.716 241.468 172.13 242.133 171.466 242.964 cv
171.121 243.369 170.795 243.848 170.425 244.333 cv
170.058 244.821 169.694 245.355 169.324 245.914 cv
168.952 246.471 168.582 247.059 168.217 247.665 cv
167.942 248.121 li
167.817 248.333 li
167.672 248.558 li
167.479 248.856 167.294 249.164 167.119 249.48 cv
166.411 250.74 165.87 252.141 165.338 253.433 cv
165.069 254.076 164.804 254.694 164.524 255.256 cv
164.28 255.849 163.917 256.284 163.621 256.735 cv
162.397 258.486 161.471 259.56 161.471 259.56 cv
159.29 262.088 155.474 262.369 152.946 260.189 cv
150.45 258.036 150.145 254.288 152.236 251.761 cv
152.251 251.742 li
cp
.94902 .807843 .619608 rgb
f
149.793 265.133 mo
139.149 265.133 li
139.149 300 li
149.793 300 li
149.793 265.133 li
cp
1 .501961 0 rgb
f
160.428 300 mo
160.428 265.133 li
149.793 265.133 li
149.793 300 li
160.428 300 li
cp
1 .682353 0 rgb
f
286.299 233.572 mo
288.7 233.559 291.407 229.659 293.637 228.086 cv
295.186 226.992 296.292 235.573 297.488 237.323 cv
298.204 238.371 297.481 243.224 295.269 246.189 cv
293.544 248.503 295.026 253.68 291.935 253.698 cv
280.734 253.765 li
277.199 250.145 273.465 231.742 275.731 228.753 cv
276.448 229.209 284.179 234.213 286.299 233.572 cv
.94902 .807843 .619608 rgb
f
280.595 189.378 mo
279.411 188.209 277.503 188.221 276.335 189.403 cv
244.143 221.978 li
242.974 223.16 242.984 225.068 244.168 226.238 cv
256.454 238.381 li
292.882 201.52 li
280.595 189.378 li
.968627 .152941 .345098 rgb
f
305.168 213.662 mo
292.882 201.52 li
256.454 238.381 li
268.741 250.523 li
269.925 251.692 271.833 251.68 273.001 250.497 cv
305.192 217.923 li
306.362 216.74 306.352 214.832 305.168 213.662 cv
.760784 .137255 .294118 rgb
f
257.854 236.964 mo
247.011 226.248 li
279.466 193.408 li
290.309 204.124 li
257.854 236.964 li
.580392 .0901961 .207843 rgb
f
269.775 248.745 mo
257.854 236.964 li
290.309 204.124 li
302.229 215.905 li
269.775 248.745 li
.454902 .0823529 .176471 rgb
f
269.822 247.62 mo
247.059 225.123 li
279.515 192.282 li
302.278 214.778 li
269.822 247.62 li
cp
1 1 1 rgb
f
278.481 210.922 mo
272.214 204.727 li
279.556 197.298 li
285.823 203.492 li
278.481 210.922 li
cp
.8 .8 .8 rgb
f
297.985 217.348 mo
286.919 206.41 li
287.53 205.791 li
298.599 216.729 li
297.985 217.348 li
cp
.6 .6 .6 rgb
f
296.456 218.895 mo
285.39 207.958 li
286.001 207.339 li
297.067 218.276 li
296.456 218.895 li
cp
f
294.927 220.442 mo
283.86 209.505 li
284.471 208.887 li
295.538 219.824 li
294.927 220.442 li
cp
f
293.397 221.991 mo
282.329 211.054 li
282.941 210.435 li
294.009 221.372 li
293.397 221.991 li
cp
f
291.867 223.539 mo
280.8 212.602 li
281.411 211.982 li
292.479 222.92 li
291.867 223.539 li
cp
f
288.272 227.176 mo
268.925 208.055 li
269.536 207.436 li
288.885 226.557 li
288.272 227.176 li
cp
f
286.667 228.801 mo
267.319 209.681 li
267.931 209.061 li
287.278 228.182 li
286.667 228.801 li
cp
f
285.06 230.426 mo
265.713 211.306 li
266.324 210.686 li
285.672 229.808 li
285.06 230.426 li
cp
f
283.454 232.052 mo
264.106 212.931 li
264.718 212.311 li
284.065 231.433 li
283.454 232.052 li
cp
f
281.848 233.678 mo
262.5 214.557 li
263.112 213.936 li
282.46 233.058 li
281.848 233.678 li
cp
f
280.242 235.302 mo
260.894 216.181 li
261.506 215.563 li
280.854 234.683 li
280.242 235.302 li
cp
f
278.636 236.928 mo
259.287 217.807 li
259.899 217.188 li
279.248 236.308 li
278.636 236.928 li
cp
f
277.03 238.552 mo
257.683 219.431 li
258.294 218.813 li
277.642 237.934 li
277.03 238.552 li
cp
f
275.425 240.178 mo
256.076 221.057 li
256.688 220.438 li
276.035 239.559 li
275.425 240.178 li
cp
f
273.817 241.803 mo
254.47 222.682 li
255.081 222.063 li
274.43 241.184 li
273.817 241.803 li
cp
f
272.212 243.429 mo
252.863 224.308 li
253.476 223.689 li
272.823 242.81 li
272.212 243.429 li
cp
f
270.605 245.053 mo
251.257 225.933 li
251.868 225.314 li
271.216 244.435 li
270.605 245.053 li
cp
f
289.675 238.616 mo
293.047 229.184 li
293.536 231.458 li
289.81 225.893 li
289.993 226.111 li
286.946 222.681 li
286.093 221.721 286.18 220.251 287.14 219.398 cv
288.064 218.578 289.463 218.632 290.327 219.491 cv
293.575 222.732 li
293.604 222.765 li
293.758 222.951 li
298.026 228.111 li
298.442 228.615 298.618 229.238 298.565 229.842 cv
298.516 230.387 li
297.616 240.364 li
297.412 242.618 295.42 244.28 293.166 244.077 cv
290.912 243.874 289.249 241.882 289.453 239.627 cv
289.484 239.281 289.565 238.93 289.675 238.616 cv
cp
.8 .682353 .52549 rgb
f
289.743 238.351 mo
293.794 228.995 li
294.236 231.454 li
290.51 225.889 li
290.692 226.106 li
287.646 222.677 li
286.793 221.717 286.88 220.247 287.84 219.394 cv
288.764 218.574 290.163 218.628 291.027 219.487 cv
294.274 222.727 li
294.304 222.759 li
294.457 222.946 li
298.727 228.106 li
299.189 228.665 299.359 229.369 299.255 230.033 cv
299.169 230.565 li
297.548 240.63 li
297.188 242.864 295.085 244.383 292.852 244.023 cv
290.617 243.663 289.099 241.561 289.458 239.326 cv
289.513 238.99 289.615 238.65 289.743 238.351 cv
cp
.94902 .807843 .619608 rgb
f
286.645 250.392 mo
276.001 250.392 li
276.001 300 li
286.645 300 li
286.645 250.392 li
cp
1 .501961 0 rgb
f
297.278 300 mo
297.278 250.392 li
286.645 250.392 li
286.645 300 li
297.278 300 li
cp
1 .682353 0 rgb
f
87.1289 242.551 mo
72.6694 240.818 li
71.394 240.665 70.4839 239.507 70.6367 238.231 cv
70.7896 236.956 71.9478 236.046 73.2231 236.198 cv
73.3267 236.213 li
87.6934 238.592 li
88.7827 238.773 89.52 239.802 89.3394 240.892 cv
89.1641 241.95 88.1831 242.675 87.1289 242.551 cv
cp
.85098 .72549 .556863 rgb
f
82.0596 246.98 mo
71.5288 244.52 li
70.4561 244.27 69.7896 243.196 70.0405 242.124 cv
70.291 241.051 71.3638 240.385 72.4365 240.636 cv
72.5698 240.672 li
82.9053 243.854 li
83.7603 244.117 84.2402 245.024 83.9766 245.879 cv
83.7251 246.696 82.8804 247.17 82.0596 246.98 cv
cp
f
74.9004 231.336 mo
83.2417 231.267 li
83.3862 231.266 li
83.4941 231.27 li
91.3291 232.079 li
92.439 232.193 93.2456 233.186 93.1309 234.296 cv
93.021 235.36 92.0967 236.145 91.043 236.106 cv
83.1719 235.798 li
83.4243 235.802 li
75.1045 236.402 li
73.707 236.503 72.4932 235.452 72.3921 234.055 cv
72.2915 232.658 73.3423 231.443 74.7393 231.343 cv
74.9004 231.336 li
cp
f
88.4717 229.448 mo
80.7129 229.755 li
81.0996 229.713 li
74.3608 231.3 li
73.0205 231.616 71.6777 230.785 71.3618 229.445 cv
71.0464 228.105 71.877 226.762 73.2173 226.446 cv
73.397 226.411 li
80.2344 225.323 li
80.4956 225.281 li
80.6216 225.281 li
88.3867 225.27 li
89.5405 225.269 90.4775 226.203 90.479 227.357 cv
90.4805 228.483 89.5869 229.402 88.4717 229.448 cv
cp
f
76.5527 235.441 mo
77.4272 230.399 74.478 228.873 73.8779 226.255 cv
73.2412 226.289 71.7705 226.668 70.4678 226.502 cv
69.9722 226.439 67.5146 226.535 66.916 226.509 cv
64.4775 226.406 63.4585 226.129 61.3887 226.871 cv
58.8091 227.799 56.0674 227.73 56.146 230.666 cv
56.4277 241.295 li
56.5073 244.229 58.334 244.198 61.834 244.61 cv
68.522 243.922 li
74.2139 245.11 li
74.7754 241.943 75.8398 239.555 76.5527 235.441 cv
cp
f
45.2759 243.762 mo
44.8691 228.484 li
57.9097 228.292 li
58.3071 243.642 li
58.3071 243.642 57.2666 243.482 56.9189 243.433 cv
56.1343 243.32 54.6963 243.514 54.6963 243.514 cv
45.2759 243.762 li
cp
f
57.5444 227.586 mo
57.5444 227.586 57.6108 227.56 57.7358 227.509 cv
57.8726 227.448 58.0737 227.359 58.3296 227.246 cv
58.811 227.038 59.4985 226.742 60.3237 226.386 cv
61.1426 226.033 62.0981 225.622 63.1216 225.181 cv
63.6353 224.968 64.1685 224.734 64.729 224.523 cv
65.2402 224.326 65.7593 224.126 66.2788 223.927 cv
68.3403 223.139 70.4009 222.296 71.8701 221.605 cv
73.3472 220.909 74.3115 220.405 74.3115 220.405 cv
74.3228 220.4 li
75.3711 219.852 76.6641 220.258 77.2114 221.306 cv
77.7471 222.331 77.3667 223.593 76.3687 224.16 cv
76.3687 224.16 75.4033 224.706 73.9854 225.587 cv
72.5659 226.484 70.729 227.675 68.9146 228.958 cv
68.2349 229.435 li
67.8721 229.685 li
67.5703 229.904 li
67.1714 230.192 66.7734 230.475 66.4038 230.792 cv
65.6567 231.393 64.9834 232.018 64.4268 232.57 cv
63.8662 233.12 63.4385 233.625 63.1387 233.966 cv
62.9937 234.133 62.8994 234.266 62.8286 234.357 cv
62.7466 234.461 62.7026 234.516 62.7026 234.516 cv
61.1616 236.439 58.3521 236.751 56.4277 235.21 cv
54.5029 233.669 54.1924 230.859 55.7334 228.935 cv
56.2236 228.322 56.8423 227.873 57.5205 227.596 cv
57.5444 227.586 li
cp
f
48.3179 263.49 mo
45.9722 261.419 43.4668 253.598 43.4668 253.598 cv
42.8345 252.273 43.0175 251.034 44.0386 250.242 cv
48.5278 246.783 li
49.4888 246.041 50.8706 246.221 51.6113 247.182 cv
52.2144 247.965 52.207 249.024 51.667 249.792 cv
48.4028 254.425 li
48.5215 250.374 li
56.4053 257.526 li
58.2153 259.169 55.6787 261.744 54.0376 263.553 cv
52.396 265.364 49.4424 264.483 48.3179 263.49 cv
.980392 .847059 .666667 rgb
f
50.3014 251.73 mo
51.3058 250.305 li
51.38 250.9 li
50.3014 251.73 li
.313725 .627451 .74902 rgb
f
57.2626 265.416 mo
56.2283 265.416 55.1893 265.056 54.3481 264.323 cv
54.1561 264.155 53.9784 263.968 53.8192 263.771 cv
53.8942 263.703 53.9672 263.63 54.0376 263.553 cv
55.6787 261.744 58.2153 259.169 56.4053 257.526 cv
50.1903 251.888 li
50.3014 251.73 li
51.38 250.9 li
51.3058 250.305 li
51.667 249.792 li
52.133 249.13 52.2024 248.25 51.8251 247.518 cv
51.9893 247.309 li
52.4227 246.757 53.067 246.469 53.7179 246.469 cv
54.1934 246.469 54.6722 246.622 55.0752 246.938 cv
55.8604 247.554 56.1104 248.601 55.7573 249.484 cv
54.4819 252.666 li
60.1816 257.637 li
62.0283 259.245 62.2197 262.048 60.6089 263.895 cv
59.7314 264.901 58.5003 265.416 57.2626 265.416 cv
.239216 .47451 .568627 rgb
f
53.8192 263.771 mo
53.7019 263.627 53.5947 263.477 53.499 263.325 cv
48.6143 255.48 li
48.1504 254.733 li
47.6074 253.864 47.6997 252.773 48.298 252.009 cv
51.8251 247.518 li
52.2024 248.25 52.133 249.13 51.667 249.792 cv
51.3058 250.305 li
50.3014 251.73 li
50.1903 251.888 li
56.4053 257.526 li
58.2153 259.169 55.6787 261.744 54.0376 263.553 cv
53.9672 263.63 53.8942 263.703 53.8192 263.771 cv
.733333 .635294 .498039 rgb
f
55.415 232.081 mo
59.4023 249.075 li
59.6108 250.596 58.5469 251.998 57.0259 252.208 cv
55.5059 252.416 54.1045 251.352 53.8955 249.83 cv
53.8828 249.736 53.874 249.637 53.8706 249.543 cv
51.6514 232.399 li
51.6162 231.354 52.4346 230.48 53.4795 230.447 cv
54.4541 230.414 55.2813 231.137 55.415 232.081 cv
cp
.968627 .835294 .658824 rgb
f
50.5054 231.528 mo
53.458 247.323 li
53.8203 248.952 53.7612 249.914 52.1313 250.276 cv
50.5015 250.637 48.8853 249.61 48.5249 247.979 cv
48.4912 247.799 li
46.4971 231.823 li
46.2773 230.44 46.645 229.098 48.0269 228.879 cv
49.3564 228.666 50.2153 230.234 50.5054 231.528 cv
cp
f
60.8613 252.855 mo
60.728 252.855 60.5933 252.845 60.4575 252.824 cv
59.0137 252.602 58.0229 251.253 58.2441 249.81 cv
59.2329 243.355 li
59.4541 241.912 60.8022 240.921 62.2471 241.142 cv
63.6909 241.363 64.6816 242.713 64.4604 244.156 cv
63.4717 250.61 li
63.2715 251.918 62.1445 252.855 60.8613 252.855 cv
cp
f
65.9736 251.844 mo
65.8267 251.844 65.6777 251.829 65.5283 251.799 cv
64.3008 251.555 63.5034 250.361 63.748 249.134 cv
64.335 246.188 li
64.5796 244.959 65.7749 244.159 67.001 244.407 cv
68.2285 244.651 69.0259 245.845 68.7813 247.072 cv
68.1943 250.019 li
67.9795 251.098 67.0327 251.844 65.9736 251.844 cv
cp
f
59.0566 245.658 mo
52.7109 247.373 51.8862 247.086 48.8799 248.102 cv
47.583 248.541 48.1719 257.934 49.0601 260.918 cv
49.9497 263.907 49.9004 267.166 53.2373 267.261 cv
63.0552 267.542 li
66.3931 267.638 66.8867 264.736 67.5742 260.787 cv
68.2568 249.035 li
64.834 251.927 63.6406 244.422 59.0566 245.658 cv
cp
f
66.9063 278.235 mo
49.5352 277.737 li
50.6167 265.107 li
66.0171 265.549 li
66.9063 278.235 li
cp
f
0 236.023 mo
0 246.666 li
46.438 246.666 li
46.438 236.023 li
0 236.023 li
cp
1 .501961 0 rgb
f
46.438 225.388 mo
0 225.388 li
0 236.023 li
46.438 236.023 li
46.438 225.388 li
cp
1 .682353 0 rgb
f
58.1958 269.364 mo
47.5522 269.364 li
47.5522 300 li
58.1958 300 li
58.1958 269.364 li
cp
1 .501961 0 rgb
f
68.8306 300 mo
68.8306 269.364 li
58.1958 269.364 li
58.1958 300 li
68.8306 300 li
cp
1 .682353 0 rgb
f
237.423 273.85 mo
225 273.85 li
212.578 273.85 li
211.031 273.85 209.777 272.597 209.777 271.05 cv
209.777 255.653 li
209.777 254.107 211.031 252.855 212.578 252.855 cv
225 252.855 li
237.423 252.855 li
238.969 252.855 240.223 254.107 240.223 255.653 cv
240.223 271.05 li
240.223 272.597 238.969 273.85 237.423 273.85 cv
227.888 262.477 mo
227.888 264.227 li
231.736 264.227 li
231.736 268.076 li
233.486 268.076 li
233.486 264.227 li
237.335 264.227 li
237.335 262.477 li
233.486 262.477 li
233.486 258.628 li
231.736 258.628 li
231.736 262.477 li
227.888 262.477 li
.196078 .643137 .870588 rgb
f
344.06 192.449 mo
331.637 192.449 li
319.215 192.449 li
317.668 192.449 316.414 191.196 316.414 189.649 cv
316.414 174.253 li
316.414 172.707 317.668 171.454 319.215 171.454 cv
331.637 171.454 li
344.06 171.454 li
345.605 171.454 346.859 172.707 346.859 174.253 cv
346.859 189.649 li
346.859 191.196 345.605 192.449 344.06 192.449 cv
334.524 181.077 mo
334.524 182.826 li
338.373 182.826 li
338.373 186.676 li
340.123 186.676 li
340.123 182.826 li
343.972 182.826 li
343.972 181.077 li
340.123 181.077 li
340.123 177.228 li
338.373 177.228 li
338.373 181.077 li
334.524 181.077 li
f
129.402 213.98 mo
120.396 213.98 li
111.389 213.98 li
110.268 213.98 109.359 213.072 109.359 211.95 cv
109.359 200.788 li
109.359 199.667 110.268 198.758 111.389 198.758 cv
120.396 198.758 li
129.402 198.758 li
130.523 198.758 131.432 199.667 131.432 200.788 cv
131.432 211.95 li
131.432 213.072 130.523 213.98 129.402 213.98 cv
122.489 205.735 mo
122.489 207.003 li
125.279 207.003 li
125.279 209.794 li
126.548 209.794 li
126.548 207.003 li
129.338 207.003 li
129.338 205.735 li
126.548 205.735 li
126.548 202.944 li
125.279 202.944 li
125.279 205.735 li
122.489 205.735 li
f
325.065 279.246 mo
327.145 273.172 li
326.612 272.667 li
326.787 272.224 li
326.878 272.26 li
328.622 272.951 li
328.446 273.395 li
327.71 273.396 li
325.065 279.246 li
f
330.59 273.731 mo
326.878 272.26 li
326.787 272.224 li
324.818 271.443 li
331.323 255.035 li
334.012 256.101 li
330.503 254.709 li
330.301 254.63 330.19 254.428 330.258 254.261 cv
330.292 254.176 li
330.34 254.055 330.467 253.984 330.609 253.984 cv
330.664 253.984 330.722 253.994 330.778 254.017 cv
334.285 255.407 li
335.28 252.897 li
333.752 252.291 li
333.564 252.216 333.473 252.005 333.547 251.815 cv
333.604 251.673 333.742 251.586 333.888 251.586 cv
333.933 251.586 333.978 251.594 334.022 251.611 cv
337.475 252.98 li
337.663 253.055 337.755 253.266 337.68 253.454 cv
337.623 253.599 337.485 253.686 337.34 253.686 cv
337.295 253.686 337.249 253.678 337.205 253.66 cv
335.676 253.053 li
334.68 255.565 li
338.188 256.956 li
338.392 257.035 338.501 257.236 338.435 257.403 cv
338.401 257.489 li
338.353 257.61 338.226 257.681 338.083 257.681 cv
338.028 257.681 337.97 257.67 337.914 257.648 cv
337.095 257.323 li
330.59 273.731 li
f
206.04 210.69 mo
206.019 208.139 li
208.364 208.12 li
208.385 210.671 li
206.04 210.69 li
f
210.097 216.883 mo
210.076 214.333 li
212.422 214.314 li
212.42 213.957 li
212.443 216.864 li
210.097 216.883 li
f
206.09 216.916 mo
206.069 214.364 li
208.414 214.346 li
208.424 215.632 li
208.435 216.897 li
206.09 216.916 li
f
210.023 207.544 mo
210.002 204.995 li
212.348 204.977 li
212.343 204.411 li
209.997 204.431 li
209.977 201.881 li
212.321 201.863 li
212.32 201.527 li
212.368 207.524 li
210.023 207.544 li
f
210.072 213.77 mo
210.052 211.221 li
212.396 211.202 li
212.394 210.709 li
212.418 213.751 li
210.072 213.77 li
f
210.047 210.658 mo
210.026 208.106 li
212.373 208.087 li
212.394 210.64 li
210.047 210.658 li
f
209.452 231.389 mo
208.834 231.389 208.333 230.891 208.327 230.271 cv
208.306 227.662 li
207.063 227.24 206.164 226.078 206.153 224.69 cv
206.146 223.706 li
208.489 223.686 li
208.511 226.357 li
208.485 223.124 li
206.141 223.144 li
206.12 220.592 li
208.464 220.574 li
208.46 220.01 li
206.115 220.029 li
206.095 217.478 li
208.439 217.459 li
208.424 215.632 li
208.414 214.346 li
208.409 213.784 li
206.064 213.803 li
206.044 211.253 li
208.39 211.234 li
208.385 210.69 li
208.802 210.811 209.215 210.868 209.615 210.868 cv
209.761 210.868 209.906 210.861 210.048 210.846 cv
210.151 223.673 li
212.498 223.654 li
212.506 224.639 li
212.517 225.965 211.709 227.096 210.559 227.58 cv
210.581 230.254 li
210.586 230.877 210.085 231.385 209.463 231.389 cv
209.459 231.389 209.456 231.389 209.452 231.389 cv
f
206.015 207.578 mo
205.99 204.562 li
205.994 205.026 li
208.34 205.008 li
208.36 207.558 li
206.015 207.578 li
f
205.989 204.464 mo
205.966 201.555 li
205.969 201.912 li
208.315 201.894 li
208.335 204.444 li
205.989 204.464 li
f
205.99 204.562 mo
205.989 204.464 li
205.99 204.562 li
f
205.964 201.351 mo
205.871 189.935 li
205.858 188.179 207.269 186.746 209.023 186.734 cv
209.033 186.734 209.043 186.734 209.053 186.734 cv
210.794 186.734 212.213 188.139 212.227 189.884 cv
212.318 201.298 li
209.972 201.317 li
209.864 187.894 li
209.86 187.437 209.485 187.069 209.033 187.069 cv
209.031 187.069 209.03 187.069 209.028 187.069 cv
208.567 187.072 208.197 187.448 208.202 187.907 cv
208.31 201.331 li
205.964 201.351 li
f
205.966 201.555 mo
205.964 201.351 li
205.966 201.555 li
f
212.497 223.61 mo
212.492 223.092 li
210.148 223.112 li
210.127 220.56 li
212.472 220.542 li
212.468 219.978 li
210.122 219.997 li
210.102 217.447 li
212.447 217.428 li
212.446 217.288 li
212.497 223.61 li
f
102.969 269.364 mo
101.928 269.364 94.6802 262.495 94.6802 259.587 cv
94.6802 256.68 96.7314 253.821 99.2613 253.821 cv
100.786 253.821 102.136 254.679 102.969 255.997 cv
103.801 254.679 105.151 253.821 106.677 253.821 cv
109.206 253.821 111.257 256.68 111.257 259.587 cv
111.257 262.495 103.846 269.364 102.969 269.364 cv
118.546 265.368 mo
118.334 264.298 li
118.191 263.582 118.07 262.862 117.94 262.146 cv
117.814 261.427 117.68 260.71 117.564 259.989 cv
117.205 257.829 li
117.014 256.588 li
116.632 257.097 116.244 257.603 115.863 258.112 cv
115.281 258.866 114.704 259.624 114.108 260.369 cv
114.043 260.45 li
113.959 260.446 li
113.059 260.4 112.158 260.339 111.257 260.264 cv
112.123 260.191 112.989 260.132 113.854 260.087 cv
114.344 259.301 114.851 258.528 115.354 257.751 cv
115.882 256.959 116.398 256.157 116.937 255.374 cv
117.467 254.604 li
117.644 255.533 li
118.053 257.685 li
118.438 259.839 li
118.57 260.556 118.682 261.276 118.804 261.997 cv
118.864 262.364 118.926 262.73 118.986 263.098 cv
119.253 262.69 119.52 262.282 119.793 261.878 cv
120.269 261.175 120.737 260.466 121.225 259.769 cv
121.317 259.636 li
121.455 259.642 li
122.905 259.699 124.354 259.781 125.804 259.897 cv
125.804 259.929 li
124.408 260.043 123.013 260.122 121.617 260.18 cv
121.221 260.879 120.81 261.568 120.405 262.263 cv
119.979 262.997 119.531 263.72 119.096 264.448 cv
118.546 265.368 li
119.153 264.157 mo
119.153 264.157 li
f
125.804 259.929 mo
125.804 259.897 li
125.87 259.902 125.936 259.908 126.002 259.913 cv
125.936 259.919 125.87 259.924 125.804 259.929 cv
0 .352941 .486274 rgb
f
86.087 265.368 mo
85.875 264.298 li
85.7335 263.582 85.6123 262.862 85.4818 262.146 cv
85.3555 261.427 85.2202 260.71 85.105 259.989 cv
84.7471 257.829 li
84.5553 256.587 li
84.1733 257.097 83.7862 257.602 83.4043 258.112 cv
82.8223 258.866 82.2456 259.624 81.6494 260.369 cv
81.584 260.45 li
81.5 260.446 li
80.5996 260.4 79.6987 260.339 78.7983 260.264 cv
79.6639 260.191 80.5301 260.132 81.3957 260.086 cv
81.8854 259.301 82.3923 258.528 82.8945 257.751 cv
83.4233 256.959 83.9395 256.157 84.479 255.374 cv
85.0083 254.604 li
85.1846 255.533 li
85.5938 257.685 li
85.9785 259.839 li
86.1113 260.556 86.2236 261.276 86.3447 261.997 cv
86.4048 262.364 86.4671 262.73 86.5278 263.098 cv
86.7943 262.69 87.0614 262.282 87.3345 261.878 cv
87.8105 261.175 88.2783 260.466 88.7656 259.769 cv
88.8584 259.636 li
88.9961 259.642 li
90.5117 259.702 92.0272 259.788 93.5435 259.913 cv
92.0813 260.035 90.6197 260.12 89.1582 260.18 cv
88.7625 260.879 88.3506 261.568 87.9463 262.263 cv
87.519 262.997 87.0728 263.72 86.6372 264.448 cv
86.087 265.368 li
86.6948 264.157 mo
86.6948 264.157 li
.196078 .643137 .870588 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (1411.i042.010.S.m004.c11.medical hands banners.eps)
%%CreationDate: 11/8/2014 11:49 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2NHZhF8Vf9Q@Y0A'Yt9_Zd'bQ,)6&Am):@)2Yk#AF/UD:[^bc\M,Hhl>u0=bHoFiWMi@PES,-e6>pShmN*N\[c0rd&PW#
%B>sS:X#VE6CtU@Pfga9^rO9>JBD$nMGI`Bhk:SQc@\n6jcjX+VrGK4coQm"o7_@DZc#*IP>Ie&>%)27Qmt4*)rC=$Cn>d@%Vm'YQ
%Qg9X(h!R*!ISSr5,+?POq/m3_5m-m@d@K<g-BJ^iINM#\D,\1SgVnE(3'-tMro6:`<q#^nI_X`WI9s^`KcM>+4q'KdquRd@bq]!+
%*koj`Jl@0GkfZ/2;(;:H^Q?>[(3=gCV"CUOJ;tKFA#On<-g$-drQd7:s,W%CrX8bg3KU3+B7I[LI;i=S(a*PfR]?e^;?oa\Va7$[
%O+LuAiV*GC0@&stSQhE['E=^5_]2LhA_YK<Sm)u-R<O?.EjgOQR0t+)B;sn<9F!fI_&o_gB7XCt\nXP>h>Uj]IkYl@)-TbaG6`ai
%d!a`MpHa1YBV(`Uh0(A`!4u)Ijb?Q0*93@aX%FB-h6WabMV2kUE'@<DY+`UW3G;IkT)i[K;k<8tK%<fr%?5PaA2#FLo5`&/o<r?o
%3L7-;!WV2)n/oQRoE73mN\T@8]R+H*>LWO13+r,]S9s)g=hV5Sm)!iPcBR1'GO)Y-D&o3hjaX5N]Gpb"e,QG!K,FI`TVXYWr-39A
%[K)9amNHbeeZ*JpRlDi[r)a*PDo&Ge[*R72d0KLXRM^,\017dKfnKk,(,l*fD_L3rmdYa9!+0VfgOmdHla6WfDtAZdq]s7r$**rI
%(T+a/gH538*u8ngZoE+s?,$_`^uqpqhQM,=Y%\IBlioKG/_$VXqL?uDLQr5i&iCf2>HJu5UYUba/Bal(EPLJAr,.P/#TKkpJ&"!,
%a=1j:$O6QRWS.Jdl$um7'e2#hrY5TG?`!&1n"0^/#-D&^CgDLK7ZQ7p>+-3;Il:*VNI%cG[MPk.qqZ_7g'A1<pA.'9!Ma7N>C.q^
%eF&uRSi^\r)j)gb!VKGL[GAQu6ZfCaH+ep>7eHmk:/`g8I\Tb)lh[1DH?E1W,JF\8N.6&H:(OB^*M`I(IMI%&a:m3aeuYuW*<:*'
%_S<D#i?*N`H=!SC>dI7HDGTRM0ZLZ@6+n@.F4>)Nd"BL^T)5(/QE)W`(c?"LK;FB.K&u).2M/XfJLDjQ+Ko!$^BqnG8^HiYr,1R&
%^].p,hYm!ADZfo)HSFo;ihtu/f/KB$!VSI]S,<!6aOQs+]7]!j>BW+PEfOdaDdo*EAjh4M<9TP-J_OY<d3M_qEiC@X[+&LWn39BK
%0T3Qk`I`U2[_Y(W+5Zg>`*A:(2[00ip3#t(l&(bLD#rnnpYT;0G`Pp6ad23loPj`rceL"uk.t8A%&gLo><2&fI%9<\MoA!tS?dcj
%TD[5ng_,oX_uEu-2>hC[pYQ+"MsoLL"^p&U!Igm]J8i&5S)XWj8]8kN+s+SV'nR8[D?$Ie?7Vk,Kof9uoW"MC^Im0&^)3hN:7_c5
%$qXM?<d.,ml[)qt-?h#.B#?ATE.<j01E@fJ?Z;*$O2GMk*H#*FOh)leCQ^$'lu74?P@Lh"hCua9*Zj`/HE7E5rE``7o8YL6(]@p/
%$.$PP$h2tLAIYSLiA[:[_A0S<"a#923elf9en#>E*rNNVNSra[)&X@`<D)pc0UE[JbJQ9n&3fhCoNDS$`c\QWDR]0L67Vgn\R_l<
%C+VCEB=$!;0:-*th>56d+7s7>^rl!>_e#k2ogZ&&aS!Mn.m)Z'LL9%jqENBW^mFZ:0]lgP1g]C$h\`:ik<](5]K`85/i"m\,L?U\
%-CUJilF$V:$>rhRgL;K=.t=F(j3PhZiF`K5Ibl+RKq76jUN>iFZg1bnf2D*iKl2g:2PgOc.DtIs3[O-ee5-M7&uCrCYqg$\fH532
%"qZ/`KBo?YCL&HVYjpINKmCSMSs9u((R2PJpAo6)Ak`c#^FeSe[]X8G)tX>o1_rb$]Ie;1mDFAn6H\Usl;9Rc&>rZuM:/lP*5A)G
%etBQTmJB+G0bl@3&o>PsS6\#AlTm9c\dgQ+j1\^p'>04fX`6.a0Q:.Z[T!ZV6.`BhmK?h1hsRB",q=4F$lub]h.j/G1NdE/.+Ja^
%qKejJ=-#+F.@/.A1^\8(XrkGO.6,SSAYIl^ZBKu_PJk>FKQ:*/b5F7c\^R\lraFhu]AB$J?nOkl,)bQg=RI8C/d6uAZ.oJcU+DVR
%@_"%US((QcR]T[E'g#>,b:W<'M!!,?1&:?E1&)>;%aY)Wqi>*t5rXenc:MM"%KiWVJPP06pA20pn>!/3';]Z=j2Grg&"m1Gm!&Qc
%rh.lDqlSk&*Lpr\3JFold_L1r(3)JH%r"kRG)NT]5!A9:r@?B2)PJ]&1/H(shkMWhb#R:`<u=a)<U!E8+6V\EQ@t\%fgq;G<98!j
%b>K>OkRG,$IPj*dqWShh'Yc66n:&X=@%>)FG]8"lSWQ8!@.FL2^Us/OVqh\`BkHOKQ!7`P4b&sg<j1uLLqfn2PQi*=8&G:30;JQD
%&Bb#j0c[W#EA?]D4\I^Ol,3APoJ-'ooiAhj0#P*hcOJo2/_,aL)lD'J\RE96nN-iZk7>el?:X90R[0?(B"K%HL&`[H_Ss%G6$sl\
%ckNG.`$8BZhP\s4AdH7O\B5V")AP&HNsEF(n"2OkI[]ZWWIj.ePETV+>hn>-8V:I3pe:1mDNBS>#f,>ar1r#sRj>)5AO:TnmTG('
%S4[]I]lfmjq=mHMOe)'b:AKiZLX"6r+$0WZPF`:YV-fF9aChj8DA9]Kn@oYVFkOHf=h(r',"jpZ@<"KM[HF]"Wt3Y&XtFs'gskWa
%Gj1.ja(^^rPE%.LH)>Deh<g`mqkts&e-(LLZZMTaK<^8gYr&q=-6:)]n<t'\>+UGSUaIV^hGXNmBpb=`"eP!oicHa@.6[nsP8E7X
%3%.^O1&`GXmkl[N2Ug:;;k1Z&44iI><r46$m\DS/;dt!Kr.0H!qDA"<GYZ7!Asl+b:;b;*DN3N\'*fu[SMngm<\%i'"qCDXT/>;!
%Q`AgVIt\S@;E*e-Eg>D=0?$9CV7h6khR^9mCK%8-3XrhBi/_"-qOOTB3DCTa9<m#*'p6d5MTj<:(nOlTN%^IhS92X^rF04'd[r)\
%kOm'IT5!:(?1=.7:B&i'<?O$Lpi_fEm[P1d89<s7)P?t!1J*c@F_U@A(WXpe[b=JT*_&2m2]CpUlniTu6N+nGrm,R\SV3'<hbAqL
%ZK/,jZ4uYq"D=^`<0b'I<pUO%eC$Ih,>6i.)_(8;`_b=`9,di<X::Ge@(UR8D)]od!Yr=)SP'PB[F7N8mG$Zp)c4bI6J#t[3rX5>
%)Dqn\hA01pFt4"pp`k]L.h9'7R#2Wm/[cSj<oBmc4B(nl<W#/R'Pp3,D`+ii>P2U.H!'p@7PFoTZRrdFE"]!.9.*Tb0JiNebj9-O
%Ag^G&.6foC^UI:hNhT4h;3WnUZVB7YPVhYanWkPfq4&)H1Z`7H;X)ZkT1,a)dTMekbl$YTG]jka+5h(gc_@3@S?oOMs7W84e6/%$
%/=f4$_p%0\Ss_^!_QpKrdt2Mgln$<?T1)=-8Ws[-[r<*o)KohlnOuY,Kq+=:SF4Gh;B8]ZAg2R1+a^un`ZpkMpBq?ja!H%%jnKW>
%m&&0ZV+JI7YN'.X^AQ.tm:NQGA@Qdr>SA!XV%>qICDj9d\2G)3[abORk,usp],'>#AuM#hg4('l11tI$S@&dU10"-HUKW%8kkGsd
%9UJ:g9-Jo%]+mD-)h?Ts](n+%Z=T7e"PGQQQI51Wg9:Mo2"hmfcf80<qtI;o$IA*Ej>V+&M?@m>X9Y`MaMl:s.K4IBAp`les(Qhm
%L#pr*2fd,sru*omG7FP+s':71ErXA2aR#%Xm#d`F/PO(*'YI=b*=u!G'/fG`/NBlA`rAkR@P)^(^L'SjD6^CU`EMupb7qYbdd,h\
%0@r!<gFp97RVR#.l6i[2k3W)^&EusZ1ei?+2NtmX3;&=ah0=ieo'aT-S"4^5>b8VpMB@MD)KZq1,,TL(/1%Al#nUofXd_os8<Gd@
%(q1S#T*Qu)-2(oME,:g]P=ra8`OOr3$!f?*NsEF(n"2OkIN"D1<M5joEmh%ZMd'FGBu"O)T*ZRkA1[`(8H'pO:R[9V+eDKQS7X_Y
%Q=bLDG8=NCbP$FlrSLc1s.pUQ*FNcdV4?phchA2<d;7-Q"=MloDmnhumJ5'*So=<Q+4l<tK!XlDP>'3oHm^uCb4^31&Hbonpsg=*
%:VkI#VL:$U;>dl0X]@YL*MiL6Of<o@e/V1F')_U^hFZNFOZJ\LjWmGo0NUj[2qop?WEX)fcD;Gg`SJk5d:iQ"4c><rfm+YH/6D@1
%h@pq>=%I%l-I!OS</+(Ap=`Y.#[2!D3l)`Q_tCA0g5gQl&bO\d6#Ea[oikpM$aS8bQ9+o^kW0qQlC/,&Zi!sl5KiV1^Lk#fq6S1a
%QC+.NccuJs]fG;;qjG9RU?RiMV.ChS4$`s4V+dN#b2.0-VGsJ'UOlP4<mRY-A0=iKk&WT6ITCMZ]hVB-T^U1WAV""+[\V;321\t]
%G/+VZQ'o-ejjk8BJ\HH;2b:VeY&\k1kIAH@Q?\h"`/@6oaMa"Z_GL4X9>"elQRqZi-!mmq99shE&hdDIjmR`X$uCT0$)B,'FMiYL
%Wc2jU1J"iq4aT(#7l0n^`/UX.>#$2PO%j$6\,"ZEqLa'WO(=5rJ)@Gj9e9$aN29CVm#?i.St&B%@j9/Z)3b'>`/O[V8S/r\gGn':
%kF*:kRD$J%=icGfS4U2OZg\<#HI)@NB,mgh^\n?r4tZAo]tUlGq[C3QFEm6*g4*Wt^%5<s?CF>oR^$)m.@ps;b$4\pFnSB8R8a#[
%A8N=O,gQ2_H$c!FL5-JX[Ru6k%I$YaHU/b(W#O5a/s<2b[+Tc-I#k/i^DI(N'd]E:=hRrl0PN=!UZptn6CYXoNL@fAobr,tUcURN
%(;)6R`iM#`r)'Yo3g$;^h%hfibYGuJ)Lq5lh8+2,Ui?ZYd3"><(tfSN=WV&kSUQ^_0rE"=Ref.$3s0be1d#;oN%C$PjY=&'7[D)^
%h+>`Z(t4Se^^.(2V`I&-`FlLgT:L0(C>WsBCtI.k?'+`^'hm9Xm@5uUVg'KL`:!lkDX`&c[&Riqc_9p=`EP2giacddcW9qI?gh(:
%V%=:p23p>(2c@<iOsk`_bb]U+V_r/U_<Uo[MQ;!\8QNT_[gU_j3:/Y=YWl%s%F*h#4#?G&9c>NDrQiuhE]?h+m:MfP7)a&)P8$6R
%dr2.(!Sb*(7J:Oop2!S!Cs\t?)tZoPIZ=WgP<f9Zb;:RMBBSrOR<p;,<NIu&WS3hIo#_TABu9c#3q/DlSLHSgQ%kP15OOekKulRG
%'q+:GEAtq9.<1Sh.&7DPs#RW*qR.&rg"fH>fueIPVIN+>`C[)EZ_;?-rb3.k?*\NS/GH?c>SbRqd9II3A^O`uc!=p))9o!sLpLc4
%(8A@-4<BgJBn\+.bJLf>R(3o7R"]Ta31#>?Ihh+OE:,q0cIoN=cD=u_9#A,M2?Ntc3[Q1<UjLj6f?UsV)?Z,@F0cG(c.I(G.=C?Y
%I#]B3Sa8pTOu%FSFm@kLaPOt]hNdl&R%"*jb9"`l&D0$\J@d:\np9u)iE%\`Eg"r?psj]jkA%$HDQj)HOX<`'b2&B7V>OonWI]\d
%r7hDaDK?\\;=UN((&bOa@O=:\3RbEYjtaG0H3SE]f42ZcA)!6X#h/a!Gq%#coEO,M^D\(mrH+VrUA/RS=m@)rSJkI#s-(!W%KO7-
%7(AeIL:#*gG3'uA:G>jB'0"[J?Jck%lY_Qd_/PCgipMm!<;5/e\:k(iQERSoE<_1KUpN^WAdsQU=a7?/R4/Q6s1`l$OD5Rc/9tIt
%L_T;&"V(6k13"BdHcthUWD8OO8[l=EoM5sM0WLjJEotV@O>hBY?UUJ(O)A"rTG6%S-ZJCt::h7:nej&]R:)@P&,$2kdH)jG;`)$[
%;<AO'51+l+-TY3D2:YILX;t-/9kS/5P4gi&VC^F!Y?Y\NINgDam>8k2!XmhM>,>!s:Hjq!lMZ.G51Wr07Mndn@cLeh8Z8#%HT_)Z
%HN1VqV#"ALWIj1fPETV+>hn>-8J-nfN%:+MJ__@X1O@J,1QJq]*,k%^AHm01nLHDW'0J:=DBREdfVBJ-o]uK@B,da'K:Mnmi1rCs
%Za\;Ym<8a^9d=9>%A-dPP4dPL;l7r4T';ShB(DkVB(?bsVu0ttV@UqJGh6=Q0ROgSpT?K^22s;6'C;=g;c#JArA3`BOE*L^oOf)t
%dfjYQZ>6hZ]2u,BabGWi]`^9pO+#6JV4IHA16uS3Oc8B9@FE*/P-Hsh2g]0nKf6o29`,WBRt?&IbZ5re8$hkTnB@H.]0TCQ/RU9g
%LBulI-cJ6cWED54c&Yn$V*BAaW10)Q2"_>9:<U8uTNeRCB.;q`Mh!s)1Yh_#dYM<]ZBID;,,n?H^IapN8sI&$1arr=eUsiSO]bSf
%]TY-lZ`[opR@;s?R^(NNZf8).%\XF=YB1k/rDrADbqCM>T[)Hi&GoF;4X=)bk&nsShW&4q_6a>^e"-?.,B&9*j.BI5dhq'!'MkSp
%:T*T9jZbSR)u^,k>[`C*a'5ZLpgZi_Z]TA-ZJF5i<p6rQAOS6VBD#='S)8^BfqIk>q;$L0!<:lM?S[05'l*-"+BRn>HKVhE^ZD'k
%h:u>G#%P=6bFJL=d-^;0pAP!$.X0B[2cc$?5-pN:"W)25iq^d:q8u#VYJpr4-:dqDE'A%3`-TA;!Zb6Cah;TN"P"2(lE'(=5;o*:
%aU=H)[L)KT8hS078JXA3,+6FM]o'542bZDYQlsl15`Ilb9TR*dnd`,\&,t0<RH^*L'fF4rfWQ7e?^VI$IKtKi`#$dIJ3P\jm6=eH
%#si7=d%Y@G9Ai4T'7fP4+T-\BXPTUMMgcdbIe2?u[rScF=Y2ELs,&;41qMCLhlg?k;m#9XlIA:nDYkWf\e:nONP2JE]JO.dJ@Tk'
%+K2_W4k8b#=]"W*3sbNIkO6/'\``J62k^,3@n(>pp[PSPX8NN8*oNCS^GTgL5pHUg1`pK`6kni)+XOV'mt92MibPmVWX\7lE@`Cd
%s2?E(mLt:r9pI6J#"=HS(io5OHbn9oTX@j"Y6A@POYHO&ADZlnO1CqRL+OC_`'56f10j0#D`NR>ig5[E"a=ok8BO"9Hb$t/Yi47@
%LN8$X-oQZXmI(<mKj%$I'2QM2CuA/(j$u<4_nX)fW_'`]:Jb]ic_*>7_8n;&mh1Y2WZ5Ncbj[+"X'^cd_R!K(eA<K\&tIV`/\(2:
%K&INn^DTRR+I*#(ljT[FOSZ@-`>hXUPimA:5]dXUYV#FO/>-,+;1Wd7i"(W"\4n[`\la-1>*FqLrt%sb7P->TW:c&akcBBl1o]G`
%'=7_!:1R`oI6?=&Cn8ZKg]%UqAoNsMc&D.6A%6M7\B3[kQU[bfMcu\\3,K/a.7lMfftnI@W%oBQRPsmkQ3Es":o+1B0*A3_W%u+9
%K:@>oDB'mRRga0i\B3[k?[s)NH#.NZ-;1ViN#M[S_,^c6oFI^HZ3W8(i+k'7ZO,@Jr3(Y8N2'4@R?f-YSPHX'=5[e2K/&GX?nT?U
%(`e3.-XTTk2SACll\*1+7%>QE36sJi1UtROe<u)]$1X%#[S`F.9t!nYfo%o_M]?VHWO-BU\*7.$Ih/D4]Y0/8B,RX!ScMgq<"fX=
%e)sNhD;cAf;VGR?\a@!';.nT<%s#NMa9`/q/Lpqc%%&hYcL.W+RpsVP:H-;[$+a93@J7pDiI;ZM-SegY,J#]n4P^^Km0PgSS\asB
%W8W4BVXogbE-hH1nUt]+*sSY+,s;>a>,tAPc5AZMMpBTN]qLddo?=/lIi+_^f-=,#4E.,/Pk"7@LOU.q`@XhK[64,=8J1_^-c>3X
%X4(I!QDDg13lC5iRA@8"c]Es!E8d2F46KlW?Y>_Y&41>35#4=/./a[ILWE:1:c_6BB.0=EFEXkZeeMb>Ge,U6:XHf#%"i1^%KF$W
%SEGKn-N/<"G<H&7c\CpO8,eO,_jO48?-uBTCmg+Q7#'81>,O^Q$+e]VU%QX.iI;]HRI)\(T!`VW]ea%%a)tpi6iH]uAub+&?&$oJ
%>2KIb-g4TML=S/ULAt\h[^Zl`?dQ"cS#[W$<*P"sr/Y8tWK.IZ;o#_PB31c_FO&8/(S\8!H%Kq>32U?9[\.1dgI/g0FDQ?L$SSZ5
%")ZD3?8<7Y@<I=Tf44IVh$3n_JF3i@<VDqaL,N,,9m4s/>!Qhk[.(he[5)WD/R-k"45cn-!F<8Y2d6l@G$s[gj75^5qh%B<Eu^PX
%lci0L!p6aX?r15$_K53S,2N=*\bs?eD9D*1Zsqcrr,OsL]<mOO(5+)i)_!/`b./%@ZCg&jY-?q,Dma>6DP+r),Ee%^j-T/aIMXK`
%>A).&MI$_:lE,KL&bPsOA8_DmrOo*(NsALrfC/Pai6McVQZrHsGp^<$rO;aj.+uk[4g4S^rUo'3Thi6+##@*8^\J]L#QMMnIpY<M
%L7u?601J87=c]?jQdbE<^$I/@dW\lr(#U[;24#UBMd.q5Okh`ZIX1^pH.$S<;u]YBTs8%k\/s.m9C;#;)795d^CN)g4'p;;<,2=J
%>HCAGV0ijL%9d:.XV./thtW1^>\Ht3h/;=c],$@)]U#&eZe9"XJRuURn((8=rLg'h(:mdYQ2>coq*i!8b#QdRNES8SWD_[&m!p4r
%YOOjUT,fMbq$4%YnINCh>6A+2#6a09=nY?ZZLgS(9YhKpOt*A!dn>.[H;U6_>;]fXV3)IJoJ#LD,akG>=1n=3<8t[</;+&aL7Ve[
%dB6dY[8]ibU;'STrk9N-eUg=Nf6.+h&YrSJBkI+j-i`>%YkfS-/7@/Q:ibX'3p?7kbmAp8IoJj<HTo#uBOLpTdVJ-_Z#3r7P;]#c
%>0=P-5:/Y1VZ=hcNI#_j@,/'XOYgZbDg<ngk<](54Ok>YMbXD(",#4rp.)gI5>T7e.QJ*2?-h,pl.5*Pn?\Wg(Or=AlfWrj`H2<'
%/3bNL5.DCGU[E9j&F63&mrG7]nK\Aa&)2_S2(2o@Fu!;/Y](71Nb6Z4CZ&_$K#)\]HSG2/.ZKT`k@19EA93[@C(,e:0B[QV-Z-V&
%b>m;VFuRH_BAF[Mm'VPZ@GiML4:a0T.*J/L/6pqGX=P;pDJ1J/JUZ3hof>9-]D<0XWRl1(qYt$_.i3>:LU!?b9<R,e2uJ+)I0Po@
%cjOb/FA0SK4k2Ud]J`cI"9[*40nfhLNaJgrpYGIg(W.BEla6Q,jnqS2k(jaqEeQfoSNH=frLeKh9,B/cakMG3LnHop>V>@(3drI?
%JoI02#%^EU:>u`F40D(IR'%;BenMoo^\,M5*CfD""?ZM:TGM^""M(;cc[Kc4<q#o5ogZWuN<Dt3PV`kXDp[qQb?@<P<ph)\fcA!j
%A9O]qDU:J[Y0-[_h4Rdj1h5EjN\*C4CREe.+Cid?PsMGKTEQMd-Mk8T$A_iY+>-`spoUlRIhq,=gRW<GCd$eF7f1,B*!DfuUDJnC
%R5R3CGN)cSjHg,8ji,!C@PaqeND.#(paG?2-28'/7SJi)3t41Q4_rPO6*<`4S6BXiR@?/+7SHPnKq7e-dEi<:$+e1[HojZ]7BCpP
%eZ\.D3.>d6_,1=!K=Ya<\KV"McsJ/n*UdhFL1@U->CZ?V^c9%ZM(MU"E_qk)dt^6LRGS6U/+'@o^tJ0RJ^IL]/.HY4FE^?6ZLRCE
%0TO,T,>i,Sil?fS,Fc4<G/4HCSGj`.+7].K2lRh2p=_`_D?mNF>5D"$kS#hb["t#tJCn9*K:;Y=l?0d>)ta^!"_KIf"DBdtJOZ<A
%'&U8>P5(lU4[9*,X9so]TWi+-1hsTk<"?mS&ij>MeP<$3:BX.L1<7T2qMfm#;eq!7)_p)/^<LmjU<VG3K/L3U"79FL\'/q_-#L]I
%1GPnRm(D0XGfb/>>`BX'Q;g5uV>/Rmp=g`qH$8$a><:'BCU(N2[U__sbfLgTeK\bCMB5q;_Zcm81dmU\;o";pmc8#`e:k<e>o5/(
%X;RL0Q[=#:?9K(gl!LV#mF0Njd(d$Eq/El;gjNt1^kDCGB<A[,+'"IB,Y)RiJJrEdQMlXI#-R<[9"%O]N?Cq]^NWTE2uV$%@r-8Y
%bm;9X:CB(J>]1kAWO?"b[=*/&Y2TPAL1#3lgUUB"magsrDB8)[[F0emVZ:f$mI'uuF$?m3VqnEJ8!rtm*M;H>dhL7+G\2mdecY4P
%KWSNanAdDVp8XZQp#d("+q%CT]rQ8s)1]82pmjCB,?sJd9,K_Wf=#i;".cd\7380N0X8%OMY4h"+QKhmMLgZYlhrXd,r3H+:nHDd
%0a:8Q1o%)ba3q4[X`iH#/N##!K&4=dKfT3Mp"!jS\oQWZ$&m5bNZE0Y,m+Dk)?H8iQWLA(aV&n[-[rOKe[.i*!I,(lL[.Q&`p>b`
%N+`fFe$g;U]VB=#(2s'*Mr)gb;j<;sSYGUr0#22%T<C,@$"%^HThb?hh7=5)Z!;3dd_!rjkiGV*kb@>:DKM:9/1)76+h^"LPi0@N
%Y(gO:fF#oOo^]2$%]in#RR.I<^&"0`F#9+J_;;_0$bF/Sd_\mJ+8t79E"RqCA:$\_U,5<Ogn1-b[lYS^3hn5<PT4`#m4f'A?#"=P
%6"PUWES7;Ta+@\IY:60(3Q7FgpY,%7YC\5PJWV5^Q3dXK\ujhs^"!>Onc_AqYOQ#3[;IXO;5.NtK3%XpAW_[GoG&k"k`J_F^X[(+
%2.b>#oj/OoPk;Rpk7@0p\%tXRZgIM's8Fj)pi^TUdmEI-+(lX`i&\jubY^PS'LFLV\$#:cW?iG:[eo52Ef]0S(TfTF?<kSu`IQAP
%>Vi);[7^ICeFL/qHmI^/'Hj"r58&&Obn#+dWEl?*5pH1sff2+b=jT$IYq3h9dIhbY>pg())EGFdfgc8m??-`E;3]IA>Z7_J;=B%1
%hn$tXa)YH>38Ink%!Aa&MJ`j$FNX,fmRN33H2D+W]WJ]:=ZhDmC.HC6>eNRO'T=/dF>/@sUKh6jb#Dq--&5'*bf(<[O;Uj^:lCg1
%e_*o)SV'=2k>KtrQ*WPG,S,lS`Ju,U'$ipB)4AHLGp<u!`Sgr!U?p`U<\$n)GAI6J#1CB:f83//R8R@snFZiUQ5_&'=X^,f</\XL
%Mg&o+M<t3;T0ZsOkai!@hStcIEX&taILY?#SDU?G/Gq1A-M%&><WuVUFCd&X(:ZEAYD.Mdc=F=>^"kZ9YG#Gca"/lRmDBV@.:IAu
%j%c@(TL]H&n#ljrUAtW<Z1^iP@r2IR5WkPO/:,h=4.Y\01+Z#]l!b@:N>V_]%J;;A=a=DfIO16EZ=QjYE'E..K0T"f5<=S-SFa?Y
%%U=UU$LMl<]^\[B0DEM4d)u%Z+"1+'Ps_N(:d$CWFA-_(&&0[Fg*\T5V/j'bQd<A5;8_n\Sue8lph+r8lbKmjg8u?&&:R!aOH#jj
%or!+/f#u#ZHmo:@LCLV@s'3<u%98$cSIC+BC\Y3l:YZ>23GR'EEf[7[W1N%"G?Q<8)+KV-SlL9E)SdT=[83OueU+hmlN6OZjMtr&
%ed?*$g9#S%o5>7?G]6AN)X3@mn6g75QuTpk?$(m#&#4Adp,5eGkfO$d0"MQaY]Fs`6l/#Oesl1ANtDPPq61Cn"AVAMd8m!+_O,MM
%hq\stXmsXa!e4'ceLlJjZK@-iDm/T>"KEm]`EoQ]?!2N`h.fHFG;,"`3,/E&3XjT)_8?,_U?@Z1H3eVWgFmd*9i1";g>.\02+aFF
%'bbm41PEZ_::'87Q-Q?X`_[XfGeX^'U9ca:Ljh]Z%QBuU;g#d-$=t:-1UUkdU*@m)oc1mc6rOlMdZJ7+S*bBZQ(1fpgu`JHpLQaN
%ga4:ke^3uWLmT@<Ou?h!n&XN$p#,+7crEt7Ws'q2EN_83;AOLCR'o/$C*8`:Bfum1DPm<q9h,hfP%qo1R)pGTatH&6PtKc*TeXff
%(TQ<bM;PN35D*kB0*s)5<*(k:KVXqo9f'&@P[*s!?Y_fbTZ1F"PZ(aA(!A=l8fu+P#Je$kEMDclAgCE]/!noIhur0!DY4MOAQ&m8
%]1U+.aVoP"8f&HVD1dglJ#1AL@OL9c#QU^fpOf7461^o6f,JEdJK]Q(M/CH:Y<2H!`<r<g)u<5uUWubtP+9*3r:>5MUYT('=Yc9L
%[(b)tf!SCZ[@sE5(YY5s_-sP;mI`tM`^"JM0rXcXe#J!#)OA>\KXIY^1ub!5^o>6)@U4bpKu;0+*S2o03*W-smrR(/]a#VqfAAc@
%\E:P1H>Yq!>:sf8\!uQ]B<=8AbBK97+)][.I.+dorG5-^>MXP;rFFN+\m"q%E-J'=W&j#l^?a'!bIV='^!aC<fog?)A*lqgdDl#\
%Vmk'#_,m;!NO?p"XtKC[?T`]/Wj8mI"c&T?a%r_3I/`*XV7nFepX#U4.aP4X+1D'CDkDs=LZP@!ZX)f1Fq4E4Mbh:)6+LO^Ip;j%
%Gk`&c.@hC':I_d9hsjI42m5Do.NE<fhi."]?>fH-`qi."o>YMuhcq]abmhhegU0uDL?)A6$F<hqrVY4q2DuKB<_nY:rQTEH"%u2G
%l[r*#<PECQ5CN<-2?\[#D14MBdY>LXHnXm:G4$'2h/E#qLWfEqEY.^;g&S_S^<J<3\#T/&q9=!HG\t,JB0KEK^0LNG\?Yl!Fa5b[
%4F6S\q7ZC-C=U)7^Zp_]Vj2>V2)A9\Vd$q9Fg_51H*,_dHhq]l]D-):W#S"rNXRITX?Ad,Tc:91k4;'9<INM)I([)"i\Wk_Xujp$
%n'in1X#k.f@[2XA<_LbcDa8?g_n^P5)R\,lk)'\5b]Y)S0/!LJL9od%4M7lAD/AXAhg;uCjOs;V6##MW\G*qpCk#SmIoH6Sb"qGR
%VKST=k('9UimBoZQB1%-Gh#,X4Xj\gLh3EUDe^#>ID30p>4L2dPj^/Pk[HIP^\C-t:_Dp234ZY2d>,[gj`U7JqV/+gZM`k5elUNC
%J'W=(KARQ):S)ASn^>mma/YiBO4Vuuhd1c*faL@ZmHkX*h$oSu4qEG<3>qsgIscdC!fLacSRUiN`!qOpe.NkA[qam#oPLjT](4kX
%QL@&N?PFlk?`cOC*BttmSQG]BrVP.$_@\_("U`Q<p\1=YmDIMeY>5CsPbdjs[.VU2e=,.5GG"+kHf$HH*cBM!UsQ9ZYk[;9g06R1
%fJ7QTFj(WY'WlT*b8]:*q.jbgp[(nJ-.f;D"jGo"V8Zouq_B_I,jTHtCJi3q`MT;t[Dg1=q/WINMT0^a(&kOVe7D!C`(>;cmAPND
%E:ge-\1Gmufo1boci1QE*Ma]!VL?eB$cA\W*-abpr]t1*o3<8_fK(b<+-hFqGKC-a+0UACOV.u>;;!QA5A-d5lcWYY\7At-90;#N
%?_N"?<VQ!0o0m*V96%GRH2?;RfSbqsH*c(L:ImNU*k$t9nb?tN\EI!8IjdKB](^G_&C:lF,M4M`?d&]#f;j#s)q-cPIG;IuhViKT
%phQkDh77mlH&HIhb9<:TmI],1S+U)n&9KOSguf(>G+M-MXTba9R]rY"(/W+r(EYmAn6G^6p'EFtKQ$$'O1+r+[:\CelgrOsrUG8<
%2K8N^R4''B[a-kg*:<O_/bddWk[o7jf_Q:SUpIJYI`]bD`9KFOpjonS^%hRlpHT+_iCfPenF9ojYk%>%_Ejsg-sl>,rsYRiU#d8a
%5KXdK]K^3u2_d_P"cbO%S-OD1Q1%3o@6u"u.%M+pIS#o[K6$d4iQaG<!W_!_?tn:A6f2Vn^]G;Yb7grU#gDRWHY_lEqA9A2l7FRW
%GP;oG4;K8l><#mABPl>dYA2/6*@u51HL^"JEd<)V?D)4nS$PU:=oN)YA$4I/DWGfO5"5q1EM(f(=W;9S<h0,$]*I]`bNjcUi6M9Q
%^2X+q-JRCYCuAYr5h"Cr,</hSb*M0KT8'^#cqUg//4qbs=@@htUmgpQ**2hbr:VjF%suqs>#@1X=C3[Bp2]DJ++NKj@?G\#BIo4/
%;V5%_9>-9&P20N$aYl&oiBIWaXAKQLc9@5E#(bPp6NoIejAb]/_a4AE+`33BMn5T?L8BQU*n;che3_&"&!I'k8o+2R1%I/aVC[\$
%PCdVAXh>'qE(D/^]3129'@#I!/*AkaA.6]cF>G`kZ4b;1C7H+a;'dOZR.uP&;H%#UgX..:S)f5d)5VRZ:5^)Kr>"lLH]:3=9cL&Q
%.<GY"=$jVFI2UU@`Q_M14dNb/$ITQ4*-$slpI<8IBZWS"Tbnj^E>j^G2;-!ujD[#P](GAdYBk)\"W5^X`7-u-Pa;`P0FB%jbZ[!E
%r=DGoW[_o/,YMl2Xghkn\5I$3lDOb4bHULaUX5*i$eOUeP`b)r$#MilJOXo->dgk,J&s,FH$.&pr$fGW2cCS\YL"a=S=[CoL\!rI
%aF4h`hRmNe2]0/WDRS`:O$P>j]SLhaK3*-[jl??fUQ%-@s3BWTRs32cD-O^ro.a^G_Jg>,08BmoEJ&@J^a_"WJiDgX5kC]u*eI1t
%n8W9SjfEm/PRHWmrT=k@,["<Hn,^+?gWp=ACO,0o._U*'h26DT4:V]'Xi&bE_u<DPCU(0#TDZ,phXKYg3p&D(Lr(t$_p6;tmtJI"
%i]_WGb3NdhA-66iH=ofU@igH4<dfBmE'?EL-p@#_qDtX-K)P'-:>s1H=6N#PZ+Za@f^A,1?0)`#6kN,gVgK=bjKB%FY)Y$Rjj9\)
%[cTQQ56ii6VltE%/+rk%i)4KAhiuEramX\k3a*F@.R?#`BIQhYA53?gmg=F'd^Q^+S+U]/AaQibG6Y5=,6hV&o$q^iC2FsHEo],-
%&,3<u3GJm9>.$7mJVSIa-4ZW3cB]9<arXlW:VMD_\+ak5I.@0t9)Zll<Ae,T;'ePo$dem#3Js+7e)Ku's,<fTH8Y/"QD#LF?g26?
%,i`?o#>_/,8*aR_=T\be-p1&?#-jkJ(Vu#(@&^S:rd+L\.rE%F:*FB0iWe;KG)+h#F_B[^:^j*UD+f*Noi:8Kp#7m&G.GO-C0P^-
%;E0R]_36#8Ac9Ha\FnsJ^O1KPYIrC(I-#EUe(#qP^3"kdU[(l0c\o"#2h7Clc'Kml0R,f`GkLXs9t@W-dpGL(hgSrm(P@p"U[mE?
%'1L?eaU.t*!p=1er6q4e`@'E\a'-5Ak@#;#08^RXMr=C!T14`_'sfZ&MAQ3\S`ktc@:61fRLK@9b"EHDLF=g-6/dXVIs'AcJU/2@
%`1?h,`M[YPn%+9!B4L>Jqn!DKT&3*t^/m;LY'kr5H/.L#YO?]m%l=TRk6F+7`B0nL&C[5BpBEJ'hCF+YkiRd6D&i5WN]ZT<A*rs,
%Hn;8:mDdtie%u$m_U30!4nPu40Zp"G9Gl']jUeJJ;]V6$CR!SOj7J([7?@'rNjk<p)4QI.jOGd6i1f_6FCGE/f.Q+988oH=TgG(^
%p)@f/P5Tqb5'd2(dH)]RA-6<.<as7^=?/PmOlG.Y&^L]Yr'>1FA+ermMpQ&VM7_m#VTL6;$8-P:\*KlUGAA.$U^r*CoAIen'PU@&
%DS,OC_<K^p2HkQ9D!jGPZ^,Q#?<Y=]Jb]>bIF-_PHmDHs-7mS/<%)bdhKO0Rp$MMMg?Gr-Z]3LZj`j]:^L`5iSR<KWXn_b@Hh!%5
%O4eSSe<l#1^0cRSr303/3dVV40uUb_FUr3!o\sQYDUcGmVGT>TbP1Z.f!3X!>WP"t@=i`>WP(AAfGfO*>Li\l_N5S1ZC,?H(P&[F
%?)P1&nkJ)AZ@V>h>J<5tp%aU8Z8X2u+09irXab=d@Fj="_RYMK4jlMW?3.a=49E"Re*HSpgA/m1YPcN:-Hu,8SW3)6X$Q@]cI\`I
%Soi9Km+IjS7>#;D5OI\6pZ:sngKPNkNh'-mGgo2rEcKGZQ]$j#E=,<ZnNf9?h0ZoAf(%C(k#=@0)^t!]YM,&WQD,S([G&asb=+TG
%QON?#_t%C^/db)pT+r=54kJUbhs25^H`n>EBlUAfUeA),n[SG`,:oG7DW0Mej83Bk\_#T;5MkdEXHr$snPm0UhL)m0k%X$;$>j^O
%om6:@Br?9]?aS\\rh\<JEpjJT'B<)<rqY$#pZthhY8h(1Oa0d4(LldNrPE:5m+uBu=mb9/_+CXkMOK^r+LZG3Zr-Q]XtSS&4%:N'
%h`=p9cq1h1Ebt0kKDUGcj*M:HJ]#H&>@5,;X-C'*/CNqbek,DZ4ERp@]4cXE*$%2PP>I[F4(5`9Q./^C;3?sA5CONG--u"E2[c7o
%GMLielsRB2FC^/@7QFfDU9Jc>E4gfZch^g]!h2VgC_=#^5/pJ.bH7V9cu"CpmHDgDMiIBW*S_tk2Hn+Q&T%ZiMhh8o7I0p.f?YLf
%Z6#n&<V_-$<p'"GW1/^9QOoa)[GqWkCp_SR50!dT0Pm6Q+G0CH7;]+]pWgtQ_Ya:\iPg.EMtQrA`QMGaf(>7@4!$)aGl[fVMmE\K
%,p]t7T%gLr)t&,Fpg&:#r`2)QSi97hO6Udmj_K(R>\LM4;@[h?Bi"tP6ZD_[k/sUMM\k\0dYHkd%[Y@Clu]tS=ua$mBD(XS(kSLt
%n[MhK;A=0m]<pTWjt8qs@t+NToD&B;2.([7Eu,Kq6Rul!Bs@WO]OCGn@H(K=jZANh(rWtgZ'*.9"dr_+4[+!um@'*u(M!O2*'%Bu
%p=I=>ck`49_ch>7VciN75J=^20(&*KQKL:Ei69s6Cr7fQYbFRc]Hd2%o"/Q[Yi$MXgFU.TcSj@@o*_>*_,:fP1!0>"8o9u_(YcW]
%Ji-n_]f"\/q2C]XL?3"=Q9NY@^^=Cs5JEW)8s(cs*fXug4a^SR_"pKnID5G(*a2jWA4c[9T^^)-&E`@EdLH?((GGT>gRkq;[QhBs
%1`(dHiI7X$),t#(55?S5eO_s3f[qe;pWhB#b54RX[EFUHQ3;G&ef7'r)\(N->RS40)mt_ST"g<W)UDDGjlNnH]2>)J=juB-]MgmD
%cbJ-+i\O:Yqs)Wnr1[%J4R&BYJ<Gi&B>s"=pKPjmg3D3E*\Pd[hG?.Lc#qoHHaU=i3#oTnQOSo0/aYC\4g8G8-4I.&b$TAU]^]=E
%hWd-K\i+bJQ$]:h>WWk,f3YFoS[>"@?W6CV_;!:?rn!^Q`TH04R*?*u/`r6ZIJFAM],j$=0[s9B!FFb#%F"&k9]WNMhn^>jGo7N7
%!n2)DL[W@r#+_E#%>k](5sQJ!h5Nqdh?>m`D`*F0^?oj'G&"5WV<@IAA_^);OZQ?mL>O8;Brh8AkDo!,3Gu$\n7sPLS6P+6G43sX
%qj%Sm*Z]mXX>X3$S=^>g`m2Wloq>rj\H019HF3P>bK6FToa>]4VO?E"r.hdK4V!?(COdpA8n-)Up^"=fh0eJZ60Fj'^Z[m7+#ia@
%a_pBNQHil-HB4TH08kUqUU3!C2s*HM"=M%V$eE4ND3)AYYu5PMH[S#3!05ors)+U@nEt2Y`UhF59>UIk]@!FrLu><;B)Aq;8FgI`
%XIecA86[,#H4YKfHWE>uIpOaG4:I754*lM0MZOh<2sc1)hH2scTu3_om18X4Vlc/X_V<M,rLc?-A0HbCr!EnBKIeu4>;R@Fq>n&\
%2pX^kIkMW32`e"O]g4`J9bcSKo+"CC:&gs[W4l/Pf$1=)lbhu4<g_=2,)<Dr&'JXer.;PN^Pc6YD*fp*[/CN\dFW"]jjKeegRGC^
%%=,Hg.^obs?r;t#MAL'obK=Z>C@VeKmVm,EM[kA1A5nQ&\m)NXb';3DX0u1mMa=6jE-+lI>)D]jiLjKP.\;#p\;1C@.-BO,oubk6
%kMdM\bF;@$QfJ>$per2ep>l+GkG=Ad_#Z+!-dT6Y+*YF3@"uj<N:b!o;OPME!9_PeH_UE&fi)jGScW<7pg0aNKdg%$C;,a4[4YeS
%f2c;$^0W;8Z$D/.?QC\_T&2Oci]P<!*@BWj5:qtN.*kn`eY1"#_Ph21#9V5pV:5/$77oCr9RJAO0=mNN52%(=4'r=J4tO4+$K.%u
%LKi<Fh(S3Q1\8[DQ_(CGO-e_)%W`:AFL9R>1?HW4^2BO5QQP3.\sjOYfK_rC(Y[bn.sPT8YOoC)ra'("4+`(7kPgt,8-FcWq\AnG
%]B+h&F6.&Z0Q)IJlL"Otl1s=%45P+TIt+MFZ;dT/$#fW<7;gt1J?s`aNneq)8,h2p=SoBd-ld(b`t4Zi+:qm_p'^7S:l\!m>;>:K
%CE%&]?Pf9ac4MRT55WPY06#Rr=OF5OFR7Ue+kG7rkCf25<IV/XksS%4nol."DhN@A58-Q1mm$<D43PU.o2a,Nn"%/Z_I0"p_d#X=
%=hjRu+g.<R8(I&Sj8O(W9YPpfo+?V:Tm7H+J_):(Qu8I)k5RU?4hNAhnXaE3O071.E[?%,13n"]pnHGM.suZ`EP2&S@Ypskk>199
%924tn+22O=QK<j>PfB2Ks6d_r%rbf8E`d6c1j]+J[64faJE\#Y40=D\rX;@Nq%fF5Nd0df#^-H4I_F29$:C.rj6oPLh:LufX\l:X
%NGP`DBH.5$^bPQ+#FF,$r@lODO.jeVc`(<U^W1edKhcg7T@mZ<=*a;MNgF82c-``@jD:Vm:4E4[SkA1u6E\`\&]<6j4]VH,VZ\31
%V2q=WPbE(*`F"B2Uu=S"nV;/K#D(b1nb[5,qYspoqkpEBA-m2;/E<"LVYWB%>I]8BLHf7i8urg+%3`gYhgb6<o*`*Q(geB*RoH$>
%Xe<sE-E+pn[HUTtk9]g(bLcn(-uUnM3VW\FQH:](NrNNI[cQGN);,Q)Lf&Y,rcKpDE:OLF>j0lWH->eunD*/ODAm[dX<`W\:(\,D
%3`jj%&PXWkgR]OfBB05?^%#&\DeNlBWmT=0=E52Pd'$'`?c<\)DBdUDT&k"h_'OiI,=$Gib0G0)_=3BHhoimrbfpO9EH#$'hK31.
%-nT&oD$L1c;*!Z^fAr)pB&[Q7/C,k:KtP(ATMp[D\`&*S]8;,oa?,-EB[&7&_@U%4<!Dsagq4pa.n4*AQ04`m"YJr`o6>ii4W(=J
%l\8BnbT"dF:;"6UD/;t']]Xf7`Q"uN<FhHZ4`7k$K&"IpY%,J@Mb(+%j&@m$c:nk*CF,d#8^(2'BI5^GmKfm(be'a+nn/#-Yc'NX
%9bR`TKFKMp>_*#%71q#>+hMphN,]LY!3,IqXU5DCVLheBRla"QTHbGWHQY$gfQk@g!?rOL*fEsD-GYd3brI=n0it[D#T,"336[O[
%`TTh**$CYp>;3&2[UjfkV?K"0LhDgLb:FP;:]UrX/F*Y(8ZJ>*\J0[ak8*6D$:?[591iH.K5%@O)FT8c7Q"b;RLki<:je07`Is?r
%"XImi<t5N^k#ks7WWhshJhCF;P$hgj\:Ff5KI%G2km:SF'o5gU;@O.e\ft@cKQ(LF@Df=R]'6at':B)g@ZHd6Kh_N?'MU#[(ZZ&%
%+@clj^_F9eYgcVcms;bLEri'VXmVhrE\oCDJuM/U%>P,i7*";I+u2qk;7<iRJSO2^dEHb)Sj<\o,iX],%-GW/%>%DV2c2jP$MT(;
%=ECEsYcd$b!q0B5=Vk\50i-=7Nhsc%U2]2[fa]il9O!Nm9Bd9OY`GMU1CqrI>=*%gL])0@Cf"8(_KM1QD-RNj7QkE\:6aqQVOg!'
%1hc`YMX=SNQV>_(;_;6,1mKem9E6X`;G]AiQrHRXJk3ad6B9GM!$X=t-A)f?E`-T`,71U"PUqH4^q(<\^nhaRa)+m2(a_N\(4cqY
%/I)BHb$@NS/@,bYQ]VYV7T(hS4^HXtQB8-^VT,F^C87ST`,Un`0+:l?XVT)H7[8K4WN64._D29<KY^BBZn@I\KR,YV_K38BS-YTl
%=JgbA3'=a](l90O0h6cV-IIhr@g"?#&miT:2Sr,44cQri0=f2T#u)VVjJFBX:BE23$?C3OGf`[AN$jC[n<*loEu]+OQlLVcKPW"I
%PCq]/h`cub-J0+'Bd>#Ua98cb]J)-uRG:-BGH<'%,1R?eS&A!\Xb1pI0pCWK]7afObX<qRS;:T#LJ!:GG_DJU0tB]O#W%TX$b=+g
%Ag5?.UsL#9\V1ES9L'"BZ!0kQ8dmM\3r$L6$o>.LfNoW:9FaB99MAh@-oW\7bDBXS8$'$k08>l7B@=(g&i5YbJQrkUM+!,=08Z):
%]Ca;aA:bncG9&2gR+qmGZn7S3bZHk/R'F(6?H2l$n<1]50LVQ:??/qW3sM%mY@VuA#+$_Q2<cj*6j]l21gHcF?%_L%L.e$GNt%d/
%:7U?iDA"O`C,uPlU*W\HLCcqM-)r;bEXXL]@Y5>]"A>PBX)H%o&kUfc'3(^s]8#\uYnF#I*:P4SihA1kd]=9d;@@"b@o/"N!L'W&
%<8oARO[N#;CYA8H&h7nS92@et-,PB!BcB]9M7<UHa-0>Ve-M?s<$m`!6Y-nI#V)$'7o22I&N=VJ6i>pTN&+QI^l=%X6d(KR/\6o_
%6@)2)$r\`H`VS@26_f`7-mShom%CC:NX@:3;tZMId:+?3?-+f2#/INA'3pSL$Ao;p)/sN-Lfd4["U#m0+b1j+dOH2)F$Z63jrb7&
%Z7C_47NlPW2aVXCM?j]dWs/\oB56Y*LnNe`YbY%sUD((INhlfHN'!KLXru^Re+Fs=NM]1^90:7V_MK?(j3\0m#OM*(Kn[kkf",rr
%!*M=k@`1m/a=ZX@+q]3M%+`H1A(;G"D'i]fBVHdrUQQIW+uVoM;bH)tCWS-cMkaIm2t4ZNBbD#0@\f^h#D&"O5Y+55#>iLsQn&,$
%'X.ZR<s'%$$<7]'Z(-ZBViV&N0.\A6.*#g3XG8EemSFZdVnd@Qo/$Tc;:?2):kn>`6;&TbkfHOQ0e5N/(M#ol255V1(`qmnXJgu<
%r*^GZFST#_<0rc.B[@'q1E[1c5\;(A>@`7o#Hf$a=9VXn$,.II6sBX%+:\X+k_1E##EFAP4_D__9!G1KQ_K_.V'r!D8219:%@DGA
%QrWenA,q`9.C:Io.ciB4(Ronc5c\n$LheC5-k=Ms80S-n7j"ptcm_D"N)I$Y,,5%EBk5T'@gQ%$bacfNeO6Xfi0ULpA/P@R-G&MB
%%q?cH(]YJNE/7&=cncl\'G_SY_rDFXB*ITi7!(bkq\g&46tCA5k4ReiK0\S7WM@JMTn:9f$s*OWLm3?64U8"u'QEp/RU7@<J56hc
%2;lh@17<d<!WE'8#$_nNr5a_IH5I`+9''`<cquSm20''?</e[K,AkVM&J:<Z-@[L%HHS/?AKmnR#)RB/W??nfSB2&V%$N:dCs.AY
%!K-3rP2Loq,q`Kqqcu3PPa)E0YUDC7$4Rds_/28/OlC@k^.T+k>1d(X..73OM`XN]3;sm\nd/4$Bs@]$=b=R_dm+![0qs;83GRmj
%-:"D8?!"N(3fJ.sLr,6rd8P_%Bi:<D^qV]57gMPW<@ULI)GEMZJB!Zo@4/G[dUH&+_d&$$Vf`3p5/cc%V:_+"`eYrG+'^7oNEZl>
%k"51XFO@:Y=t3bq2$*cN4\[#b#R'AR!dro?gSB:OJH0Jk,'Z0V(`=],5i-%7@MB9?o/p`_'1<ekKS>J0E2BTD*F518))1)i0d`*J
%&)bbJ=3*,lpkG'pHq6NQ"On8:7<%!IkLG`lCc1XT5d8@)%AKLH1fb4cN$4LdnJ$5!cSj60>h>'p#%<YWBPW-4%A5soVI5^B4,"B$
%0kE_&!F8P7@i1,$\kH4d,bgcEfM\`:,BB;I6r0]R@>#U&;q_A;p0$C1!TF1g_'r5PYqagl)%cul:RVIq[n+"Q16Mpa9]k"pZi[_"
%R8ssMJEY/"8Z\:l38,+_bQLg+;iT](jG`+e\XHHO3C8\7KV?Ed/0RIZ6U8Hj6Zple-S5hHV%2[.@5j#kKO2S4X9'Y$;jff4`'T>5
%,>k*Ni::Aj82Q%I&E-G7Agjkq\4p@@jJ.X[$Bt.m@k*.Q+iMYlN"<Lpd"'f4!lNL&i^jdg7$ZZMdGsp67b#YdA"\AjP>H<WN*oi*
%9b8m]0<ScH]K;e=10$_P;"@#dD6!+fR"3$J>i>a]IcI&_HUk#Kcp[O)^lVBu7[k/gX2r8A?X\d!=JH)#Oq2*(@+bQF@!r_!EA2Mn
%m_BZG7$&%h>TTY?i\Z<-:W<MD,-=Eu9R!.RA@OI/@/?-I-="*0KJUQR=(OB'V?=f'3>M0R6!n;96G%&%_2;V2>arcl)*2,Z:"ccC
%EH>+`!>t<!>d+eI>r==)A.XdAL%]R>E'Y-O;].412E@5g:aQ=%bZ!0;4e[_feNL_5Pr]I[']suA0jeL2[=i&T"L^t^#&VGTei?KQ
%q4k)b3uA&&'J3)rj3j?Y9nAk[fnaZB<MW#A<l>1(`B?fIatkV;9M@mI@;no^?IR9L,N)S]1fM7;&qm)\g]A>o!PZoAn$oqX(lHZ?
%!1"?J-KAk*5qn0!b:qu%Eci)S<$JA\j2N\h/b3Xe+GO'1#V/@IMM46[FEIR@O[:dkoQ=/]K>P$a@MdV(,B_a?CQmPTfKt/XPj+&;
%R@Jne*/7Ym0d7%YV<k]=ikud@X_S1g8A,HbObLoM>\]4mS3$;C@"k<b0oB8`3sWkS#aT+BX_As+EB#NOLDbsO%hgK0L,ZP-,_eRe
%<f]R0'5a!SWF\/2\R#pK#bOE@<gKH3+]rP-Lk+U^<#nf&iHTZ<5RfEp@;m!7:1tZ(L8R<Q9oX[#Gs%,22RitZYTIOg6JjKW`E[+c
%PY2<u""<*!.tt?u_C[m*THcE0G84r<A"+spA!f$U0tq9mJ?J:\V&Bpd))^@MgNlqE,VeG4:dU%"Q\\I0_i&6ne<Q+5EEqt8*2+as
%bQA[i@a37p!X0p622K<gOdlN<&pMPZ]V(nY%Ab+Bk,o:,^h?m[<KVlMJ`s8S4_@?:OsX=bcEs.#oDh_.`>j@o>ms()+d[=""p-Is
%*SRG1blj.M["H]5d--2g65\.SPHM6tei#PCg3"^4!7N<>-$9t(ARpJF8*(XcPd\cq`R%^iWhPLM?pJ.*`te`-7V[d\7-VjR.[j+&
%72!O6Ue,6HK[S%7]u\k^6WMLI"K&f+k&FBeU`UNZ\K;0o_SP5@a&G5X,]kbu(QiXuZ5?";/.<#F#%FD`8'Rg%>oCuIG)9DB3#t=O
%/Z'I#P6b:5Oq^&FQfkq8!c^V7H5_U3\4E&V1MPU0qBKDlag7-U=R8^/g@V*Q*hMW$LPXlk'?&O:SfC2)AYP%iE-af$5iJ:KO,t_n
%KWV"@mSJoIH*T/eV_J4CH_AH$)F1M]EYO%HV?AnJ_0VK/Z\ODm/$+Q@W%^N2ASgEucNGbeC8ZifTG7_>6#ZrZW4O`NcQ'i)BbCR2
%MO7jLjiro7Zf+Gr^_gJFJg(Jp!5@A6*/^5IK)-odDog1O,bh2iUK<I*aN]6qO@*pT(e%K43D5ZYKH?E[((D](10\dFBWk?l)(_#6
%7.NqRDH4<+@UZ#5Nua?="Vf[`OqhD-g=+*P[6f]1Kt%sLKn[B_A&Q@mD2^;0IZ3d98(<]IH%pSO"0J/KSco0%mYPnA8aJFEP+XT"
%b(Z[jQ9&\8L)Ou]iD,tg"k?(a)K&psdBpt+,_n7?(on]fFsJd\dj\imU_[,.A'pm@h'+s`J1?C4$d:.Jl!22h6!7f%F6JZe>ilij
%3[%tkmXU#Gn[OW4W![.]!?ko^`Cu':=88!6BJ5Gq'6NI($RHBM"V^M"-F9[-4@&+T.N_;T3#En%T./CTd[;Nl/\M7%s"\Mm,-=G@
%%tL/M-ocI+FtKN::b=%t&JkYF,RFL\M^:duRc;\V4Au'$P/+rj=EJMW0b=LEADp?p'eQS/G%(8&MAjB'*`'hI7@mk`GgZ0=fU;8=
%Yu%P4RKr5u&#lSXa;h\5j:N\#9d+]o_#_m*X_%]\4R7eN\h"0r0ob8)VuULVjf'CjJfb=3O0Nt`VKb/@!g)RT\k*$J\G9UmTbrQj
%_E$>("0YTDP6@U)&IC>3KW4)dm3eniTX_>L>uTu.STF=3HiUDS^`.-9@u,pgEI]W6S\+rLJmRAH:2/SebTGGLT,7bmP!l`"=hl&=
%W$[O+`UkDhH'#h'B*N%Z(.CAS)UBj_]h;RGe,uoi;8Qa<9j<ZZm]oXoqYZ+&9JnX&=Fd-)i:@;8!H)bA81Ug^4HcVnans$85^\Wj
%etEOpOPgZ(k-TaMFoWa(4KImQK]0gu+Hg485hjrMCsS7#V_l.nT$E?p&J4"XC>dFPMWUo0dbsEKJSIW]%GE5G6RJ74b.Ro4r/r<A
%_48flR!8U-p2!'/BrVs5!+8@:[S8jaBPEXr"A#s;P/7uO6rugrSOt$GK6lH$@\[kGO;7*4$bJ:dA</)QM?[HL^ka0o6<=Yb6`R&A
%nZ\mkCGHKb/3Q&01KW!e=U_u<=j5<B_E;m2Yek^rO"Y5*O?k%@@Cr[4Hm)';KpcRR'+Y\0*I.EG]l7Nh>5U4(8Fh_$A1/(722V=,
%(@fVNVE14S@eNrfeC<GSDDrhpI%Y7KHoP"COC4HI3l<W35jXRi(HiaLZ_D`ar37`MV2cul7FKH>!@-E9S/Ts)k7S)+'=]6R\fSpi
%*F'f9<$Y1/RF$sb7-,TB,b73`1aJ3f:%F?dFQA;0*qd>qO7E:@XkR?3Idh<GXN]`fX$`2>8>K%NZE?=fA]U]<mGSYs*$&2"21[K(
%Gds>Ki_oRBaI!R!buX#Z\>+u(8\fCjP2OG2YjL'o>A=;DS0/`$WQ.%f[1#be*$ljf=\(<bd4'[Domoc.-XN#"aa_?%e5?Fe8G%b6
%PIQ\oLSB>m(9J1p:piel'D3C"+rinV,XPr!KI\OD-s%W0'"<ZhB.O`s/g8ipWWBsOUnqI]F=@X[PUp&O;K9m1$A($Q4eWoGOR$Z:
%Z8'1qlae!:.H*o']l6lZr/8'cV3oc>Wg&5%BI[-r,jB#Tnk8Iho7eG+)O3F,Uh)8C*N4kK[O+S-"-TF>Ego1kl']+"PJqc+3($FC
%P$$@#Ba<2MEZXIi,HYFD;8"GBV<)+3Cn[2\,6qjSeY88N\i!\r9j"/96dqei;3>ZhZGKLEYH5h)C2,%d<>\fb2oI<\[/EbNMc!8M
%dXk/OV6uCECeBWFg03B=N>#,HdS1m%>;S!X"[eEH\m-Y#E0Os*W\3KqTi+NNcGSbGKXEg\N%2b4a-GtIUdgi:W\r:fUI11VWXnK[
%MjPiGJp0VmVNf5(UskuVNQYn0W(+9,KGHK&TM`0.UAA+]/M0UCUmg!@YZ2l,:,6BNj?&afdW-O_81ZQm#-(uD8E6sg(A6[@7R2gd
%f#+2`4ASR:*nODXZ79FZNJsbdMA+]e94=1O\9`P4B_2A'90/O,l5B*.8MP=.6aO7Il'`hW],\j=gOn$H0SQbEMG)5&!XAA8,?N&E
%V!_Y?9?sO&L'^7iqpkVVWpM'g]T[SG9K;:J>Q^J=n/+/$'QQP0XqfJT#=m'oE2?(9M$NquN;u;]/Y*&eomm544RpM%_E<ipd?3Q,
%h%$UBZXc*n02dg":>L+<`V>"<QlJ.a#q;!Ik_iK)JC(5khU[Z*H4k3R$jXs1;=/*2XXkYF>G,Si8>4<9:NOW8n"ZlQ.OptoB;5e'
%HBtPG5=s>>UIM/[7_#D<R*Ym1cubG3:7!+<`447kgm"`"ouqZD8r#f?ko\ka*L\SLF<s4%-QX/'HlU"`18Pu^2b$-#3!LCjE\P#1
%GBAas,\Itr@shG.`8f=6LG5Nn&1])ON4dqm/>cUgXG@XKm4&97;ADGn$AfTfP&s/IcU;1<6Pbp-LC#/cjr=8;=!gZZ;gM%!(C^Sh
%%.^]'9nbjfO\Rbl7I)$sQ^e9(1su/"X%QV1Lu.7OOX-XAU=6E)RRB]Jkcg-Q%1%2)Y+h0Q-k$gk`/5G"5p<r_V#s+A,SW49;eTq,
%/3>nK_$Lg%Se2</5sn?sG%&O&Y(S6"R5rGudP+OYJSDU3o;!Y:+INnhOg4Qb,a::nbR5QY'"b$*I5=VsD-%EGp-(m0<YP.beg-Ec
%BO&Y%?0S\k&00deZVXgb->hY%WhEPR1g^.pL'DHlX>fG$V]!?2<s=k_6''Dk,ZEa7.G6&:>#Lpp#p^sHjO.kmm8I6,^LotmNK?am
%"M@g7Jecn"\k^ii6]r`P]0cBnBI?KuY#*:AWPXKhNK@mC<'+p4MNq2E'N4<8eI&9<7cfeF`_'EC8L8>L;_en&KKL^,K)$oqo42Xo
%(T:RSZpSn*d2Wd@qj%ACWk'r*_4%G3?d$bh:7Wi!=QV2822.,EPMWsb\;UOoEpqQW'/c1I(h;S88]T7Y-7^#jBQKH\_TS(%Voo?W
%Ql&;a8CMW[;7F(^Rj]0&E?H]Y#*N^S*/UG$].%YZ:qjqHBaTU(0Pk%=e0Ll)>3Dhr(bnmJ<Yp]cN[C/#'%Y#M:(>O6/n%1H<<`TT
%/b8%T*G,;-VFojq+C!7#mT>(<$qVX4$9Jd1TqdAdQ%X'Y;D4Bam?8rL(Ch05SeO'-3F)gsVpeZMa_u3bq8N'8\gr]FWQ$-X8oZLB
%5$)5^`1/DX8=gE'cIPpeWRrjmFVplW6Nl/o]gah!?,^O=j2;mLd[!@4:^!4D6S9l\eZC"FOglj-m_P/])ehE($P?F\:+hZJ`E4;;
%!S)5@BG@U884k"Z,ZiMrNal(H8`?-$8i8jO;ej;CUrSD\HV"lN<>rh6<=VfOoL,FMMqT"(N#IQC8<bE7PSmtUpds[Y;OqX,0Et+/
%SfVu[9hgnQW3[@P=/g[Q(S2sV4K9o;74K-LLWZS/eTN/em@"(#iMoI./4PX+_gI@dELAX.hX%I0'`oT$<N^ibPg7Psag6-7a=0t9
%O!GUb+UQMUfd\4;"J%>=WcH,g97fBkPl#!ioH^cn$j0(TYuK=Ri@gYoE;9L!>FN][N9Vm](dW3eR]3ut=?5KCTpr+[Td*S.[U@_q
%Ah+UWXph]P<BFNY;NVN`af!N?DJJW9].+uKN9m]Dm`me,lj4\[%7,_tA#So5L>B+:eqL*%al?9_RZaI04&afBH)+-9B$XC$jWo)2
%<&lgUb#!?*A\f6bfgS^4,H(hsHLmBUTbKs6#u?Z'7&R^TJ\.p/$QEU7!Yd[*p1u`4'rgi.U'WbJZP6-;(DVKEajq^n6/%P\<D(39
%onp"b+H-H:`$q/Jlj13X;'!)WgBnqAL`jN5KW&aW75ZMWNG,;L=^b7a\O=l&ei;2XmO73qH&0llR#(r;f`u4m@[7".Tt;;tN6j5q
%e7g=>TsIUbMBq9jH^++o&g@Y&WO<\PV[%*Q!"+-B]iu9pM\2gMBnAa)WaIZ(D^-Zd4B/0'$6W=!$<IKP8`a\I..7g@HI9ZtesM\"
%-ub_aBhB;?rZ0\'RKKt'FMWV<,pJ2*EiVYk?nj.BnZgb*PPrS4%MoohZ.bCO`Q_FN@lem/B^g`PN5Yfd[*c6,FFoO!VVK9IPU:`<
%_1`SsWi<cS.%Z<AO;ODo:KOniMQ8.;85\LTJhTOqo?&qo&CFB&.Y;uu$bLARl#sbeE^pf]7n:+1:[aBC6qZKITs[f\J3_Ll<?&?G
%U+<@KV8hVr/I8ZJjP=N':HB#@U^6(bGWb!5$XlH0j/Tn#3<lXe2[2FQ8aD*[5("AD"_+VbQ,p;KL#YY$Xh5TAF@%0oOJ%tu&fR!R
%Y`?pEl=kF4d%72l527+JoTHMFhVdBM23Ili7I5[;/JW=qki*N>I\U\6K2@,dCWjYS6l)l^>%-LZKo=Lk2rSc-?!5C7+(5@Y97"nY
%V6XX7WRHlL"@WX>Pf<d2!Am>'Q6.4qJiH-ThU`nd7O'oc%8`_^8f&4,gZgSUOpB.h\Dc9M&fk+KV5KG"'LamTG=,Z$G]b%kOQ%]1
%6fT?3$/Bi#bm6nH']<JE`DIoI(3;/QNfmD.oiTi`_/,M8+U\51K^+7*V'V.sbqj*eOMu&7=]MfX7o]f'^/`6kKm$&W0NV^TruP+b
%VP__ifq&h[,tG74kBfRZ>#9C,*O3IK))3<C1#'51&_F_T%94951r@LBH<_aA.Yc<h%DrKN%c3-J#D,VT70-RE9I1\/rX>[a_Z>j#
%,ujT"./Km"#]lSlg)I6BYubO1&e,<+fdHt7OqP>*b`8QTCIj]#!MT63aY?kT75uHXWY65d$&sbpX:_VZru/&!BW?/P=bKO2'urZk
%.`k;?O-t$F^s!(t<_&`'TX;.JDB)RZK8`CJ8!4QTO4">e4=l4\3*)D%<agNRZI;53P_8,^!#Jp]>02fuI5#;-3pUH]UF`^G.QVU5
%R4Yg=-UF/`QP7@pbRKcA89?`:;T2VfJnO\CUj,4Tet+!b;s,Asor2en+rBNcQo):;-q1)">b+ur&@?DAjYnHl9;2]K9S8KK(?:RP
%c[Q:=2K[4RM)q(kQup3=BQRgS6IsC=@o@8Fd#U[5N)2@.`-0UoT?.5Jb*c[Q"%!n/Tit?L?4[C0VNBWL!t\3u;7#GCf^'HtoZDPM
%3.lJP_3-TjWC;FTgXb)Q>o-1R>C&G77RXU@O[.3ueAdNc@f5SmceAEG[u@(KG3F4Na;ua,DgEYMMtRs?FHA1o1R/>\jY"0'eL9q*
%fDNM1%dcmjdGpZdT"D$ud1O>t1E5_;KZ9SKY!>C8'l!m[[p:DUiA-\mPG*42Z[\9I^g)lG27+aR%(T%dRHpj_?)dYJohsPlEj7$@
%1XsA]>ae?E9NG*(^/E<mj>s,/6?Lc=3m-Fpd8j:Dj/Y5JT[U:o>urY#TdF!_Q&^Y\b67=nYlY&>Q\T88Kc[lp8R!o_af3+9H>NYV
%8p^&nWB^gB']"^+&uLCeU";9X*%MinF\pMC-TU;I::Hu.\4$-CS0^%+Pp)'I_(`b*>Vh=6PR^Y`btJk!QtD.D3bD3X)b::ES.+Lr
%%B41:;FlSP)@!JHa30Gh1BkJMluJ$+q[B'MO#n;N:6K*b=24OkECLYcV@/>-hCZb57.U2KV2i\W'iiXta(77Vco!@s*nmD7TlfVA
%;b-]f?;3_Kj+Ir5dF/B^-b/G@2ni"a:[?-se`]Rk4I2$%'4k^7DfFWW?961T+'_,A(8a9ea6AjPI+s>-/et]t6QLWQQ]7-gf^qM1
%WU@iDb&_c]H6JWXQQa20&'^QOHteR8.m!6O\0Z&\X0[5u-!uoIXAW?ZQlo`N&&\NT*mJfkkVp40Kn$(CQlb:FC>`<78918_A.'QA
%KJM3_T%C8NG]Hd)(=@%5>b3%5rAf#5=*X?;NMCD;dPF.1g_&E]j-!jYY+ulJDh8K#8\nmpNc$;o90i,oMBVHC&;b:kX4')G1=T`S
%\m8g/Y9TYV7Weg.s'?`^@Q'bs0JUg[Ed<i$U&1c8jo^9!S3p@9jT*i=,2*W<9Sq<;>=<K6921Sbf4D/gHGYfAQX6Aeb&6J#QDEO#
%NC;d%U3)%)i^C*%]9]tcc!4OU%n=X<!ZUE@FBFiHf:.eHAX]4?Gb`P8$2M$6UY_(5nUV!C3_F>4OcV_!Om(>U9m'-45%'5Ndl7gX
%5.1Vr[h2.SOCZGq:[qsL^-K+UcQbNq<R5`,>@,W1l-P#7b8mD`FR,Mh-Ji[6\u%SmNA!+m6E>k"d7lF^R`j*W(K']\OQS<tlaaI(
%CKPm6Y'g4:O,sPimrI>BU^lpG+e:`4m)nYRWigXK(*B'_S+Q=oG5-6TNRp7RjLCL:WU+X#8gpeO=5G)ToK'c>96t:TNuJI"/iNMN
%OZrH4(8YRmLi`(a!F!.ke'G$$e!-c*jV:0GQ30[VYs:J-NR'Ca,Z%-C-]rp*:<NX:lCh7kE!WMCToKH&b94;Lj\g4r[mK<3=0O>E
%Jt_,&ONZ1t:dWt=OnUR!m08au8j+#D?:DI7l!^aaMDk]!E%:&u"Y<d<U%Meerb?sl(adoU\jm"s@$5MdIP1]I(=A&7l>9C#nB-Wu
%VP2j]-iPX]:ptrpQX274B%7g=JARB^iUJ';A"$?-R3qBKPFbqJc3tcV1)*"5")(Tq.DNjd:aRc;+qZ.mnC"ckk_=:]Y'JWarE-Y6
%.Go_'(dK@CUQ8Zp9^grP>#fiIOZSg$5UsLG6R9R-Y:7+.Tth9/_V=@9)=">'21-skFu4Dt;H#]A,qj#.#1;7:H1G%O#=iu38b6eI
%71;U3<=KJ!EACCGI^^*=?/j\iWgl;Xg6SO<%US)2A?k<t7oANaX:_e/7^8?*n``>%[KonH<<s-J+2#HtT5_Ue8!5*^$'2LR738F.
%FAl:T56UF62q>;?oan,RT5R^bETHEi('`$Dd!EJZVG;YfkTa'f+^e6^,g><QE-]o#^?'7THW0L@#_<n#"@.XD.XdKg'Ao@W\nKt1
%\u^p]3`>I5]R<:mR<h+%f.)&#niWq`,E5U/?-+CC-^cpKj,tGc^9NT_h6AS20?<'<(0V<["mIeMp,u'V-c2dF27P14khcHWo+,*c
%1"g0EX/,=)1RBdgD`14i`mEF?\4nVYj'kn^2rPuoBHaXF@<i2laW=ID"R$*I\\&SO,\\5M8l7[\&JI<6Z'8:?:sdNFBX6j<;t.O^
%h>4u"^d'/d%E,7dAHqY7"0#7e+L78tis6LH";P@0.@$!URcD*c5.HA\@%!qL:Zlsq]df(9F&P;3n"Si-#DAIn:RH%;@[`\mon"g0
%(0-V9$0XPtp#4p'6qjZIWd'-E:6KQXed7Dr.k8:(W#c8(L`B4`aW"q<,iJ!=30^?MYTFq!<kfAWW^0XJZ=7@<7S*!g<EB4crFI[d
%Bl=%_eG4*J/"C8I0"IDnj^mC7->29;3Kn-2_6pqd9Xht$gS).:>dXXS.ANNi@.Kk+POa'R`#'>E%Zg750]?]FpYH#o>,@(==6LZ.
%iTa0#XuC_=S%b*TIgbr?NEYtG]O6fTW-XTSG.4L_e>"Ne,T.u_l32AemT]iW4^4hM]rQTG^lT(kkdck]OsNI+7AL0@Ul15H#[M\=
%%m/d_W2-U,Sm!mKUd3OGPqf%hYGGfQaC*GFM^(=R*"6$k1N_LS0l1u^R81!0nB6r*Cp)bWGo?PN,`c=&/6D'5m<+IUG,4l8qTYEF
%'k%ijVM`#@UR'/<Wc"LcZJEYV?4hqOJ+R6dqH'-TcDga''0=U$^3VS1V<]Rr\om,U3-6u3XBujuC:JaT#c@lS@sK_/!,!oU*fMho
%\aU#LoMra/n^k1dDN&7rGcP+m@mllC<->rLNmeIC5Cs`UJ*E;r7X#@7Okn(BZ+f5BN$0QQM>[XD_ehc10dSi%(^/r8k`oCHWR1*W
%)"`%h]i`)o!k7\MY'k6V@>\].4pUPZfd^cP,J9drnKo9qbF!^Pk@!M**;qJj,o#ln,(<oc0&J+ER99rbn_Gce-[fFB!=\020rg=W
%+YE?sRS5Jg2j]_pguOk@Tu.Uf(L:o$F7"FFo(>T.X;)!gkVlYI4?6ln_uecnO?^1,>N,E1:@u(*Ed.#]*]e2IXTMm28CXI$&12[/
%/tSLd<)oVX#SZrk5Zm7J'nuaVTd#YI=')!l[rktH@_FA0/_5\TMP&$VW?;##`.mjJD)*j`=Q#s9fSX&>OdO_=1&k'Q-i$jFDF!-\
%II_D2N>^'a>NE0Md2G=oNt0>]Rq50(JIYWcEa\+:YC+XPOM@WC,SGl+O*Y4_69hT&$!YGn<JE*)<Bi>Jd*FY%3g-)O>,N0:n0`IV
%K.l`o0SkDOSC'\T&7+4@2UWJ\*C<sP%)@WNR[9r_H&,_En9E*kZ"<2q4X<KeQ%Z%kI&8L'!IlN<&HAB9GO)X^aj.f\%IcU3MZ?+0
%PqjQD$9q+Y(E(8D/:_Rr$q$ZuB0]XK3&!d]TRZG./h8\ump/*44l+!\)[!Arf#`jk)4)*(qCOmEB`K3/U']RQpOlC0Z<D0XBm*'b
%YRt]/RHh5)_/Lc[_]/_H=]RRi^2o\pYs2nhSL>8<dM"(5ZuX;fF6[;_37Fb";^Vo/kTQKK"5[/q+_I-I[Y%okqa#!A24sqhB5Q=A
%T"A8uVm/SiV9i0bdBq^6mfA);D)S]=D,]C1n#S#sCKG\c%:JVh<M<A7E]/UY?bU3;cRB-,8m..r!6VP)\A8omCT2<Gjq1'iie]0q
%"JFC(%L_]P2F1M%_-:l@#R&@$NC*fT%&#X&KO[M7]>3]D'r':^.2!7*/Lcp$`5%HV:8+d<.7Emm/S^CJ']S%jb?0rJP/=5,&j3.4
%+XX%0)80l[6K!_eWG1>:Aqq*abJZQg%]Pc.3'0>n)_ZuPdTGoLaFq3*J:WntjuLpXgc+U3Z?UX:C_$S!K'L-PFCYtce%Dum1a,)I
%g99#t6&%hWo\-kaCbaeWQXp13,Ra>jPn]_hJs8$"C"q1o"=+=7<<]CoD3eYiF9#<)2ul0@lsHJ%Qq#V7(DP(JIT<4B(d/kB:)LT7
%igokXe-W,-A:>0aV^jPYaoDj$^HmB6#&MQBV-S'$&_eVYLbd-7L':q70u2)/Z?-R"r%_ke<WsEE'T!$C9G4%kkp1t.-/Rb2@&V`-
%Es+dqVf"TYpcCW?BUrU+22WjR_@l=pD/2Ys*ihX_YiM2Ijj_p]drMZl(c`%AYZs"0dT>>c@QlYUV.D]>c1L;`aYVk78FoG/#9bcP
%WRB83[fkYPV\%'sWsQ0QS2Sn1ZXUfkGg3roSXl8d1@AsoH'Nn8^T=j,6;AoU7ciqjY[.1c>l<f*r&%:2_$G_dK8Zd5j9&Bt/b%/*
%fSX:<4GYQcSY&hT$f""(Cc$pL#bSEOG+Sr"V3;;":NPXFig:)04Z$l`<b4_W=%kg%XQdBsf1o6b$G^,0lCBhaP4uX24FYtQ<-St!
%0Gg?P@Rj!T?pMg\>UM=*e\L3rft2L5beSUDZh\n$K+Z>+FoaCAOiUI#d>F`i_QuBbjA;Dh=hnk1IH,.g>\WD*9=A"ZnKBjeNgR"T
%**D=M*'JI>@/;)(%j2Sj6>SDdqI]"Eq%c`B9%bK\.'Eg"6=)u.gGMjQWO6tP#'VE4kQW:'jCY(cr4Pf@1.+f(U%:u%C-eXKV-g*M
%1%^skGd-,p''ZHOO4Dm0VunSs`grF[+dg=p[`O1A\i;j;,!At.rlF?@68*N\:V$K(**G-e'ej0%8Nt#F>+I[BCR7^>=!':CT]CR"
%#K_$$R=Y6g7f[F&>n0e"mEr0foRQ_8'UihT4"uSgUaj)>,T,l7PO'L@ki5_L'JBV-8G4KJ-Vhc$p/U>YB35Kk(pkLY/0e4%$d\7H
%T^\,7H11Tle0>p!2B[l2>VO1'C&*rDFGc)M[PC,qJr7Ad@=8`N2ZG=:hEXr71'[=9i=/G_fYbcJWAEKkj6&aCp*lbd?I:TNf9uBp
%3Wu?1Qda0IH9,Fb43Bt4\0tIbKd*ml[*^7[nSOaS!=f'X2uA9fQHnIk"I#&)J?jsflT"J#2Xg36Q4cIN;mM)2@!Y7*S7$=]V3#l#
%=g6*]@&#\\g60]1*NpoqgW72e[k2<B#sM-^V`PsZ@GCh5kH%cj<rcg:J6?-5K6^:mm,#h4!1V"CH*NJgP>&Ba=FqP@/:3YfZfU!D
%R'_'A]%FAWo-%.<\#.!)Uj\T>+Wt]"(qC9J%C+1r*4B'sb1_![<ui#Og7Ua+Hee'*TOO'FEN"+#ktGO`-6sh.d@%=N37i?c"-=+D
%$;fYSPq3Pf8%mJ)Jd(WE>"8j>V2r$78$fV#WTr((.8u?p@U59N[j"VY`\AL4,KiD'&i=*:G&`EQJj$PXp8?Jo6!+7%]HF,KfH\+e
%XeoAre%Vig@Z!Z9&(qY483%s9Uq9r1ZdM:*nFfGrLRc(@at9Pr[g#DtAaPE#ms7&N^j2Gt+aO*PjuB7gKN%A!9[!0V:b[h:s3$lk
%9sNnEokXK6R2cp^EhT'h1T@?5"L<HoA!uEf*Gp;nAoiNGFMdP=BBbWB(>XURe&^!8qtA^W>#Ki]q%Yc;P9j39=:QBkeB8gEaXN;?
%6DFDYCAE'sLWFTA;Zl)]lKG?SGMokuP4&B]c.F.)s,bka*;We='n'k0W-%^:[pd[D@9_]Efe*!HDo:PqAd6K[QLEiqXGRVDRQjD#
%#k^>eQO(_%EA'.MGpd(E*f6fSmDr_C+V'AJ4i89Eio&KB"g]_c0j@&#f:EMMZiXpWh?Z3.IEg+Bm!%JN.m?4K8%5(H^uqDDbFDgm
%A1!Oj!MtQ3Og[.ZBE4k5LirQo(M-Oa!YnZ;4<J)<p?W,P@(de&JI.sVhmGNa-91hCHA"IIf>04k+.k9.LlqOnBnK_*j?D]cF<\eE
%3IGuSjG-9!=idYbUf/,)'P3JF?_tTT>!jpe,9],k8L<#d,JRROpttjAjVCTLib(QeF!'PC@u;ZJ\feI%=V8Q7.qbV:2hK"MFs]Uq
%Q9Qg[O]86Ni\C*T#s70hWB?:=mXSq>o^EY.1dsUHJkgc];!FcV>i6U[gd514+f%),[2=BtdP+ED$^0uh?j'eIb+A&4qJL`$p5M-G
%l--N6&4K-V))PF*!(MfHQe5LSVS6SGRWt6=ZhKPZ+SI"mI:!e@X0CM@:B%oPe9jCE#e>0IEQ%P`iSrZ@8nI++#;kg`Z8Bl*Z<^Ms
%78aajffrb<2GbaDo[d-uUDdm1qq[cP_baqg8$VTeX4H)#p4M_bU+ahO^MOL96ofjS3uCc>/*<cGldtk+@)4,nCB]Q.%_`6$jZT!1
%D.5V?V!MM:)`1tdD>)ldE7mFBQsR!lQOOB1-$PgGTI`H;Z6dc99/-hhFcs5Er'&i!?,oSV\jT'=KI2rr\Y.Bt7?[@cETeu&\o/^G
%"U>8"Qej8CEhUdWN^D0PA%lfGrHK+<9ZnQBOR;Ha`*J"2@6(8b-dp"/IHDnhVPn_iJt-B85Y_]]*doa=0#<T[4ahpf%L23<Zq?K2
%UnRf+U+/oFdD1?,.fmq9Y:ke\GF7K%mjre\Uif_i5K'PI+\7q";$M/:A&$28JcXkse6H&SmR^m+aB-%o]V$\H7NXS6Ii./p;N>iO
%kSiu/dO4K?V/didRoipHPZl;AW#PP,PuX`<N-g>U>_A_Y'mu=LAjb)(C[l<W$]$mB^>%C5IKn1XfOtS?7UDnXeBI]JUTF@3"qU!2
%qmpY1(2S(d*>G!&+g*'4q8FNSQOm0U`(f(5.7S3)M!E?8R%e!'3<^B..9gqn32NPpk2pP!-_FjDZA_<)9]:f8i*mFJ#ZBa.!n,mV
%D/Che$.:`LT3KpJ-&4KY7:8\Z1M#2kXUU@C%AI$c?j*Mj2mld4n>^F08D0jCKLf8dY-DHJV)M#fo&*#H'\PoBgtWVK/Y@[Nn4^G,
%AKUQ],;XEP=`ZXf!!jHJ5FWZG7k@3e5$=!Uhs%slT6=>:JTau0)r@j"r&0hfR8^+/VlqQfB%j%KctA&S_1&t:GZC(JG<g@;4n4HJ
%oBa)g7f!9U+uUBDlS<]c0m>1f:.lP^gZ%8LengMD:+tUK;h0r`&qYmYG!!P;:3jpgro=r>X^4mc"Vb`B<fF4t7UsZh8R?60htf[A
%bP64bZsnpUK&P)XW#*'ML!ApFYEoA@HK)SHEoU&@@A6"=ecdJr,[5d1A(%7Y>C$HDb0AL=k/*3ZUa*ak<9ee=G)L+8'2g&Y6fN%=
%A%<gYe*7".Eed=28[ZIGj)$>>$68\HnVs%QZ7YG"ATse!'A-5fLriWSpaYX,2CApo$8KnH(0aU6U65eTeSNEBGE!`>TT67LdeYC8
%i*kl5.6-5L_6>j#Cp5A884GJT&(RbfI(DQ\*W8uFQ<OY#.ROj6m`d.:VCiXY'J$b:Ei9>W@^2a3O//DUCU:&5a7h<8eK,^]C'#i+
%T%uCPXJDdh!4ush5ugKa)$WoQ&>TT"\6Rmifn4ZEqb8dQ*"4o+lqr^;\T?*OrjP((7@A8M33/,O!nO]]kS5L(PIFdcnF(Ri8V`AS
%/EZ?RUBhJJL0U8A4D@U9@5urX+omfVD-4:K/FUHb5B`0"2hCb:gRZ1"Z4)tdQWXeN$;3,nlsX6oN`YnS`UZri?!d!BM!*4=hBOlC
%;SZ4a5G4!*jA@^ZQKMebJ4h,b:RHPmYc1N(g/JTSDpmpg87edVWCSZ$X%;<QVO#X-TJ"UP6=c%RX5.C8d<iMeQQXp+#f=ol/R`X$
%FA5DIhec3.Lh0A6CoA47<nWWP7)6"g*+:2=<6gZmpBo<@MO,_X#:.l<p7&2HE#@!)6rGg4#.>er;]@GNEE\[q/_C*:4!A)XWoEp6
%C=PET[O9$22VT496AG_Lq:%4eX4Uo<\=-?$MDNDrYd%OPM9$Z%)CM2,=Rn0#J8lc9TI=Nu&9s[tOo#I^(D0i?;G;6-f+GKk;_BC/
%D^E9IG!R59G2B'q8&m$pUi0/!@7J'.mZJ+^+BnXna[:hP.4u0c2>L.Y9o__aOY'hmA:BG(1e3Pp2Nfc)44^MK8*8a.3j&^"IBBh]
%Y??lIOETl(L`7h(Nl91$RNH)"-S%-7c!a-JHe2-Q;:IiT"UI1B7I6OEeDs`51Nj8COMf"NX#s:_Wh\X8DpVg%Bg\%3p%oN,WZ-i;
%@hs43bK;tIq3fiJNMs`'o5O30l;a(`J_N<H6b,Hmedbf(2NZP7j[s0FhZ0B>[4$<*kFVFR9U\D,F-Lce1=BBlEOe]p:o%@Qf3Ke;
%*5U_$/k+?:9Z!Y?.BeiH4YQat"Ao42kddM]5Cu='WBg4Fr`e9S!5IA7Z=AP_QnM&@UIZh%9o2o_32G/PhhoC1Z#t&ec'#6c38?Ob
%&T.rWr#2'7g'9noS5TB_@9'9r.Xj/UTE$2Gp6p^N2JO[eE;-uK]pZQgrOt;E'A&&$B34k!h4g8Y&O))T1uo*Lpk9.hQ4i8lXV_=7
%$_X:PmJ2RDUnDUc*N\r?QFUPBWo@t?Fc2Q>kt1EG,@]AS2/V=7U/4lRnI`p\.@"Un$W[e"U!5N63,9Y]FNZA-'1)jt0numoV4_G+
%&+G0ef#*SP^H:i'cb`I#.4'&1*K_,plbSDS8TIb/\r<1^1uE;Ve-Hk"5d]Wq-$YWR"N&t%,rK'J)Ku(H<+Xj<^(pB&,:7+H(>/"$
%gQdls@b:Y2a34adcO.9$9uh(6ktjH;-7e_q3KU!q"Jjb(+Dm/S'j6#J&fV+d^i\;`XSjkZapTPs!5h<Gpm=cZMB?B=QM0-nYaXD<
%WF[R86Lr(E&K"P$VQ?3ClT&i8q#_1uc4+,3FtdBhp%VFp8SAOlL6%"8q*\V+72[/i/+<SFm0GWNiUda9dLrSm_g2D_MpNRn/?6e;
%YkAI%&3ni^a4sqmgNedNX<^m#]24r-.?ig#+Is*>PIqrmcQi?a]X#9:h7bXA-ta[YGAd[cTiqta%p5#+_/E*ENSn/T/-\Ws9EOjP
%HI<>+/E1Pl<u0lY7<frO88\duB-N>Vs4G7p50G]nhOAj[)lfFlKiL$f^D6ob,1EbB<8fqu>;E'LFAEkTV[8EnFLaU`%L:d)ZW/gK
%8sm4gLMSI4Aia1=`&.[0h<0K&F&NCedEcss^Kc)sOSlHD(,3/<cZn]Vb3XWV<Klc*MW)O,Q]HsZT"ju)kYf0QdFa:Af87.:f;B-L
%dG-&sWBB?\,+Bh#/e:uQT3Srh8_9@mWG<j,mab@/^O)Bkb5g.Hk@\$8k2CYEQ"LjEc&I"039;9+kIS-!r@$=H15k6c>J6-b3LJ=*
%cNi]HC?+%(Kqt>h&$K4/p?BPFZKM`Ef58;$X@WnYMXdeRc``/mT"[*piTq54MF/<X\5S=!\jYiO\+/6C]uC.1mN0a&ILr#+Ve^Jm
%P(2'g/#ZU5J_0=[B6X=19Bt>EJFVRZ1SVMEn+B)ab9K-:Gl?Ytc-dLIUG;Xpks8?g=mE14di8a<H*A_ts4Z:#]&jTre4jhsCNnNj
%Ar3/9<d)8iGk'G^%BH\1O+#jp"upn\%N'A'\*\^,C\>+e-EZ[^kO$+2*I-i9UninrAe?s>2QqP6[__>i7=!MlIdHV+dF[uV#)iHO
%DQ-nY1U6[=*iTjU'm16@,r&YBXD@>0i76D)II,)`h:Ip6*lF1FSBH-@D/IAc=0F^[**k[Oq1e,$q.&G5%D2%Rm'\Y.M@&Q#,7"B:
%p(V#lXF3UeS4UFAU1hPmn5-E*^\,#`r`*1B9M@3`?Mf>KF8ns3,4*N`MoX*R=FE>\BhUg:(=a>ma!5^rTUA,rl"li+[hYUd$cu>/
%L&,jS(id*Qm]N@,qG-<.^2iVd,JX6GFTTkiXp<;!=PZ,gY9r9/q5_8DNr@l6ec0U0SH!O1.ep=rc\;?d[q.Eb9<tsK;&)jPbj<TZ
%Q%1,jJ/H2-H_:gc[]qNq\^p2Y+U73dKl@]<lh"U!+K4ui7$Q0L(GZUCp%6i/*%&,YQn2ikcP9oq$b_231NP6G-FXVudda2+TnV<r
%?@LLV0rS)!p[8Bp(dR2?M%<er:j?YIkLY:&#_d"Qs+r#@HSCSP=VeNTkRJkioeK:$0.,8S:lYO$6p\q`9[X+Kau[1PIaq$f5a[fU
%+3GXGFGP(r*VGUAaD^XOq-=/Yi1MTo$`*4>,#g]XHe`):)$:Au,mbtAQSEp#lOWC^fIZg-=jE2XeOo)hPrLEpQl'NHqq_ie5ji';
%l)-/o5T-36+il]c&4=-ng1=)\N")OJ[pfSpJ0ZMC`oQ&#ghroKHEYtW6!8OV-4("fT2<Cm"H0o1f79@S#8)qbLDgO5l`.?f:"5KG
%k"f'dmNNOgW_<t/T/j4uSO+75Q(Ptjgls*p[.jo*OuUQMDqWiuDEGYiD\6%TgS)'SP+3BRR.t:S'qLK$A!=s`Dph1TZ<YL;Ls1ql
%TE=^`=Y>O"ALOEWdX%8,=fQW\qg27j>XqA2b6eT*_uZe*mgWgs)aMMVDc2>o'2iPr]:#@(K[l%:aV?NVO@:o?OI09CaO"Ys/+I"(
%q.7=t[UZZ&Q!Z7GqU@gk,,Hg3T?Da;7A*CKf1N0Cmon_OOrIq)hj1Y<+;ME"Pnf`?Y:?,Xj]ZX-d^HHo#UH+,i4G1DS4Cno9j@Vh
%K(&`Z2FXKA<0)S_J#DonhjW"e%kJB"Kfqs,W*(?``NXjm!>-_r%^(\YAo()qO"9J%j,b`E1#,"`Y%tYE-nF?M=q4qsmOQNM1@WH@
%DFjf'f:H'gk%r5CET^`=YC&S\dI8>fm=cH<$G'uVm`"W%K,+,Qp*jJu&GOgr:68,nO&%Bc=Icoh>9hJf_T^42!l;RUe$m?X+G(qj
%/JQ,$.OIJn.I2:[E.9E2iTIN)92Q6F?8];=.c9XZ@s:T'&Mf,%Y+]-=6:B$J=Zf?QMY1-#DXfh<opdE@`@4aopS!37qTVlA=9k;D
%ULoR;/E2jI8PdgRl:rkWF.6UeP0Ff40tT6QjI?jR%#<itXWKq_-1W(tXYc>]91k*.W)-%i!@iK*LLF,9S:uinO!J.TMQ*fWXF/q3
%5DZ*9\efRGg=&8^;HF-XZ#b$/V:,dhi-\gN1t@a'*^(P\#>#lo)>9?0COjFeSTUp/<EfV:a*h/?M+fRhTKG=RAW@C2,<7tZ;$l"]
%!SttODTY5d(*$+!OdjLc)md1+f>^.TA`s^\;l;)8h"(o3'#u<;T&1`DO8/@:e:/bFoCN?JAs6o,bA\Kl/Ns[-3HE95cl\qNPaLQ*
%m>aI)]1R5*AQZ7'G)<,WQW-.0pK;]&VdF#<WL+=e1QZbdb/l);+>o$1]F+i'3X&UE?+;t'?ANq4RQ/dgGnh)"QnX/ao7uf&cIHA&
%Y&5#Bm[YV4bj<\4Q*rc%I<!McgrC?SUuDYkSDPofC07%_Z/ua),4F*A^)H>1h04fO,8cCQ=0E-,RsVl+^4#\QY8:^K?[q+nLFS&Y
%pV6a;lV71JZ1IApA)!p]q=rSAIF.uJVmLmK?U"E1s6'+?Du]+tj*uZD3$lo`kn93W+X3V:"b-gbQUQh/)M#c1]+KQEJsZ-b_Vl))
%,5jopcT+CY!3c_d(diO77,6Q++GsCAHb;=l8O\:8e8,[Pinb7KMdAQYeo<lbY(KN;rYUk7<b)A]5DW(mAL<<N>rkS8iBc>,_/q&)
%7VH(s]$!iu5WK.mNn*\Qhb=G4,*baY/-[Y5,)55GUd03]/5aWbeTdDqO9GW#0]BL6[RI<qp+II_jm?[49P^BXmf>?%"5X'HVA/t0
%UdALB\Yhe+\;$0cPrQ2U'P6bZ#^aEKF5@"[lR"Fio*FQh@1GBoKtr-O"D7_SSfJZ_@d$Ksr$878C]"bo@`Pg;=m:2fePPOi:M;MB
%oF_3>[Ma_E!>7&aR:;P,OHfc5B.%3u/k'p0&Y6"&._nk>@<X[!g)g&>`0`D(`QEEU=%7Ld@S$7q&76h^.,;^&K#.koH>tJ=l!8?7
%P!W1UC!NeuQHnJq<U@khGDB%A#9i*[)[!hTOP]f4aAqT0!PolIG_H>k.R!*rZGf41^.\IVHQ]8='X::*15>7u7tU+$:hYCi%)4\l
%$;1GTnEp^$b\-C!c>Up"7p-?'TC5p?1_(QM]SUg#Xc8uINmqB7'r'"]J6ZR*X@3+TKJK+0kF_5j`3M]s'!QTm:-h"FZ?a-J%0[k@
%>%rodQ/5k&`j_QP$@).2G0F"m&)RlAS=30(4=qnO_[Y:5f>*B4+OC`$[A&+PY"Aiu=%5bV/mJtFY!gc40_22LI3Mp&qmeG@LY;mC
%-@Mo4\kK6P/sg;SA-%j/.jP_d@3/Lu-e>:=#Ko(kju>4lec'eJ`0VQd''%NOa1d#Va*d41[uVNLNNa#`r(nXs\;:`nT1M&q-fcVK
%md%GI[*qcOE]KgV1SC:_7MKCf(Ht(fe9R*Weq80QSjS#AiqWOu4GV2;,Jf(onXT?hhAu_7asbWQ87(d:En>O5KOA4;O"ku5UC;^W
%3ku7JHmus?.WlK2IuU1#7d1Fh?pJ.T'e6[1E-=46kR:;36ZAP6#2`+jKoZTU$&Nj5_cEpY[a8>5560(2]*?T8V!YhU%/B8)=i)Q=
%)1T'59`roSp6lC*3Q$>PiU=cb8pXqZ:b.!=GB"3aI6sn7.J1u\R"(2s:e#TB'mtXZ@L`U/N%iJD[G>j'bD^HZZ3kR4VH9J%%TAdi
%EHr*M57"+cn(/FgE&[?P0J@uq@F?5TJV-s7c3N*/M3Eri^V8G+kA_RQb,bUL+VS[PfnDH.Ng6)DK\&]U\h-a`]IQ2h_fD_aRr$Db
%VUZ>ib:[ab=./0hgs#+!Opjp:jpBOp,JM-H^E%p!rp]Jdr=F4Ns-a1[!qF)<5-`B:d\',59+nidqW!$j/&2-/N"rbH2Zf=Y#aJWX
%_PH0B$1J*J,ieML,ZYlG2dU/ub:]?.<slM9C61E_&Nb5$fP6YP=P[7RlW6m9)Vj$!qLn$MQ+k*R`7H_d-';U_(c4f/E_ph6<(AVD
%ie:Z0k=dEF.R%@??94QEnZ17rRH0ctUq<3#;O6[SX1+:7R>@%B@p=A`%s\(Obl\;s4^8C-Qc07d;ITL[a.6hXP71/c-JW<+JEo^o
%`8e'@;rR:TMD>`UG:.*Qjb3o@RXBO+L-g]C\o"_qn_H(8o>1#C<d,)3qYn_Yp0[d]<tfYQrnOKhgV7iNnEqs%*k_GE-g1RfHr"tV
%ieiM`b+s-D%Z)j$,;JP>ltSd,KGYO+i\lRM>rh,43[mcDfS.]%]'ak=Mf@h\N(R,BQkO]*$>7pNX'q$>g^fS<["8)\1Cr=WbQ+>n
%SLKt@P,!dF<C:/AIKO^D_ptVp!_f930do?i"X0qNHEhu$M>CKta2V7i\0`:lV`g\8'u,DV5-cteAKe^%1p3h]lVCFC"Au-lE9+!U
%RNg+T)R&s24Po00i1C(Kb13mo<$s$_Jr4M_##?&':GGO/n1`AcfP6cYlQVUnFY?e\rPqM=I"j(6e[b^M)?\&ZR]I6Kgt21qCaGhc
%_:uDlqgZ#1p5#-;]?XH]19X/N2MXt9.VD=$>9qWS0-@o.^e>0-YW*',=lWMY-4&sC.:S_0QaG%)=rH0cc9LKX@DX]&C#JdSW*Ls8
%npe.O@:(cGPg(:@mmmf.O`Eoj@5pgJVG]sA$L>'(a<LcGTG%^QaZ!'KEY<:PGO:^aB_qTIWlo/,jj_JPl;Nlu5BLjVe,tjcT]UsB
%OBFOkbU'j,Yu,)GJ,p#^*))![2t7@%!cU"N*"u1Whp'Bcms^;$RkL*'l`[l%s8#r*m@XC&J,"eKqXd#OQ[elSrn[&Bk+D\<mskA`
%59)iciP5<Y^]*ErmI1)KTDn7Cro5)Ls7\bUmQ^[<j*)UFfC/_/GCTK3s68hkrqRZ8ao-.Mrlr4T_]O@&=WRFb5Q0Ei+9(b:s7mad
%k>%%grSud[5hCL`:]KQArU+TQn1T2=8GBeorhoP;TD\5/q[`.FpP47rYP1%K%p%;#e3Q-k@!Y&22J9&>mGLF!<t?`5GM3'?V_TfK
%+DU/oWiLP"-)rGQog:g!8I.-TU>UqgYUd4@Rn:EsD;f?Od*4(^L1dq($gu]qoRoA\*JF<ll+C*.FL^5p$LP-6]a(n&`[(2)nq6Mi
%\$#<i&qLKlq/BOSKUi1CY)H$,beb`D3/ojQc$N[F,6eko<uQUg\F&V;Cbjk@U(Ye3i=i2Z_?]sI:4M)0P8.;qrYZ^J+g+a+-]!N0
%pY\Jl)WjpAnNn<u*>ZWd1>\dHXV+"VMV:Cf;uNWNacUF-_ce=7m?BF'Z_5i=MVD-&MPr*2M\R\XMW\9I$dLIr6t"o=%O3fR(@B2W
%JUsi47m%F!RJP$]a<P;,nHOkI,^;ZS'iR:BGT,N2b/DRMY41ZOiTDZgFdMHe`TgUYi3SC6MJiUIP#kIG,+O`cE:AFSkl_0/$0;-*
%cEcld*=#M^L(4[B#Y<'KO.'p6fCb(aPQkZh(5(,NWC)PbT2f_]b5e>1+gh(f[k>'DSH(uL.\7FrUFn#Z=^V_kr?k#2i&ugF\_W3u
%Q$'k<>lr`Y#\3O87YCf9ef#aenC+P9E1O%b8c:*S,JTas*[45+a6L:>dgo<0R'W_6[5IJr21ahU"-BhH=H75=nRrpHaMCgK'c;_c
%]:2BFLf$j%n\"@o0La%g&KUKjl7S\Dgo.HSo;BRP+KiV=Opg46/>WpDm9LYUX[V8qj^+'CMin7g,hFl(k8*CO:$%gg-ktkHQ+7_;
%KJbJ7[q&O!kkemRbj)[(nQ/g[)'fsPWM8nq+F?YEdMa+)!]ufP]`DI7g%6MW@G*VsR%?LdlWD,VJWF%9W&[bR@'O_b!B<qVrQ-Ud
%*`?6%HRSB<$p/j6Ur3SjN!8lKqp=;Slg:uH1!s`+)YSq/()d"W.1?C0."XCBrm)X,,S"8CaH0E=/q[VQn<,u[kc_%daG,9I2?qmA
%3c+Q%FVhVle2Q9HT%KiLUpi=q]J6S=Vf%!kP1qW%EdseciDfAt\\CWn1rIri:\s*@h6u7E/r'!dM"fb4p@^/tp;qZBJr&#sH9L8c
%%m+-I,5f)lq?`)SB>n(#W1T>MPWg?eIlpX?+Zf9"P2)%U$IWa!2/Yb@82uPDI?N#^6(05aSqt4NLC,Ii@[a?tfF*MPYlKoH+-;jC
%X_;`C5UM:$FL.!U@<7(bJr)i=""9uS9Au*h&tLG?/SkjIo;cI]#IS)2.$,pj&ZAE!4]-LC6&!fu.LPEsg,@WO8BiBX^rcsucgH?]
%6DfdkYJK_**oCk7PTG^88:fKr7;u?O1!W3cC/(;C@K96ETa\)3;5-'BXK=b9ORHp4bhMSIlN#<hQj&T*Y42H?!8>A1KWp]-\ZOb[
%%_>H9;4HM2F8V^@$/ac/QmomU^'tP6i;AT]B2&shs!Ycf8-(]p/QR)Y7+"Pjk_.\1?JZj,-Ir:ENn.hckdu!rPtOu:ln)+Y6<&[p
%5uJYa;hH@`Gdg,H/8hF/6lj`*1cpl?'8s_B#)Lt'SXpJ$)eTOT:l.&<ZfdRm&!2g`hLU&Q&KW4?7EXi.UI1VK8*DtkR\X3%i2ghT
%G7RR%CJJsuP#Q[O3;WrVYVWaAc?:<bKm(V#-BM+C-ILJ7<;sODO)e1ph(<t8j.8n\XN5cU*.lO@p\C9,57'hlB[5D#WNFn4"/[pg
%R.P>5.cd'%:c7P]P#d_\=A4LL1O"^L,,FAT4RuLg!=dIsI:TTDi[j'=erkZRWT8"cF<sYD8tuMQTr7BFMuD&?[lM9Z#35HEN;)'c
%_PP-F+]qX^b`soc0Y#@jbBQ(.9uK,s+$rl-]\+]rMUNg+KdW(>=ZN_]K[BUn@]81k&6gW];BJXWT92M`*D!@.1U`S1!,C?$1PGfP
%ng;r%$Y9P^gBh0HmUPru+hAK`A6)"4*@KUor&K:/\:n"U04NkM&iK4^WHrVYb[aI:,K[PV8rr<\neb2(kVfh>Oq_RcN=*X+$'=L:
%<m8*YM(G7'b6S8$F*feu/u/&1mB0[9YU):,&cl)Z-%qXB8[\_=.Kjn;99Y`WQ*kj@i\#pFHWo$R*T=sEs!5;M(Q/c-W8G&nKsENk
%4`74daSKsB+Z)*TgO=`VS^QPIl3ac,mjDYe7B$3.594cb]'cJ,@.JA+M2R^U*<g4RRb&S!.%M8<C=fnEVrDtl3N:uKV#klk$(D>c
%A\,&!F\?;$52<R\"3LE"QKgg0Gh>p1d`rl`66*N'.)T$?G#XNKOD@L[Ni9@^T%<\7CoKXS9>Oi<4.:nC@3>>>(JGi@c4Nj/P4Y,h
%BX%rB,"7Gl7dZ:<^IZM`7j.FFPaYbm8ml<qGdV;j6D(%tp[7HIA5j/I1Vn0t_sP@Kb>aeB#r;#^]FcN0<]fj'!1<gA]k0*]iS\T@
%QCP+;"]AB5-/oe`nn!Lg:>\i+lE_#Q0nI6jUPtPPJe\kZRXt]g$($bI(fnjZ3$Q+kjWhI8SMW9h_E&@r\"o:n%ga2K];\9Bj]"2F
%W1t^JO&^D`6-<t;@CCEcbeGa16Cf0s&_C:lKM?d5DS)pJ?Kf;8C+cd`YcftRKXJ)KJ@OtsQsR-EYPSY5E7B`iI:]pelb49tQFcH6
%eqIu.H!eNc?2J@E-/dQ[Rh?qfp=70?ZVT>u6GR_J%9HZECod!^]Q7.3nVW*-<<[2`h,X=]$,aC?pn[_uX#:Fagf9/T?YcZIosDqm
%g7n=7[o=_?6F.LlGMdit&t.1%ar0)'[j+]p[b,Sp3.-CH=7=jfRj?aVR>FA@Q\McqkV4C8:>&HabS]u4LanL=!Pp3O-O$?Y;lSGU
%IqFg0?T7bHWGg51PkK76%akd0BuUsA'X2q<'go_3eHI<%bH:ZJ@=$2Ao*#'?EEt7g;/9]]3[49b8G&U8H9@cPe@-ASLA#fViAL;V
%_s]75YXEH%h%53,1&TC0ZYMma_R7q5/CFq<B&("<.uu+B)'TG3-&7=N.U:J>$pgc6#IX8MG2;I5.OEK-YKK.#>c0.seNnG+F]tXb
%2+<:ArQ$B.4"m)rdt,_=e%2Mm<9#'toplgq?%DSoF%&Lg\?]I"CT@O4([)upm6nJ<@;*MP5\pc+<0mqG5\)),l80D0,E"iKQHaBH
%X?+CGZg8<^I>*RbUf%6sPm0:2j9?_4C6m+/!Q;W?$$!JE;iRMeXLX8=4-7s]W^\Fq-4u.j^h9ulOG#;c(KuX)FZarjWB$OQY=#rj
%M)+H4%hfV/2M82Vl_qlRl76K[[e$;B,j.iVJIeQldiU+9)n-.^TJFHQg*c?\*,&Ue(!q5iD,Eq5=c.TL?^'DQVPJ<m#VebW#"TsB
%GRQ/(]\bK^=sZuYarXWZ4W-'!?pl_Cl46QU=[md8KhtQ[l+0:'!b@r5$"%[]Qh7"E8X.ihY^M;0"jY;'d9brUbibQ!T?;;'&n)N1
%LJ5CQ$WLaeRRfNWil9;2;eRt1O?G1:\$^cNHG@VW0G,e@`^?+#DqrDE,m3+$0%lm'9H5;!OE%lrho@%Ch!W[,IJP.`*-TZ>W20\`
%DW\-eLj5P#CB9sN-r)k$=SPmO]P^#HNeqYR+>FrQUoGCPU`rl?s.pd<oGlfCj:]UTQRA<&a06fk^Vjig9cAo!E&A%GFXRX5eki6l
%b2+[i.SD>8T"XA</k(gr`@M2#Q`*30bkE216*J(Lpl]=2Bu@@S=RUgHZ>)@n*l,)A&7&iMOCp)VBN$@"n'J3BD.aaePkHZo#Gj=c
%1`U^Kg2<.4TNV-1FnDH'ng438]%Fhgl0d1r3[@nJiLDMmVLYHuJs3JL;RciH:aPLWBT&2uc<NnY_<Rg3^^unc6C6LsF\&VA$[M15
%:\q^6=Zam#m'$Rr;]5/g3f+qf#_mY_*'oTr7(t">Ki^C83FWR+p2&,`"]n8)c27=gIbi>\7,R9ZM>u'$oTefG"DI'Rh1\FW#c):+
%#Z4UbHF>FPq;/q`0L!2j8!^.XenQ9EWB#Z8d%WimZ#:Mb[h(eY1h5+pot1M,d-8$[G2;C9L?BO?Do80SO5X[(Cl2aLOrqV8[r!ca
%V9jh@K&):n;1:no:%:h''".RAo(=)Vg3a0^*NL:H[eObT.Z>&YPSohN?GbHKOI.+XgtJ'G#cfeW.7>']Zm$qpPNYtRLM>F;L*6&:
%#\l;`S:s0O46ge]oSZlMPE,@/H#CgB6TEpk]ZEZ?X)EBS/O14+":0j/L%T<*L#e_N[QmrNYV]VI.M0.h'#6hg+Spmb`M6kL)iJtP
%e@.m>Krta#O6kgMWX+O5BL3E5c5>`cpO.]7iH%T<\QsjrbsSsaC8WWT1gaTscJl%NO'[+cc(9B5!g<[PZNEN-j%?W;4W%H(@HuLi
%1A7iX?k6#5-R7:dLiDP$i&OTh?9$&f7_J`$s871:VE^%IoG?Q!OY7r+g&9Z(/k-mXL=JX5K7On=]jZ9'k!O,!?4r#LCgg`-b<cD^
%QuH^j]+D2)@Fop`.M7]GF)>1t7T6ilmHY)Y`nEuS][37"s(AFWbJB,91jlF@o*>3Gb'\7R+$\fI=Itj6[6K54h(.nW"Q7K^BP6U7
%B!BNJX@c0A,r8%4EVK,AU7%2f3!pT-8Ys!!cfVfFd=XM'I+I&qDLYUI&J7N_L7_k=P9pi9=4dkc02`12Rp'E+.4AHBNX9Q@8Ya7s
%bjo1\EQQ3gYjriQ8XoA1W+?YI0$Y?Cq0b=Xm1g@.co_0FZ(qjWD*8SMa.3:>90&mA%&RH_.m_@q^G1HJ6\@LCVaF2MRPO.\eIa3!
%_rVr@GrZomWK=D#V(PH_d<(Z-hpgtTF*J#."dNP;@@s?0[4]M!lTnC#R;o&9Q;YW"<o/+#dWMrZoO1HqANYQCjTo6d;@ZN2]&TBK
%q)<F0^b._C0Lm?Y_ZHT+Gn9(6>GJXNGMQ4Y@&n17MT<'Y2UsRm?hT^O-?#A'"n'gLWF/lnj0kou3MUiNl_]8$lZ#S6OVX@q%(at'
%O4[?d*s0QXU]=sFZ))b[7jH-5jup-(k2ZX\ZOS(SnIu4dK2O-n_fJK+(@8"Y:8$m`p/EXn>ktUX?-NXXd2G,%-2(hhap1)#3aL37
%YXg5E"hh_YrF220]rQSqJ;ckeoGpjQ0+NoQ-P[B?^_#mf3LJh*9ks=ip9NSJ(2!?BL/)Iu=NKP!Fg"=5qWlEJ?;l@1fDXbQb#oB2
%RR8c]9qLI#2r-sH:=;M"7;V^)q8FQd8X>ZD1@bqf?'_QB->kL\af'KDB)@UL7<Dc^_tnJFXsgX1j>@f'MDl=CWbd[t*o[0rUPXUc
%-TP%p`kAXfGTMM(2Ba@*M@Z1'5o9q*e3f4H5n5GUp5$;b,nP&7>N"8Rm#P8/hTb>RDi/e=QE3jo[mBJJ1T1QH^(,5AN2R/T$K/tL
%5ed]Qh:PuONTel2g>%EJ$RGe1e)k!G+@l(],:'HAbEc"+$fr2@,ljk_h7q(t'iA3f!^)jNK$O4%50T/V/`:l;Y_d^4nCU;T]QagE
%T,+*l5d'B)hkY&7=E,J7RY#c(Y!Xp6]PLro!&-$U:M320&FZQ-7o\LmdnB;8pR9<D-tM3>Ia\=4Lp@,Q"6)+rC/Pe0KbnNL*^N3T
%':j@[ejh-!:fmsnPbHS9iRl.',-r91d`V&EL`kL+hf8'C6'N%LpUJs=>fFr9#T\Y),(_<0V8qTijtK6DYm_CKMNCj]P[_Os5_l5P
%&Eb6!jH7(SNC6:_N%PZ^\btiDAF_@h%_IqnkR[O4j4Up$WM_+]A<gSd[0QCM"<uD4;4Ele&?]-Qel.]4GV$\./;m(b1.i55\,o'8
%`+smqfhu'V#IbWuiXl`EKKVQBMG?V=;oNN]<GGVkOSqB.`Ge*"$DN=k^]p#&/uKYSWE->;iYs)s;_VG)Kg\GC!bER`:G8_aW_fH@
%+&bTfeTb-..:V-;IiGnf(f%)5]d]c(;2*3f=d@)4pO_Y0h*<qN8;O56lDJ;>7*q/bR)!p$;Uh;+nP9Imr8kR5GVUb5L2mWl\QNF+
%Yf8+;)OgA-*`4Mn90)5o+</.^VT]#A2R7!P`&]0oN%(O.%]oCaR?%iQ/^g$F/:Nnd5T%@s31ZQ;n7`0jV_8Tn0G?8+Y4Nf4i#2g=
%Hb:kfr1/3&d('nsePm'R27-cZD)Y="TA\dLP[Q3tcPi4hBU>G<"?XII6\oHcqj1].D^<It`e&/cc5oBiN:MW,_Zt_i*bCG>j)n4!
%@*U1n#7r!\fPTI$GM5BUQh)S=*.PurTa+-bdmbPqGZc'Gm7"&T)i5'(@8TdF:S=m#<[?N[UAD\mX.j?c@7XM]0#(=c&Os#^`B(T/
%@VedpIb.BUh-R.U^R1gOl`s$'D9CGu]GqH%,cd<bL759<m+(V.FFNs4nq/CI]lS^X<:0M,aC9NAnQ8M@#r!M#NPEipB%\P0,62@)
%aFU<'Z+YjX"0r6K/j%nK^8ATeB8N9#Re%\`26-b"Jdc1PjOhej4qY;Rqjp-%3Hi>[BkWA?3+l$fpmZsXJVU$,?6s^mLPSgIX<Re>
%Zgtar'mLT]*,3N7%paE;4Y*=q_*noLkSp(]IX6,UeM9A+U:A6Z:r]q@_cM/S3iKoU7@<Y'e.T#LOA2;">`3)gPYPN+(_?orV?lUM
%,udpPj6nsPK!eAZ?;nW9at7T16A/>>-s+#?R8Y.gj:I$:kNe0nC=n,"Zd<1UF0YpW,#Zch<pK"+BJ"*^Ha3'SF*!Iu3TP>DpND%)
%.-aSkrjY,Zk72jli1S3$n,Nn$Z&KN4$G;uG5qn*aln-37HP'NdD^pL5W!*3#7q@,^\i.`a-><UE<H_AIh\Dcc.jFB/":Yl$p8H/j
%b3(m[H%i(<#?r,[a_.W-D7_IhZW6^H#=(=fYItgFNX>W4Y?)7#O(ehf3EVepASlRa"@bC#"8!.@0BuOL+p+.6E]#)\+(5MdP1/.U
%9sm$td:S9KJ$<Xk-:OP:gB+FJWa*=JDMi93D=2RP19qsRjXhk'*B;I,HN'mGJNo>?;;kH-oqmVl`s+l%%0]rYjtV,'qA7%(YY:0U
%p\ak@o_#NZJ83ds_+9$:751,:ZjtD(Y)P'?6>,Ot5V`Pf?rYC!U?N<](Sr:CL7ks>C']lue$E6M@YDlkALu@U#OtHIhC.YXL`OmW
%_44+s&l)iA1nKG\e",Xn9RP;b33Ef>m:6/`iuH/W/f,&leD9)1U!qkrlc8foAn&tbIO]hU<NY>5DHRqkf5?N;e$NkqJ3rrt0M.Ds
%YS!cM(sPmXL!,9D6r"h9E/SFAXs.>j*4At'RY2K>.N0Is"]?0G*.,mPTmZ,"Q/I:F0c;,@gKDGt=?R(m(X:j5+@,Aj'7\dhrc>",
%)_R=]Hr)9O/8Ri`%NsmP.NH=K8XTceKHL^<e6-%XPksTF^/nhWT7RSb/8oP3(+[?+F'iK\Af&IQhTJNmRg'`67<hta=ua.Z2Oj@h
%Qj41,=O%1<d*KeG@H5W.0nWm^HI$h#&>c)\+J#SLa(B4fn'dL"9+&$(^=&5imjr?7pqmXi?*kn9@;5fhUM!MErVF2^]*$1=!'j<-
%*i68g#WTnF)^0HKQSS]!GhF)obOg!(a)/`"HN@NuJeY,5[OZNNR?^k_*-)TE`qrfsS;m/tpu8!sN+"nO"@DFq@q^;07Q=53k6u-'
%D[uYU-&/VQ=\G9lA'p5-fHH>U`5[d("9:8NhP4I6E%?6mpi?SDm@NMO1QNd@(]k'K@ROdDj9tTt]+!`aVBRe,nb<DXMZ@!enLBEe
%*#/S57E8<ddc]^BlO^+`;)['g9FH`pqMpJj3P+^=:9p]A7:"UL$_`]pZfYD'l)%kr,hCfs$9pCW\Oe5OW'=t>on'1f38W.qlJt+)
%gSHLXR^)Ot73*/DJ/"0GOr[F6;38'2Q2E3OK3fK@n(k8ZV.K"q(30?SL$8d`jQ$n[93_-%iNe9@V1tM(^:U+!?!oei\u2D<mWHUj
%4rs)Olo[bcnr0eDicTd-0I*c;30<%ui3?i&F[0sjH__/;Pf/YQLdW%$DfQF257@+e/W+-2(_Q:F4/^63`@<euTT>T7&?$7hNY>n&
%4k)(*bm^3%73[K;P_@_Cpe42)]!r1^/R%U_R[(5()On]6HIdR*LbOs7Z^qZ^SB<Es9,kROLtq;VCd69VTlKbH.>B\aFVitXdpl4'
%+CV\ol+&Vm-oeV/1DNBGTa"qdX->p!kk+[[p^91$&E,:$/m.kS+KDkCo1_pra>Y7ZT!,dP?=*P&qnCW(Yjc?WZj+5ame5.8YIqR6
%kKe3l4\6;j1D]_9;kE[)g@8m6JJR:u.kGVIrf9nNa]TZorI@k?U:]*i:Z6H=i!3T(llSf>35of^QH7-2[#1Hla_/m_H!PPQ&TXp]
%bE>4l_:#8YQs*44)V:Sg?`Ej'kPS7i0l!"S(tVc3n;!s)**ZuPdhO(1HPJ4T2&dc9eL:7qZuUf?_FE:ES+I/)lLni+o2HDlO3^%S
%D!%m6-iB;"5'cD(Crmj^7^5%"qAd(Pnq]n/:kW%J6+,gC<=b-`!i2^a0uH1)OR.`ibePR>8ug$r+UlK4>#;+NDo8U];HN[]mb0'3
%3Vm.khgle[_n\()&Wnp:&87(rHJ[c*o1+h4SG^[t.&;$c;l'!%5]Z*Af\,e'+Ls0X_;LQ!8EEjNrI%bo/0C+cO[!+b8]Ii^Gc%d'
%>Y$$>iXYYK#:dnaP0+:;aV@r;_'05F?KqJ];&pY"(=b\6q3s_^arCDT'8&bmfnaT"X2i'C$Of0Oe1Ss^;S4ErQEnih5XcN<J9RE0
%;.V0CL=`6s,urR^@Z`E`r@MCb?on;`o&0GW-hH83q8WRAs7suKGk\..QngH<CAYhc](-4G%SY+P6qBFY,UVBeHVme?2n^g3,)A!a
%5POs%_]W<HjrhDW&'7Tl;BLs0HI_Us9]Mi@mXOA)nh@HO=]OjZY*akQ&`jV]VsFSSZ5HDF&=q)I`GJF:g)[gD`*so*O1/1ToJ:+W
%eK@;0)Wj>72,KI.LMHD??silnDnd!*!j#j$Xi)hf4&*R7U=tHJ3FuWJ@?oW/f-b.#?"g<XYIaXWg\bbFg<WOs')?64lJuq]YIa^+
%m.5(lRgSm1WY]HC40`;Q"N]f_]?r2@U<ScV:sc>MDlO'>k1@"`&-+:$.d]!k.@&N)R4AgR6phR'S?II&4I3gQ`*sps2r@pNrb%dm
%k78C)l-jbnSj$KAVpBQ7NtWZ,dhJaEVb&$,GoBA*S;:7=o@n2S)$[:X.ONauP'SI3D3))#<3rj5BmL/)ke59Y"JuKWC3NY(gT06-
%)6<[MN8e;BUGR%=*2cru_arVVj&f[eia:cLg).JWOV@urh1pbX=`N;emnnc8`PH*%&r98,[Ei.X]NaW7303[m!I=E(%*;$$EDWjM
%r_)VKWmE(,.=csI@3X*5MnEPgZHORu'!3p0UT(V,<?*iOE;K(*mZkn9Lg`p0@1L;lb<]ES1Pdpc^"mK>@MFHc5r39JN0"Y>fN-Qd
%-r@aN[H9oX)jQ$8(7OEu[9ImC_.`S!'1JW]RF,H.8X`e3dX4Vc[8XkFV0I?cqHlFAK2bGqHn!8$Ksqdt$=]U-bJ(T->tnQ';5,8H
%YQSNE^GB+[EleFa!N.?!70WCMM+Tr_9c=`:eS0V&H'6Ye?&gn+<1'&kZdr]S'-1fbF-"ud5=Q8MJ5T4]HD;b$[(hUDmZ8)YOt*b2
%L64.KT`kH05o>C@$Ajh>)"MekMXHi7cZ.L[@dD#BN&IK`ic&>dC?kma#Wh5Arr2b8\Eib>0_s[LnE`?2&$t99'691ai>Iahols*1
%DEOL(Oe5C+"gRr-+n=g(=MT8G0-WWO)"mE@Ak[Y52<s5dglVG]En&.Yfb+&ET_p56nHAY(+4$%i:T$bE?Z_>'o?Sf+jBlkl[(Ce/
%C#YW.kNO,h_@uUsX%8YaiiYQA&(*4(&4/kt<pUAu&<4Xr,4.9MI@*<!,X$J?F'/oh5P$[j!tQUjokB@?)*Eo,jG.`4qD?V:5PUSl
%;\/Q3=9P7r.>H6lTossng=CobV%'04iBd6]fjD4+neqc@+PMkRr'N\a*M*M88UMGRaA2p269Gb.a7OAUYC?&O?](`^IXHL35>V,+
%i_Q-&=24ZC>PHZ1^*`m"HhUpp3,o3FR`[E3OZ#6'*n?g/\*^O\-^:VpY%(_[1[RJ*p'-nhE^>kH>T]30e&WB'g-m/4`@h^H+fN?q
%Do8E0J1W-a]Su%h0rrB?JkL)HW?<DW8Q7?2pm2g=6N\\,&Nr&7`aHU$@6Z"=1)j@cR3m?(2&2EuBJ%?@3/#i-"2]s8@rnJhDYS$R
%SCKFP?Hquc3jd56A+D9U+,O(6BSC8:G[)KJ,p$-EjQCXuq%p0_n`hc5/$lS&eM;c'>d%58rYONtpAoa@aDLI[nQlfW#31%+ko[S>
%?HqPHno&CCBZ6:eAc1`r#Gd`H^_CbnARLV`]O2@Pe35Om6bY`O*4J.nqTDo+^/c$$S.8C>EN?-9fanNfbBd9ql8EL-B;h&Op4CN;
%8FuIB5L9&o1`IW'c%d"@V\q5bEDG<2j/c@dH^kmpnh`/R%3OcQ^59n`&c$-i?@CqE\(RDIa*fc9@Z3nJM_YgV%f6dP-EJZ.D$@1U
%#UC"VafW/@I=iRO*<5l^5<c!fngi=AnNV>7/bD/lFM4l-`d9-&Gl>,OZ2/`rr90JGpWF%ObTHNHXCuT#[![Ci"0u5i81lMrLqocq
%+7(CF?5;FWE&n1J;qgSq^Pp3:TIdW$37ij_0#B\V3u2JW4QqPu=&QouP%A4;:lompU@flGa=K#7OK62_ru&Tad+Zcb"pH[J8]@mb
%;h..V`qnt7;6E-.&n>1J?reo;pGe]Ng<E<bB!c"`Jcgo/+9\!u^Vl4$)+-faZH=pf@ZVb%EO@9<"ef)9g]VUq7Jm'1.R#$<M`!Dc
%\<c/7m0FYBR2%tQ@?<Pn:=7UPML&M^K;7FYOSXdA!XhWk6nlQK!At3@j'.4L%4j<]q3u&_-0mKUJWWtJI8G)5;jc_.#o@>5d6PWD
%Cr"@tk:!+f(\!O[XU1:/CIFCCNhcspnM=T0O,j?rOk?90`O_8]:ak?[i6`N7MuH]c)pjoW@X_6oA<<DifNS'ME#XYOdkM2BepjR1
%Tbhi0"LsB+dKflr+SlHr+_))4'qn86VD6tt`lK]*@17&u189Cha6;m3:uNPj12nFpEEA&CF`mn31.$]F$l-d.GmrPi@q94J?/`Ye
%*u'_B?ZUc$^1O#W4P8qrcTENun^S)*`L)W*nfBu".C4/\B8b[3Wn!J<])Fue-s;5fB<<1J[23@Tg:ULD_&o;#-9>WR%atC$o&XHM
%+N5_Z/84',@PmVM)6g'lU<K5.9^>RR6nqjn.UPuc#cedEBO1IPO6cnk#*YJN,4]f"1/M=kGSn'/\4`!9dmp0L;af2_oTR4Lqb6q"
%0m31lL)f]KW%kM4.[2:t>Z3L]5nl'\^hlq2#m[#dL:C_'fp>r2Yku4`7gP9g`qg#dlC)Q@r\?AlCi4'fUI+4)<Af$:T/i>KbnhFH
%E]T!nXF@iBh-O@d0,P_2CW$7`1-,u1G2-PK4/$s\9u6&_fj*d\kd\)>gjHE=1)-ptGT@8E5mnL4.q_]Kam?6oS_&.-]?8P0rQah-
%J?RREkBA>%cA9.a^I*/3jJ+2Ra#_eqC^Y]INQf84=+5qb_QC3??-UMD4o$+,JC2o4h[sh=mWX,8!f\U'^\AhBLfj7fnN0],eo&+h
%4(MME)F+!;Tmat1niN);n%kTIh]_i`5e:$G#I**fO#t+W7Ya,%*Fbl*?1GOm?0qR5n'8ttn'7MVhjluVniPcr.u3o:n#EF<SbrtJ
%jLcLch4ZA\Z?:'ON[::u#e&A+3>J`s@!APp:@s2i]>HD.ZO=5e!cH8,DH@L"+XaSuO/#7PQsDQfd>chuZC]8MV6,#'/nP@88[?qu
%ZRaLt'N\n%b-su>3-cMS#4"ZaGo^Z5[WLJNfJipF$=6eMI^no/(<7^G$=6f&JY.PGJKJQW0"_\4ob#%+DCd,Zh3ATBeD,9`=ktl,
%><]GZ*?/\RUB78)13bfsA0K@>5IOlk(ZM/&q&fY,U;T&c6bGXE/*)W2och?S6@-8,n8XpQJ$ZEudPlu`>!7J'^Ic>c`62pM08XI(
%s2%^C_sE)JSmXuRYr/1D0jlM=Li4(ROOEu_D.6-5[qNmj`6u$g2%;d5r$*WCg"(D>W?\C6mFudI08\;Ss3&]mMEN1A/F@krO<Nt-
%<(%Mpm7qL2_;<\ZmN,\3&Y_H'8:(9f9B,WRId4$4lYg915A[4X<1Aj5:;nBI1l*@`GL'B9E/n!V,]OQQd-"]$nr6\7U)g%gb7iKR
%C.dO4bpe9!qQf[4=%T(2Bdb&V1U:A@J\81MJ:r&Z_i'fmI?.R_d1,-XNuqIgF:dR_/j\sRACaXJ"_A-%An6<f&DgbfgRB_!r;5g;
%:i3aX8lm+3Bj(jB#(qXP7Q)+i9G5V>e!`PGD%66Lb*kQ#U*_`q+USMn3Gsb*WMqo7>-s6G8?86@;FKi[P/4lh[;``lP[;t'Bs:/"
%S=:X+k9ak,]U0AWf>%=NfW+rmkNFn3\G>`nMGH?Sa%+"3T)d3bTZB1?1/4n%Sua[m5c$?+;h2"r'(']9+]-UUP>J*@`Y@#F#m+rm
%.[#'@[!uN+7<En_?H;F^ZbFGbfoYd$GL/+,;ICk=NDA9>=>K6uPCOW?@=k,Yo.]Q"Hn!sG+e=%bG?RnPM*3=U.79ihirhpYCD9YH
%BphjK->9c-mb-MS).fr\WH-%9J-I(u:F%`:0+[GDX98P=!F^Im<Su\s^CGP>:$^G_>.[/@-mJ/W[Eq_M\)`lL]C6V9QC'<sWIC7D
%L@L0KrU=8@h)APhEe?Lir<e0&@JHK=A[cXOo\2b_#9cmVZrOZ;:p:r1h<3"^H0%t57S4hT3%Q1O5>cL7`1"#[$$jB9$I;tD%",=r
%QhUq20\-BU1L92j1L'+r<`>,>+:pJ?8"rl&-NS,dHJqIXDA&5^aj$`]g[)`u(YZn><0OIN+'7Xq&E\X1%YUcRP:Arj4/O$R"pL=>
%$%^7iDVZ)nLtQSeR'P:%`s5S!2EoLo3H\F0E.m[4ok]!+@FGM1gP(=71(rIt,hD+SFrPc>cu-XaS\[f"MHVq&,1t[)XAddAk2*r9
%BFO>-,\UaEFk$*2#VJjsHjAUiH?pdnCA2/sEE:IffN=7Ra[9;ek8+3g!_m\W^-mbao-RXrlH"p]^1bKV1J;Uu"W2[/0td[B9'd<u
%&a*b'fdpA?;aVE!PtCDmocPkl'@SqD%maEoJr"<;"2]buRBKLDB9q,8h,b@&.+!LLE#^S45>D7e&.:hpU_R"bS`1ElWWFr0kZuoT
%9)^SJ@Wl@j3pPJNI?k+f^,PXnn2o?(qM"OR^Yg#s)h/+hO3U6e^:<B&W[EddU+-4a_[?IcrPUVU7AdJI%i&)HijS58CCN2^[BGM^
%a7V^a!f2.9]?j$\d1Rp2/K4=/o@d$t%1,#HPg$YZ0U2o@A7nK4We1b.A+11A`>g*nl=IBHYTMpmlTgiUhJ2m<?@:D]"<kt.b1''a
%bR/<Y;r_AQY0.O9VYU0nL4J]_[*bibK!cijd!LZP'=LW!ppXojc6O&5?)N<?MZD%8bVKmPP:p,/4VY>ub@E=FPch."r/'j![heAd
%2[,@4WNU#M$F,<12hVpC8(o5-/B#4SA:RZg-NSYR(bGe/Bcr*rKq.?>J<LOVVQO/t68oRN[1>'Yb.O8+DCDROJa^a)]KW.fM')ek
%!g^WH#r]kK/PG]UV%%.$6P6%<+O.G.4&:H7>XXX2H,%AXi+i3G3?P%/:m$.EamR8YM3Q_S8V/C,1S<\J=G`AhP9<_b%$@P_JqS!(
%n?)62YXfDUi\EA^77To<ocYLCEeXhhh_M`"Q[re'"ogLZH:sN"#I;>s_sl4A(bOMs#\A9/63:Sdq%.<&U%[+MPATf0Tjhf>>*X-0
%/mi@kW(aZ^C,.^9!"Bd]`Zs<SC:II4H>".P'-@8;KUS>X%)jYbmd3)U*R:_Wi8;=qkWUM%q3-o&mQ1<0C$3%bcgUZK[/@o=JgVub
%=>,PaLKM3("C/lSi9baGPSB#l=F*NNothP4/B0g'0lIRCpP;qqTl>#F7u@\a`JW3-PUV,^`-W"f_2Ws\6C.rK(nUU4XWm=XXZQ!j
%Q:3LNBa?*Z>ET6t$HHbEma\k90*I^Xj.1R18[+TNC&\D)SGGZH12Z"jADQ&jAKCr=>Kk)Od95/6`@oLED#LH;YU257FH)[`AE3T6
%.#BfP+Xr8G)pg"om*^;r8@J0.T)_O"_<4]=(]X^eR4a7,@fsH/Q'caRd86EII8()-oYV'fFQZm<Lj\HiJ:PXs%TYh#jH;/'#RGc+
%T<8M,bHY%&OAnJ1!8guf87NfK4^eKsfTgg72+e%J7=D"/5[#n(kX>MdO>iV=-7U-TGHIah/_]VhR>V-p_L]$7b)UfZ"f*Ff!aQNP
%eF(UbK;J^uY`YB-\7<+qk,Em$1b0\"!7%RJ!eS!';U/#@"BFQiPnGPha%,L,>dOld2dp)H)@.[tj9tAB8iq0W.uj*cX7:8n!@WOn
%KVMHP3Cq@>?Wm_9US^u)^kag/V\4U#@*u+Ld&sCQ9*o$pM9QZoQ&oSpXAD66!As(1$+U[8#shk=;=@+J97fOEkTCu_pIuY2$b^9(
%<'_F#7oI+$+=p;k0.I8$e:,*()N]"*I_27L/UQ7oW^>]P.S+=bf=In'NJXY!e'^N#j@!@]e3QjHWIp_J;[5<sej2Q/'mJsdBG8\[
%U4]+,-51Sj#AMIB#os.^:KM]!r<;)gW$',S*B/<@FO`Z\&[ocT[3CjrV1SacWr%Y"6*M_NG7GVr]6;L]DU^ttI=3Rg-gfDCcCK9T
%mIIS9)E+JR=_f25PsZ(8'%0V5UtE6Y,m8UL'cjB/>hbs*>\R/(Ye(/D'3[qJB'3/%6(N.</8HD>CClBT,X0NG$T/'[,1X7u8X"/A
%4eI+g1nY2n4KI#b=G'uh"m6G`M/>_+ldTAdH)WSN_n6M_]ISQIQZiM^c*5QJ56`s9S:_T[/^RT7J@i?)r0XE/g:;a$.tZCUJ`sHZ
%;[oeUEUsdP:IUt0bFbDV?3QnpC#ed2At@;8$ujQ1<fO^!cogcMjcY689*S.E@^CaW49uYe:P(r]h[,ld)WFT;T,3L>A,4U,2/Bj2
%INALJW]M.eKFA;k/\f."M4=bl8kJ$ZNYWPlH>#88J&og#eC&6o1+%I;?W18pQNkUpjO/;O+LLB#cZMu<=M+t%;#B3/NJM6"<[1iB
%,V3NffhaZZjbWjaG-`pbY%P<3Gc*e]>@/J*G@KU39ZMH-3D_di*[(;9>o!RDdQC`U!+\mc1OGb*X&BY$hBHo1op0;uqR8PG"h`Kq
%2[fk$rd<8LTPU>gDp3[S<OrINio-uq&+ohIpCUFcaMLr=TgPX^^a/fkOF@#=O\i&fcF^"\f_O%cV>qB`_.`pFYl(AH3Z\F/UAH(]
%mN=7eE2\<Z!MJ8m4Utle/@7f58!*%1"aIimX>>nN0EoahkW^c[S`#Gok/_eGW?rYm>l_^+<CfA',O-fk-Bp?']0hl1dM[Mgd$KU2
%N$)*O=9uG-%&8r:]Kp&''PKtW/1d5b_U-V1?K\ENi/Wg.X!//DZ_;oB#`$RY"Yf1Y8U)W,VSrIY#/N2=cA%VLh(]T]L6(><qUW#7
%R*+j((US>A&0+,QW%3!k$^$@LO>SK$"@Xs(`4rC$2a$q*_0F[PVh/mtdf.o3eT]&S9#\>up_VHm"<&s0(2%G\helC]2=<(b[;Dp7
%q^q*0#?2d9MCj'ES-!,GGlK'IgUqbQf5'ZZLWfG+VOdne4j:uG<pZAH2VK)@[[M-^[%6qc+C>=FHV$>,7-nhEhk2,@cVQ:Xb:e]p
%=(S'Bb@CGG;LH_>g,Y&JMr@Oqr"YqY#g5?5JJS`]ep`b:KP49QOMkTHEqoa)?5300Y"_?6oD1n^7Vm>D"*>\R!CRTTfGPK#h;Dtt
%)?I,8()'-'&(&`0crL>-db$uF8,4cq7L2UdFDc0+0mo<_'/Y%=!tS=n",<TNVMJ]hjLPNKCXVtpO:;IZ&%AmuZ^OJu#=[ee5l-p&
%(ro$AdO'U]cWS6n\rU`ET,uQK0k,s#5(7,egd90cRk>"9hZ3(+f,'!*!ffAi<+A+(EeQ^;3_K`LmWs;[aT8%GMOLP_K.q2uS:EEY
%q[gPG\aU:3"K>o31\&q2R(B(23KDJeLk%iga81[T$ff;OGtf,X'NKU0qrAQ@olj2+7`mHVN'I@[B*q6P>(jP[Tt+J/h,PqZbrr&j
%*@M>+c=Y\.Dgl(qZV<?I\"(Af:qYg*h=!'F..V1tDa4UgQm;SN@,:\!lF6H.$k54'djKc%77^UbKN,m"<fXj0D:gTU9T9N3G3n:m
%^<a5h!(Uj=rPs^]NBN>C6oiOL,\pA/@(82i&#qf%V15G;=;HR>B+[>hWNCb-XZKaS#^-#E!T;cQbAh6hGcs4.lp=Ql;GsA%beZou
%CG6Td-WVl1o]H*5n==6YHaDkbHroBUYT,WY2\b+GpPH$1GAZlRXbfq+q,d:h/)kcb?dIRK:rkJ@-B\?97*X!$I8.N/Vr`2FU5q<b
%n.HTth_^Gs1=%A5\;iZX46Lp/$YR7%F!WR[Yfa9u*AUD4g4A+dQjDP:BG1<NZX_s9j))mL^dm!P,qgdmoB\ZlX#Ds8a-!*K@0Usq
%r`aHB\XR%(H'g%/HLUtjLO:/I*R*r.f<)5jC].IGnl,5kPaMoeB(Ef3:S)$5)NSap(X;;dc<'r5cXuG!\5n5;\?DXWDQWaeSrOGC
%VGut>c,-W#IG8;t_+f-Gh5lqn)WmbR@LQ=JYq]gR,rMr=m`4)f^Ndo,*n[?YjjV+ZIb/2_O[3M8='QBR0tl9`DN2&rJl(lbmk=E6
%o&.&JfNt%+d-g;dmF?SFdO?<;s'k\/17NX)Z?K30.GE.\\G]I3XgCQ]q#58>Fa!Otf>PN=/dYY:Uc^4NdAbBiiQZeL*f.^%!EK-,
%HuV7pdafjc=&(St%8:$L$I#R4D9S1ib+"D\5Ms8q"d'Tq,a[EkRt&[A>Pcc*)FWJVU-[1/Vf"D=VIB3nhn%N<1I<TFE(k?dViuOH
%X1@Ch%qkXmbVEc2jhShg:"_%7ni,IBm3P2>]fl&[Ao<aG==;3R0$b[(kX8(\X[E3.-*>o(;j`;W"#7hQ,^:W+feam!.q`]'7#/$(
%LRL**8NT"r&E6YEegGT3b+%K,A3Qu\<n#B9Z4llg:[?k*PH?[kg=DrnlCNLeTg@&0S&NVj%kifYW/uXV&VSr$=C2-kc.9jog-1ZG
%Gd/VO8aKL7gF0u#F4i^eg^7RA<DD<X9f$#6:=*MdMCDBmeJ`8kr`bG=ZSfsmpih-:N4dA2dkX0%NAK.e5NeRJlpK#lc_mQ@4tHoS
%M'NEpL4N>ZeDr(?8*;OH*I-g%jN23b22<eOW`P$D``M'pIR&2MTP,DIib23e9WO(\64$!O,IO,0/t+leUQSMLM)RQfZ@9bUA.Kr4
%#q7Np;FHVcONc@A,$s#Yg#[J>[9k5jn>_W7r?b,p"gZDs^4\C'g"J%"bH..0WDh#j6J1OeH[-FcnRbATO9P<!>I#=RV+O%1=3G,q
%o1e8ZMcGt\Vl<q+Pr48ogGmF2Nd[R)Mi(;"!PimECU;NC.%jA(OS7h,R?'j:f/Y9lXdWCW$21KC0VHWFheF3Bp^RgF]n'>lpk<!G
%&uNCKBq8g`>P7RI7VDBnn'](0gUtF([3r;4Z4BCc"$Rp=k"tNq-VUs@/k"<"jskN\"OM7NZ]0:)A$Lcl>/kGtdN"`=^<GM3g7T"2
%rQLdU8mfhkYrksJH#/-r:WguDakTZjm$laNo9>5W>Ar$8R#8er:Ku/F2L"k#+mAn:bS+KE:.ZdRP:o4U5s'Dl=L'Ib7@d_>-YG06
%?(4"?e\=*FUkSUn<!5$XoU&g8jbI]11K@fOo-RafR:aupaLlte]W:2Og!ot-j0YM/('T@<Q9E>5&8bfDXaUUc_jVIpR3"(gQ:]?2
%>k>OuX_Qthqq*H;8qbJ5/%'VnB*&\Dq(uA3E9PdLVE]3W4g[rF+Nq]SF4mN2aP$aqn6h]hKOs8l8aX,IPHA39'&7rE.nEak?ah^7
%ajP:9/(rA#XB85o_XG=2$Cb8tel!A<Q8Yc`1FPm&frZe9b="]K&]/Jsp"Y3ETsF#$#&\9AAIFnb9#!SEe21CW_4JQ2mgafc*TP>M
%CWgN0SkFpQH_&g]AVTTmde^]EDoJ%K--5$I]nL=e@be61.IN-I=G,`V5l9SY6bK$Hi]1itg;t-e_OE!d[u,5SDO(],D(tM)PMN<f
%:FRg]b/GgkQtOV;5UjeKl&^jg4h\oQ]!'DkVE=V%/qYpHDX8nY0[.=GUP_cVj48Ig@t&@ngUXXT*[piqoe5GeZ>#r"'IEr'X-DU]
%I*fRAr`Zo-`JF,FeTtQLa%q1>4#cK3%0aqhluj5Xf60ksE;"JJ3M-*mcS1Q70U-YiobQ"NcAak6lEr2eG$C3nK@U0`6@48o<#WlR
%BrbAB]oX3?T$c=3Ch@lL;HW%ua-:;&%uGQ=Pst;_?G\,ZgUjm2hlq,Wp1;d^gSlhuo7`SJ[Kq'^".s+^X_P^0M_j8@/3-D1^&b\@
%dk]EJ.T#kRN=4]'0cr<Nn"QU@<^$8G25,JP-r!(QYi%?S0ANu2TFT%.Qt)t92OhC.i?,&]B/FS?]q2lS5(Q7fouoGa[ro<>fi$W%
%pu[JFSNdWMRohVI$,roo9>$3QXIN+(/dpp%O+mk,$Fm6V2Jr<LhCL$JCJ[q^W9Ldn<StOUlU">R4_g$?pZdI*kYj'r!\6^6:L?iN
%W9Wd=fh5#0ci6`hjK@pb-'uS(nOgFY9pY(W5EP=pZ_-*JpRY+9F+-5"<R8.bNY\)$U2oZVR-_^+$Dl9nhC.ofbsIRKmOo)-)\&fi
%kI[$CX]K]ap81W2Bt%[_4XdpQJ[TZX-LpV2U0+jn$Me+idBdO%EJ40m025&l@EnB\Gm.A@ZshnSCrHF:Lg=k=W&*"ms-@-_bBGDR
%HP!]e8Za1hr8g<&Iq2Kh$_"AZ/Wo=<rS%)%eWSZBTuK?-G:u8\d>$%rnJD+i-4imUDqERS`!XZg;s'=K-KKqnHiLL4B$#@bXCU<3
%p?"LUc$%tXp>:N4NMc&anq%S%DduX^9rQ$mb.:Tg-;0\PDcuY/[D=bf43U_`$=(Jedq:pkWi-eOA9a;33B(K/!2J#t_)=Z5P6-;W
%,P<sCIAui+]<:NUQt6.l<dLg-9ql_'hs)9:QIJ4G+==e3pO3'r2KYG5O.S>"djE*^,NJ:YPko0`2#W%b;hdlm^;%9S'6>pFVPFDZ
%4lK,92l/@)l/`qd2_).;b9XbK2#S2Yb@Re-1@BUd[%LrJlmuPIXO`\Dm+'uXp$qS;G94a:MM,p/;*QY/$;3IqZ#O;GfQ@,U(UqD^
%A]MdI]Q(AkVkF(E<X`6ZqP_Sn^FgV82A[LPZu\nQ=="s=PaNS]HN*<2LUVCh:bl///rKOOpm%aP*dY%q"@HOjK3aa>6,3VTeKHfU
%.)5mU7;QDY:HESP4bFe8"umb$Os9F/aVSVJKf_7TB$_<'!er\qI%,iVCaATA=_oo"!W3$&r>BhVjFrL-7p3\mK$r(n(ajWK\^9?G
%AA"AiZU71)c8PB*Vkn"R!Ji4t3+R*>R>YXGAM?SR`l\K201Z^,oUl[3T)aI>P!Nc?,(Ui.6%j&?b=7F6)s0l.Bi6aJ22Y'dL7E@n
%3+^5"C_Cn'G5XE]r.PUZ48U6C3^EmA[Y@uIf%T.mSCU9d/*fW9H/(WXS>;\B#.Ee0UBW;uCrrGYeL2$0o<)_q?KQ27O6V6u$&ts&
%*8AghjH1PpdcjW:0-;d)BeX"J<C%R.0ekc?T-8P[VfA$=)K%"b6h1KhMWO&%J'MdDQjQu$FHYR@AqVlp%YU#j>8tio?IgF((AlZ?
%&:`82K[sP3k\lUspVs6G"L+(ZEts1KYQ\_Wp0irlM3fCJAETRFf7Sj\a``BKP31X+);!deba*i+NXu"^J(EZ,6-uQH_<fXH=(31>
%$ka=o/R+FY1$IU`$Z9#tpfDs,<n1Jqj-(:S`Q\fJMs.Zl';iX]G4/d$41)=eNK0o3!b-YjHut=q6A*;t)>UN?]D`-Qf$+TdC$1)P
%dGn(En>X0ZV^*iFUJ?[M6P,E*$@rY.]n(C,<?13[io+?Ag%]2N`3LPm-,un3-m3UDL44@s0FSd8hJFrrWFH0q2=Zj2T93Edb@[mg
%KWf]hgfr`q/39ucY1?FM`kt/nk)ad>3a@k0D@Xif_?,dS*p2YS$CVo=a^2>6_a/S1$:h^b7I]27quW&ZUbOm^:aX!a'<'TS8Dj_2
%$HofYPJoF<ZIcC3;&eL2(jTa%[\SPr;cJJl19QOQ!a*6/DDHCoHX/fBoLPLSOW:fl(j?7H;`rstEiXY\\-(7c1Mf"W#05^_:A`bB
%i^/FE%^YKT]O&\10a<[IY6`eu#JGdM%K*J*[uZ./L4[8ReMQ8iPIPngFiSX^_"r?PF`D`2^`[(4WQ7(86U*3(5O,PS-DYdh%2pO;
%Z'?gqkUci_+TWf9J)"4:.^j5)V9<=!]uD`[-b$/8rH:%lmEXrs5.NgK?a%-m^,biKh5jDU\te-A'Vl`=@]C.p[OV:<R(j^?CY-`4
%f:6hH_=%'A]t:F6W`+7[nRhiE<o'GtkFcI5++O>kTZI4kf$5&l=8<U,Yel%u%l.<_YN!V^b"')ZFa5nM;).nZUKA<Q-EcaIb*m0=
%,buQqB\f8FW]CuG!)-6"RGeW8:3HF'blFO)52L),*;;+<49K"?L(E%Lb!1aen\\[JnbTijCK8\dH_4-0;`nFq'rn*d,]%aS&FLY.
%D+nJs3sR8mFJspHiutDHOtYCXm@pHG'&e'b?JJ'B'`Xsqck=@S-CN;5.%OX?O;*`sQ8=HmWrBF[-Hs(e5!Wq*2Tg:NcrqeDl.IDO
%Y3Fmtg!CB$#`1BKks;Ru8hTRANI=>Y/Duq48XSq/T9F0;mP,4/WB?V16,#[(@_!?k-!!J"6)+*$'XhV548iFnRVS>AQNCG1FE(r[
%5JfaFUlXGkQ::E\P)e!(V3bl_>H-Hcqhdb-?2Q%aO<AlmIa6S;?Hqk1+Oj`,2@0^3`6Qu<!$PI7/IP+YR*QMU*$qfH)FE_Hlbh^Z
%)<3DngJos/I4V"U$EE;U[$mj1W,L5\;%=)8PKsSeq@K(LBD>ho06L\"nGl`S)e9=NHQTZ\e<dgo,.q'u<Empq'n<A"%<):ZL.$j[
%0H4o>E?d.[L4mjcOaOiWO&`lao%I*(d?dtNX4.LD<C-;qc0$ADcV4c3VMBT:/2>,]3s,OR$5"$4eZ0/63i.F#VtPlP70Ki4"eo$(
%F(cl-biq0lYt>NJQNV^kC)@=JeG'om;kq#C[2n09CNRjLDN^T\Jnk\CYa5<6]CXgr7UB04Pq^)ioX*/PSG2F+;@GV#Zs0=hXEN-M
%G-0]l'm>jORkB%"r%@`6UoUrbeuVZLP(E6$\>Hb.=%glO>9h'r5MPkoU-B1%=nFKcl"XAqY5V[KGts>*R5I^u$X-k!KrRfni,Ehg
%k\=cF4W`.;\69/A+=WijJ*G%Zb"Yele>l(MmU6u"Xfn(47`+9F&]\,Z7_Y$.9b6!Sl@Qe<?(8ff,(;!NG99"`K:B/;C<_'Y3jpYu
%F$Flf-<8$@,>!%Kf+@u<Bk^)\!^rr;lSEMd).\FuAk@>O6[co)QX;%*kP9VV6%U!AM#_$NYeO+]1]P(CG'BqS8LV6pN0!Pj?/3(!
%UCVD1P8O0Fjk_<A;a>fBfLQFR%tqM"BO,f0d>FJ?'k/^_'#-T8/j=."U#>k%,>NROZ(]:1`GK/77;MY6B^r=Wd&OhRnZ'"@NQ#i-
%YN>m#-5[AqLommT[Q*tNUZ]T?LA[P#-XlSq%0XXj'WK2KMHG_9cTEB[VGr4$Xk[frFF@8mp?b0X-cXYm9,B+SlT"^_kX1i1.b'6,
%^*^S?9qjk12gp0>0*C:)NoYRZ.%f'TanNP3s/,3:%n"G3&M>%3DP5b2@^nIYV+.=h*)E/P?elsA+R#*"a$/A2c&'\kp1qOAS#7?S
%kiU_loZKoacbP;A:rRa@!.rSB:]TuBZVVTG@<%@7caU<@XJKs_M[211S6$N]GTpDTjk<5sMkHe[[qoD4l!I]Pk>&PZHKcS6<FkTq
%<tR'uaN=EL\9*)bj)&Xn]fp7mLX@P&m"o]9*;eb?p@PlZdc9h]V>*HgoUDF2*A!B<f'i;l4F$q!#a^"LqZm%*!qH*H+"-%6VC<GY
%M/_.lj8K(o?R"$30CN7c17NR8'B(S<4mZG./S&2f\.I6Y3L!tH9].F>O*s._9.#&RGH"'ZbnK'#"0[..2d)c5\-TtAEgkTtSd9Z(
%mBM^nd:d)OkJ;fiN$8%G,+S7DmGhHY-1#s*Widfq+n'DBkPQIW^An5=m4$fhIn@5V`7"K^\g]T&Aj34j([VNuDU.aJ$#^$$,"!L>
%ACE0(7N]s@SSTuU'cg%=N105__QN;\!(C"N7b]6/0-d/YX]ZnK)J\T&0hh/i54)t:_]Un'75C6_]Yb47fRg:XdXJMY]D!I&""a*d
%k'=*+@XL30f#Zp2qm$tG)W8K8TEApLL%DU*$Bt/G0$@>EX1a3m%.X7Y(ie"7[43-f:=]\`^\J^"<ful+hRo%Rhdm)fbI\XtcJA<,
%CpDl'P^u!7GaD\jWV]u'gg4,/F1BP5lKg81VH<c(9t!i0N6tWr9?S[B3DWYgGVcsj:/u10q:=mZXbp0s4kuiRONFhCF4"llkpIF:
%_P&I<^":`OgLU$q_8aoD5]5_Onk[9AQ5apQ$m^4Sec)EhGC,HnW)ni4%T;/(fV+1dPReZ3O#jZ$3R0>2N\eiqq^(f?eFZmXf*<:\
%]$W&GV\$PPG(Pc,qq!8LIK8`SB:_]A`r8_n7;"M"RP!<#F#D>QcU&3(h1*$JJ3J3?:Zk^PkAM?[b/''UI%1=OGmgMsdBr[:\?VJA
%n+jZL`7.(07`SK`(&05gb,.OQCj%9gMiYZ[WLP@nq!Xp*meDK%D`6=;J$%]Sn;lH$O.XC3%OOB67:eV4%`VP"r5As@;jQ7@$YM$9
%e_0N"EJI)'!RD\>2<JK>+#m'`BK9VCQA[$]ZAO\f\HGTf[cQS_:(YL(Ojf5CrnZbZ0Bk,!:M:@al%5-feT>)#^1oS?.SQnOKB?r"
%WTUk0G"N,D3,&&e@[\!t;B0TL-;AGIM[%]a(6B5-!0ZhA$FZ5tnT"XW^$/]H&Isq7V&Ap+N#Yl$\juAO)HHk0&jpBAjHA.<mc>'g
%!2QRm%"gjHMAOAA&$^;G_m(*9]j20'$`[T\U.;L(VC#UH\0`K>9c^dm?b$K$DNV)n'`lg&US('AX+m^"]3LbGa%8=,<VP#&MbO4F
%K9/8R9?W(O\L7[Qki!M[12>ojS%GBH'<sN/\c2-&Q@0`iEV%!Ea:Ieok2tH'[YW6p%;ChcZ0eVD_j_^5bKb!A``2<`+Eu[Jh\C@Q
%,J?T(P_,OUr,hUl.p6=M:/s6q4lkm6$F2h\9t,s#mIJU?q9eR@m4C<d<3Ve(5artMOs4kRAL[!V#&qe>>t-TTDL+:Z<2N@TN*A_d
%lIB3J#9?W/ho+J33W:qA)?j,e^`uG;:#QqWp7u9j$T73Tpf<pR0YEPYC5BD_QY&X+b&3BUm6;j@0+i8<)6\!V-c<:4rTrm9S^%_L
%'!0I-Hpp15]ijuDos5kaY56fi>'+V!1Up=-Y2ZIGE>ZXc<W"kXZ`+e)1.)QK?@S8.2nSB*M.L<RL0X3>pSuahQ\@@j4+8s3&#+4@
%_\+T!guaoQ'sU=\p#)GI)%5NZgNE@8Kp44iT-HtSLmB_@/2QO[2p66Z?/9lc'$tMN;kY6c&M_KAEkflJ%JAuF<4[?<8PnF$A8WRt
%>F["`=g;U:+rol;B]Ee.M_H(s_kceRPa<q*f&XE,CeGQ+P-_>XWVMK#C6=.H@*KIk5\WY>A-7=X8DCb7N8=R!Pi73l9[OVbY//f8
%Gr70:-l[0Xh&UH6=b0":38:kq.1BoJN:b!1c$n5>[ls6RVFP*U6B,g,<n%bJ\ihqHo\7:<%uMf)glLW2DB5sT8)GBF<I[Q)/s8C2
%771Yp%%;@"c-;pN8e]Z.bD\)m1mN-5fTte"ka+jLK.XhE?&pD1nZW<is(l8SW`n[Y4t:4CJWTQ:8\aT2:2?:B.[f'>Dq2+`fW&a.
%\fb4_`DJI#^c]Vmll\4]mmBubC0I;;:@YUuGOIA1+.ScOH%;)""qsIRArh^e&94W=Y=X6"d#r=]%7eF":e@TIs,;lF0q+[c2YO-?
%;L<2lr6_Hh0rnY4#$U:m;K,!SQqp7mJB96DZmn@Xe"]fL)tS$:j0kRE+tWtne$E4fl(?'(QhZrnQM]p8L5k^sTB5#fU=a*J%2#=M
%BSMtI[;D0IEAHla-YlG2`p(\Jj22h&-@M=T%7DaP?]FnNAY%Wuc.>=i.2JUUa6e&/a+4\h&M6OUdGSpcj;$QmXNY:S(DQoPNq&_6
%`[VIX)J%u$bj)p_M?mKRLV)A9Z$qRiGgje#%VD.qBY'lE2KfEH"br4>KFR<g#_qA@\Eg38Wj>^En\t!b?6iZgk_(e;b/);s)hjo6
%4o86<osNn:*NQoGPmhr.?*pI3h9E&;fBH@b>`jl?TI\!7%2pr;;p)OTOru>!r[\5I<OJn<C<'r>@tpj)J$H0(e4<J2;ES-Z:(?kq
%95%e$f"T0IUrMMFr[K[NmS$TkHn;ICY`FuE\L6:cQ?d;midBs'e)$#SS.m7(niHY_ID,TJ?l,6%P=WcYc^0)tfg1`:QZ3!j*rL)_
%f@K-r&"as;G5GBibN34k^c1Y?eW0IrVa[X'N@kL'R<b12h`o?Aa(g6dY4FU-`oM9K;10%@3OR(m;n;lffAOI]0"^")s-q4,A(.,X
%r'`6+m2p%b%JKT)(tV!tFDWinI(AY+1'btoo><R;_FYj6.;m$W*^=YiQ%3oN/eM9lCDYg>,[C3%mf]h*atFNOMoCo&Unu$lV)^GG
%B+nmUSLlj&p$fT%!][C#F.!@tje>PCN&??UCj9#JMN+uiIHRMDCHs&R%m<+3VssOCY<#rRCI5X_U%bb*8bbqk/*GY'dLUm^9\Skk
%ho9m]:Q4i?d"_ne4p$I3YM\[ZE)s$pkI>:n4G$<YeR\m8?],M$+7^R8(X?5=Bh3B<kE9#d3`5MlqNqs1o]N5T9fcYUiTcAIZi^'6
%N:o<<o15JaI9>JZ\'`?e*&FCLK<mGXFT>QNDiZ"KM=33Ol`Z#</g:!0!UfK$*J(D7s(5jCFu0omGo;.JWaYr`8"9[krE'KdqN+\\
%b'3"KUs[/"_WH/YjF/%ucrD!hYh7AAXXA1!W,u:ng;$fp[-iR[%d]^f;ipg)fmC279p4g'n9k<8LO(*d$1:j64i2Z28rj2o^kV(#
%'-Wl3)Zj-k5Tg7*hbU>]f8dLkH)g1Xh,U9<,2(3SqoaqWlb6`5>%.Y085L:o2/7=US2Nm/A&0E*.Fj#5]GeMHH2SY9BeoFKC"U:c
%51ERh+tf5^<qb++WQ5*mdLB!=0rMtq@1<YiQK,/p1g[[VD7m_*pO.hRm*sGp*'gn6o9<CY4u/![g%9G"8p:D30E<FdeTP\=Db5Th
%LPLj7=odXC3BZl_O[5b>M29#tDKacc2Hj/L4H&F#b\+[g>%BZ'[NlA9bTQFQc^LdMe$51lHI`),/[hB.3>u,P`R)LFM@W&EDV-6q
%$RJ]kS:!2!Al8Sf=kqW?eMUgiBCr5YM.o6DjRluSD2*2_P>4h&0"o$&$Y'qU2XK*J0u/5OO!7n[Qfa(c@gu$#`>S\m/7C`pc;BQk
%UuZt[#:*mN^MFY,nqT\<kLr^bNr@mEl;u[<j!)pr9OPtV[+c<dk%2*cnQN'O(.Vf]8hcieDe;NdX5C!T2Q,C1Z^L.OVD\'r]j8dT
%q.i62[(Ck)b;CtPdEg5]i:O75UVL8WE/3IEHQI6D5^m,ka[=6+d/oPI5BjP(BK'`"rL=Z*7U8D$DU3Tf_W'2Y7(W]=#K:Ld6"3CS
%Q6X=mr)mX<:d8&R&Sjg*[9Iagb5q>Ae)^_%_5ZPF2*bYN$#a02Y3NabYD\Or-2UIBOJ9GA5'i_5)`apl*=lTWB_`Ap]'$.\&8S<0
%MTm3Fd8f4^<q6p(2K!gh*mM'OI106rm`>7TrTE>B%4rZ+aj5Rm;-]fSTmSi'_oK`.i`hBK\TH(cGCU41)&(p[H@?iGd26E"?DXc6
%outuq(B1Y"dpHC_(m!/8&*m4)l8WDCEO:+,k,ePrQ^989qdmgMYbNL/E6SA-31uWCC`#gD*_D-I$:WbZXck@I$,U;DXin@+b9+:`
%6pS4;2G@+bH9cE]/LmHRoD+B>9hO9$(@gI#=_`)N>skBVoqb^5qnm-qAG)I7d.uL.f7n9#5FBKr3YnA/Ir02_%%]\5eimk4JMV2n
%@CqI"D4h*gXHg<YS!!YO:+\'%jf!%L50AO9,l;b0RVA!l.Vu6j.70@j["K&5.D5bND-aML&,XqCL%;hh<hZcL4h+JEX6%Q;4T0YF
%V<c%Zpi@k(eq:\"Ad9;4q+4cikUeqKp*;9,A#JiMqsA(8D?>X+E)@eS9K,+C&Tk-'&-*SP](&^,2bg.*B]hmjWF;fPZcN1iU]Ol!
%R<Uhf%=,Us_Fc3`Ao*T?K=':9p;V&G;:qmb=bdmkp^b$\b@.T3)+!(Fd+m&:_BO/d<65'O.,8o4cMG&WY3nT@GLlDW[=GlPnDf(X
%edtLaer&-JNngf*^sL!=,\WG<m_1AOj9J=g5^e>[6&*A'7l`/!`Fsei-n$``XJB4a0%Pi&G2o6m!kY_'FlrlIE8h"DmIE0djt=(2
%MdcM-4I(TCUZD_9Kf$+\Rth=ckf'&1UPg'g*ZKrL.,#/RB"HqeD8o1>")UUJ/>=pgTam[PdkS7ogEkS#0(N_a%lT=N,DH6cNL*9K
%00=0[!LH70Q:Chc@O7XI4X_I!!TaH_51(F;d]LuO6%'ce93m@.]$J$6Ulu2WO#;Stc)+F_;$#G+\u\EN_K!*A[;.LB?C7ls/6bWB
%!]<A=f\Zr6XL*`:jqJJL#PUQ9b1tKY^+%9Lq^Q.LJLPHA4Y*F94!/6\5G!k;h-"s#5>2egbY/UCVbkfZ)X3,$5+,\]mBcF$3q9i=
%iT7FWICM#SdglT=0)7[KUQt2(fu+htc+7iE:`QNUE8A2s85l;\Fr^3j7)]I/UEBf%"j#iA!=T]qB*(V:':/hln\<0ka*)2sDb1ie
%A,ePAVKLL=>:.FP6N=rO:='o"Moe'm6"rf1->5%2_42iT)+@k0iPTqJIBTcU6DMuo^c@!&%<$3G#JL+Fql9P]]9:%j[BuRUa%Ad.
%q+>CEk+A*`-5WAP4E%5,j4a4(8EH$AQoN#<IpM@*XdNU+i3XUKZ]SIJn6:%T>11od%J_g(RoWL`0f8`qP.NSA"K8D`#QSI*g0(0Z
%YWXIUEpJ1a2PDm/VRqsh[XO.,LC"LIf#5cSNJt6e?Jmp,BYH?r!l#7D56YEQSUV=rRcZ"OMqbCX3c*P+Pas88G!;E[HcK9sjF!?t
%`1!*kV<d;fVj7Y75\<r_82jM63QT]5H8Z6<\FnO^37Y7[<fSbO5@p8LRXN7nUSI3d4>L!A\o.4U>+?="<;f#JCn^9/&]7ioF_B_;
%WSoU^_NmkKFhDKOY3j4Z[W8s/;:/+IP2"*=(<l`e2FSpS#7G_TN5s@hg1@VE%WVb:-E=%&br)b,;\GPk?X5l4N6S;m\9u&ZgAR5Q
%L#5:<\(3IBX"rQD0B6FJCmYQ>2Ksh=@luIXY,5VnK[94\G2%C)G$&qWf$+"W+rUdS1D`tkZ'i?5A'MX-hCR70RQG)^HWcY3.[pon
%[*qH<5H]oK9aF`ZglmQhf#?Hf^upUp(1?=2?+.3U]M;/0@r%7@PbG?fj>)j9M-fl=fp'LicW&c)eRf:_eMWj-qV#@2(\8.Da2Sp#
%FodP^D1*Md;4)E/Yml"85D_Mr$Z(*Md9<[l(We,.`O+qAlI6Y5F2"`!JN'loVENYWj+`@tFE]2t[I)Y6_g=&n9k0I;:Zn@QYGlBb
%^)Z"9DW59U^^V(kfL-HT8lQg^?jXqO$lI3XPq+?.-l.OddE>@68[(<M0Tgq:(tf>#F@ZiLqSQ)EBGFOJX\]i2EZ']<(TYOS;@Z4*
%<0U]td:(PmLmE0D>>"KpnJ@T>%6cuLp\;S8<O<&ZYFQ>p/erFtJZdY,6[HG:LLNl_R,ji6aV_ogbqTGQmj3lpCs9Y`P0na/l&A8'
%948r2,FLYL`u:/3Gd8SpFK;c9WZ@=*SkRU/S4B<mbD'5`?'SW@o@?XNA6ukbZ^<<V=g/g@0iomkaK$5c&W/=(W"dF`EX'hV.;$#`
%b2GIMO#hU",DMjU*SPVTMHfbh(*oae9"O949+ImQ!r2?k=FJ"tI/8r5me$@R*RHtF;[d^>fCu6]f$MoCGM_DYoThsdqMJl*bj'uq
%3h*O6/lj;UDALNM\r9inOcLVX;[ggl28$;UoV<6\(ZeY+"kHH+nOXh[s(#ngpk2[f-j$Mir*IjMU7#!)YUX$4MDJm">g/PkST$DR
%]):%?5-C@GIldLGZc_31)JpN5KF7Ch3oG96Od3Y1*-l?K)W%sSk8?ZWm8<&/6:(,.<.Q*E*h)ul.:sO<]]0?nlUopNJ3=9gK6oNb
%Lg[bOc#0s@O`XB*a^rZ<4H2^H*nOfnZ]tfr_&U9'7kbQA]uatMjItAa!"SgB:E"'BDL1aYdb@s37,<8j71F-;T'D-E9@=0kiNIXb
%,6SC7$T4r#C+0p^SltPEgKFU(ii7qms07@!?s`:^5GbU;3if<O=40"qT<R6pWW1kjqS2<N^]']5s3H2H*rb'3A.Mh*]+,Keb8=[<
%ouPO)B_*,ra@50dG"Q66%-66OlE;mmYl"]GYH5TbdHeUk@b0G=WE@=<3ATu5mYE:me!U%;V!Q'/&>'O;gkqAJO4DQV/1miQD:bgC
%ph,`UaK8iAq9I(C-54:$8m+#uc,DR&c&.*HXDX)`<6\Db7@uJ$f#(>/Qf5rp333>LGr`Y%k-8fFNXCB*o27SI6POL`%n1WOOL_h(
%.3Vj2@BO0Tk)h^5THXqFD2pIH_O*pJ)b)>YS@>;fSjouR?DY'6Io$q=Ge=4cp**m#*/8-pA2U6mNF`HI+VLt$bT_HYNE,Ro92W/\
%UgV_k>9=3N*Aq%]PC5T7CRPC!RmU]6]*jkgej%rkj]C8!7"T6o"8Akd#QoB".gh%VVEuHqFkVM3@eN-T6T:_dJ=(.2C=21+gricF
%Z)c68PtKick1:lb3[F'27D$u,YC$X<F4]]c$C2*nB")i52H@P/<o=CCOi<,AnJWu7Z8\$cJA4D[b2ZE(A51.`,D(.mS1+#1@WUDL
%p)R"lL)b36Z,^g&lI:_dnTO4Vp[_:s]lCg^_EhlO/53[rd_(B$$,uh)>>^B%Vb*gIa?d\W=gP<;-+tZ_M,InaEQ%hbX5SeX3gNl<
%jmt$6]J&i/DH7/`oau$s;Aqm,\J8>rH#n_6k:%j`18RocjlhdJXk;k"&]8L]OAJhPc((ln%['?W]AP<DRM(QFd7V2mh9'EUF'56&
%YF-"n3e0C4*m_M@Tu=qa`GARF;G_tXp14^>m_\IoeOH%8EDt:Cer@h0l"[W*_n;iOpHTH]T1btr!d/Tp)pUMoe,5!9s8S$K:Y^[b
%,rc>O?:Ce_A-ESH?VWj.m*"YlHg'>&:VnIR/C/KTRe`IV[dV)X?!g-.'i'sXYsIm*4F4cMa,!!10R*"uHT4eS6/[3nQ7@.gX+?GY
%LrmOKREL,pmF>sYQK3b3;X4OEabqR.@PTh/naLS""gs7r[cg`pCgrqe)CSe6&_+\%kSg)sZ!(Pi4&HSdJ^s6ag*cYReZ=rP[I\od
%dH[/Gqhoe%23!qT*\#VC9ifRGSd='OC?8Yba<\d`CJip5j&<(cD>3mCK;Y1\:C\;/GFd*b4u605Ofs+[jcM-b#LF7!b#dEq)Lc@#
%rrs(JS"Qtu>!Xs_iGU7Nr*u^,ph$*B$lGYaXYqM8:92_L_MbL+'gtS,k^mOn1kSL$FqDMT$lq/rGXs17]\_gBO>n,rB@m>n#SY0I
%(`L@G"&W8HG<fXrNX^b[IMF?BZ%SMGBbi&MKtqrKpaU$3-0P+DarE,SgG6gqUUDJLNm-#G!d5^OhZF.tU59K$O8qPV2c%oM;36Zq
%"^(thp^`aoJJ/X[,qg(&!3R38JGHtf9P2ZAHF+XnJC^h/[APa\!:uLCnkVq3pU@T.,0.c=6)joTl7CXQ)%s";9\,"B*mB[g$;,=f
%-ZtYcKD46,.^,&sf:X>9Z&5A1/N5n^D:IN["XOB]1)mP%$VR^Ee\(^th<1n"Asb\t&N:edd@"=R!%.M]@$NR+5htRaL61OkMp=s&
%3mX"-jJIQp7pGYR8TtImaU9X%CA\X9\N.$-#BlE*m^@AkB-QSme]bNo\2[#0"]W($][@8*^,U`33nUk&2'e`hDCAi,?G"5193=S)
%%M;ZH@?Q==GH,IUaKRjYQ\m(>J-!KM3_%q08Yn++><t(?N+'=81h[SCS,GgAO@$=+^FS^lem0qk*l6.ig^.c>2-j)A6T;@jFM1g.
%?MJ:GU.@a%6?L3:2St#\Em-Ns#?gaPGq%C.A%$F*89<bB3#B3$aJooU#hR#&>I?4ubk)"nH5e>$CIKpshooF@U<#76H,)P3=Y^P+
%K>c_&(o:]Bg_3<l_qp:jn7qhV?PSV6+9ur19[n_r*)tsQqL48(&4V7,!tJ0IQtQ=_i>BdL?iPY)$l=U(A6b=T+m;luVLuYN,(LX9
%/%$]B6G=DLL,NRQL`X1"r@gOJ3lF.HmNq=aTM-2FdYd$NKl&_m`L9JDb+"r<,T%G_Lq4W",nRp6e!NgR^htJj:(0u.1hA9Q,q%Lb
%aI*HMU1tBBk[*m4R6nlk5\\,=\/;5Jfe'F/*"q,7Fu.:WDFdUt\:1VC5@sj(r9pDdMKLVl&Rqih`@i$?:in$VeCqL@)/4-H"S$Gu
%c=:AkVu\;P-n&uN0%@<U7k:\e/#O8>5Uhu3MKO%e44/iW%8<2QCRUd2W^(_K\FGZqq;'s,rP/C&+92$,O8o&pJ,#@[s.:D41LP\A
%T?]4FgV<RRGQ7&ks8K3Op`CUWqB,^qmpBH%o]a-igE6G!ci21Es+Dd"$i\+fK)d_=f`rXs8O7t87A\uH_Ru-#a*HK2[\^C;I@DYH
%a@W3en&Ko:<u,r6Jd>F/?G[M93[]6;ag?Z0V+2nn.)8-B3(BgGY5"E7DjtG2P^'eTL?pNE?jJ^OrqL7]k/84Vn\t%e5Q*pUJa0#M
%I_rL;b?e8[RA^?ds!Tb!ec61Y:mSE`Yc1h.Z$:B,XMlgAT/SE`N&>=k=iG4m-D(?0'kIbRF`B1XIb@)nKoNuAh:AD86?T:OEYZD@
%!`Vm;_Qd#Ga/q>1S#_lm&!#0Pmg3]&a2=_mLqqhDa0o+k7`_s]n3ediA9tJ#eX%"urS5-e!.3leq5,h$pb+ltQtR(e#Ru2Z6"RQF
%Qpr!a9!k&\C#n:OOpX#QH%Z'U9B.oJ+)T54%ND#RWJ+nU-/*-p>4G23[Ch\))HHp9hAeCC7t'$I?<.s?bIBcpJ:9a3cTH7<.q>7=
%A-iJdf=8uEhTk&.[_b:1h,ghdAD9"#_`nfO9=P-;@u9X5H4mN0YG1Db.Cki*-.+cY8_d%JRsEpIlHeI^GH^,[5sXLJ>7e8.C/;"/
%-pm9P67aOeMc1^/CI\s2h.dGO7jqgLZa'/f%[DX(l'_0H6!fP#*o1UIo.^ecZS&Ao%\U^0GN]t$hV15LLWLU*N;"FE$Qh\m?Iu<M
%pY;'T!U"\XG[r.Re,#:mZBUsN!;YhNA[-2oEtsAClbMON]Bb0Sj4J!)pL-[+=eeH&BZD"llXQY:oG.sMj?/T$8"bq=`HEqiglHN/
%1[&f#_tib_I<\8T:Lij0TBp\GMlC(XiA\N`*UaSf)"@_n4_DA(oVd92]0G4+rq51KiSXY(ThVEInRhfY[iA;u=QRhDQ#3K\ZTk]s
%gkqBshLm1&EsBqFj?_6B6B;q<b7=+F3P+Oupu,=L3/'8P;?sl&9Q^\tO=g@A@_1ebal;TLGDO[a[OB=]bfquh9DCklg29MOQo.f?
%3TeSOS$ADGpbLZtisF/0]VE6&-ht[U!d:g%L%"lNLi2aHU]GUOhb4\;.@oPdaUjk@?H.%US2P'_Wp>hS8V3*gK(t"0*$H(V6qR?"
%^fKtbQ=#-`SjGUO;j*F.1A`@mO_[9c8Ut+V7r8YTNql0,9W).]9P"PlcgZJ?Uc#'i/@#Ua&^+H(/Y(G//H#*TXj[lCh+\pJ]?)#i
%g$.PaV\al^m+7^+Q_VJ,HMisOabErKp(-@J;,^pS)45Ee'8#8qr+^u9_"8hHXiAJ9Rop;m3LRpn)<Zii/7N]S-,'?b#]T+Frn]ff
%?N03V8c7^pJ$PWT%,a(ZHPjU+FSOYUmC2$1"`O-"m7TW%^)`R3.23!sV&(W.rVN3^;#C+,E8F^2a5.lh&>]9mUF3QIqIUc)>dE+F
%T*Y0rZMr?&h*q]ong4l%8Ld?KJMZ6\:)%!OnXKYVVK+&013K7AaBIl0\qV)QO_hT=jnl/G=T[`EI]L-+Of?fkqZ,`H:pc2(@+st:
%V>`'S=IS<QWB(a+iN&u'\(Xj@1IXs+?Ws\VhK/2K,+2V4hYp6t't@@H!=39QU3@;Nm!oqL@t^%\$+$LdigNE,Qq<p/4>afM-)Ke9
%.J7ZR.dg,g(OI_+B#Vp%T\?p_rX:>aP>o>gragC1dLaY#-;=&m"JttSgcU3cNR,hh8S-SL]Y?;)(P@uIR>pH+"NVEPBFHYToWG`)
%)c\IU-0MR:q3Za[G"^P+N^&0A%a8OtNG,9uF4aI0%6=28b=bp)X.#=FNtYKlX%F<nJAj'W8>2J]1e/uU=="1=.>ogt0@j1$rJ>?!
%?%knq[_OAV*,:f^&Non^Z*=cc7n%B'g'aqsesAcKB%9Rm:$"t1)+7"ljd+#"X&]:r8"%10JP=&JBLf-1l\AmZ<4a;TV8XHPqd2fI
%8>R_qD57p[`QIN#r]gi=-4.R'bG9(,S4cFDH0363ZaT2YC?03FU30BT0G^fi@8,B[=W]R[6$Sc9)7sY"dUi!Eh;al%X1bEKq:%pW
%<J_fee^FmukHOW^ADZhCbEb_f%Y'?*?J=h=2J!]Naqc"eV_50;.!ToK-"Hpsf#`W303\eW\\iU/gEpPEj>F-@bt8KgUe'[:j]1cc
%EiR_R$qJZEOtQma,f1nY[^%gR)o?hkAA(KaS<-\hW:+;#b]3s_UeM0N>;$2S;Wj\>1$]ks/uk^BCeB=e7or=YTTVd`bNGN"#-TS>
%E)Bg99ceHq4()&IW^Zp8bkQL>NaKN9kS.[M'jaLH9Ami%EtkjjP>"YA+B;!V'g>=-B^m(T.EdSfIp(dHS-DjSH#t?dTa?p`5DUAe
%)4Q(jgGZJi+0@-LE=+E'q/J9]AuqKL"StLMR*ThVjL/%th^9HF3/7cHda&T`ZT7;S-"0:h1P+j>M_K?8HNeHp^tm:='j:+YXN\B2
%2rOhe2oC<D-s-E#PJU,[dge%7%5Z.NU.=:4:0-So,[MI0=:AOo/.srE<C(4A_#YgS-oXtG)g]ot:SJcG0Q]Fl?E?$dh4NWA#6HA9
%)mb>eNN.[RP7lLq^XpE@Ub:&8?!<Ls-)ma(#B*V%k"Ru,WR[3,3".1/bret1qk4.N6(SLs'gpOq8+^2L<e;<X@l'J7NE<5MH!KuX
%_E&fL)]"OkMn+i+762AjO9I6Yb)+it,!#uI]-!'p(Kk*<N0FPl4BHL_o41PW3MV%u^_-X[`5@Wm[_'[!addB-N5p#=a`<8?g<XIj
%QU;Y=r[!iLVC>e9,$b;V=r944V;o\;6HpZ1<S1(;jC!`7TY,-DW4X)O1sBSF>(!E$7VF4Q;;`%BPlD/GEQ@TcRA'^=S.'>9`.^Y6
%^2CDu*Z75)$+O0Uq+4YAG,"eqnUf8t-8eYq*J8W?=0Wuk,!q69WN4mK*/^4o3>P?I4lNrO<]HfL$12Gl'PUdWJ8[JWZ`qcQ6I$5l
%>"Kuc1YBuhX&/[aWi8.jb:9gk?J>X(g="<=TKaIC;4]b]"+<qe!uE2\g'<\_>^O&>-6/S$O8su.]=`4NAq'3@*!l15&:4l7NseFH
%9qdbdkM\+J=HF36$d8d"8/Dt#aHjkqhVlC<.JbY!@e24oB_JK(75JWmQog4+%6%pM!`[WK3gWGZ5b`(E$V6"\.#\+el1P6JMC^E3
%!$ED]b!aCLXW,3[-u`?j+d@`s;@)*k2RQ![1i3`;2>Z*o6/"3,,=HR&?_WtodLS_c?Zh<rH4*CMY4sI_)$>d8S,(I!Ae9Lp^Zo\o
%66^fFYtPNc+i_*EJfto3J_=L!SS$UfiM]>VPO*%8rkuoK(GB'%7O1\IoN:#Fh#T]`dPSeI7P@8n0-kqkMTUV*@Q3?^b(i-*F8$aL
%fn%'h%O@j1Z*3-HWkLY&c4E%;>c+FW8(DVi;nS1@QLrC,_k+h:[R6DDaFCGT)2kHrM-*)=f%J<Z%QsMor^fU^Ye&sA"O?FLeS6gH
%70j+N#_t[NRY&S8s*=O>"+Pe=LcYIIZec7JMXrV7j8G%p2R:R62en4bDl-n!jpTU`j:GLkGWn1=8A2hmdT.OW6tQ-4QKkND@jWhp
%j`K/DJH#Dg?(ZSrk-aDPE<Y!Nc1?@!np#@6$&&EQ$>nB8!8C0rX.P/mqsjPlqWkW+o.Y[]F&qgA;DeTMP>=[k\69`bIr>FX*Eqe;
%]`q7tK[<aa*S3K)mq9I!a61F0@Mc<'*"l@N>U;@-K/4%+Vk?AkM/uP%nke&)rH9GqUYO,Y:ZoS/0+N@i!KT`Y]m^@E?h[1,eFfEI
%($.u*qUP]h]3VVt!\`G_%g%R+l!'WskN?b8i3D&0qCV47/LDYH1-'dko(%NO(WUI]_"1.KlaO[Q\)<jJlK)5@B`^lpoW89ZG.V(q
%"^\osj<(($^/[jo4F_,IO56tjDh46n-&%PQ^6MA'5C[GLO56tjDh4g)SM'n?rZ@'eJF!R)fhVjIlEDM,7C%oG6:1#">N"K-[sSR7
%'hm?f,pRB-f*8-idt'/B+NR5Sl1FZF/b&9+:FA,)`65%eG5;gSf\A*-hSIdTV^mFB3[==@G6C$X#Ti%Vl+Fc[$f#+hl$.^qMD3KS
%>7NcFM^rp1J%*52l^oo-Cr5%OgV>m)8n^!3A46T6[Q1l1Ns@$jo)Zjg$#t0gP6MhIGhr0h[nt"q<q;Q?C"u[Bm(Jo0q=8OebK$c)
%?$s3Y!j7TMmKI:c`VhdM3u\$=<&#&G>"CH%7%K&IlKNj'2UdbJU<Eq-U74b5jD#!A.3(uRA"k%p!(/=I*HP:rEk:bEE#U%<&>9\8
%OKM16LX`s*?UgkL;cY\q*,6!^gR1ak[q$q$B2(rVY8sXN!?3PC*I[JgOGQ*#]]^,m7E`X7/0H._YU$=Keh!sE8\\A;eAJg:U05[)
%Im)CA$[b3ZCg[D1.pIt0SYd@<<@t+TGcjr8X83q3=NRQbfHWG0?C8Q,d![dXaIMtjkD]55JW]qP,:tNM7TdN@QFDGuq4E[4eEfjE
%;o*S`</fW6rUlMh5!SLupth.:n3#9[UX9VGRqeoQ!/rH*?S`S(;9Rjng&8&#SZ9&C"hG7GJh/D&3QYPA6j`GK7jqNFO?^Qkh.p(&
%`-7[<S@"+a;Zh1=gKPh<Bfd1YUs=!]'r@./.@Gf0c'2)!;BOTD5T*iX>[`R!N^g<HZ(2L!e?3C6MeNbgcl?mP@gbke@2H03;<DD(
%1".cZ1ZuT.^eUH6!p<51bhtXU9]92K1u0eG$R1b8Gi'.0a'dob@6c;9^p5Fd(p4=qlAc'0&OChJpS-/9@^$g]6to[H[7OAhbqd\e
%Ago$?'6/AN.F>BB%"N..CKSq=:fF-^BB0fn6L;NtYR$3;TYmU0F_>3F<gp;u--6.kRIC7L^Zgq$'R@L[Q<&S,@Da4":'+1-.TKW+
%pgfnF6IQ:S*fB((9(7`$-uuZL=Y\O)O-2&r!jg9.&@1R$:]Ju]_W!VT%LK"RhRom<o2rud&;'#b)f](?-O[aV*j@ub\1*ZPd35kh
%Ku<Oicq'2XHVKgS1@@H+%E#*QH']*2*X2))B!hd(IVtI[JJuZj:(Xpk%==3a:n@WgC%MgS,k]C+#!1.Me.#rK+_8D'O[]*-Zs!E=
%9AOEX[#G&`XB96J<K#I1M:RY=Rn_JH`8mo5nphiPM1o05(PLHUF68BU$uh,/<0^Lql]^2caPb_HM[U-SM^Z0:oKP^.<3&RX(0F$a
%lg+XM<<AO2]M4V.-'Ma@kh.^CK`n`o;b05Yd!J1^G??``Fs-maFTr*^;9UT;g6J(V\b2(@"BK?N_9`e#C2R)]LEVW=Uq[A,:S?_,
%r"tOrZVE>-[7OKI9kW.F@CdL8]2-]q=>fI[m'1i4XePOM&IfAZW^o>cL+fgj4j@6j<:M^epJXf+?'V;b-ZilUSR56M2doD]&uAcZ
%0S(+."Y+5(5#(;j?X'N3G`eRB$Cg5FAe8M#O?A_l98>thgk_322Jr#2!5m#n/.53/%KEKBBY&LtB<\QgK7QU+s/Su9Vi9sJ1A0d?
%>TN@(%!9=K3+AIBW6d:^`sBVO0h]F&_Ta'?&e2$",/EJuK4,09NTck&r%4"iX0B^%QNXUl[AQY@b^aK3/WAE&8hros`),_TXr>T+
%$NP-%$t-6'gcajY+85;CZc0UnOA')td#7;X7%*7GgUO,&p\],`0h"\m8P:@B0*$Lfjeeq;GHAF&*MCIPJ+L:-:C;4=^eKkKN`bDF
%<IIII@J+W6$;RML''P=O\;pL>b832=>s<V&q;0;!bON)YQd=R#r7*Ij=o5VtMU@c[!Q(MSo=TCK^tQmH"Okef@r&@!`/N]o1S[lM
%S'A&1C+j1F)54Jrgas@*)HfuT6ir3P&^f1fG;@j;@\2Kh\`0j;X(=uM(&4N&e1PV2$d]a+O%[,NY\75Uef?RbheeN,36X,^M"t(N
%=I(`F#G0*g>1&5Os1*JGi+.(e#2shB53toGRAku6iGnBO+(=epCh+ToGr&/#'XF"9Nm5ftcmQeVH^MO=d0>D))^*8,WW::n3W^2>
%Xb>+a0H"Y[W!djARa2]I^fiFOdt2tS"Yua#ioTU?00eW\9qRmMT-sQADeF=u+6IhM^Mg"@e[rBKIG_<fY;P"hq7>YiLN=R9(tY=m
%NqUp6kVIRj,fXt"a8$s25fgu'=qE:J8*)EPn@84:MtH]9rbdlhn6qac5;uHPGr*u0:W1l<qJlj%RS6YS#K8T(r%68R3^@&\UFQfc
%!ShePFdY2id4:(-EM,m]L1;^)bbF%t1)!Jm\P.6`Z(A5H'p.CBl+clemm+VT8_Z2Q>V@3P,I:(77WKR>lW68H&'JJ@V\\L0=Q=Rm
%d)hIZosG9>4iY62`a]hrgu7RW_`238,?5cF#q*,"(OS6%I]Y<bP._XcQXQ0""b3fTj,M`YC,RFn`jc1aFQ[0,_o$,:2I,G^SZ'Rh
%^)*Kuc4o4"k5)IqKu-gE8jAAe=l?c7Ep5P;-+_@V%8,PS_,43sR0Ql7i.H-tUJA@me'FpeoPMe\1'BlPk.m<.n8qe1oipA5p!3ht
%^MduEimkN_DTJ'Hi@t]NL6.o#>Qm/!8)qjV-V#\,E3le0!moB2;9&_NRJ3D*c(3kj#&O@H7<H(0/P(nD['B@3mCa()>raJ>bVni#
%(uY#kh^`0NLN374B9ruc1R+$9pa@lIRen=DRM3+EQJV=,!>e(VH\0b_$H)`t0r"t)'!/&))3d11[alEOKD;k;Ltqq,1.RQt@oE.\
%,G_mgm0o[ckqpGMq*\g\^;A$#XnXcob929$3?f+kX0*Q,LnKfPRNlrUr=#)&c"2oZ'7uuoH[s@VG1t$\.":PTAn8B`9JTfbU;N3N
%['0E:M=>.>:%E0g"\Plc!8P#3RcS)t^\03/eJ+oQ>#p[$N1ap?@Hn-?"]hV_*#038Se!ADjUhdshdMQ.62]G8Cpa23V?i7K,9g]=
%bZN/P8j2?WMRTp+(4:<0;JWp@nN;V7GDZXW\K#D0dN\%XU+@ZP3DnYVP;N-(Dg^h;3hcdG'ngJDX-dqMlG"Vq&kfRSK"S*Wb`FDR
%O!PIL%UCZB^8S(V?oH@(6W]Z^Yn%p5J52_kjU\JUYC<Vfr47L"c#TDkmorWK#+o'sj"I$,<0O8Q=k9dqJbCCU&;a4I6gSPD$dJbi
%/Js-aoI3lGS'dGE]Md7#LeaKi#PZ7]D5DFBC-hL2<u8=P6ueN%03VE_2ln;F^??+K=<#olfGa\Ql8lthI:=:!oE9X#RbG#nC/nP7
%Ipu^NbW`G?hr<!,i^n$2oO.N;"N#uFS+2)0>6C%NoohKme^OYV"4#Y7kGLYoA*V/Zr^"6-J@,:D?+"+GC[6T_&3FXEg7LFM7m1-j
%piVYac$CGImorZ<_`Y?(p?FH7C;YI7?,+@0Ki8(j7+Gc&5$`[ZmPi?WCNFE[L7G_1jLdj5//]FLGRWiT=[%4UFb&t>&eY=8gg2_`
%VlkmpIh#g"6u7Y`[N8Y*?X6t#piVYac&,iCmo`RVPu"M3?@?j"D88rLm'es]-n[#C*tqP#\c<\l8PnD!o&nd4.r<+cW0\MKC^JA`
%iMd8(.*Afm",%cGHNHN>2=1#Iq&u%UNl1T2+tRNIg)jNd?Th\-piVYac$E^3mo`N*Q-ZP2^%omP)O>ed?,,KPKf^Au;kG\X>$=!=
%Dsc[oZVT*p`riq<j_M=!FF`k5VZY,bW7h@>WLC<EiHp0H%da2I)Z&a`3l>lW?k;RK!P`89%gVg!CO/+Imp"?&JUQ^mIcUZYc&X9l
%_lr1$_UK?X!^_diE54TaiXVd`[*n[a)$@ILF_CGK7Boj74L"%>Kd@lSZ5#62>X0W:U5<HV;%6Yg<%aO%m-1L$]'Cj9NKWDIN!MpY
%U^otA.Z<T4#5-QL;E6n#iR*6:Iggo4b?8h-ZT9TfW_+@NUc1Ua)V0US?:T7SeC;/+E!k8"DWSRXb_dQS/]D>U!ld;D(?`8`T8hh0
%Ks$XkVb=d$'JbLs3:`6]1QnJmi4=0!3taV_BV3re&9Jl')'E_r&T4#Rg-nL*@r]'t8#&)EEr0o9$$=JB(6AhP\aj]UZM!N`K0[[\
%-6?Ve1@@t,%O8:D:pi23JSRh):jmQZD+numD"@0fpIlT%^)]#=El$/9[X2ej$udmji,11I>V_C(6F&'IT,7%b/X*(#QgG\He-,Wk
%=0#Eokl=*%SS#i^QYY+lbhmiZl0g.AO0G^=M.<L/4/DQfQ3h.(!DsJr9P80BH=p?(cW3p1UX0+d1VfnGO1\]9TH*ZO5g2B,C#!+_
%"J5\K*$QosOmO&XG_-]THf'L>kV($$#LNr&.4a\@\L&<N0YS!fgnUgH3f4)1P9!dRMF`BQ;@m6,MUc=I:s]]aMP#-ZnRKX-XEGk9
%M3kV10B#u$%s5FaQGJ6n/u5C$Mh2&!7=N0%c>+]S/!_>b%0$)F%BilB1,*^h8?X'"gWKH2Ep,k:O:WZNMG\!o,G<ND[TN1?\kn>D
%WQ)+WhTWO+FlSbgP8/^(8&%0]K&t\/9Yk/Tk^07#6e3*G91F<H]<G^&!dsj.\LJd1n^ZJpLsPF\T`fR)7G[;#S6,5Rp2%laNVe9S
%*@3GF:EK,'SJ1lCC]o$3ka$"5KrVH_;F_1Nm*Vni!j>B@@P,8>/3r,';Gt%C2F3U5=X);4:J7]hUW"3L^W6*b7b(Wm"BR9i__t2=
%pnGsV@%TJ2V\SO6j^@@97\d1k>;^`\&JP*mgHRKp[V3+!SiVVO7f.nnD3;p_*>eWpR!&\e*/f0#,-@6b^L<B@OAsr>Zq`Y[MNoZ(
%af&H=<i5eFV(@aqRn;tk1Y-Rq,CgV$'!AJQ>pTY(#=N;9:_]U/S/2r#7bJ^L)Q?qX8h76%K+I)Jlc\QraYp;>\U8YWb---EnTeZL
%_UmddLS%9i?>rBR[a#0-$K=HI['gCrgF/ADUmT$:l94+"-Mp8B\KW;`Li)p(lmsU*4cA!3@r47bP;_WdYYGn]9K)_C"sl)tIN&kC
%B+!o^:YJt+h#b6[Tm%R#Ne0N.5<(+=YmVkd_`Bb%M]_<28>8!ZZSaTc`TV?hc'BTC-O1\m<bRaLY/5oiAWcN`#-qCs42b$=eHokn
%/a?u3R/t>IX1:R'/g4>'Co.]fj>Mt5A^40h919J3SeGYSHJH]YKTM(NUb`6sgtU&jgYD--W,3].O!&r8jj_0aKa+'^aS,Uahu)p)
%Ws@SA9;eB<M@(383.PId)BrY">Vk-kH<>^0Tg&,=71484APW*KbMsf%0@ekamM;m@?^gicB55PA55$f])<oP"\I^S4R?_:1^'M\?
%lN#@c-!G2;!.H,7F%2Wua]'H8gH3WqJ0&._IkY/W6%MSZ9i2gf)$UY&)D)&/6lBp-SOK\'<k3MW0Ham=_al3U6[\DXhTmt4hkZ!,
%KM@l!3[r>1Vu+<fcZ5am7a>GI8a6;7S'&EV$!f93d_/neC0O*N>DDJ+\>!m2@V!@2"D.\R1;U:OI9c&<&++ALT+1/^'h_Wa*ls^F
%a).2g]NP6!.:]$d?R?@m?)STqV32!m6Zr%C-`GBQ&diLl^,^IgX(lJq/;hnFPbFnETNcB]Uk)u`O@WL,U@C[Q0S)d49a+!a[ql@Y
%Jf1ihE\lREo<%op7?$A7_qD;R%$TAPJfFHZIq,'N=`ItAkn>sS,&>?7)2U(WL>:Z<n+,NSk=X%+D8e2*GeI4pA&JE8:!&)$*t*n$
%ar#q07_+M6nU<[1kZ=il"MM,XgG\ICRkVMX<P">pQjLnQ!/2Z<$QS1:=h#tcZ7gsq47;+?%c$qoNe$ubE>5T@=+YBkWHe4!V^'On
%a)N5IA1`Qs5a38!+6L+$p4;Qq%<q9_^\KjHNt:mR2nusFlOeL]/\k/BGJ<q7LsMo;k)',4#fUFol(oF/C2+qM3O>Xm910X@[o`q+
%AiV'p`isrNmU>Y.aQQV7_`$jMM1It4`DS2#fG5Bs6T,`/&gOID=TEc#qYY=AY@!uDc0*FD_pCh8O&OPf)UV0FDH?ZOgUUlG-QF_%
%I7+7`YmId;Ro,tl5#e5DShSQlKL^c.-fk,L*6?H\:]-Aj.sKI^q1"dA!M>oD^@^dQ^J:VjT=nZOk1N)oD['H#D[Gc'T`g0GV5MJ;
%>5LO[MWakk1m3\-i=S`[a[")++V<@$)F;\V'W>;f@J,%Um3TVWoK[<f]pIB1&_TD1&AEpO3Deo-O$NdKc-5%06V\_.^bm\3C*31i
%C8A^P.E(mM/k5:':3O_;>75+3_IMF7LRmIJG1ifXP"78-`d3TK-cl(g\lt3U(O+f+STjbhm!_:d->WdBGX^[o%E\0,*MEo\XUJ\I
%lb:AR3@uun(L)#T#L,FgauH].^k*n4b9Y-7H96cSfiJ=>n'Gn48rh_=RU_AM2$gq-O%rIkB&HrX:A+9BeGsn/%T>f%1G%MDRgqJT
%eY1#$W4/Ck.WS*T[dqf$j=WMNbD5OIkVUucggLiPg[/g,7AC3;doD/5RVPR,=Gl3*-a4c2VBd[._HKuO?I".F8O:n*L+/j;\"`.=
%AB(_N\LqD%CWXL&\VW&7/m3#]"Ql.Pjul$cRNWjG7E,O+%VB$g*W.$)gjB^EKnn7bL$*KU<\/qlB5YZ.)</>I3CBmjmpt,_!0jIN
%_qO#.5],Vf%Tu4OWQ)k9R4Z5to;VTn_A\O1mb7t5dU<:P?94.r\lX%IJ[FNS":K0-^X&D]QM1gJMac:?[eq^e$i]Z>=o]_s/8p0Y
%alHf,QjAs<'Y4WPV.$e/'=94]_L_uhV@:^':MR-+*^It8d.m%UeBA-jEeYbu)`7Ki7hWs#D!5ku`^(\B,Br@pBpL,[\O$C/_c"\J
%dg(uSM!s\,T?k[ul4`&>ZBjZnc&FO6YWqp5U'#sG"uOAbk+\-hfqC'3BH\`sT\J>\!$:!pV$c04DaBN#,NihQ\'U!#812aD\qcl'
%f]RSlh+'BTk\pKX9[oIFqO@k&)fV<8jD'<nD[pt:X''s;@pl&%AjQq7DF4_SUKGa%/:btX,lD1]2:*I"Qn;mmg:9R+8qp,HYeQQ&
%?ZS%#B8t!G2>5l\k5p8lfFV"7JV[Si_`g0C@2,>('JNBY?MTMIg5WKrRAV<3$;qi/:Ge>;o,QdhIR?HTQ2d+=UPCjX3\HoJSeLdB
%Tg/k2@BHL^_!9/$K/sc+1Xlof(O&0r#!@k(k;4p^>G8[i54<%B0,U)<D!5iSU.JIo3f/(,!`mM2(#6'N\MRa%IaQ>M1RiG[Q:CZ'
%j3)?/q<XsRc0oPi!oV=:%/_e#F`AGLA'ZeE4iO4il$@K%iN`sC*3dqr.EPot5ca==R&Q>"-<fdYB)`&-(=8R:#/cna%Vu>CTc'SN
%ps+5Pqdtcg?Ud&LGN1OL_akeq)=-)p^VNA^:#kI6UoB&mGZ%E+S"et5!1%)>Slt#DLH,s?%f(C`h"CKg1O^@*Nq7B]!aiuYSNMkr
%Y4$:Lc?kS;[[FP\FNu822V4TR=m[OWM638Rb8*ei6XWa<Ul<OE0E/QRZ8)ra"+.KsZ@6ojH:gde)s$5aF*b<3jaE'iXP#"Ch*5s!
%qYRG@_mBT]:0b9e3d$"WPP7g)dhhej!:&XV"9uRmJj[l-E&X2gIr$ZRcdHp@Ee^>ZAgII3NOA4B)V$!CP/nqP!^2hYF^SYKi,7)d
%?g^,LN\.saU/9KbO92&0kudF1:k>f;^&-`sTi-!/`COOA5)g&D($hT:F4Ole4hj7(>Qk]$l'Iklhark]UUdOn`oH7]1*W:Nl^2S$
%r['"_-#0+eAtES9D.4]W!S'LKZ(GiN@'s!HG$^)o<0@nWYCNTB>6m8>!oHp$@ZS>So>LWY/,JI7=tpgaVSum>gb;MqB&Ii?g+8$G
%aP.ni(<a[eY%<a2\`d)$TVf6n8REP>(Rd4h$>l6:lr5jBOD@/(P6Dql[@cR*f%\.Xl2-::4O](UoDJ7o/5n/ASK-91&T=.AY<EJ.
%Fif**oWUmle*QNcJJkJuZXnWHR4FEp^<`8iXQWlqDbq5ckklF+=Ur;WGG]%GbnWiRN]!;V>.fO:oe0EUk\?bS.^j\+.S52mF<+.Q
%g%90[E>0#.-$XX4S4F3^b4o7QVZ(7a0h:Mjjqq7NQ:DW]_;&i^]PTdR4H8hX6g!XR'E@T.aS+T$#^j<=!'f6U^Z(SAA)O8&NQVs$
%HfL:0jlSN-GI]f\P?i'eF)[KCUJ@sN8DqZ3;BOLpjP\3EnieZb$/h;bUe\)%8`5Ano/#mZS^KI#\&uObHR7Tk2p4DbGde[lh!NN]
%Hh)X=iI/@IJ3SD$^4?9<&-+JQH'85^RS6.&n's1T;c58@#/[AW$YU'*PS[6dIC!0)#rUgOm_89fU$=[.JZki57c?C'#G4NOlA*Pb
%n%SQk,h^OEVq5^UE-NfJKpfl-bnH9OLZK@cdut3GkWK\PoqAiGAH2.ipMIjd(q#1O;*+J-:>^m!8:<9IA%hd!2qWr0pca,gQp7\I
%,OC??p@5J]4gd4AGR+3$B6L=m.&<S+7iiFI(p"DS!)0msQ[7lY8>AZj+?3Gd:s4Qs4G]RJY9<]KL9R0?gP_>KU-+N:qL-I6'SBPO
%4BO4U!Oi)?MjV=/RfR;h184j48>Pd1P>kT0#RX:FW-qeIF/Z9ZYg%eXK,O!Zp+9n"D6m4F+TRZf8.gD]+*Bb<]J6cSehq%"%=oh/
%CO0=@pKc7'D/o&l2b#p\]=18Hg3%IA96&W+"$^U`^e\bY56'[jkpB]F8]^,,;0U4^D/e!=J=f"q(EQB-%IcN*lMBbk,Q#*<]ENe-
%AOof1D-)GleseD=AQq,;0aeob]HQ9T!HF@??#N?mLUW$g_@9)IP[0GtUp6_U^Wf`b!;<X@8S'*!T:-P\9#8H#idl-'C##kq\PD:X
%C7*1*#^TV[$#%quE:@EreAl,`>ai:+M#+WaM2R%R<>##3/e1%Jbfp:J5$D<(lM[!n?UVGAQGA)^#*V?oV_58u)PPE1$YWuY-q*OP
%[H'b>=J8&H;).t0[bi`&%/5AUr,,U@IiOjPGo57Ps'P`!_]^Yo+I<ZicT__nTMN-u9^/q=ih<6r0H_#J$<Xoc:h0s7?I1%6MAS];
%kekHtZhekj(&VLAJDZ=:^lRMupiXNaTD\t`Jl5N7hE=e$?DjFZKg8T\ott-oS6liokJt6O$d,+smYChtm5kjY_jGPeYG2a*@9hC.
%j2c,Ms!DB.Z;+7l@oft(5\SC*^GrOPI!Ic?&VSM5dt0?B(=$A_On%EoQj4ln4poX<'UA*8Y`'?3n!ClVKSC'Z=uq(a"7,IsT]Sb#
%\C5<pg1_2g]2B.I+Rm8]k__JRK&@0_i;Hms6L]c,:d5JK@IV>!E;4QAm\]XdNm]WI'iFg`Q4o[r!sX7-k."1'A-douTH;*>Y#bC[
%d&jB4YD)g9OG[68;fhrlHT(h?W'YS:K,+;m\;i8H!uCfCaLC(*2Ui1=6>S4#$FjA2)"PDjM0_uphj!m$24V%S+SAI<n"aG(@sV7d
%OH8`'0J8pelc<tUs!FYYYrjY0YMnQ?A[XQU5T*Y&[ECkO&5qC%1hk=\&Pa_uQ(qBU+at0!aCGI%&6X!*gf-#5e=bsh)r^BoG?/]_
%6#5.f.-!O;P&jqde2#\g$MeI7ee3pjPuRL,X,R.f?FRW*DCc'N8rT<!ZV2pDTp-R40boX:h>?TZ6&rk(dZ9g-$+aij***Th4[lib
%GMD>;SIjPeV4W<*::I?^qi^%PjHmG6(k?cmgM?!\)G.j\b7J0-ZGkPf;p8KumhF?TKi@>]fW[-TXgn?i>$@+>nl&!RpDA,XjIr-5
%3I(+f`%Fkb(0DWXZ;l[W_XNW3lnRi:Z1.s.3l9pheLJlXao]p,p)$i.1D[p0Y\a/hnga3lgDRtpO`f^H2LN(*n,=dCrc":l\j'FI
%`raj#"o.[jap"-tV/elbHEE\r]O!.%p9%K?RD\@P;Ek]D9CR]EVLBShR)?+obknqW1P7nu2"bq'C'$V)X.Or->W@0*iQ=1YHKbQ^
%o%MbF*\X,&T=]D1J59K8Hi*@0!WN!#r!"@77Eo[?:Jm)Q,3$k"8Q)\8Z/cm6(UT176]7[lR(:;3I8e&k?%62K55&;/`ateE57CQ'
%NJG>2r&S*7Kj4k1pXsI/72M8,V\jrG("XTXFpJg(lG!+rI7+YlVSc1!JjSBulp=ROD*j00L52tGDc7^4WmuJ6XM_6Zoj,*<fQ['N
%jP0-PK5GlNj/:3Es-jJ-K7<>ghgPK:%eT.OhS[,%M4W@_DA43B_3#/nq#o,4'cD"Y%)N'4,k;`F8l2tKFWg/.*B86bLmP8qlmn6^
%!&F1Y_]Zo?0r5Wri%>g3+P3T'*@V$\+G/Gg1U&mDO_eiSp',ElZ41e/"[eeO\*3BS"h(:1B,#_H;:&,S`QNKuFG;%LLU^Z<'GW,^
%lJNNX`rK=IpR-:;%9iV>cf_]bhfXD#-O2lD;rZT(g+/#;&%gp1PfnLnpgM2GIW!L$o$b4J]CrII6=16bGIRS/#-4;Mq!#+qjlRE:
%6/R=F*^9T[K]7/Dn)7VZ8]+NWjR/@tVC@]CH2+N.-4#P$75X%\@>FE$K7De4dPRa3,mDZ=ETnR.R!2L0?9L!o0qje*>u4IQ6KkFl
%@6(2>jEP`b;'""3kcRm2R+j\[71TbNpqtNN7XS;XLL6B<rB)WmbEUU);Ek\MjKe#mR08"A.#2/rl?9m[+24AV7c%_-iG$Q-J\fJM
%"%gGRLj%q0\]n]Pb;MjJs7Js5Ves?0:4M6sQc$.FV[p=@NZG*q%[b<*pp[go]Q7A<;7%0ilf!n'po@(ORq$572)R:VZ:0?'X]jq%
%[_UUB4Y%/*Ek5uNb2%d-)+2%?o)bJU03;g&'KtOR)<d=;68_i"PaQQ?]Eq"^EqtG`!?]>ToJT[:m+"I%&%>A+NW->6`qRitN.6.5
%9oRtjaS*i6l^37r9^S7*dc<FXjTn7BIE?M6R`)K9MWD6CUk@u!&UC&:T7J1;Io?lF:t+%aTZFPW1pFk3DLlR12f!rZH6euJ6^ko+
%Ae1N4J*pe1#O'>K=tPX`TTSr<p*R-sNUVTFALb&$Do'"mLJckp&#6_[#m'FC=t(AW!WZ;Zl(*r%V(kUrP-PVrZ#)M$/u0;9XS>St
%$pj8NQM-ns:b7YY%S'MbcNS\V!Q/e.KP$)'k^27Hp!&XX^&^XUinQ2jhZ?qR6$C@u89_l0lYDq!r;GI,?WP/H/1o@,X_Gj.>@LO.
%*&ms4P+IdG[:1Fje#'dBU!:Ip/a,BM]MV=Wr/DS.I>02P-3U.Ok&)1^E08=<001egN6)=_2UTOW"ag:=d>K_"L+siM?=ZrsIC/JX
%%*3H&:j=?*A4)rN3H<JG6*(u"6H1R>D$S@Ub"?A4==c`eJ6;.g+9TnXGS+aEZ_^W'B#FNj'V'.@1!f\J+!CZUG.m+T#k%sm4>C#I
%49?0:o]^42Rae-lg&s/@+U.Hs_Kn#d*t1K/;K5#a;XV3g4c;qK7R_RpVs"heaZ([@7>cq6HS1,VOMV.OA'>oW%)Q29+=*8p".^Z9
%"Y[`l]rF$P^&nj%D;cJd>fVj.g8ah1O@?frJa0,HH8EPe+_-VYH:hS=nro:-eSV0"-GJ(\&)kID]upVr:_$fdMHri!l?(Gr/qbO7
%+IP50RUI)957n_[XuQKe\rfVUMG-%$kHEH2c`m8#D*m*X1N/(EM0s-rn77X&)mCi6h8H"\_V/<QjYIOLa)!,3:9F*qpHU^/R]c)^
%AA4bJ$H/l$&;Y`J_WW*GiVMXY-YThQi6d42`_90DjpqjlH9sR/j;Hg`fsa9BGQN#?Y[7DKU6)6@(m];71+K+W]sj89$&BEsT)F2H
%bf><1-jPrg'jVs#o+n%*:=X@Q8<,Xn/$kMoTn3E:OVp>s898""5jZNCD0i9YqYVKgT8RiHL8r97cOa";oFm>Opn/Lj4GSr%3iro7
%K;Hnl52MDO1U<mXA<FN4iRgVeO/5-,!**5JJHHL7MVj*JYY>@:ZJnU=S.?#u;\SID11E:sESb.uE3Rd;K%Q5ic@lFL3<;&U0u=#H
%L5fE<O2;8;\r)Gc[3ek6!")s-M(JUIiP\L4h#(WC"Q9AKX%jiE@61`?S(]hd(-AkuTIZsLOX@X(c;mpt8>oq&l,\),MuKL&B!]oJ
%7mMYJ1#?Z23+"pDN1]0@ATJp;J_T\n><mqOVP5!)B.,Gu+]b=iZ!dH;b1)Lsquk](E9%jSZ7$M!C,L0B-ZE2<FFGd6=G_>jDN#Ru
%a\-r`adYJt<.l)(bQlgbs)[B``]F<pmRT-J001diH)$]>&/g)_-NL-jai\/PE`/l]*r9JJ(;N%q,628?6UFGGST%$\--SrG,Sk9C
%]gFb4#Fl89.9EE\d5[em$;V%s2tnj,R6rR/]I@tYR2m8a/TAhkG</?!n7Ym/:=eAa*.M-doB#Zg4PpRMqdDYjSRr1abr6OYbt<k7
%Rt;d,Wb#gt[)`eFcb.mj;C)M/$lp>hPCmt1YQNWB&U:A[]De"7%"$B"NKUkS.o:st#ifKSrPUsBc\H([>l?a9JHTH%XW.TNA>jb3
%^is22b^Ao#Hs<i4ht;5+Mp(gh.8s+ACbp'GLFI[j^/BOt@=ARi%b>%Rj[TlD[M\ldXM\e3UemP%=,\e"18s8mg,rNNAnA;f"J*iK
%,6diuqr/h[dkVln"6>_WQ0mZ%)"W$2T0o?h8I#Z<!0U'=4FsRCA3_+m5g2jF*6sbg.D^'Gih#o.0=&rbnRZ=;a,69'$Bu*:@W[q7
%1!UTq1<^"phn6:$MPFB@@=%'T+L>1>>jIdr(GInH*Iu@)=G9ue<+gL/75k^p-j&t8(+iTX,Vi7bG*dh*U2CJQD6,K`G*c-L!&BE^
%ei.%7JNCGk$e-'mrQVmd*:%E^h9l!F!lkT3SPjcbMBn!+O>2=:11rn9QEWV),=-"W<gf_gpS1D^:`HKr1D)rW1GaTb`t4"H-$RV?
%1]XL%fPjYZME)Ac75>?;a"goR!O]g1(BEfBMgA+%rN9W=AK,Oh&Hcm-SHD]4Yr#I2i`@MboO7LdF1Ket\X?5EpuT(ALM'h9!Br8@
%YV!lt7-eTnb^'\u+8eRoeV'_>S3%)&?OY>-LR.+G_q&_NNq9r,!5Ri3P=#hq_ce=Tg)IgJ]cPJK6EcI5m!K:Y?A(GEl8'(Z?0MAl
%d7n\@K">P/`?0ksdq13b:d)5M3-4'h(5$XaQ^(9?OAHDZ+^ff#m/VMgTS[QbTX_rEA.:>)@O=++&>_00^G9@-,QnraUF1,!6Y"'/
%OPS^hRbc6.n]kPpG4^G[@bhWj4f0Jq].d,1MX3Vg^V]&e(D07V76q+hD;?`N4<_q8G^png?mUCc!%0Pi`k<IES*;BqrY["b%\pg?
%6QWPlCTs)J_t_"RD<5a"X#*3le:8dNV'FI3>$oB+:RpIFaP.\&F'2o!2R><V1^OXpLJ:,]fANP%hJS(6cDLYRj3/Wm3%o1M1DD9#
%Gtm9ZbEV"67_eOXRRDj>gg%3O78TNHI$0s0Mm:IM2*iuX4dJbF\-j`66<CL'^i"0*$B/h)'.mT1C@pl/cji<E4[HU8p7_Y310uTK
%2Yjfmm,*j<\Q02Mdp6]b@G(?XMT.Uj,eUpOEpMm=I_c/"rXYW;8)4'b@#J6>WdltrS=?:R!"e<&>uNFcV:VK>!0Fd+J5d6`P5Q8t
%$<Uq!*E<8JS1NfUWe.d94#q:\!Q<om;4sohVocS!rE;QT*92:kZ#IUUcdqLX&pd2N:qOBM%[mH<#J.(d']9aDD:]IAg:O6?!0j@2
%;Pge#-t%TbSJB`iYS-Icl3Sl_Q_U.&s1_k3"Ba[uO2.(qE7YbnJCG5t^p/s3StJNu0"pQW>*.iZkm=RYfh!D'!;O")eNm!XBR2d)
%2$]<\JVKTn)s3sKeHEO2Y$QXI!/$K@;gO$/`"`H&HCBJ\!5LWJM?3dAIt<IYE+[+,]:tr.f**61"aHO`Ga>4WlKECj!PkcKb(WF)
%]!h3?d#:H_$5`k3U+%c,WWLP<kWB)a5Au$4WX<pj5uhk(m](j@:oXR<jQnY_j98f1r52B3!8qfp$rmIqAmB$Y<C+f0)=[;'h]+HV
%TRl7aIF&\4VI`I,+Hd*`"XF6W`n.i.d5;*O^?D#3C'npi@le?3%MrO)'HDY8;ID`78"_X2m(gV=2:;M%<Ib2*](?K8._mdqMQ@Fi
%(#ZH#B7V3"SH,fB3!$!.^lC(b5ZIiKXVNLLWs[SCmS^2;+C]F;K!"@Vo&$AQ)VAJbZ^A'@Hdij5JaE9r+G`_Uk&BS#ekKrqs#aGo
%$/*nOmCrR:=U:8]CI22a@]:e!N$,hWcgg3V#OY*_H$6?;i'H-c"[OB(B4*0k`Ji%s=^a-Il^j,R%XLH2cP!E`9;s*5QeTF+0KFZo
%iuN]p!HgL__F[Wm1%:;X>[&.:o1kA.hV?u=-@[lr8k]c:M#LjhHm1)<2QZh.TE]-59(bK,copgf=h[-Yj)S\0;#m+Fqaa\KnKGKk
%LdoVq@9W%?N^h:-\aPIr2>_"&oaf6EH%>6Nbl_oDC*%m\C@;&4n@0"h@+<t%lUFUm.&;R+kI.+fF)tWlmnSX676dO@%PL8kgGC4N
%KX8eA#GYn7W^OLYR]%Gb>fB@2joMb,2%RLYIYgH`0pP8e2Vc_0UF)UTo-]Ndh=ENXX(IEa$3+D`KU4uKXY$ZD*S$\?Ol;fA[hS6=
%k?K4o_Yc,:'&DtHX(GGTU`YUt9rqlFS-5m)0CG4h<mA/l>M^>Ib,X,lAU]hRlXij*j;`'pU0//a,&=7'Rf)(TBBs/(Q9*>ea^E_2
%No&5f^YXd!<V(0EG,lsj$-&b0J^kcM32fA;?27ImL`851'=)j$)E"dF+m[M%W/1u?odhk51/V)d(be%-GE$MBGH9j48?4(<,o:ur
%<_[CFb\i-"=VF6L\$Vqelr[R0&>/g:$LOYPB*u]Ym@VUZllYInGNXf<_0<UA-ZD$LD;Y/aSA;$tmX.omi.D9VZ'.,^#:Gbb!:Rbe
%:@A$Ymad%eZT>q[rmST7\"5&_r2d*Er:72N.X^p:?f_E>T?#*Ea0Rr[o@7Ke<p$I/qQ98;8'_q<a.r*\JKMO+%/c(a$K$6VK8&Xa
%S.EejogpeP0%Y^t$_bmlZ>_3fq6K4!"iEm?*\@LZkL7;-H-WJ0:;bVc`?tH>fl@/_<8[h,LNa,e`H2#12onVdrmoPPi2:s.puXBh
%/q!1LJ!]urZQ:c@8Y>[$RBJg;othN;npB>/TC[HhniloaSA;a;lN2NjrsSS\3=hK;]-i#7\1UR%_9DZAr*TZAHGU6kS1b9Uplm]G
%fCLG@R/,mN*\i'8d3n&ZI[=-[I.KqEQobGY1LEm#megQ#Ia1=#(B#[(RFBF6eQb#"#<s(FqD4]u4AeoMb1KjEb$2mRfi.l*T-6ID
%Shh%-k<!_fn)iG9+1m*uY31/?rQ^Vh#i1bK'7/h9Ern!ZM.7?G^k5G-)>YDX)SZ$;?O]O(S7`:<IEo<VY<I3_fEsh(?c,s;o<@35
%4lp00&(d"O2LP,4cXoL^4Ddj?j)M^([Q/n_J")r!rPg_)o=Q7A.GpWjk-No'o@7LPDs"+HH/S22#9Op)ab(DT$,$/oSA=Ub`8Ram
%q;U$f5NRmB=.f'(3M)Q.]%m,B*5P.PIHQr<G7O)fl`GpP_,'mjbVu0dd[>%1q<8ak_,JCi:\j9pLsLA4bZCG0f9rg+l`i6Q^%9o;
%J`#Rs_eD6r\&4F"SECBkloEsoe(N@oFh!Wrr]:qcHTZO4]r-7&k*s\CnSgR]oAef1O.JHMn9]P.30378H#Bk0SQCk<TCD1*MbeWl
%nBL-DHfhBTHM>X[I+#cB^A4:S%ps_$a+m$1cHF7Ojh]:+"?u*=T(Vd87Qfl$1LGRUhhNjKjmg6JGkCedn:T>RJY2N1iQaULq89mj
%cM(tcqQ0G;I.bebk6-7##8#d?ap7,75<W[KDLI(\(8(1&i]!M$#<L\3U\a$%-ch&APZJFBe5Lf^L@Ur,%,uN(o*p"M/TU/'1r4Bb
%63KO9.5YC[c<#fT5'dT2n=@>@&UY3oDgdAAmg$$>JtMWRZ5%].F,4&jSF;R,i\TFYGPckC"l8td:$ApT7.\rAI>RaaUGpR,r'#V)
%q<G:-7J#&BI>[0fc[$>reOR@um`2)8Ob"U%MtHWthF2hb3WC9UfQ/*'o@54:N4<2T?:G&^k@__I4QC-tVOb3q7Kbs;EQ!9NcKE8D
%_h6PQfDO%bkQF*'S=fL<idsAWI<<>,s)cIQ(!ZbL8TXHiF9Dnijp9^roJp+pYi[ZC:7H&3IVcD:\^6(""U&O\_E%'#9TPK7YUO'<
%JoG/c0BEIf3C>M&j#e[W#qb1^)g^]kJ8k4kTr8^),cQP?m\,9DUYB?jpX!C\qi(!;LQVOg:9)7IfW%qPrH*aZ0H$Gj7u[O!"VBj\
%OX1L-hL`CL#/t9?nN!7kB\N4;:*>"On*X"-$8=s;h%e+EHhaZbGkEaQJ*nusn*P,'YNORCnF665>DOoYYO.s)aEb5kF8I5q\"B.,
%#@!J5EOPK8+LUA2<<:Bdor%L$XKHH=b1lZ7J,eter5X;8rStZlgE6FVhuDkprs[Oes+$!;o9.Y=q=&V.m>q;HYCH<h+9)*Yro*<Q
%?iTc_^])t0rrir5c%l=P8,itrKd:$sk!L#!1N/S`Ef/lk<?cQsa@D,Fndqq-)As7mA$XVA'9ZcpZ;aHN)D+'%-Ai:0)Dl=o'\4^^
%^ceup"tC<kEQEkCSch@n0[Fm/oQ`9a5NF(X<dG\+,'66eAak&P-qth)geB=?;2!ME4@07#S>!VUaZhZmMH<?tOlH-q5WI,:IP8L%
%%G79<JE1Bs1lZR>YM8lXo9q6K))J\f"!D,,p--d>Ma.b8*.$KCqYomS5'&u>5tW'o9+T,$HCDGTG/;sqnnd<eM;"#?CoucQ7"]'6
%LjJfN@<JAO4<X>c=uF>A_(mhB`Ior6*]DGE:6=lO1-Qt&.b74.J82F01pM_@e`4ij2[j,l1"fI+rmibIIMa'hK"Mp'2H2uhgshj'
%-rLR64^V<53Xq>K>EBYRC^pannBn]=G94Uk)cn!P&RZ=`$Z]'$!;r*3,ri9O?o,'E*4d+W6[i*%TUi;i!0pe43SRbM1F/b6KUt]'
%9mekB@'f&I`RYk]0E@;Ja.Ob2Wn)hFcY3`iCUp3(?qG&=.0bWgMd[Qmk[$-95pH[/9gCQ!Xn%$;6Q#MX07<ti]UnkoZ$\J4l?GIE
%*dh!b19_YGK//bb+.L!KiM<.ISE>cBeM3WE=c60\cLn]mE)X85MOoB;(n+V1N!N-bkLJbL#^\aZD,[g=n(N(Ok3EhmHA+a=jB)s7
%7.es0>A[AP/*WO-oT',l2dBlT1'IJto<NLS'd[=?LG0hi%WVW^e*/9?Q`BJCU;Ji@,Mr(:K&FReZX@<e8?2r/K4hEfe_)/;7C2e[
%Z7\T1lO)k8^h"BXm?B5MhA>nGmBqPC+Qt?/+b>P+8\tO>"&(>-9g_TqBmFX>_G_NcF+l+o9*/(q[@WFq1d)hb^YR'*oeRr5k&jlG
%DdJOgfQ:;WO=f*)XFs116[R*?_5;->Z=^@RZ)\1e(((`b:!RJ\K"-U0kMb*+ON:)+BcEp?cT=3`].tPmo08>I<&ZH!NNk/ZOcGI5
%^E5^`$t<<cl?TnT"(UYKAkRj`LsQpMV9qtO)AYtk2*[\):EfgSl"`ADr([g;'85fWiB'@#:(Y,QKHic".![\$85X8\dfI>i(QaFX
%#R;8mW'MaYlN@J=B^nEDKZT'a<3;oU/E.PEfUg\M2i$$+iY3'.9m3S<h7$+#BbU>rPc3c7M,3E?gf'H3FmjM0MY</;rU0Ab:]dFO
%@3n.^6)P`@ZlagRe;AEn.*b7`-uHagO@_D?m0PF_nI7%:Kt@quF26;)]n+<p:$AM2Fj;<Lj:*M(Rb_!Tf5CWb=Gqr2Kh#=uLN\oH
%='$#uKfZ*9Ij25GGT?Q6<"\&jjrJDecu.@(('XmfnUoD@r6_$;dR\Pc6SN7\IT-^6CkGiUNuPBq!)>HA2W8@"?KQ5rI+IP4qk64e
%j%nQhnTSI?SJZi(`d_<(r"h#kr$4>7#j\C4Me[`udcPcDnN4_d:9hN3XR?kh]0>bs54L^#peDC7'85fWiB'?8&;2[+6PULG68]cm
%TXp>6<t*-(bW@s7QM`uoQ`V7Rd/5Is=2FDT#6\Ym;5"W'(fIupTb5%pAsZ'oD)Ofm8=m[\p[12-L$#a3",.,:#ON^o[&?ggrli_]
%5jaG1I%@@(e1t8hU8d,PM0tu8I9?eahUF)?W6c=5UB?EL=85!GK)SN?^XME@dHGM-l$bXuB#9N4Lre\D*F`MnNcpk`Eur>S#UD!E
%2R_Y]W-nO#K2Fp66G5^K>SVsb@58J2ma.gs-F3uS[[Ocq`CFYRe@JGNrn("^n230OoUpWNJHu2'`g(dVJ#X"An-`*Q)qf?!BcC9h
%:N\H;!#eQG]%5nLbCH*?)RgnN2cOKX)e".H(ir[KH<=4GQL1L!@WnP\9jIJ@1`7.*pimI0.n"-Y=nOk5:D7:f56_kjlWTffe?02@
%+eFD4\0E7^moY`rX=j,XBl6$h,eG,HWP_bBCiom/D3:"."YrQ<)+:C46Ib&6:O]4OInkmu.q+VU(Za4?MBD7kT<hRE31B8<_\aXG
%BLZb]LF/HUc+\KX^ds2NLRNX0-K5Fs:;\ZSdQ&N*m#h-#F6eXQ;Y'_=/aOR@A1TMSnjIA]\>WMJAJr1,plLimn-c3Ie%G)g1pY^c
%%%.O^eI"6DKQ.RT>!K.$A$+kdNC,:n=c5WWQq@p&'\[lVR=f7EY91V*<4;BS_KC$ZZJSW"`cQMj/C)rmgUY5(ICS2I+dYEcF8]f#
%5Q+29H0A/`3M3NO2SdcR]H#;Q'5W2*Hp54/(^aX..\kOqWEF%q0-Q1>hok^U`@iKgQ'4bHVStK&`4V1g=-[Y=eKt9F%2*0[hTB#W
%o<b]fk'El,GO?jGg:iVs%_aNlpnc(!c[)2/*9F*sgan3Ob_tnjWd*ECk1^H?Y2ouuT]O+?5dRHCXBDYCD;9YTHd_21bU%/NhSD<"
%RgBs0c'mH+b:X"l!>N$&iS$goAPG?1F[Pge1-U8gRb=cc8B(A[mRrTK_A.2o[p3)0fC.qh48Sf6^:pAGn*'(!qYH5d^8%k67f)`t
%,<^aChLkC^UAsJ](fq8l>qtk?>0<;*h>ELK2+U@qY3rea(.@F''3qRP<l6ah<=1-E5%/a9%hjn[<:!i!&TjXBQsECg=+fkY@XGQI
%5+$\H/e6hn^eDR,C?IkhK#.orj:*temJmJbpZXfmj^b)%#)DDg=TSmp>k-5ohPBDQ60$PMqV,j(LEF-m\cZ%:V?!0&R2B?^3,?gR
%j+DR8K5YT?q9.B!Ie[9-$i*fpU4-NH)GZcS+Pb$`4R2)cK)oGo:Y-R3-3shnjQ-Cm]WC<S\lIBmEm*AI844u8g,MaE<j\:*IA*e7
%iqhF'A%;^."$(k[#'-f2a7L^Fe,AP16N#OWcZepGs#BQ8IiE[k]D2+Hinl\Y`kQ;U^8%n#kj(>,qMr;HFe0D9\uV1#I-W_WB'YfS
%L_omS4">Zn)#WPseGoBNO>7@g+Q5hMH]qNgS6^k<'=\]fD6=kb"5;u(ZlJkpO/;7SI\*d*Ehji*_BkBCAEX#;j$"<UgWCmV6[O$@
%YFnd#0&OT6"QsbDFR=F6iRe5pDPB?:_a?%_OU%N#ZW!]TI;uptY4q^td'*JWoH(!I:\:TJGQ<+l7?P'b<`Jjff-BA<!'r?>Cl7!<
%!)[VOKB08)0/fh)V*d$gE+M=uaMn_JKj"B--n`CO;Q\2?kWX0ce_R-jC(b*^9=UEXi@kbG@D*X(*;AaEB!jg9c&['AF0g8W@D8hJ
%'4[^#U((B.e>na^B/G[t)[N")Gn,^or^qj,OGnUr:mg^hq%Hr;0e@rT-C=Gj#YE2Q;&%sn_RKFGhZ6>ShMZ^C#1A'd?Oku-JbWI%
%GuE6aaPl0W=ZPRO_G.XV.>Uf59*o-sEa`O)b=3b@;Tf<?:guE+3@sFfYFZ(o;?tSjG9?(EgH'VDNs?p383]r$7$/9[O."^MWrLj<
%dU,>V:))aMIoVBro+YRoLR+I@U6jp1TnF]4+VmA*VVm*44G''>%2?BfRoVWgU0DCR;3/rcFof15IW^%J>SosJ:$8Z1K[DXKZM6r[
%75T-."!YZKDL-]:4C(>3CeEH)$#lj/@^-odB8K7iS^!<4(kVNt6nR_(2j2I[@)NtBP)a\)3LZajW)K<F3td':ki8]u]74OgO-e5K
%9Ao5*AFEU,6_>Ti?0jb.2IGL9f?sQ?AZ0P;dFX7?pf@=Q8@FXPpHBJ*9\C\u/@.I.I]6)Wf6V]=`(%K?)A4>B478pH71Tso":c!_
%#W2cS(5o1V@4@m&AZ-"CabhV6r0"Cl>8"lrDW4-iI`)JgbNJ^"P4\Xn(4SY!2.eo]RjeHBGm5:^6+oAho:W,;UKbj+J#heaYFsc%
%U?I:]*(@*D6;s_^YnCMrLu;`0]H..<DdYBoeW_g:a28"FD\KfC[[In%IEA5hjc&*lMiY`I4-KF*A5'KD_A3(D%'8RLL_PuiC-F]c
%'rAm7@-2.f?@mT/c%UqBla[p&-s"'ijbABGTEbqVAR-O#KCP@CNcgr?bYhhNl#W_X<=ar$G<N*^Z!k%FE>fA&GHFI"Gr`nJ^Y1T9
%@tq/f`@KkKMUkGkPWsNap.ol.%`*p`n\9kVA$)8tkUY7Z51?Ab5'+gFf)"[0gp[.3Am`]g^W^uIbniRDQK^B$q>PTXci-AoS\3'R
%O;He8G'k`e1fU84Jp[Z'(69Fe7$bZ/>Q/Rr)@?4f;]!N-f;N2^^U3&;b0)Tj7o?"h^5H<,3_uI?0?2"\ce\2BI.!Si-LKpMk6gAF
%j4G@0jE$]YS91XGd6_u?S%i&t5$Og8`i9tnf%Jc"Z%QBlAJ[_f`Q\$`L-(gf/k3K8/)S;SGdJ'SCkt,C`R.EYYTI^LKK.THA1^Gq
%dsj2C:TT?>PO<U<mGq/<2&lYK7MeA-0!m*$a$CbhRFT]rAc7GPgsjc4k0H!<:4-Fb&+,!IG3EWN]C.4b:eV8YFK3u(`.ICqZ3=X-
%I-4WG)=THI4)"R5(gQB6V9X38AnS<@X9B7!.jf-I;$80LBVqMkR'>/,p8!**nd\XqnTA-MS)jL%.\kf:0,9VBM-tC,1DTAm#a\_X
%'V^.dX*N!8nf<^>,;fCrH:WPb*&)F?Vn%YnEC`/RcfT/rTe8XdN@3D"mY&K3&aFDU[d[nZrMkUT]4VOU.fSibKkq.//o5>cAisWI
%E]bk%#"Q&rJ1.H+;o>A://W"&Ys;<_9*[8'*q,+mK5I4LWcWMTLoi:`]48%M=Ig;\%%[2#Mf]LVWE!jKeBm_.#>F2u+BV"/mtdXD
%gqiL3#`$Ygi?D@ROl$$Jb%A5F,-BYKZ9buoG7_FXEphmt8\P,=VqW8CK^'Srq`KAf-^9_CmM&aG!Q&_%ADRGidoJ8-PM3ghV`s,9
%buUn'OKtB7J*2[cXo6QC<>.,"1C@U_l4oJ2f!._$ZZHQNX%EAWLNGL,:G9dOTP/B;d>VlG2$7i6W%rnb%Zpq>U?9B/B\Mc#r+aPN
%:<KB^BMqUH,^H(ulXhqUg"i[HDA*X5+,JJTM(L>Vp>[3ojJ?+4n^',A0'u,E>,sT3S:kNA-:nP%fj2kQ5*ek^aT\5T1s'ER-;?bS
%7R*AYOho2Ab/<YB5#5F7VTkZ\!GL1j'd6%3P.FH_5h#m@r+M=C2M7:k"[jAK(kAUkAI=Z8FrQup*_\34eB=UY)EsY(Z:P'XPKLSm
%o+]"AiU9XYF"0eHQEr-3Tl-_9RuiH289'c+iXJ?N2Y.jIq(bWqS.P%7&PI[e@^E"I[PU8)Y5nNDPGU.(I5I/C&;'9`S-%3V*,$`I
%^#fUeMA@(]9Ep*02m#2d%*b^dH5D3bVG4Mo.?7;S"&e02TNT.2R3-a2p$dgDIq#WblP_D]=Nk?.4AI;&'O^cR(!XJG_c`TV=,3Z]
%DXmsE7;J<4!!'I5r-pVQ,H]M/`M\n0RI0T^(3MPj#b"':au5Jt3%r_j+3K&V1=eJLDaPj:>6<a3P4$`jq!cW'qke9Ze?tTsAoG-<
%VmEU7VR8Tubn5bO@\9ZtXstQ?)s8kIi^Ye/;dC9e'=)ZKiGO*0bHPU?&d)8s(:*>N14'*8>5*&f_;3:`3N,gQBL=-X@1^Z;4_R;t
%dr+`&*Y^kaGr.]=:2c3,1TkfGA-_f@HW7\n^c`\&X:@Hj`B@`M:M3X^go%.s19`jDG.<HXLNo<,O^f+60,H4>R?bKMg?iY[^cn']
%'@q<T77!s$5QJZQ]GMopJ"i*DiY+kGTor+[5ML-VOotfS04V+R[c`F76Mc-@WAm8oW@0)pQ!pt7M["$qR)?'AU.X:?!`L[S]UH1'
%6P$g\,$hN`q')Q)fHc/#j9:5/]=8+ZM.E*,Rl/i7iYf<NK:6YcE.Mc"JO@[s"I7f@e\->[$8FCd3,_Eo$gS3dTbdFR(l"so\ii<Y
%;5g&`BCQgAOMt^k<5?o*QjP#n*32K)`H\,/NaIiP:#QqXc8/c[jH>CT,bC]$*[r?LZaKW,qhGOmAfN)1BfCqEp<s2^1!r/+n2Hif
%ZK/7j(b,nUE`HlS*,J)Mf6<G@#S:J\2DPc&9/\k>:$7Y%L/&Edi^BuM(H]K]-4uB6aYc^r=l+\&kIY(>Zf-+uWYZ6])WF>5?OVc"
%%C7X:7bIk588nAZd0sb*a$N3*FMm!-di-do'H!WH+bG^Y!C)8'/#&B3BtPQFB<R&aSL9fC4r@(0$pd'79oM5%qW[aWV?j3^gqH;m
%\1KP.S;^YZd"O@AMf`e/'E&KY#Po#_MGm_;d=5p"8JdjR9kkl4c@SGJd*Ac,.6>)#_ZNbpI5CRElMS5R#tVdeeb/=Ug7KiR800P2
%U"I??.Is\f;PWIpN+3U@!SIJY2HPtJ++3(2+5,kRcW3'/?9!!lL3M&T;KN3qcJ+8N2W"T)8%)%E'L@UW9(GQ9a:K8Z<GN:jPH3>B
%6ARe"R_tS:2>)>us,k'WE,'N6\Sr;XT=\Y:L9tB612%,+E%D^2El!FD\2K7>YrmFXXfMc=4eM\+[rZV?hH;*kK)$N2m&etW:@.i]
%RSCO/;&E;'Beot..d'@"&B:TMIlk'\RV\0MODQkfREFdi\;'%*TFSps;fk&4!)\H9QT1A=am3(L-i&$G[@,]OerXu:!EIQZ1pd]"
%h:ccKUjC>Y^jIlrjd`@(!(!l;W'q7fbR"O:`F_&6*i]]1XME#!6de$^6]>84OClnNUdpZ33kN7kVmJ"Vr?@q>KHiLm^-mH.1du,i
%E@C6Fn'j&5!^7<HE(?F]WSl6eYn/mSHZ=WoIqB8VRHkF2fYWGX--*5.#H=3"KLnjV=;3f<(J^tW-0Z]J'6--22i/VDO;(DMl.2re
%XBO5\`"a(+P6hD9s%J#4Z``]Fo3'gN)]pK>?Wcp#0Ec^^=ESS/3l_eMMTd6SqW5C6%k\U`&6J;@\S#Qf/$>[8`X,P<l"2`P2%-^-
%aW`3p;g!$D:;>#rNMjj1;#S`Y]0TY[+%$W+n$t!L>FV8Rc/jlI=5Zq'G0l`C!]I=YeaFmsFeQNMO<M>C+)a6=%YX3BH]W\a&(P\Q
%Rr>O#kB",qX#?pp++$=LYMs%fh#AaSOCAsU[-"Yc>*/lEaJNe%[1f:&D+9Ii<"a&.Ot:*G)DN>04V/n7R0%5h@$Yt60%hkWHTeUd
%E/aQIp-d5..0N66Oq97BP+Cf8T;1S)2H[K[k+JLlSH>ub@QS&\>DD1RPitZP=1@q>(L:1AY]q!`d#GP6o/Dq[c*VOlUqE)Wc\ZWK
%/n@G67ju0G^,t85\h3;SC+^\H+aIP+B'<\[!Bk4f2EAbX\OM>c(RfLn:_.i0lJeNni0CofD]9M,h\gJa];"Ob>RZ/TIUM5H?`Fu@
%:g=^5Q@0c0-.8=N=;Gq5_6daZ8KmOen:7%HC:#YZJ]dUoGb)*S`>:%_=rFX`9US#4oJ0bEWQhjG7HW[bSB:n/3i)/sdTVVd1RE[8
%-oT2"9lXdiFKJhCmH.7;>cDN5Ma=(Z&B!WTeShcpDQ[Cj^8pmA5a-l&R[CO&`fS(sn16:qZgP-[m48rjejoXKj/;'=,qo,ZYEfBK
%$@8[M8P3`@M:WHfKEtGIp-A["'QD(6+iH$Q'O!&>!.O1n&7iLFK%+j#V[YTfl=u)3TpLN`\cG>sM:kfB!0ZZn,f!ta2^aEr'TXEB
%X^uL-S$MmCW]9SrZ)o;ae8:>KB\4Mg`Dc3+dR[-:P1&YVZ-8(o5_t,h;MC*r\tcn`PUB[[.WUm<_+M`Xc90a;nR)S[91fGq$TKqf
%i4G0B>ubWpA9)e6CU1*C&@*3Ph28&bg+Bo"iY!Y<*h0!4eI)<R44O\Te5@er=*h>7'[b1m156d<MZ`p..p;A\[G9%Y)=Ga%l0#*R
%_0*M"W)rb->F$8Wa[H`>))c4/h4h?Z!uET[:9AK>"h@su?nAmXOreI7&&tQSV<ZHkFYS#E$t0spH7$6oP'eJ,Dc-2B'Q$?Cg&tR]
%X)*K%U8Y*iPcLi2bihu!7[$2W(4hUcG:mo?\Nm)?=fpS=Xd332V:'HcKBYbZDNe?Jg9bLh3R?OAg0tAh8N3R9OBn\+Lk!Im>$M`)
%b,Rm?eY/10#h&sFfcMrK[7mOV-2*6n%gC?5oS9[BoXW*l(Do;LVn+&Hk43sK:[bp1fh-e<f*%!$r4<:G:"R.flnUoU"42Y,\s,+h
%>*9c"#&\=GTto"Re-m[U*6=>.+=fp@`sFT'bFAZ&5JPXC&"$)D0@7(l\c)V;+gP_0m\9')lkl0k&[oTe%mUQMq6Pk;_fXsWiJ:M*
%c99N]Sa1"R=M'Nl.D'9u+aY1ZeOZBlVb!%E65Q8,9od1M'7)of2joi.4#oq@n-WI2#@FjEeOACM5W`f1E[Ob66)#Kb/R$O/1H\MG
%hRD";LGnfIf1Bl^PkkSUDjs>Ud!<R+3-*TCqoq3).jQ?@W@mi5#miXAq(kVdWAD[0cs<?M6n#OlqmVi:)43WMj<2SNEZbV]C?\7=
%KQfecMBFZp(,Mp"agnN[/Z^/&DP\;aEWur3&RFt;$*3@&,4WJI5ZS8fS4Q,tC;(V>bi/%VZF)2./%"4"p#$U4ZdEcP2.7\dP*TS;
%A2nZdZ4$Q4+E9L8E2'TD;V+rV'dP0)*`ism+>9jS/?gl*_:umtCeKOdR^3KB@d5RL.X&'WD<*akTg2?#"-pk)Q:2O93*!Q]j:q9G
%.g_@"F'"\dRAis^nVVcGqsHu6J1a)i(a1l^h]:\XZ3<l$mgS#WNN[!Tl]U7RM9<b099%mr08Vao`#XLdTQ!-UE=$(^2cH+ijPC#R
%L40m'$YK/Dr<E31hAHT#a:?gr9;RoZ]SXN5O=ku1-P!85kp1$f'$C8H3cfQPVPV^T6[5a/+s-g$GD?#clK^-(KjKhX+]sieO=6B5
%>0"Jnc1pgl<0XjL^cMk(#uVig9<2E1r:D_e;'6*6LJ7dR3QeIm/qHokCcb75X6J'tn()1R*nC1*=/cH<Ko>P)f=[`\ZZDAa-W/&B
%$&sXLY+4_spNiT@F$!N-l8@2Ae\t$cFMRE:@?@j\b@8_>rUZef83@!_Pp&UF`U27=(:0NL$@U+mX.%J>:^KeqI;cK*-MN1fiW+Zk
%R`PBi?fI:$R'sAf9NoZS0C)'1.3Yk\W;Js5I;k2\OcI/-_]]83VBEUqY5DrWSHWZG+_(H&#s4:,>?:]19bbM\R)'=(`Mdohp^53e
%k>s7<;gP[Q3E)Ces)2@AA7%B=\j@6G/`#!&Ra1W8W)$X/L,'asop-(`h\:)pHoroeF85HP[p1d4:R@M524&K:4,!nc7s^P>WXF%%
%+/Ou8`6DS(Ge<.UN>F3hL-nn>R5E46L"V6kp1V4!G\m*IJS_h,NS$=]:Hfdr6!G>e\(&^hK]ZiWqKZE=jBsLZ)rghM";n1eGb6d!
%SIsE."[AA<I'N\Np>2mkRd7HrI5etA:bMl\Tge?o\G[\$mL'jkJ.6^,D*A9=A^V>t75cPl(]O0"/(TTKGr!])ZGa0O5n_.qb0725
%%l)*3#N5.trrME=E><@pR6B^UB.hG7?G]plrR%JYiFMO%0#)Y#Hq:C_X`&Hf=`>**]<f@-06nO=cB`%\lTDph8\LaogI_o:\.i6j
%EN]2o#FDqG`9?3'MNtU2i4+[&9C2VjG1ST6Ihh$k@["EY4A]7Jpitk;3M`!t6,-3N^\D0M^9Hgf\*6(u>K3Ko7B,h)^Z.\?f-NhZ
%>g<ioVPkd"o_J@NZ^A;c@(_dSEY__`?f[FA9[7PT7qu[<_EqQnV_j;'iB@<k7\4M-GD0`)]SZppKb%%"+3EL9gL4_trUiV'^3oWN
%^]+k;abSOL;Y]!g_Qq/'gNA4D>Ru&;W8Jf0C[qQY_i$GCogO;5Dnd2Y+6$4F^X;[=GPMeSorR%uI8OZa5'pi(^#)n7Ylu4a:@GTT
%ccXdF/`4;GbI>QK28==!,YW<<hjFL`*q@dqRK<GTb^_E4(V#ugrEpC\[RBsH-#QClNak%R=-N5_dG"Qf7Gp$o6WrVt8`@[9&&0I8
%+Zb&2/(GDeG2aW*HsL@ji,C<@F]((cW0_H_)[3nq+,@[nB>)(F+IB!S!0&^b]*6^_>rRR\f\SVnNch=GLqg]D%@HF!*6B%]`1@gj
%SY,Aj"j!..7IVbY%UtsB='>'5[t)f:!8ch,"E9]XK8[>02%,_NG'@VkFg*tqB\3bk.RdlUlQB[PfG\3`#Y<r1l*ArQ(B[Tp[jt=F
%)5@r`dj73JSs_`73RDJ>PY\JQE:dJEH6sGLNi<S`rb_lgG8epLhB&JMTcTsVcSS)+lol@Ugrj?V7cP*'@)[RXagDd]@W)%Ak@<3&
%Zh*;(9ANniF3KP(*Np<\"n0t4KnE)<9]]rO<iTabY=[%>38/Msf6]!7Eq6f.V)%5<$X9YKrlRgYJ*-]$`AERe5DVmT<W=TZrs_tW
%m`f9lm*b:=[*.Se@!F+tQ-tA:?5J,7Cp'\".ol%5ZH4S[`i#Ero0Lg7ffp*CJQ_2CeB.pk6iOK2c_=r]o^>B>-_!tAo!&EKb`)-]
%$C5!U=/OUJr7YV0?2;;f-9)ir]",mrB4Yl<[8>H?_jLCN9`Ggr5<9;r-OcN9#FC[-;aS>M?/[E(iKWVHQODbdTqCD2^3H5%^8\11
%lK[B?]"q-EXJ[&iCD,t_9D4T;HVUkHlVrLS2p[iB5I)96kq\<"kcOJhB#b%N5:cKt>2C*]+e2[uko%I?6jq.P%bWA;gX@WRXP-26
%MmM!@lZ*E;`3/[F>@EcW7^\[KMfUB;R^3f.qu'GRIS,j-R0dA'_,lQ?>%rQQ'k?d^C6f62ZJ_abY"UjcO0pJ6b*;26&PCHhCRSNE
%Y@\cG6=h'>jn`#OY;@ah=N.XA#\5j//cn\^N@?`^l;f&6\*RZd<VX+a#IQ#oh^n`sQriO1U!,rjjfcl$F@o`thV_u.c8!S@)$oWI
%[*bn\;Jf>YOVVM^g80F9)l8Ft@Mi5^0]seT>9mln(9VE+Z9puIjeX0-YPGi9+9U<#PF'S!WhSe-SLUa]:s=)@StjKQ'WIn@?kj/1
%l/$Qe<*-J7F^\D]Xg@;i4bQk*UL>i,TJC5.0F>AZ'j3n\af<E+W)>432Ku",cJC@$p7Sc!$8i!D)]b3Nb/4DiA[s7Z=!UWA"VibV
%1V1YsKCGt.IVdH?m3hq:-:2`8/*DM!78QU1WE;`tCTMQ3/2i/dF#,Bg\V"Ts:!?`hkIjFa1hP%!(!4ToVogOGhM^uGbM)NsfA"`^
%*9b;S9usc^Pl"D5QIJ\HO-=ik'!<J8AS!=2c[fco6f+";bk9?;npd_>\$mZbV;+\EJ'PlTiG#ECqf(JGBY&BV5Y%^:Xf$U:h6A7Q
%DpQj?3]2%UN6oE.IH@t>^<b>u_TSgk8f[N<ZlgV<i6iY'NL*u(["d&*pE3tS],08`oC4T]FoS/@n!LT3mOtW%a4!"]\NIUKIe/Xr
%f_BJ9J<?IE0T1*YC%qPI<#WqoDnk41d@B'G1Vm-[b!#NFn#PqpEp\)FUir>6)KFXQ0L_3:k]TbngP[VR_QB5;Me(rp*o'"A#XsI0
%1[XFg\9tl334kS(43dhbgn-=gbO8]\DC4WA7RP0GqDo(R6]S_dRB!4mA18fHB'MUOiSuX_0h>;tW?/b]pS$s;::k(J>UF3$Qt:@H
%Om)cq9'?/prG'"FO?B97K6D1+(G0<9#MNa9>X[r8lgYAE_(&!'g4M]JA&]oP58'fT>;%gM%eZgIPWcq;#,Ti]gG!d/;8'0&4t9SK
%bBga\[cuZ,[YkPCcQT+K1V>D%0>#AXBA1fh(fi&0&(.[qhVUI"Of"BkPZL%t87pHM&&sfgpASehrMMKDc4u;9o#=&qUYAsMEZ0q>
%TJY'3>(eE[96@"eV-;<P](Bq>;7KTMThcl[Q5FqNOf!u(/(EXg=d?b/ZEeA[jO<a&<!g^Y6t,JCrfUi.-!jUfr>foNALY0(7*?jt
%dci<a"%AN<<jX=XMNP-ifR+)],p&O>7A`kYBr!7H4fZ]0Ol3E8LMt.OLqKgkna]LC-IZuM`[.+u/E96#FK;93;t!.u#->-Ig!t'p
%ZI;Q>]"tn8G%.3a8Mc4\g>![15u`(uN?L.M@/Yr&FGc7&,H/:O.f3MM2hk`dIuN,/A6N5aD>PJ%^qQltH.q(4);9qlNJA/QO0TgA
%iBA(56FC8enG]AW;jO11*O=h=5`T!SDl/.FVTVRT=B1,22+O;*Qai2#PG!9VMWH3M&/;)O$`Q:>qCrkfC.+Dm3a@>B4Oe>nJf/IS
%1n$*bE_=gtZ@d$`<tLhQ6`(;[[Q\@/37f/<]BI1r-'fBi.gEmo"PV&9-;b9L_;sj^!;@`['r#s+8oYYkFt$84L)ETcaN&=AKC"k<
%R,!Fi.d<cU,Q:4Y`YDLWI&#BS1,kDDFM[t!!SR?VZ5h26aRam:42g%FQH$Ej-/.2*DM=U$a5:ckr:Xen0G`4[-&o-8G?0JM&SQ33
%+m[<HaWZa-ZPrOZH*!XOH\4ZJpU@h@h]iP\e)fPrQQH:gC/?'+94><]VE%`)ANKp,$8sFSP[KqXTb&]\%1Gj0E&$8TY>__e_5/_J
%4)<LID1rY4".<b$XOA.e\7>e/OukhOU8/,LWCTt18.MXc#),V/Sr\u12bn*cT@35K8X<4hQhW07&EA5J@E:DoDtjOrJS,rg>Rj'Z
%DYtb?icHqEa6o9@:S@T,khB^u6Daueqr,"s;4+DI]Nn-Gd_e=)=\4uqUGsZC:^S?qW!OC`(hZNJ8pp1p5:DO+bma!hLF?;Z3N3CV
%PBbAB;(b><M]sH)\Or<:=l!2I[fZt%X+.:Eg2YrTL*J'F)G4((?+$A?*[pC=)gj:7hW'q`.J@a]e=(+$W<o@CB;]j\$F9<]jB4Pq
%4LRnfO(MH'E8"$\Jhk;0[f`88._+O$.9"RN9qDk/>tdDtV5(eA9Ga%elWO2[Wj:JU;W;^H=)sMU<\.%O7ut3_[(Q+e8;7L\j))<m
%Ebc;K06s*.1q;rAMN)MR8DkfML0\[kS;/FsL#)-9n>>)16DHW(Y#[XKp4R_M^^">\)o:kK"**&PM_!>spe"Ee,O5!eWM8DZI-H__
%O3<7)bMEGSSII#LO&u#BWiV\t&nmL@4QL2KgigeNo:$aDFn!q^ZC11Tb&S[EJ`<gtocFTN8[Z)W*]+;s6A^VpFIQ"qfh98O)_V_\
%R^*.@L`I2_54E,jon`U!d5FkP<T4K>]\V]r3C%?MZj#!2g%iU]QF\!TD;3,!mlZp&3s89f-lSRt#fFMZ'JF>*Gq+_Z2oh1%c:M2G
%3KiA[9g+MW?^.RtX6*Zf2'lC)kA79&PV@*lV?VWC[!2tF\8m`_[s>cOY$C;8frj-!_B?$EoZCgM]_KXQY<;d+pFii2,!I&=R&^q4
%8ucW`:ol-J9O:%*p%Q`6(lLKkBafmBR$G>gMLBYAWc/):@a>DC'gq9?+c&EuG"IYq@SlnZ;uoofK(hMcFTE!V0AB(T>U%\j96UW_
%FX,.E1aVhViI_YIIN?48N0hl#I-H:*\5(\!;GXWJ=d?b%(pC)O>kuR."^Tg2Q'GY.h3B9mg#eR-?J+_37Cs5GH8.?*bhO8i,&bRH
%(99#SlB:IuR_hoVd;^Y-gc*gc;iY<YXudoT45MEGo/<LF4Cp,RV\IDL=AKAhQ1`Xt7<5.I+X'jPA7_oLn@iREXNlGs'EQi3PKS-+
%8W*f/HX[.s`#f=4FIXt3Y@i?hFUU=M16j\qE,jWgbfj(M#DHo@b8OhWbELDUT=A0r'K9EK@9<,enL!YdZ;eEA/_/CZV(4[#]PeA8
%89&5kQS)$5#+[rJh"&AiV2J=%73$Hs5#i].q74_hF[u0HH<Uc)YBfHoRBG5.>E.SUc)P^)X4c.D>9(<&<7XBR1Z%])2BRQUU[JkE
%-Nq07fAkrn?Ip"a[\V.k%=8@&+VsH30R<QHcrGR:ru.NpUHj*u5VYG;VLRr/kU-SlG8Hs*@ki*3.%##t5\1;G"uqIBYKsMsep6g9
%(]T4@MK\GgQq[Ts_B*#R<!"<sHi6\bIXR?009UmWY9)/(TQ,dTFo3?&aXNgPMR21h^7H+<\]EO/mfi'9"Dm%dFi&kMH`S^K\dIDa
%Fl`+&F"0jG:t0]s*dD1W@+85F8i]Y,`-.=Cg*jSbiT7BVp,Wo%`f5SDmT])MV>m*NL)JQ$`U8tC6Uf43aL%nXi#"RnF/_e/J:5`3
%'Ts8Q"L\\r9=GI]<(q)]cUs+>.a69dpPd7<%PI3']$JtED<HV1Jo.-IQei?'\meulb=*WoNZOg?7"L<X@!8%TX041Fe-je>r`X<4
%W!UU#etiFR[&l&^UU"f=jeY8U`lD9;f,$=3KfY9o-II1RK46Al[\[>:<&nk>S(h,BY)MbE(gU+XYI,Ue*ooN!C5&d(!*ob<8PKu[
%==2g+E?%ZLbDq(+*uYb:5%Z)BmV:GR@.lH-;?GrL]dfig((fY,0-rPT=<$1u\.0h4(E`:@pV$pN&P/5>lS+cULrRcHBacYe4jo0e
%^n%4C6P$@@2#XK/m/*fp8i@[c/bk7ET%9%U:-/ks+6,soaaVab3k7LU;d/IoOR(Q2me5=$K75B0BG\)AbZWA'HpPZ1LWMc>B-63N
%Vtfi9,GUpWeYZUl$MfY@\?W5l".%21.Mb5SEY?o6jki-V^]*S9EF;1WX?NEU[44JQ42e='M:[)VB.YhMpRB.2(cPfOG.)#LpUrY6
%p[bq`''"!R:)8n+8>WL%eV2!2Mg`%(^AdJ8.bOf,fQbGT:m/j)Z6-iF3JEo+V.#9Los.I-b'N@0/Gkln;t(544cFDoKKR\iYNi#E
%KD&?qk&ViB2^_S,Cu66C=kd;e8b1S<:^`V+dqqPq/jii(J79,IN,gUo;>l/2SQ#fSFSP6UTbDqSHoe5.c]iM-M_[#Mi_ATWZqKl<
%.mLKM16SJ7j3h/4DY%b'm2jo*_lk)Yi6OdHs'uHcO#cB7%FbQ=(RH"d2JeXJ?K+l,]S^A]5EkC(%<)`BNYnAm0,4IuOVT>TUq-HC
%*`n.WnSpS'R0[^6rS=@*;eY]=[G3'#i\S>23fmgW)kt4"R?pLMm'?'*H=>nE7?9B6lLjM`@K^6s=g0P4<0#'na#.E\S1T@kNM?BB
%?XbF]cjta];t\LE'L0\4pSblUY'-4T486uNapdL(a0L".Q>)Zqr_^#ZmjP<'2gA(rj5XF+GJDt;X2QMN51-967V+goNM`l9gWV8@
%L^4YC</[;$;DcmZ!sV:-"hT50.NW3e'uD%mHp'1]iL.o;es#*\IJS6j%@%pr,/q>GY&G/Sd!K98!LLd#_<L4&<o5H7g[BCSe\?0F
%@Mni&ERqIqDj5TT]D%9@@q+E8CUL"&l!!BYUs(uMBA)MTS?0I9nBtXf[^2\"+PqJ^NP:.J0CeC-[/1OI5K1fAdId<T]<d5"=$HLg
%Y3r7#n@pBS,qXt@K`='mU3qJ=0o;/K7q-GqJb4-BmY-Yg\PK9bA.u.I[]f5\['F96cJ'@eUE3rs2,X6$DuU4+m;KK^Zh*m$2u(oG
%VcP?`=;`km)/6N7F%qY(nXhu@S/,p1m7qX(hluOjmT@Nu-K/'qH?8)VDqm)<jPg(S>q5`mZO'Bn](pOLlts9J&,3_A?@qWt]B"'Z
%Gj"0i[b#icn7#sLgKXP[oa3Sl]r_om+te-UO^50W4L?m-WqiuZD%=/OK=-G,#KVmA[C\K8'WY$^G!XF^iI2G^?0rPDlLgl6rPC,<
%?BlgM(6XR;M6+G,1VC]_?M%d#g`8np8eb#8NYWEXdpYJ"<R8%@.<")FG,=(7QBX,Q!Hrt4Q(Y@PrVN#EQ5D+F@rCCd%EH<@kX7QE
%\#t109J-LbMlrLsqMoFDlUlnB11IEp_;=VQnq27W;Qc:O@r2XeBCQf(nViE(Y=l28gXG-mp=D[leF%!h6a6@!Y*(i01o%&_8!%8)
%C^E@+p8?;=]q/MSO''ul%W>ckja+i7i[gO?5I[/$n3Ir0FGpZ?@hV>l7RC=4iH7[,3*@XF<UJLjE`%imG=B>g<IV.b*j\6*+^_P1
%&K5j)Th`7n0/p![IrD8if><EN#j"ZY7F"M<'defkCmO7E[Li+;Nj;CHD5u)#n-pXBJ&?GqAn.5;9<;acR4s:HluLXHAi%B'[TPMU
%^ABA1[(Dg[+MKStR;,$VMI$]`e)RjTd#u;$F^`2kT3+/PZ\N>I4BdB%hW-,o4=95YfdpuXDKfW0)l?9ZJlh!LffEmlH<L'6?me,k
%VL3\%**-"E*b>os.qbg.`:gY-bbXn(qAU<l']Eb<'uHBmZ`^%&OVRuqFNUN-3PD%ncMIKO4L"BmV<!&>&M:EeId#+tM2DMGfi_U+
%rRn3ZmM:F;FZ@3JJ7!0>/;TO`&qI-d\8:Oh(?UHBb^.fM#9fc4\miA'(+8@h,Xud7OdOMF2,9=aJo"G+?J*6KCc=F\/GDs36Z9WP
%8Qj2%;rPtTZIR'!<JXps4.tsa#s0$TPCXBj<Y[Z(2O90"aseZ87\.u4V`\IS-"=f:_<lr3DVE"b>^-%NWgP-.@\(^8R/L4bCpqBr
%V[$fQ2(r&:d9NNR>fPnXF#t4PMp%g76JR9;5A[VFQ4Skk$^u/c_\4gRh/6GM]\)iLK'$>fXjtW7/r9jCNK1g)jao[SNo!j\CU1/s
%QQZB&Hf$=aN'SL1lPiHFT<Mf&F"_FCf*Za@<qH0E5>TfLDEHrT6[IlLo861&Am+eqi7W=%R4P,C:6b9]e[]Q>g?7`0a]aNb=1"gY
%M,dYhgVNVsS`db5Br.e50=K)'RHHu/]%apR1KiQ;8e(53OHUgaMC2+D,u#(t_Z])#@-qMdcmu>(7!bTolLaMYmcs1/]R14N4eCkQ
%>gci[G<(HE>UDqKP;7PN>ALT,=9"o[Vd!8AgHOV7n%Z+fd$CYSS;7.6^u"c_(N%PJFi14;>1C,f`Pr_W$)]sMeFatfTTMpX.F,Go
%&VO<Jrn*OfESV00Z-At?JQ*+WY*(Ju*=g'f)EqAM:C/L\(L0S<N)^*_8/=P._,OHZiZT'UCU0D$f&`M^Q&X"N5u*?73#Zuri1D?4
%bVTK0e>Ph^_cUbe"i%irZFgT3):(W9cfPOLO_cD7-`2/jOJj4\hGAjQY_AVof;Brs>4rT/VY45QJi.].b3#W%Jnpsr_fZH2pVtCV
%cBXYFhOb'/po*PY9g$uM\H;!U3gS%28ZnN5C]JucV(gR&%][>>ZIqXl[`,;m1\gX)gb\'bNqmH%GG=%kC)gak"\%"7U]&jXa.e!^
%K2<op\uAd\Kj45up8@f4c,K!(oetdVj?R)jHt,l]G,;rRJVagtJlRg_Zg[p)J!Q\<NP.>?.^u;%:3'Ea9CiiVT#%ju\@/S^&X"^o
%cCI%N;n("G;nI,1#c]kRH6$=n?H_$]eVL!cC6Jc1+UjF"*R(`klnB('j'$3;96sjUQL;D>.q#co$d-_QS?(A=Z8XgX*A/KQXB\iC
%:n#71J>T3m)4.j)-I9C[#*_9/A3LI1N(IUkgbU>?aCA#Epm!#a.MtqIod]CRU<Xp;@[/=CHKW+JG#q$CJX)I&JYB)W&g#kPAc5k6
%Q.oGS2]C77g140.T)eZ7Sn_D.*Q9YD;URO:/IO(@)aP4S8i?*i.Wgsp`N!\8.TV2'X(aG_fbULnpU(3JV5hChZ.:t#KL*lsiYWK"
%"pA0\g>g`]W'ti`etM_q$-B/%hJL*0.R;[li(s&Nm-JF[U'gFafn&Y$4KOh0oU#hWS2JAcr>>s@!n:WBFs&7lG?j0h*/'lYWpaXK
%F32+aC59p%M;OPgEU9/_l:0>a/=GJ93*Hos&@'n=NT'/_q^Nc-H<c="aGjRYE+krS!I940>.s;B^.aHoh,X]0_W@eG[6Z"r8QG,O
%)Fph`:tT6UqUu'd"LY3?a:\KR$;Bug?,ZE-BA:HoV=P.;cSBMNWG4Xc6#9OY+=G/G:W6b?K:j9_lq^/=e0\[gNd$;Z<C-.ICSX#:
%C/r_K'H'']Ku/a^=%QVZqd1DDC70(lX.@N4MORTYhm<$k%R'F^YXaCGV8XZ#7-h/*X1/p>X\&R1mBsQCaXQtd\G^mllm=W<`DtJh
%p;LR%]9T+-"7k0lARVtq\>D;g#q$HRJs;[;j8uGDI&<Y_1j_mMce13.9o0@^bL+qAc@b4jH&%#aI^8j7T[T#ef?2P3jE=IE[.4u4
%3'2iYgDiE0)ZI/n"3t)"Xf`46h!*Zfj3n7hp%I$Ggm&5<`Zg4?`dft!gD!aGR7l5['-=,+*r=b(GP.]]i[;rC@]N6u;,U(2Q^1Dn
%f>Y()f4\riCk94iWf<mn4e48PD4!;.+D_E`*<FFS)oN>(<^0\.H8V(Sg@qIV``I<f7Mb5.DO[pmKe$TJ[&.po_EZDgDE<6RS"j@?
%[\:+=d.rQ7`mIZ8-MAX;OT>aFD'eVQ.L/H9WoQeHR&m,GY4^0"P-[;Qj_\#<jJT<KYmq.Ze31lH0.]25crJSeQH`P*It^VdHnZqm
%j=YMa=uTrlaRlV*dpK5qP5qcN%h2?)>t``Z@p`6AI\pD<7o^39H@`"(p=IEEAG6^V+t4jAj4ZW3KQ5T0D]7Rt_kp%g`NUL4R0R!!
%/)\*=7)<0B!7^Y0;:_A?@VC.FK%jkuN/N6fMgsTe^A(E.*rBX!\-^-jr;=g'C<T3)*##>&UZ('jo/>`QAm\+c1&R%[.#pVI'$nsX
%]cL04CTbI=ehPk/h-87qK:hNe\6'MXD-iND0F^_g<F3c_/c200O27^/fgp,C?EiBG9!hnE;Q[.D#1L(`lP&m.2`1mfr8.AR:q,kD
%:UB`@6>WsZ2$\jiS$),c$ZR,S8qGYQU,Bc8AjI(9N/:b14_+Q0=e?K-@O8NrP?M$^6#C*H/n$f;QLa=om$t<[\a)diLW:I4oG7\<
%*>#c-(q"^IF]95E:TG!;hWF3fLUlUAWSq)&559hiiriRX*]nE\gb0Y6h#WCHRB@B(2]$&c<GT>G,\EOVI&7;&Vu'd"k!t?jHb\k!
%kBcho*ILo^riCHjfCQs#G4_&JnUUc6_\CrdB>JToeOAu/U/ac4m?cVR=34.@i>:`h`Q9goFeuo!5/0fk<=OP"DK=nmjrNim?(=$K
%34W!jrV<)q>K6252g0f's"A6A!5%Yu@GXYu=dkcD!n"(k:"=].`?bY`GI(;#Td-u9O_'m(/O^qp.SqdmEE?]Z[4-WU*(0XlQpk!U
%/tT>J0P-:P_6h3J&\F*_bY7kNGfNPCnA*bYn<<A(T]YV9c,OakB-^*mhc(9`P;IK`4CSXhE_NB?8lD-KA0F3@o&kQ/Lac"m!fI4g
%N,TUR?YB8=:$qY$2.&i8DBr'1BmM&95N=H.dY?KP=k[GaEfR(fJW3lCGUc[^h!H?.4)dE)qM(!kRG[pr(Grr<54].j\_4mj6LRNF
%R36^']KGH^hL7OMbBHr4c)b%`6('"rf"6jXbhP@.o0>^T>I<DuKO/eN[6K+hs7X$2r:=QNo7R'%4T4+0O%le$^24k>KoEStPDtc[
%]'Z0["Fn8C5($kSToX%t__jR2VE4b#QZtXPT'\cBnfOM&9t&V"<A+&/R2_d#h$6l[\$q'_T(9fdgI=O2?JZMt7_)Q.IQG\jL(6!@
%l-(E+04N[T\8N_CA0Z,L$6B@oge^:GY09tjQGI/t)`Hq%2Pu(uXj(/gi%mY'.&mNAZ%"-<a"AT'Q#+>uo`co"I$g5)*_/c/)#"P3
%hVPbH7Ol\?L(UY(,@?8&l_.-Dl`,b/p;q,W2AS3ZJ6s@K*_/r`K3>%2qQo)XlIXpAs*)5-rr2ZLIe2ZFs7,a]JG/SA+q$WdRK*!F
%=9&6rmsb;]^HMPn2o#1]oCEJGs7G^Q?fL4_IJPV,otTK.g]e_,*e!p6"I33GFAqu4-aj.Y^5';i&3t.-<pX`I,hiBG5c8!l"j'(U
%ERCJ*Ra)M--H0_(:^?;$XmnXtE!)IW(*U6s816GGUl7(=Q<%hWq:rF@_q(qI]tOnk+LI9iRUNCYR/P.F\V$?G;4nJP<=R<B"p\%9
%<X$OPp[LFLMa=-U.B>5h@me_O,6Q6q4g%]P9!:FVOga;EEjX6e&K<GZSJTu4gL,u)S!P(Y9k6GT:9O:Tj0W[dlsI4hrUf]rIJT<1
%l"Bc-G)lS'X4V2Y35+&VCW"G4&).]6.1U#<X0[[pRrCn$A_3/\N%\Bg$h#NFaGUSI"I4`lo\oVdeGTQ$'*F`?a[eQFPVehP$?@L)
%Ut\X:aOqOo.dPd.eAL>+EGqI'1-NoblrXm6jtgmjLg7qr$T<>[)[/>9HTpA$C`<Km(o"_R]6<@f8K=r;,kVql*_,M8&&T6d+/lY1
%.\(((7ag6)G>r*LL#]imFL"JIj)6urOTb,oS[N_P<&bKlF!ZiGoNX"nI/Sj3o>11&h)Kg\J+gLpTDc+R4oXq4qV`[fhK,E@qWHo'
%7h]i;s4Adqg$cYkY5\7#^\RSmVnS"<[D*tB\RXpE`DWKKh'>e6:5ciWE_UTg*Hi?`cI"fBBC-WtY$sGP-6oHKbAk`rP!0BhB;bT:
%h!V+)CPO#%\NPnk8T3Io?f//uYMXDJY\tS42X$e4iHY4HVr,ldqW$JIBA^;@+&9Xthc*?>0K'S3`!4n:q$':R\7tM-Z'sb0r]2.c
%?EfN+oGl@TS`:2`<&j^Z?%Elm0q"Via&J9o<[g0[9#rdU_PREQ1BaJUbI@h!)qT^L^[d5SiC<\T4oo;so=+h=Y"0\Nh<]Y2[7DPo
%,(f-GW#H9^V?4JkH?]H)]hnQ0M($&[+gsW8O:(Ge:dNJmY/f&0)ie;&R(<KFRQ8jD67OEP16;Om*/a'jBt."Y6kXT!j!p.#d*Tp5
%dE4:%&_0D%p$sZ1.Np1UB*A4_k]e<Y$8$SW&a]S3lf5G-"4d-OUePQae8L*-\/TSNCs]<s,U%!B2V\<2IGhM%H@?mY:4Z$gqs^t\
%aFGY:\J6ErDA&CAfuVHtTcR)pNiM_#\^mTnn`u9!PGE!uf!n!4Ru,9g.7o@[+c`Ct'eam(c*U4+SU0@HL7FkWbiq4^1oVEYAe?uP
%Wj(apEKe3@%S261V,SW8.Q6I3#rou!g7"!jKFt#cZtcWt9R4KQ7jc?o7[!$TEB#XF.)%-R\.)(2g_bg?Eb4/3i<DOb9e_>rJm0\X
%D;4uhEbl]8RC)och]HF8(01>1':7;=-F-NResSlaUMbnq1YQXO_%+&^V5C@Y]J;o%@Wj^QbimfJ0L#I3J+'H5M<8ie1'(KGLAVh?
%3s8p;X?pJqDb'(J/T8Zg4Jj1WnB*(%-f@K3MO(?agmd\i#=?@>9.Wft5g99p%`.P=[[@dOeQBMX^NT$FjS@#cIFl:*Jk6urMR(#p
%OKE5=;"\3)m.uLp/ZjiVV97/_)?+.PL+HfB**,"S[#%8XK-#e_-;>;%-9hrb#S\OQj*rK6O(*sJNG9_a$ik7C9pZ<*eI0VlegZ@/
%Y;.Y!6\R#\?/s`\5+'n3@73=h)'S1#%+G[j`sXK(0g)#TW9+A";oW[CD&TD'U7A3I)#H5S8>u*)$n0.6>uI+@6FTt3UZcY``u@]k
%\Q.SN9J2,^PAKWAMkqXg\FaPl5L$(f#Vi1co@#P*miujs(ei-(Z]rn@DsO"**W$i1.1I%88>S:%m9L()-0'>Pm'\1WSNNBYWLVM1
%,<+l,m./tC?"WcU/5C^Q;QI7NaR"tI&"BPW"4`Fg(qS,/'r4QSkVT`l`Y!C>\qA@_1&.HQ#78KZS^Hk_^/"fWVdM457WSRB3f>Ma
%ir9UQG3J8-9GtJTZ5J:Ge$oqaO=F:1LGAIp2f?5d5#L4bRUNO$F\#g'aai*?Zfk^UP\g\nD1LBQYh4'V@>AjOg#Cgu?"WcU]o6Nd
%s%.u^<(Rc<#?%IAC:8`0l7T'gGoBU7!rhIF'gI\_"PoG$A@;Y&\c?=D\/=cmX#k8Z25pClb^jG@cnWs0NnpCl_!as#eLK"E/*el!
%<h\Q\olV+\UEj+jD;Rq<&=Z_*'KGAs(h:rC<cBo:`_`5*Co74&\Fr&`j?^j(CRDH`c.-B's1Bn*Ac[jacO?(['_td2Z$U;mCaq#4
%mbo.t>8nl0CI0K(fV`/9$nY9>7RF<F/=`!Y=>irlX>ufn0IJl$0DP(,5RU>E76gtV3gMo:(Ij[bDDNEHRoE==6"gi/GlZjO(CY1&
%AhfGf#4UW-i`<k'rM;cV2Q=->R2%h,0-?`#-=+fcE8EJk`Xa7)('p7WdC:D:C1:Fk7@RiFW8_=t!3##o0Nb_WaO8EigVL,O,.'*%
%^6jUP=B[?Vl[sqf@3U<65ZOX%%9OJB.o+:c6(Hn429dS2LlFO8=l$HN.i0mN26HgeXGXV>qQ@[J,u/iC>8d1G3G..!DAt/RLK7)G
%7H2+<>Xh<.o'2r<\I;4iHtq0H2a(3O&=_LDAZ'V\%AfHINF/SRLN:\q)7'lfaC[k,J_IIe2PDY-,geJ75p+mP7r5X_[']3EH*^<Z
%CGSiOfiT2gB]VQ6h4bV3D$&?dil9?B$>/+,h\_ib@5fAd0%6?Elnf(p+e<[.W9&RZ(bTkI7@Q=]=Nui/(7Xb(#^;+r@HUcXXn:@,
%f#ao\_dTV!rn3$kbcMS=6cEapLup'_g)rUh%?rRRju]bbLMI%5l;X2OHKm4bc^ro4f22`nQVJr"5.WXMY'EGl1=_-XG@$;/+630P
%h_Mq3gYP*7G7U;8[CYa<*9>UqcB&0?',K?sQuk$i*>-Rk6;L;RmM`O"[pu9&V.O<Q>"p;=/W%``S5CkMVG:+b6^7;c\^[UO>PkY_
%-tdg-a"\hrGXbo)5qS'HK:M)Q1W;"N5,Ga).h)rF/8*+0qBTuDBDE7ldH,3#/4Gd@?>L7_krJn8fbhAJK5K(C=+BgLXdl`0?2t=_
%kbjPTFI[l\^:HdNnNaM6-%B,-8O"/gPLS"9\jd&aCF5cq)3M0MVqNM_OI[(RU5`b<D#V0%]J8CSBEX/c7&i#naIPJlI2t'P$r'ur
%hK,Vi:&=jt>+3%.c(n]@M<^EZ=Iu7ALAjf2`)[$b1IG]j[8s&q'Xl=o?.jN0N\saOROof<8ZH>1[Fo_rM,MsONY$n]R,tt8C@]r=
%S$BlI=?r(b*;$s-LAsZ6CFhL3=17KmrInjnEJ2#c7;^l_F#*fk;emuafe#mq(@SuCm=qW)iEDHK(RJ!NpM@u8qg_Q_Rb0AFB/0+Y
%Q^K*V&fIs^Y=e++pb.RcFG<]`?!.7g7iU<?.u^uAODc%q^ffsdgheWT!DAfr'!:o^:uZ"6H5&4i>orLP]o1[$Wr(#-MT/GdYe/,\
%_R%>Edkkpq-:6Z'3JQ?o,u5Ald;[+*SFkR@j2qD=@X)%[=_/1i5(/a7NCM(H8QCh?5-@CG`V@50EYfDBVDoMDjf(CW?Cb^k>?mns
%NG8VU`#!-9X@\rl/NA4%VA$2g)Xr?I\*>j>FgR[T-;52u.)>S4&9O6V*B%Akk=r_=Qm$dm7;qj'L36jY@F0r4DUWU3fV&7^p!q,I
%Pgk\G5*AYIC@GtPGZA)dTnGhW"0ALI[eRJjQ(&me'=([2m'^=Zj;a(Q(8<c5*erlXk0L9"Xq>+W,)o$KCs:_?j-s:hr/rP0A^&r"
%>.i9Ffc(eYe`3EE\n5fjCD2tKg`^d!HdhKX&Orr6he]F"W4d=\;KP%0NBT5jhMZ!XlJpT7Gn#/&nO3$u["SDN1Nm(LZBC5pa_$i&
%-d;>KENN76MY5=HT1(I&a[0$<BWX0kc_FT@gC)^.V5`UqU/Z<;l%u]de7OrrK()&R30TB;]JpjQainUWW,0tB/GA>0:/NNX.qON_
%i?6kZe!WNT2/C?F,<c!#Ej6GZ=!Qa\-MTo,3U<mZUkNkZ$KC*nEqt@EB*-Ob-U"[,EK/dB2aarl"u\Y>;Pn4?P>^.EfcDP,k+[0U
%b(BeD?+[8Y)e3dj];1iB$lPjk[2eR,l%,O:_a%7InI7@E3YLJk,Y9#Z(i$MVdPp*EL-E'a"9M6K<gcU89&(oSU^VI#2>7MH2&r*g
%a8Up]T]oipZR'``Y!n2t\IUS&XiWBWoCTJun=9\^H/qiT7(<pamV'_6XmSp!EG.Y/5qcF*m6b,&T<@iRm;qC,Gh.d0",7-Lf[@"2
%--M;diUMBdiguSQOP/0hfN@t73c2/NN[h0*jsJJQ>l`M(HDZ(IX#,3u^F:X5-NfE8$l_f^YdMa>\D!\c)4@k)_Wu'uPL1e?@\A7?
%1[-N5E'-e.Tb7?=R8fAc1(;:!r*&%\l]dm=DJd'aYrC-t,ViJ0TXXTqDr'F4&jJR7)D_IReEb-WfWKA%*_BT=Sh]$M(P]n*hc[`$
%;'7#B%T@ugJZ*iH4:%9"rZI9CXH?(VBsRiED+`J^PTCE>XF&)*Hu,4==sf(n;ZTncKW^&`P^?=$QGj,IUt4K.<Sk5haUTSVfrXjf
%V&KeRJ#8[0"Ca3Qd3mO`OI-tl+jHQXgh7-9)$b]k#ltQ7/O:/<Kqcq5[`9QJ?s^*N^<pL1)B@gP%<p:Bh0D@0LT]jnTo?C3H+CX1
%G<V"<$=BFmJ&u91_Ruaeb;)E'NJ&\U_\B+mN9aT@HWVkufrdZr1,#u)KSGQNI`g&6bj7q=1ef"rGLSO!S^_g!%="in):]Qb4QlU$
%,+[<[m<e+g]%B\mkH"cTSO9*Z`^.\i^9dX,%WPF_iR!inSfLoNb#l*S=GG%M9auoeRq./^m'hZmT<Lp=Dj-/_"D]Te)f'I]=Y3'^
%.l>8End>8"WSWp*$jps[]%<:6o3b#QO;?2mW:?T#ZTq+tV.&"iN8Hhj=TrrA`DGehPtKZ2Msu%@_4TSC(JRu:L?.N#rR8A&ft]Gs
%=@`D<5W6OT(nY&q(.,0-]?]LmWoXCW](F(dApeCY5!.#LWR[iNnDV3!h\h1KfYOa>4AJU(PX]%9ATI^/TG$Mh\</[Z'Kh<@\Jo`c
%%g"#_FCo$-4mM9(<fbN26+ON^Pe8tYpC^topPG*1_><??:nI?nmLG!RO0.5+D_JJpP1>[Ud?/.u`#,Ru"d]OMB%uPAN.R;Y%+I+N
%Z*GFM,Bj@O`Mg6LR%fnNGaS_jaL*AN^u/cK3.@i\1;Td?%!%G3$=>WReG!k521cA[iPe!b5Ws+#^[5R[R]OKurUM(O#,j+1D>RQO
%2$0fd+:1W]%p&LSWShu'.Su@paW08l&(J0QMR\?$*#f8r,Us93`B.\,p([Y,D5]S1'_!r$,oHiqKA$IG#,$W:0Q=HRhXJp>if-/(
%<r9gGqZm:3i6R?0!g^Wtfl[7]6+%7?)XCChhn`dk2p.C'*IjH:S79oJG\:V(?p4Yp]2k*9&D.*M9fa6"Ia-`@R;s`9VT,"#9LW#(
%b_DDiELFahEWP5KjY5hPEe1^"8,L_A&hTk%.9;3k7%?pY4&';e7qW;aim'0LYh7suWJmn:VM$*hH6-*AdqiPaaGaYl3_Vr&N[e]H
%P:!q8^E0aG1uU(b&B-)'0?@\,9LL_emc(OFi4V^WZ/_W(e_/o>_jUh`0JT'`6=(fQaJ<s[rE4Gf@%g]05uAF]2)1CuACE6#bmQn<
%4?]([GF%>Y1OX$9Lh4<Hs4f.RbW(XSVJ15),=%XV<$r[EAB#>U0c]cjmj2hM`4Sh@q/Yke(+=NH_R>mX<0nCQ-heQk`goiMc*V;P
%c#S1+hY2l=O.CiGfE"3G3]9>T,e4Z72>4m_S>",%;<qIJIgO*M-;*:;)tJ<-feBmjn,:Fs%Nq[7mW,R,O"Zo^h*d[mKBNtC';P[o
%]?E[1PZ\$ETW%F6p\mTT#?n/CWoh]fPo"mB.8q5Bl4@MJcS@nZh.HiOq*crMRJ79DfD]>T"u-&n0HCbMc-0_l@kLI?en83UMG\.0
%dL/pGm@NPVb?/rVh/!$G-3I;`pL:.VF-/SoeDOT[n?4HsC2'QIF5uk;4l>qcQacs*9EdiV64Ssu!QCsQZ;e>]V<.B$RnYBUU*ocq
%\s+sj&fmP/C]>Sj"/Q">lcUi:qSJ;mg"Y,6ij41SMVsT@JP]4@r[-e](B:m-I.'ic*QO,#O"Osq_eCn:)OGCQK',6m"Jo^91rb;s
%j^SJdWi/*XB(%T64aGT=*iOE5^$lIq:2X-DhfZI:JI%H&G!W;@N0GSnU7b-;_7]^![)Mn\]-$O'a31d9+"ducT>!.0qU648c[OmE
%n1u^*7.R6.dEd:9HAhF%hu3.ZLZ6(uf9p]lrE)]4;>h30(D)<l4a$+FE.O9Pd?5rV0I\Q:cgG7+U@eX3N9gZ3NRXD[17L@?F!@&D
%Pe>/D0KU]5+1&M3:1o6J]$56U/\b8DCW$B=%kfJ)Ff#=6>c3^Ob)Kt$3W'gZH:O4;+P*OGccmfYAm-[>!"Oh$D;p+H\4YrR:HhM4
%MHdcW4apanH/Y^SdZ50,oM8ab4agI,dQ_k7aUkT_$Ml,'W?+5V.Y$atQhB=5hGdhY9'^d_W8h<$?at0cD'I?4oM`/t/ATf^SGF]3
%gCXQ<PPRG&:eFdt2N8hl1d(eD85`L2(oqE8KI9b:s3EKI*an[Y2G-SsK52c+:<EjIWV_V8W*$"5\;+msXoWQ*W,ac!GU'e_GWfhY
%b[.>-b)$e[?sLIu.Y)a7Rjnua.1-.EZ='*>1kTujY^uo!5g2fn/'GeYUL6^dVIN5r6%me#$_$a"/rSHFL<.H7GXM5F2Ek:((?L./
%gKfDbSgB<Z,u=*49?t`Ba1,AOHkhIn_d1V<>3NYEeA["XL#IFjfYSN&e@[-#Y#1,=iPBi)OW\]FAnGO=,1*ql?<Ti;6ZS$_AdI]W
%_Zim2KZsN&Go.THoK5ei8pRXbk3[k7S$XG_;0.c8*:)/PpiM+k6Z';_VS-n5+Z<'/Gd</0KM]'54SDFO3,0hh>Ri"e?m9GCHD6W-
%U/7Ra4[%!&8YH.GX]PQ0#o#NWE+u*hbqTXj>RsG1rJnU6p7ar?`+I9R%Nal,(9X5+@X;]e[UmPnE@;tt2g,C>\K-Z<!rd.L+juXQ
%FA2`?B(oIu:Im/Jp*>uF@/.A%ft!Eu!_RG$j,k'(L>/O.q3\9.d.Z)t!c@6@-OiV+UBlP'iZn/5G*`XJ0lqq&CIF$.Lo<m%N*Tp1
%Pqb<_C*<YR1AK3mbudE7eWO&J=K'::\dg1[N`fEe[(EE<=\B6."R&S@2ZT&,fmK*;O>:>-9^k@3/]f/S:k1jQao_f<+=Wo_5tr'_
%fZE7S`;*2$*<e;6-uUfKrX\&nWoq4?*eem2.0sM;;G+_]c(Sqce;agELRf<4m7_d,V8VS*U/58?E:?))D24s=<R9^1Oda&cLNh,<
%<Wc8p>B^KF$fq>R*'(ALYY9sk)"cb5hThrRRFS;PaPULmcB)3%APG7ddRdQO@(Dntq,32]h81pMWGhrj@e"Jk>ld0M-$_$hG(pu>
%#)eGd"$8CV_.1Y.MnutfjNA`lBYN]pWS*SNX1`3NI#@@:jgR-&6-`:V2s83CUW\5BPY^3/`_r(MBkK]i_AF#:176UbKOl[g!bi.j
%Og*8W*+\5L>m`TT@QL9FOfgN6^KNX["2G*`0rf$rWHE3PbUa6FhnpF$-4YqO@/_8`O07.[Mob1bhU%g-!f+dV0k;C3o"8.Q*+M*-
%+1n&VQ@S[`I_J@ED^eEe[/h4#$t[7Wmar=daDj[@'sl<'bUkE;5!ie'5S.`ncN0dZbP*/JB(0+@glV#s1%u`;/eFnt?%oh`8Dq\)
%qm/k>-d5nO7-^B#)K"(m,1Y`lYD#-%/bc,<j`"6oRs?J0V]q%LIS2[I+?1W<=J?8)-IYr@3$NqU3E;MdJ_BV:"S/Y^beuroP\K(2
%]DPj6[.bcg3P1*R8lhrK.5EI2=<;,"R.5$Je6#sCMTQ3[`h4shI];[>(@4<+_-q,J7U2KWQ)Y6hH'ZBQ@mHkO=>""qb&LIZ/G,:s
%[ouU8eC)$k'f3H\P)9jfR%PLPUjWCN$XHQ?]L:@iWNFfe#jQJ=OU4ZUbX914gGp&(!2#_jr,([a(8<7p/QH6\;Tjn4=_Yk=?lC+'
%G42*^SDFa+1'@Y;"[OL0>Sk`.9G]R6o0uk_3`1,5[1#/?8D.F#"dg+tq^\^)NPs(M(thVD2l<rci^4h]Z6'C=[Klu.'Zk[]H6t%\
%*Ni,@2#;duG^Cq'V\b:prZuW>.LuZ8'Y$soqpqaU,?6F`le1n&nYmU91hN.Td%0Q:?B0]Nd67?rb6[Rnojb#@5$]g4kbkEPnB?i3
%CMQ#EZ3O@!F*-_#Te!Of&n\9'Eb<]\MYGdBa*J=.n$HrbWRfbV4k6rE&+WKb'Y<j6<Yo50Fr'o/i(2IZ@9"m^F(4(0%4,o1_;%NG
%"^SF$982M?9p/YL>6U[VY>>_2Bu*209L.$6>pkfb)^G1cYRY_HgGTq2XO4%lLpUZRX?&Ii2k\;SB1iFZSqqum06Bm3i4)*HnA3np
%e%Z7nQ<Z@#lm$Pc**fXa5@MSA`OI:SJ4Na(KUQIRF'gop=[WQKll,Rn(2Jn1KtDa8O<.(i2@:Wcak@J25$7sKOBKm2KT%GLaXla/
%oS\O""="?\(bdhpSo)>F8t"lj@%W#S_-S!f[6l$g!3SZ@]KQ1[G6UKbM1UfUe<CJekA<l8j0pUQ[<hgQ6ErdGf[qNKNK'9bnoTP<
%gnm67p,Z0$@fuj*ZJaA>^?4sP>;)_Lh.k4tUJA:YXhiC3B9V<QHM5&n$8`QB(X]*L&gdba+s\`o(_XFsk(%JiejVO?<[1TgV\FcW
%\UM`6\+Reep6#Bs#nB<6PtTcI*H"5`n][NlYjH.W_/&@d`l[[SYfU(2\RVZBT`Y\\Q9;Vt,LLZ?9Lf2(P,4Z$bTqeh(d<I!Ogg+L
%IH@#D8_XT=mi';P9f*uIpik73]T,Mg4FEK`:YU(>6KIocZ$[`2>.qD#YC6'W206)=h3=.#aepU\Wm!K7rb'F^\4jebE"#EY2J*,R
%Rn8:;NBE'Z=GtL?YZFXL]DAh.nhdB[h,:(f&)[9<?hs6h()##P[YTT7Qu)n-1?/pX5`(Hs-9r[bShX23=1_>PeiAD0@E#mgLTc-^
%DhSfHb6rPXW.09T`+R((6FZ6k)aB&c.J2^B_>lshJtB<sRG5Wg^@nc=9:#o%!MdYhSK/S$^kZ+#M[I]SK6&_scPmUn.ZCRQ1>^d'
%pV-@:ZeH1U\>XhbJL;X1&c&,4%WNbG0+sp'9*%AoE`SAMjfI;[^A##?*Z(9cVA<_iMO9D^V_Hn1?ofIXs(1LbeBk#N>(BkF5cBN<
%)sHkL<us=X+SqYV!k'mVd!@TH"Ga6)Dld).DVF.5s1%S.Emb$dWj_'>dsGGKi(_#N!2'Zbj$pT('LI6f60%Bd:c,14B#J?1K&Va,
%([(_Mf,f)]:*m4SP0Z&upW]0@,LOAEgs%u%;.[XSq^Q#AkVVqoeC/bOHf,:[%]K^kC>d(sOCI2pham.>CZ"=='4-L'bI"7=2"8\8
%?[L^n^*^0gXSgTQcCVnXlrt7AJOhpY'AH)pL:Iqb*n]5b=2+Bq")HB0qTQc')p'I1685RuNRAS`ElP[e,k-O_1<KdRL/7O)]rsP;
%A@?&f:i$.o%,@9Y3]<FlU"i0R+B_)6r3#@aU`5>$:&+ChY<?b[]Q^Ppp"^&f5Cj:F_WJHLTc#oa+MOTt]QXTj6rm%-b8rm]pU(64
%QNPbh3_akji`G'tq?BHT/FsMt^9^U[o)KW?kt5W;nD;b<GkT!s<+dC#?ir%i64Mj]@`jMfN$oCJi*.1=EC.Sf-p;st0CO>VJO;kM
%6kmgK["3.-De&'(g%VV"qGbN0<4Oa?+N5@T=(+"bT&0@u!s`p:FnDHo1EMDDBP,e:Y$BLhK(slud'1elM?fAOjgr2#FU.n**Tcle
%$%XH(/r@kIPT'BTmna95R:.i\^<ctXHie,)GMn8m)tcmHdUB*)g=0n*_+C!,9mgqtIlbLJO:ru\on'2Oihd'".UI:`6Cr&^l*Td\
%i;k0/Gb]j)=W3WY"g=Vp6j!*N1gVA2,]kOe;CB%]ht@t;=kO9^?&0,D!Z=*'o9scYgXl'IfK$jde2JjU"]T[m!Y;mUh@AJ1@XiI/
%LD"osJ)hRW@2q(,i@i0b/:Sjk?tRDU"gB?8"<o]Q+Zkg>\P/+1Q!s$ZQ0_JNUgjZCYD95(XPfgd#"BZ'is^(I'4=.=o[kN8q3X%6
%i.4nDBk?m<Z\R8%Y$j`0pJBlZg`MXM+iq"n(OE<`rg^fEr1*Tu^nW6XHWr8!?Z+nm27cX1oLmrU7FXR>Aa\M3\l7/1$%"YQA0!11
%#CEuT[>,VS^_TDeF0\c[WGX^&^^ta4A/[bd_o9*(Dn5`\cJA20CfsfD,s&j<$-<c5XjZ-1?dg#=H20uXfP[#9k]LL817nV0fFREj
%NgPA<m%688=5dQmDr1moY+DG&;(@Z\6%WYAbW`'#B_)uV<?3Bi<J;b-\;iD49-@+<KDB"]S'QR4)8Ldfb_\sl,W9TcpnfVPgCYRN
%O1E+[#kX#TJ-#oT\$3d7,^(<=r>Ig.fIAmt^W*8_A9ek"p=.j+n>Ae#bf3N`&#_(B>IV)tURP80[too"m>kQZa2`XNa:,+;j%po*
%ST$O#LVJ9YjPASI4hgYW/3:p_2ib+Vs4r?4l",m&_OFs?7qEhG^'jKW%7T`$V:COYV)AK-1Ba`8j6,*0bo3d'#;@[c^e3i7p)-Fh
%U-ams$+:?LL9Udji-1D<Kg$UcV-?biBbZk+L'R<2=D\`=)k.%CmZ[ah[\(6,4>MW-5]X1JZ/pRRK*QT<^>#bf*W'1nY3""SVR!q^
%$9dp^\PbBjq`HDmdA7;^qfN*-KZel9HGLku$6*19lAI7=-6]1=e]?;I=<HLY($6:JNB\DGce8VGX8*@nM9-QmXu59gi,c-l/PGUm
%n0DOBAqt"T1[NdQNEZXR+9ck>e=D2=$W*9>832,QS9CTPqGJWTfe=+YU&A-3Pu0XG'.P<V(.MUJ7$U?Qc[:gGIYMF<IA3"^#Gl,P
%B\[_;s-sJJG:5-&pTft/=s69KG,.TC%/JbT,pu_@QB[7?2a,C?,P1CQ#R'SrV=T%GF:Tgj-utcoUR23j&91/d`_kjA0Jk3A8SVa:
%#i`28.b%i2$Hd<)cfE.J33ZM%#\Hk:1',P:&5o<8f.om*+2g8,b$OPeHN4n+$q!$Gc40UZMp>de;40nn'QSNH5=$ah!oi?39E\Te
%gNhOuL-+bU%Ud5%EAVd<_-uY9&81X#g,;o;SN2\XN,i+H5O2`"NY;T+Lr-TOE$<[d\.L<>)7,4%iMdkOp?.onNrWq"1";Hh@FF5h
%-Dm"OX13MoTT4%"47VZA.]E/U@ksN*jB=`Jb5bBR<p\S-)1s9a%9ek/_@[l&n.8!TP?8=#>#:ljGOrg9J`tYR9P"a.kJZ^#Zm;'"
%j_r8W,dnE5`'M:l`6P;;R!s$"%00!V*82?7ZD(34G5H$`14uKC=M()?s56>`%7AmSf<ooXrmE1#Pic,B3!Y-`D<M.b]^Lp?keS4d
%]qNER.L&P`:MUZHDn%h:\:_<54fiC2s+gg([u#7NoV4L?^n]04-B^#3KM,D%eaA%daP*[V+g;\;1-sN>)knH18-q6[lN2YP.F2b-
%U,&G06%eToC6N0F2?r!me\TD.I/n=jA2Jlm^1#W5ju!12C\"]3/oR(u0mMH19Kk+jJGt*^>:6f!jACOFFS&aj;3>n@kU]R$PSFQi
%U2YBgf)h0te)E*Cg;^%nC\[g&(CBq7Ct<V'34Pka(Lh.A&`%V&=WLpe2\S4X%EcRfQm326&@8YRJ^'J%)cLh1+@F8R.qi.OKD6g`
%j-YbC]&hHUhcUY/3W$dj!P[;eoWclL]L-h8&LA.O:^k72)qf,.'DV^?m`ZUQ"e54pG2)6)qWU,r83J6dK5lb8Y[O]_e30cB>S*A_
%C<p(9U^FkpDg'=:!qKL:g?a(r=;n<^Q"JNZ;d,@Y;#?oo=k>VlEA>-4*tfV_/mFUed;\TDAK@a!Kr'PJ'U.%o`%l/ugo>:DY7cAs
%Ld/.f*F3<eZ(MH"%s9dtW`ZL.lTsnmXPCQpcR:[*fI!Cj8d)Q10V9!2:+fg8((BmN_CA$!77/<tJeBU\mt!2P8b!$a(,CdQ&W&D'
%!0#(tTVT/=d&oQ3%/L1^]P(qW\t$c#Da1[-Z@[G%PfXfHb!^WoG;jP(\A!U-EdN?,P<I57<>L/`eeAVq9nU"8@);V0&gh3A+H.d&
%3@n$XPILo[QR23r[SD?T,IXk5[0Q.-)!CreqQQVB"-]:;%BnX(J\@b=9H:?QmlNgIRt5u[#;oUejQ)Nj=`&.;8murd7>[Ss*N6eg
%9kfk)=Yo!pR@o[5%'EB#]>4d(E>m.(0d8,ld*bKinot\09k_24,Z]:-MI/QWI>!F-'b-Ch6nqKr(HaQ,b0i,7KL<l2De/3QB#-)0
%J58VM;O%#j@u&A72+7(\Tt\qbpOZtsWaUUQNPc(S*f\j77T<5;Q<$qm$uWBFa0(VLdZkL%5/O/U:;U*[e*o7UDHW%NU6ape,cV_)
%q`;TE-4I0&XmtU5en@YU(2X\h_'$oqZlrcq]H!HS2:Yi4q^O:8Pc3$>U"V>rhScRk/]/!OGD]s?<KY6Zp7lL4[Y<FMamMMajNH,i
%(2-1A,Y[:m`Mi\c$cliW&/?WLkc@?%-t1YrD1BED$eK4K&Ou"g81G3%8qOBh7<d;oiWrbAp8G)7?%E2.8YR2O7.fr<ZAuA:8@?c%
%(G2i-5-%R=>,B9N9_XEK;%3:]?WQ7DRK0!F2`'uVX*MrQPi*:\oWr8d-%uCQDr#X!;ni9]lkSh:Tn-?4m#+T+8eC=FL!al%=Nslk
%;Et@A=][Yi\MZ[@;imTjU!O77(oXD&%4j(6E9<NkFXrWgfgNtj"-P.h"P+j6[u2P/,:LW("q:CQJcSh*1q3K8;MCd4&CqI9K>%LK
%hh27gEpQ$Ff2mQr=#I+l))2`ha1;U3mV(\gXGcE:JDH/u=`LZ_)/GOmOt7ePi,:;)J=md7B%Ts+J6Q`f,"+*p:i-\'Ms<pQO\q@e
%MDF+0.IS8RO.rHcL7#*R8(!@(Yk;Qrhj;ggEEhh4ciX%-=+C7ppJ4$R?bcU;hgG+Y&)[EdlQ?,1^%'kWp!k.6pHO0-YM]BW5CW@o
%f>%@'=9%pCb?$@shcJ]`ornDjrL7_TpuZq:5<So02rB)]LQ?btQf%i?Rm2;t`ui%m8h\j%p>)&Rd.-#Re$&c8X"XLG?UB`m4&Z'Y
%s5/0Qr7Bggs80:_rUHtF^CqmO8,'j3c]lDBFOu9OaJ%_<67%-J/8VN=<F7"TK/We`?"Kk[Fs%,3;q9i#X;"#jCiC:DK"ANP!YH%W
%MF1a<aWab,-GtW`91J!AH;?kLh8#F5!m`[(FRpN'Ok2"@`/NChM:)94A-L(:gh'^SFd;uY;@"]]cEG0\^rCXJHlA%D)Jp2O$%1PB
%;Q]ngr'rWLQ#Y'+cP0BAOO4K&bnnp6=]%\2(e5NnEY.W<^)>8n"d`p]Z)Bf!L?kWiCN?U<P^Y!T1ml@[W]3Y:#DJKHolUh>C-EmV
%*)AF=g]*Eb]+XMUS$:Q3iti:-WDm+3/_%!<R^\3>pD*`<eQkj&12Cj>S)k*j:>kFjck".A#MWu<K``c&01KKI,c:Z$G\4\ui5d="
%Wa4nPA]R'i3E)gc1ort.*S?B$l's&ag-E8X@pB+>-(ZHZ7S^7JXhKpq[Oee*$XI8HJmJk%bQKXf/#U=>(CU<eAD]qn&_,Q6BE=n?
%*lD#Z/T4eZ,^-,4CaV5&:eBQ>%Qu!eW,ODm)>`uq-Ll^thk/*sgM4Q^7$Z"8Ysh#D]IAG-K[E.o-R`qq".hbu3j)b*0UG'/-g%U`
%:)?r<$%,n!T/4!<6I*eu/U5Rh0MEd$*4hD8>?_O,%s#@Ml1;RPVl3T*MUYaRg,#kJj=t%PK%9q>q\X=n+faZ#EDYm7^ms%=(+A]m
%\E,[RLEO*5r$HDR%Wc][_Y8@15CL4a/uhE[bXqh$,qfJm-%O3J+:O+b"(<^2R5(8JJ8Vp0%:;Q:'#t*(@c3q0o+$qE!&?.YN[;/3
%&"]YaCQ;6]9-acf>m0G!2F`G4?'LKB8-F)OK0@LJGU2DakoQ,*.*+k^'De?[E.PqP/84#[\f0\;iQ5+;@]"*6YqGcSUoU>'Fsc5Z
%Ja`+iJ$3WFd!l<;/s-.\hDZ,E&`T5CJT.PqH>Y'Q2PKI@Uk,sR6_e@*76"k4^uO$j^+VM5UQs2eBMU$%UNblKKI=d>i@TE8,m5.(
%G*%6"4=9kk\,1B^7RFug%7E\jcVHN*?@VOnW%N#an6CVgN[&u(m+'WC!sSNT"CHCaktQB]m6FWO`-V!%I=16KcX]Ce-6+XLG-(#i
%Y<;aIoD%b1oP%GKVr@Zm+S,NWMQE[$1S>Mi_%VU4=q^lG_#d,eZaH/Q.D(Gpk^(<>/lFrXrJ%gr:-a\/9["bE;56'hGH1?7V7($V
%!7L'@,]G,2cgFbj,r-NeUaEMl5Q$<<-uHim0H)=PnNf7qG5#ite,`u7Npd'<;_mmPIe>tSn>t\p;>jF2pJh1TrC>G_>\BK<2./kT
%B&&US5V=2V%*O_gOV;p'm@HA+a)0<s_=CXli=59I10FDhC1:T=oS/-#LE3rJfjj=')qG6Y,js^HVW\irChM]if(7](Th=lZa!;V>
%%eMZ31P&_\`juGE>E71,DWAu]'&r^Tm1qqBM)dIOCc<K%9q=7A$EX>n/al["j;$C^#O78lhq<J\W?&e=4q,D%DsiAIeD&e,hGL>Z
%\+c5`D^F-EY@$-X5",=o:A)rDh,F""qerRH\^'s.Y[k[WbmlJ$`5MT?N(O4t2AYh+7r551C,RJp[hB:5B88p$)`9C%q#1GXL^6<r
%)0I%N6fRY+_j<Qam\BX)E)*,T5\tcLck1A67#TZ:'8a;[2klUT!0#p/M@>:Q&(Ji0fL.V[UN'%B<V8UL_:3*ah<`Xi%)(CY25==6
%GhRYcC:QV!Z&%o33,6iYa6u+:Z@N\5rFN';MoQo%O>J`j_G9d-\/hRGkH:H0-fmD<LD,9S$482'K"fo!TKS^r7S^YQ;^^&3NERA#
%nL`8N)j'I]/nu[bd-2"#WQ<#T7Wf^(A*WRnq\MJomN_UrPO_<N`.&uKQ^)C/JauoG_OQ_g^^<'^X!O'tJD++FBK<Sn`6K>a;dZ8F
%d:ECq0i+/Oa:UEQp[Y/K48Hks'UG4*[4LTW=RW]9cquo\OZq8)bAc.>=9Pj%0V2WB2)I2pi\omC4!$MhWK7l+P+o7<-kY)G4?,_6
%U9]O&\$o9\?)`_<d&tZn0V-lr4A,giEC_%TOEtT.6q6PHi\W$7]4F8ch^`2"AJAeQ0fm1H'd/kX0YPIk!?j0,E@s<7,EBkb4t>GI
%W.FdkW!(AP%\J&.:Cf56#MH;d5+sI6>-k#J>&`%OXYtJ6$6jQ[<._;N?SVTf[BRABD//$NL=[.c<HM@cq/*SZ8\_$Ph.Jo%6rj"W
%&CS$,=iOl7?+Q.L0>S?4:VjH(PT?L6YDi`_lQR7QH+"uNW8:J(\eV#(G[ZuKc[8\gk8%AT]!8@S2G2Rd@araC%;HOA6:"92JZGnb
%E755EL7WeiW&:W0i*'?SM?T>H[DTH!ld44l?EA<>VGPsI-N;9-KCcZ%o7OR2lS67fG_SN-fe<Q'UUYtH0.!Tc8uPU@jNn++bk=/=
%"_(k`fA"3PhKHBiHN;21%ghkuK+e,>/A:.#Y_R-UqDSdkqmC"\Rd(a&gc$#;ctPm[D+?Q5A]i"\:.T,0f,g]mKFSnqmE6kbhFG<2
%Ma/p[p(7]%BV6PVL'mdP_2<[ZY3;2Q5Pj'*C14Q15TA!t\?I3GD(>ZGK'JV\TMdC29;Ppl5QV$d0`*'N^\6[t_0&H*m$CS+IMnL/
%Eus#PfDfBF4hX6/7!>)M&X=N_;"bfVi)18In:;Jap.;8E8-/d,HX%NHZ6_g/P"H97]n4rNq[6La%;K@XX\ftl2+Y*GGA7h7qmb`0
%4+5&f/FB2M&H+?h4>5;hE;Fi$FH4X&+nB1soU<s>Ljka&Vk7V_iFi+"N7AQP.]kb48or9]X^D4[jBF)f-tc5QYAI=7;!!#Z2jmK)
%Jgn=@LHkDc>kQJm[4[ec3]jtrWAE*%Z22(.UODp$5GbHVmMEbJ-/K0=Q*=&,QTu%UQi5uKg-I\ts'B(0O^d]5VXrmEW'ik2bKnR]
%A.N&I'CL>r!,]/DK4:Xu/lT=>Xh"jjlr<+T!u&`*NPO=.)u>XQ0`3ZVk==jaM\lNd?Hb=DNC\RZkukmq-C'YuO\$`iJ]r-C\L3Oa
%XiS?==<JraK"HX2a?)6m$aHJfY-'_1/<#>Om)6ufl"&bqZ!PdFM]qPrXE&P9F8+ir:]e8:Q>nCL^<!H19AM2B4@f*f=\:tc&<E,9
%rD'A_1l4AQf5I(.QV_j,GA?fhGAC:J<2J>.!fWVLK`Dffrd\a(/5)qAO`1:pUCr1\<_e^fAtP@N@sO.?4f=1*8=p(ZM"g@7L![1"
%e#6$s2?tXr<mA,H/rI+Wg?^PggO^pM8G-W+0u2=l;YI4?[r$EY:#M^]g\^6O.<tG]bkZR<`,<nVLhH[4N1:-C%h`I6V]I-CA^6(Q
%%A363EZO[tTVV3cNg/jck<l*?S<"E,f7TpOS;rn6c\G/3\K!9McNd.I\K!?PYK,n`oZKPl?TfJgd4^8LoM7Se>0tHD'E-C?SG(ee
%*BHB24a*KJo"k4&%(@dh9OoR\3A3(E2J8`3V.8j#/OXEo5YZCh<*,A%/=Uo'MP*<g`-m"-CEMll3"OQ+r&e*.*t?idk5i29j?2LY
%^\\[JeRmUc*e8k8U'YI#4s3Qs=<'f4%S,nWQCo^J;-!p'c<(gdPU41B5PC4TEuCt>qD)*LT1:F.A\>asV\)/kfq3(p/d$NIqcS0V
%#`ko+4Pu3Kr`smJD=dUkrmU4N1T,\Y(5XiSmYiMgL7V8+\t*CG6WOb8]bFo#)7ldn[i26N_3o:cjC*qWfb#@39#b1mrWG\>HIR,^
%)g=bRY[uQZ3VM:"_6?Of3uW689^&\hJMG;fEYq]461%mi\(Qml-oc-!TcA;0,&LSC"7KufA5iP1?sSN_eEqB,p+fO,8tME\9(B"L
%7)P-gq0,MI:,rrg,kUeLb!5<I?e:5.:L,\iFe?0UmOgN'R]OfX\rhGI3RL'2m4aDn?Ti%TkOfL$]<'r.Ab[]7hYfuPhC3Uhm)hiJ
%O5Y>MT7;nIGrW'iks(.pa"k8@$^<R)`tfPrNc8;SK+19`_'qY:Hgj@(*!$B).ni7E1D!bm?JASnPjoUNrdpO@Z5q^A2_+.6JW;]+
%Ro=DlU(:Mda2Q&CpkD0Ic%@\H31nWA>"$,!N9n[Xe;/L?*.Q4IH:5J@OB\dK.<>91P!!c+SgLA--gK[B52:VUO(J=M20NZGcZq8b
%\?!-gJ7)^OW(:l\2gdDUBq"L)_\%/GeF]:'N/XT(']Y`F@0E$Ric!R#ri<i3fnk[hq:WEINtmerm8Xf21[.00T/<pIG+`;\Of6FZ
%5k-O5CQ,3`U\HJ8i7i1Om\e]ELCneHq>S"i-.LrE`l!2h,9BN5$QL^Q%1S\sXH(0ke-d]PadW'Yh2Kq7E[q^'nRd#UK"ODVj<d_U
%T.VRFeUS)/;+3/h,^;hFeJR(D<W7\pD'-_+=THSe=uiU,E^SB^l>+dB+_LBf<D(RcN^NnaOee,5E'dhi:"LY-4-*]('(H?1$cYee
%P_O"=1+^:V79J)<.=_]M1a2oLT[h:h&-f(Dg.iN3KlkYQSSTJW"BqN<=h-T>+qc6U]bCWZ77>U+#%,tZeVkgq4q-0m&A,o&J5]r"
%9qX7EeRqhR*dRuX0?g]P#_6;/(2"$An&"8MCq;2*p`=CNbkqJr21m2"3bYk&]^2NW;lY;:qb?9tMJdG2HU*/1Yl>\$8VoWcU%F=9
%e@QZN"e0G./gl^f3Z&cjFkM=0`l/*RKjY!=_%^&u/e]$d5@M6:[oEJJ6-upj1(@YIZckKBLBVHMc'nsNQeHlH2YQ7J!XR$0D(Y#F
%f#JB9`(L]$JY2A8O=dOSF=XjQ&r6R"O(^Y.@Bd.J<P*El]?6_(L6GBZ&o?l2e2t-Ok#%g461CB^",5^5TL0BpGc@LueBqQXj=YhI
%iQ#N7$C'#ur6D$1X%n'TrB\#`jr26#nG*B>^CAd=R6sRU2bt`+f?RI!p@i1O@[4`DNUj?Ln)Wt4L\.X-?F%<!#oL)N\2iDX?ugI0
%Z:-or0tNIA,r!PimM9:E]\\4QJJc9anMa9+gWt_m`OMq<S\p"(E:O*hMb#PJq8hU)A$HS/`8j1`lmd>>Ed1W82*7;FXe&n.o/V.`
%.jn'sWq+9Ql9H2k*-iPqZ\3AFlo(0A0r&^KFs+aA&*sc?n\:XPJQN5UG[PbN:-'Nd3$,#`74HOQ,5%s^@!^5:Mse(rW9dRICbM[L
%mJi^FJ^d0^r?oSiC8(+q_"j(*3sgoqee_7f,o=SuO>@h\=]i@npUcsk*F@j_n*leOp'5=ZNrFV0fnU,LikPQa_*.N;#6[U=Nh$>_
%rmY:qB7V2ffFC"TX2OR[`<:$8B/jls4=Um<JIU=R10Egh&<C%toZda07u.q/i.Rc'9%mFAm2>:LnNr>=H,:RXZu&Bj[f\RrD-ldi
%*J3R$4$,[FR@8HjieS`>8MMKVBW%7=p;@V10k>q^;iK;\Y0I,RN0Y3DO*iZc*+s7R0uc;XjLc'm2..)=gc,T^ft$-?/)Jt>rJef=
%n)%^co#_?t*)jCLU"o#oRq_BX^TYELDr:KYmE>P)lFUF&E[1MK+2@`_YPuRd?iL$8?[_\%hu)4N^\lP^:LASB%8nCbqVU&"T)S,h
%YQ"=q\)2W,oZ)I]pAY@$&$6(cp9Xem&-)*2J+J-iYZNsL~>
%AI9_PrivateDataEnd

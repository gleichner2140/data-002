%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1401.i003.049.S.i003.c11.office manager poses.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: јйгулька
%%CreationDate: 1/23/2014
%%BoundingBox: 0 0 450 400
%%HiResBoundingBox: 0 0 450 400
%%CropBox: 0 0 450 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 31745 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C455A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A35355A3535355A3535355A3535355A3535355A35
%35355A3535355A3535355A3535355A3535355A3535355A3535355A355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935597D527D5377527D537D527D
%537D527D537D527D537D527D537D527D537D527D537D527D537D527D537D
%527D537D527D3559355A3559355A3559355A3559355A3559355A3559355A
%3559355A3559355A3559355A3559355A3559355A3559355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A358CB58C
%BBBABB8CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58C
%B58CB58CB58CB58CB58CB58CB56F35355935593559355935593559355935
%593559355935593559355935593559355935352F352F352F352F352F352F
%352F352F352F352F35355935593559355935593559355935593559355935
%5935593559B5B0BBC7CCC6C1B0C3C3B5BDC3FCFD04B5C3BCFD09B5BCCAC3
%C3C3FD05B5BCBDB0B5B5B5935A355A355A355A355A355A355A355A355A35
%5A355A355A355A355A355A355A355A355959A9FD13845A355A355A355A35
%5A355A355A355A355A355A355A355A355A358DB598C7C7C79EB5C3CA8CCA
%FFCACACAC3CACACAC3CAC3FFC3CAC3FFBCBCCACACAFFCACA93C3CAFFCACA
%C3B593593559355935593559355935593559355935593559355935593559
%35593559355935592F84FD14FF3559355935593559355935593559355935
%593559355935593559B5B0C1C6CCC6C7FD04B5C3FFC3CAFFFFFFCACAFFCA
%FFCACAFFCAFFBCBCFFCACACAFFCAB5CACAC3CACACAB5B5595A355A355935
%5A3559355A3559355A3559355A3559355A3559355A3559355A3559355984
%FD14FF5A355A3559355A3559355A3559355A3559355A3559355A3559358C
%B593C19EC792B58CB58CB593B593B593B593B593B693B593B593B58CB593
%B593B593B58CB593B593B593B5FC94353535593559355935593559355935
%593559355935593559355935593559355935592F84FD14FF353535593559
%3559355935593559355935593559355935593559FD04B5BBFD06B5B0B5B5
%B5FCB5B0B5FCB5B0B5FCB5B0B5FCB5B5B5FCB5B5B5FCB5B5B5B0FD05B5B0
%9A355A355A355A355A355A355A355A355A355A355A355A355A355A355A35
%5A355A355984FD14FF5A355A355A355A355A355A355A355A355A355A355A
%355A355A3552595359525953595259535952595359525953595259535952
%595359525953595259535952595359525953595259525935593559355935
%593559355935593559355935593559355935593559355935592F84FD14FF
%35353559355935593559355935593559355935593559355935595A355A35
%5A355A355A355A355A355A355A355A355A355A355A355A355A355A355A35
%5A355A355A355A355A355A355A3559355A3559355A3559355A3559355A35
%59355A3559355A3559355A3559355A353584FD14FF5A3559355A3559355A
%3559355A3559355A3559355A3559355A3535593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935592F84FD14FF355935593559355935593559355935593559
%35593559355935595A355A355A355A355A355A355A3560595A355A355A35
%5A355A355A355A355A355A355A355A355A355A355A355A355A355A355A35
%5A355A355A355A355A355A355A3560355A355A355A355A355A355A353584
%FD14FF60355A355A355A355A355A355A355A355A355A355A355A355A3535
%593559355935593559355935592E59355A35593559355935593559355935
%59355935593559355A3559355A3559355935593559355935593559355935
%59355A35592E5935593559355935593559355935595984595A595A596059
%6059605960595A5960845A355935593559355935593559355A3559355935
%593559355935595A3559355A3559355A35592E2F0527F8272E5A355A3559
%355A3559355A3559355A3559355A35592E27002727593559355A3559355A
%3559355A3559355A35592E2E0027F82E355A355A3559355A3559355A3559
%595A35593559272700282E352F5A355935843559355A3559355A35593559
%2E282759355A355A3559355A3559353559355935593559355905FD07F800
%59355935593559355935593559355935592E27FD07F82F35593559355935
%593559355935593535FD08F82E593559355935593559355935603559352E
%FD07F8272F593559595935593559355935590527FD05F8272E5935593559
%355935595A355A355A355A355A592EF821F827F8272752355A355A355A35
%5A355A355A355A355A3559FD05F820F84B2E5A355A355A355A355A355A35
%5A35603521F821F821F8274B59355A355A355A355A355A355A5A5A355A2E
%27FD06F80560355A3584595A355A355A35603527F821FD05F82E355A355A
%355A355A3535593559355935593559F8F8F8767576A076A0593559355935
%593559355935593559355A28F8F8207551767675A7355935593559355935
%5935593559352EF8F8F8A04BA075A07D3535593559355935593559358435
%5935A7757C755151F8F8F82E5A3559595A3559355935593535F8F8F85126
%514BA07D35355935593559355959355A3559355A355A2EF8F8F87CCAA7CA
%7DC97D5A355A3559355A3559355A3559355A3527F8F827C97DCA7DA7A65A
%3559355A3559355A3559355A355A05F8F84BC9A8A7A7A1C95959355A3559
%355A3559355A60593583C9A1A1CAA1C9F8F8F82E355A3584355A3559355A
%355A27F8F827A0A1A7A77CC95959355A3559355A35355935593559355935
%2EF87C26A0A7A7A1CAC2A735353559355935593559355935593559F8274B
%4BC9A7A1A8C9C9593535593559355935593559355935F826764BC9A1A7A1
%C9C27D35593559355935593535358435357CC9A7A8A1CAC8275120055935
%5959592F59355935593505F84B26C9CAA7A8A1C87D35593559355935595A
%355A355A355A35602EF87CA0A0FD06C95A355A355A355A355A355A355A35
%5A352726A176C9C9CEC9C9C8A7355A355A355A355A355A355A355AF84BA0
%A0C9CEC9C9C8C97D5A355A355A355A355A3560845A35A7FD06C951A72027
%355A5984355A355A355A355A054BA076C9CEFD04C9A15A355A355A355A35
%3559355935593559352EF87CC9C999C3A0C97C5935593559355935593559
%358359593559F820A0C9A0A0A0C9A6835959355935593559355935593559
%35F820C9C9A09AC9A0C97D59355935593559355935597CC9593559A7A0C9
%A0C2A0C9A0F8055A357DA77D3559355935593505F8C9A6C3A0C9A0C9A07D
%35593559355935595A3559355A3559355A357CA0C9C99A6F9AC883355A35
%59355A3559355A3559C8C95935355276C9C8C99A9AA0C9355A355A355935
%5A3559355A3559355A2E7CC8C9A0936FC2A75A355A3559355A3559355A35
%A7A784353635C99A946FC9C9C94B5335357DCFA159355A3559355A274BC8
%CEA09A75A0C959355A3559355A35593535593559355935592F59A7C9A0C9
%A0A0A0C9593535593559355935593559357DCAFF593559C9A0C9A0C9A0C9
%A059355935593559355935352F5935592F83C8C8A0C9A0A0A0A735353559
%355935593559355959AFFF842F59A0C899A0A0C9A0C9593559FFA8593559
%355935592F7DA0C9A0C99999A0C9353535593559355935595A355A355A35
%5A355A59FFCAFFC9C3C9CFCA84355A355A355A355A355A355A35AFFFFF5A
%A8CFCFCAC9A1CFC9CF355A355A355A355A35837D5A3559353584CFCACFA0
%C9CACFA759355A355A355A355A355A355A84FFFF8459CFC9CFA1C9CACFCA
%8484FFFFAF355A355A355A355A7DCFC9CAC9C9C9CEC95A355A355A355A35
%5A3535593559355935352F84FFFFFFCA69CAFFFF84353559355935593559
%3559353535AFFD06FF6F9AFFFFFF5A3559355935593559A0C9A884598459
%FD04FF9A76FFFFFF5A59355935595959355935593559A8FFFFA8FFFFFF6F
%76FD06FFA835593559355935592FA8FFFFFF9A6FFFCFFF59352F35357D59
%59355959355A3559355935AFFD04FFA89AFD04FF5959355A3559355A3559
%355A355935AFFD05FFA19AFFFFFF84593559355A355935A7A7FD09FF9AA1
%FD06FFA8FFCAC9595A3559355A3559A8FD05FF9AA1FD05FFA83559355A35
%59355A3584FD04FF9A9AFFFFFFAF848484FFC9C9355A3535593559353535
%AFFD05FFCA69CAFFFFFFAF2F353559355935593559355935352F84A9FFFF
%FF769AFD04FF59353559355935592F5959A8A8FD06FF9A76FD08FFCFA07D
%2F5935593559355984FD04FF9AA1FFFFFFA85A2F5935593559353535A9FF
%FFAFFFFFA170FD08FFA77C3535595A355A355A35FFFFFF84FFFFFFA16FA1
%FD04FFAF355A355A355A355A355A355A355A35A8FFFFFF9A6FFD05FF5935
%355A355A355A3559355A595AA8FFFFFF6F9AFFFFFF8484845A845959355A
%355A355A355A355A84FFFFFF6FA1FFFFFF84355A355A355A355935FD07FF
%9A94FD04FFA8AF8484355A355A353559355935A8FFFF5959FFFFFFA268C4
%FFFFA8FFFFA9355935353559355935593559353584FFFFFF6F6FA8FD05FF
%5935355935593559355935592FA8FFFFFF6F6FFFFFFFFD04352F59355935
%593559355935592F5AFFFFA86F9AFFFFFF7E3535593559355935AFFFFF59
%84FFFFFF9A68FFFFFF593535352F59355935595A355935A7C9CF593559FD
%04FFA1FFFFFF8459FFFFC97C595259355A3559355A355935AFFFFFFFCAA1
%FFFFFF59AFFFFFA159355A3559355A35593559A8FFFFFFA1CAFFFFFF5A35
%5A3559355A3559355A3559355A355959FFFFFF9ACAFFFFFF843559355A35
%5935A7CFFF593584FFFFFFA19AFFFFFF60355A3559355A35593535593535
%59C97C35355952524C52525227522E3535A1A0A06E985235355935593559
%35352E7D527D527D527752353584C9C93535355935593559355935595277
%527D52524B52355935593559355935593559355935593559527D5276527D
%52762E59355935593535A0C959352F84A17D7D7D77847D7E593535593559
%355935595A355A355A355A355A3527F827F827F827F82F357C75A099996E
%76355A355A355A355A3553F827F827F827F827355A3583595A355A355A35
%5A355A35602E21F827F827F827275A355A355A355A355A355A355A355A35
%5A2F27F827F827F827F859595A355A355A355A7D5935602E27F827F827F8
%27F859355A355A355A355A353559355935593559355A2E27F8272E27F827
%353651926E9F6E926E5935593559355935593528F8272728F8272E5A3559
%35593559355935593559355935592727F82E2727F82E3559355935593559
%355935593559355935592727F8280527F82E355935593559355935353559
%35592727F8272727F82E3559355935593559355959355A3559355A355935
%59212727532727275A35596E996E986E76595A355A3559355A355A272720
%2E2727202F355A3559355A3559355A3559355A3559352E2027282E20272E
%603559355A3559355A3559355A3559355A352EF8272828F8272E60355A35
%59355A3559355A3559352E2027272E20272E603559355A3559355A353559
%35593559355935592E27F8272827F8272F5935756E755259355935593559
%355935593527F8272727F827285935593559355935593559355935593559
%0527F82E2727F82E35593559355935593559355935593559355A2721F82E
%2727F82E35593559355935593559355935592727F8282727F82E35593559
%3559355935595A355A355A355A355A3559272727532727275A355A595935
%5A355A355A355A355A355A355A2727212E2727202E355A355A355A355A35
%5A355A355A355A352E2127272E21272E60355A355A355A355A355A355A35
%5A355A592E2027282820272E60355A355A355A355A355A355A352E202727
%5220272E60355A355A355A355A35355935593559355935592E27F8272E27
%F827355A353535593559355935593559355935593527F8272727F8272E5A
%355935593559355935593559355935592727F8272727F82E355935593559
%35593559355935593559355A2721F82E2727F82E35593559355935593559
%3559355A2727F8282727F82E355935593559355935595A3559355A355935
%5A2E27F8272759212727272E5A3559355A3559355A3559355A355A352E27
%27F82E2E27F8272E59355A3559355A3559355A35593559282721272E2EF8
%27272E355A3559355A3559355A3559355A3559FD04272E2E20272752355A
%355A3559355A3559355A2E27F827282EF8272759355A3559355A35593535
%5935593559355935592E352E5935352E592E353559355935593559355935
%59355935592E2F2E2F2E592E352E3535593559355935593559355935592F
%2F2E352E592E2F2E2F2E593559355935593559355935593559352E2E592E
%352E352E2E2E59355935593559355935592F2E272E27352E2E282E283535
%593559355935595A355A355A355A355A355A3560355A3560355A355A355A
%355A355A355A355A355A355A3560595A3560355A3560355A355A355A355A
%355A355A355A355A355A3560355A3560595A355A355A355A355A355A355A
%355A355A3560355A3560595A3560355A355A355A355A355A355A59603560
%355A3560595A355A355A355A355A35355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935353559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355959355A3559355A
%3559355A3559355A3559355A3559355A3559355A3559355A3559355A3559
%355A3559355A355A355A35592F595959355A355A355A3559355A3559355A
%3559355A3559355A3559355A3559355A3559355A3559355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A3559355A
%353559355935593559355935593559355935593559355935593559355935
%593559355935593559355935592F36357C7BA6A5A59FC89FA67C7D35352F
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%5935593559355935595A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355FA6C7C7CCC7C7C7CC
%C7C7C7CCC7C87C5A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A3535593559355935593559355935
%593559355935593559355935593559355935593559355935593559357DA5
%FD0FC77B5935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935595A3559355A3559355A3559355A3559355A
%3559355A3559355A3559355A3559355A3559355A35593583FD12C7A55A35
%59355A3559355A3559355A3559355A3559355A3559355A3559355A355935
%5A3559355A3559355A3559355A3559355A3559355A3559355A3559355A35
%59355A355935355935593536353535593559355935593559355935593559
%35593559355935593559355935593559A5C7C7C7A5C7C7C7A5C7C7C7A5C7
%C7C7A5C7C7C77B3635593559355935593559355935593559355935593559
%355935593559355935593559355935593559355935593559355935593559
%35593559355935593559355935595A355A355A587D585A355A355A355A35
%5A355A355A355A355A355A355A355A355A355A355A355AA5CCC7C7C7CCC7
%C7C7CCC7C7C7CCC7C7C7CCC7C7C7CC595A355A355A355A355A355A355A35
%5A355A355A355A355A355A355A355A355A355A355A355A355A355A355A35
%5A355A355A355A355A355A355A355A355A355A355A35355935367BC0C0C0
%7B5A3559355935593559355935593559355935593559355935593559355A
%58C77C837CC7C6C79FA69FC7C7C77BA6A5C7C7A67C829FA6355935593559
%355A35593559355935593559355935593559355935593559355A35593559
%355935593559355935593559355935593559355A35593559355935593559
%59355A35A0C0C1C09F355A3559355A3559355A3559355A3559355A355935
%5A3559355A355A356059352F365983595A355A587C595A355A7C83355A35
%5A595A355A356035592E59355A355A3559355A3559355A3559355A355A35
%6035352E59355A355A3559355A3559355A3559355A355A35603559356035
%59355A3559355A35355935367BC0C0C09F3535593559355A355935593559
%35593559355935593559355935592F2E0627F8F8F8282F3535593535285A
%35592F363559355935353559352E0527F8F8F80027593559355935593559
%355935593559352E0527F8F8F80027593559355935593559355935593559
%2E2E0505F805055935593559355935595A355A35A0C0C1C09F355A355A35
%5A2E59355A355A355A355A355A355A355A355A355A352EF820FD05F80535
%60355A3559355A355A355A355A355A355A35590020FD06F82860355A355A
%355A355A355A355A5959F820FD06F82E60355A355A355A355A355A35602E
%27F820FD04F80059355A355A355A353559355A7BC0C0C09F35355A2E2700
%F8055A35593559355935593559355935593559355A27FD04F820F84B5159
%355935592E5A35593559355935593559355A2FFD04F826204B5159355935
%593559355935593559355A2EFD04F820204B755935593559355935593559
%3559352EF8F8F820F82026522F593559355935595A355935A0C0C0C09F35
%5A2E20FD04F8275A355A3559355A3559355A3559355A355A3527F8F851A0
%76C975C9595A355A3552355A3559355A3559355A3559352EF8F8F8C976C9
%7CA0A759355A3559355A3559355A3559352EF8F820C976C9A0A0A759355A
%3559355A3559355A355A05F8F8517576A07CA0843559355A355935355935
%357BC0C0C09F5A2EFD07F805593559355935593559355935593559352FF8
%F8F87CC9A8A1A7A0A7355935592E5935593559355935593559355900F8F8
%27A0A8A7A8A1C95935355935593559358359353559F8F8F827C8A8A7A1A1
%C95935598335593559355935592FF8F8F851C97DA87DA0A0593559355935
%595A355A35A0C0C1C0C1362EF8275176F8A051F82E60355A355A355A355A
%355A355A35602EF876517CCFA7CAA7C9C95A355A3553355A355A355A355A
%355A355A352727A04BCEC9C9A7CAC9A7355A355A355A3559CAFF355A3527
%277C4BCEC9C9A7CFC88335FFA759355A355A355A5935F8764B7CC9CFA7A8
%C8C9595A355A355A35355935357BC0C0C09F5A282775CEA0F876A0F82735
%59355935593559355935593559352EF876A0C9A0C9C8C9C2C9593535592E
%59355935593559355935593559F826A0A0A0C9C8C9A0C97D353559355935
%593584FF843559F827A0A0A0C9C8C9A0C97CA8FF60355935593559355A2E
%F851A0A0C9C8C9C8C9C27D35593559355959355A35A0C0C1C09F35607CA7
%C9C97CA1A076525A355A3559355A3559355A355935602EF875CEC99AA0C3
%C2A7595A355A2F593559355A3559355A3559355A352720C9C9A099C2A0C9
%595A3559355A3559355A35FFFF60350526C9C9C275A09AC95984FFAF355A
%3559355A35593559F876C9C9A0A0A0C9A77D355A3559355A35355935367B
%C0C0C09F3535A7A1C9A0C9C8C9C8A72F5935593559355935593559355935
%3552A0A0C9996F6FC97D35355935592E5A35593559355935593559355952
%A0A0C9A0936FA0A6592F59355935593559353559FFA85A2EA0A0C9A09A6F
%A0A059A8FF593535593559355935592F52A0C9A0C9759AA0832F59355935
%5935595A355A35A0C0C1C09F355AA7C9C8C9C9C9C8C9C960355A355A355A
%355A355A355A355A35C9C8C9C9CEA0C9C883355A355A3559355A355A355A
%355A355A355A3584FD08C9355A355A355A355A355A3559A8FFAFA8FD06C9
%C8C9A8FFA959355A355A355A355A355AA7C9C8C9C9C9C8C97D36355A355A
%355A353559355A7BC0C0C09F59355959A0A0C9C9CFCAFF84353559355935
%593559355935593559A8CFCACA9AC9CACF7D35355935592E5A3559355935
%5935593559353584FFCAFFA0A0CAFFCA592F5935593559355935593559A8
%FFFFFFCAFF9AA0CACFCAFFFF603559355935593559355935CFCACFA7A1A1
%CFC9A835593559355935595A355935A0C0C0C0C8593535367DC9CAFD05FF
%3559355A3559355A3559355A35597EFFFFFFA86FA8FFFFAF3535355A3552
%355A3559355A3559355A353559FD04FF9B70FFFFFF8459355A3559355A35
%59355A3584FD05FF9A76FD04FFA9355A3559355A3559355A3584FD04FF69
%CAFFFFAF603559355A355935355935357BC0C0C0A0FF84A8A8FFA1FD06FF
%842F5935593559355935592F5984FD05FF6FFD05FF59352F592E35355935
%59355935592F357EFD05FF9A9AFD04FF84352F5935593559355935592F84
%FD04FF769BFD04FF353535593559355935592F59A8FD04FF94A8FFFFFF84
%353559355935595A355A35A0C0C1C0C9FD0CFFA859355A355A355A355A35
%5AAFFD05FFCA93A8FD05FFA8845958595A355A355A355A355A84FD06FFA1
%6FFD05FFA85A355A355A355A355A355A35AFFFFFFF9A6FFFFFFF5A59355A
%355A355A355A355A84FD05FF6FCAFD04FF5959355A355A35355935357BC0
%C0C0A0AFA8FD0BFF59353559355935593559A8FFAF84A8FFFFCA68A1FFFF
%A8AFFFFFFFCA7583355935593559353584FFFF8484FFFFFF6F6FCAFFA9A8
%FFFF84353559355935593559353584FFFFFF6F6FCAFFFF5A355935593559
%3559355935AFFD04FFA86F9AFD04FF8435593559355959355A35A0C0C1C0
%C9FD04FFA8A8A1FD05FFA85A3559355A35593559A7FFA96035FFFFFFA86F
%A1FFFFA9358484AF7D765259355A3559355A7DFFFF842F84FFFFFF9B6FFF
%FFFF3584FFFF7D5A3559355A3559355A35AFFFFFFFCAA1FFFFFF595A3559
%355A3559355A355AFD06FF69A1FFFFAFFFA85A3559355A35355935367BC0
%C0C09F60595A59352EA8FFFF7D7D27F82E5A35593559353559C9A75A2F59
%FD04FFA1FFFFFF84352F352F352E2F35593559353535C9C8842F357EFFA8
%FFA2A1A8FFA8592F84C9C935593559355935592F3584FD08FF5A2F593559
%35593559355959FFA8FD04FFA1A8FFFFAFAFAF3559355935595A355A35A0
%C0C1C09F355A3559355A59522727F821F85A355A355A355A355AA1A7355A
%35522752275227522752355A355A3560355A355A355A355A59A7595A3553
%2752274C27522727356035A77D5A355A355A355A355A3559527D527D527D
%527D595A355A355A355A355A3584CFFFFD0952FFA85A355A355A35355935
%5A7BC0C0C09F353559355935590020F827F8F82E5A355935593559355935
%59355A2720F827F821F8212E593559355935593559355935593559355935
%5A2E27F827F827F8270559355935353559355935593559355A2E00F827F8
%27F82005593559355935593559355959C9A02EF820F827F820F852C8C935
%59355935595A355935A0C0C0C09F355A355A355935592027F827F827355A
%3559355A3559355A355935592727212E2727275A3559355A3559355A3559
%355A3559355A355935602E27F82E2E27F8525959355A3559355A3559355A
%3559355A2727F82E2727F8593559355A3559355A3559355A7D832F272127
%272721272F835959355A355935355935357BC0C0C09F593559355935592F
%27F827F827F82F3559355935593559355935592E27F8272727F8272F5935
%5935593559355935593559355935593559352EF827272EF820275A355935
%59355935593559355935593528F8270528F8272E5A355935593559355935
%59FD0435F827F82EF827F8FD043559355935595A355A35A0C0C1C0C1355A
%355A355A35602E27212727F82760355A355A355A355A355A355927272752
%2727275A355A355A355A355A355A355A355A355A355A35602827202E2E27
%F852595A355A355A355A355A355A355A355A2727202E27272059595A355A
%355A355A355A355A355A2F2727272E2721272F60355A355A355A35355935
%357BC0C0C09F5A35593559355935592727F827F8F82F5A35593559355935
%5935592E27F8272E27F827355A3559355935593559355935593559355935
%59352EF827272EF82128603559355935593559355935593559352EF82727
%2EF8272E5A3559355935593559355935593535F827F82E0027F835355935
%593559355959355A35A0C0C1C09F355A3559355A3559355220272027F82E
%355A3559355A3559355A3559F827272E27272759355A3559355A3559355A
%3559355A3559355A35592727202E2827202E355A3559355A3559355A3559
%355A35592727202E2727202E355A3559355A3559355A355935603527F827
%2E27F827355A355A3559355A35355935367CC0C0C07B3535593559355935
%592727F827F8052F593559355935593559352F052705272F270027052E35
%5935593559355935593559355935593559272705272E2EF82705282F5935
%5935593559355935593559272705272E2EF827002E2F5935593559355935
%5935592E27F827F8352727F8272E593559355935595A355A355A587D5859
%355A355A355A355A35592F592E59355A355A355A355A355A355A3559355A
%355A2F5A3559355A355A355A355A355A355A355A355A355A3559355A355A
%355A3559355A355A355A355A355A355A355A35592F5A355935593559355A
%355A355A355A355A355A35592E593559355935592E59355A355A355A3535
%5935593535355A35593559355935593559355A3559355A35593559355935
%59355935593559355A3559355A3559355935593559355935593559355935
%5935593535355A3559355935593559355935593559355935593559355935
%5A355935593559355935593559355935593559355A355935593559355A35
%593559355935595A3559355A3559355A3559355A3559355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A3559355A
%3559355A3536355A3559355A5959355A3536355A3559355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A3559355A
%3559355A3559355A3559355A355935355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%59355935593559355935592F7D769A939A939A93BC939A6F9A76592F5935
%593559355935593559355935593559355935593559355935593559355935
%59355935593559355935593559355935593559355935595A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A357D94BCB5BCB5BCB5BCB5BCB5BC
%B5BCB5BCB5BC9A7D355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%353559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935369AB5B5BCB5
%B5B5BCB5B5B5BCB5B5B5BCFD04B576353559355935593559355935593559
%355935593559355935593559355935593559355935593559355935593559
%355935593559355959355A3559355A3559355A3559355A3559355A355935
%5A3559355A3559355A3559355A3559355A3559355A3559355A3559355A35
%59359AB5BCB5BCB5BCB5BCB5BCB5BCB5BCB5BCB5BCB57D3559355A355935
%5A3559355A3559355A3559355A3559355A3559355A3559355A3559355A35
%59355A3559355A355A355A3559355A353559355935593559355935593559
%355935593559355935593559355935593559355935593559355935593559
%3559355935593559353576FD04B5BCFD0BB5BCB5B5523635593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559353535829FA67C59355935595A355A355A355A355A355A355A3560
%595A355A355A355A355A355A355A355A355A355A355A3560595A355A355A
%355A355A355A355A359BB5BCB5BCB5BCB5FD05BCB5BCB5BCB5BCB57D355A
%355A355A355A355A3560595A355A355A355A355A355A355A355A355A355A
%355A3560355A355A355A3583C7CCC7CC595A355A35355935593559355935
%59355A352E272F355A35593559355935593559355935593559355A2F2E28
%2F3559355A3559355935593559353576B5B59A767D535935592E2E2E5953
%7676BCB5B57636355935593559355A35352E59355A355935593559355935
%59355935593559355A35352F5935593559353558FD04C759355935595A35
%59355A3559355A352E0527F8F8F8272E5A355A3559355A3559355A355935
%5A35592727F8F8F827272E355A3559355A3559355A357D7D603536353528
%28FD04F80535355A357E767D355A3559355A355A2E27F8F8F8272E2E355A
%3559355A3559355A3559355A352F2E27F8F8F82E355A355A3583FD04C759
%5A3559353559355935593559352FFD08F82E593559355935593559355935
%59355A28FD08F8353559355935593559355935603559355905FD08F85935
%35596035593559355935592EFD08F82E355935593559355935593559352E
%FD07F8053559353558FD04C7592F5935595A355A355A355A35602EF8F827
%27274B517C59355A355A355A355A355A355A355A357D7551FD0427F8212F
%60355A355A355A355A35595A60355A352EF8F8204B265151A1355A358459
%59355A355A355A3559765127272027F8F82E60355A355A355A355A355A35
%602EF8F827F8F82051525A355A3583C7CCC7C7595A355A35355935593559
%35593527F8F827C97CC976A0A1353559355935593559355935593559A7A0
%7CC952A6F8F8F82835593559355935593559356059593535F8F8F87C7CA1
%A176A0833535596035593559355935357DA076C952A027F8F82735593559
%35593559355935593527F8F84BC951A075C95935355A58FD04C759355935
%5959355A3559355A3559F8272075C9FFA8FFA7C95959355A3559355A3559
%355A355A59C9A1A8A1FFC94B2027055A355A3559355A3559355A5A603560
%2EF82627A0CFA8A8A8C97D5A3560595A3559355A355935C9C9A8A7A8C951
%F827F859355A3559355A3559355A3559F827F87CCEA8A7A8C2A735593583
%FD04C7595A355A3535593559355935592EF84B7C51C9A0A77CC9C27D3559
%35593559355935593559357DC2C9A7C9A7C94B7C26003559355935593559
%35592F605935352EF87C4BA7C9C9A0C9C8C93535595A2F59355935593559
%A0C9A7C9A1C951764BF82F593559355935593559355A2EF8515175C9A1C9
%A1C9A059353558C7C7C7A559355935595A355A355A355A3559F851A6C9A0
%FD05C9595A355A355A355A355A355A355A7DFD07C9A027F85A355A355A35
%5A355A355A848435602EF875FD07C9A15A59A87D5A355A355A355A59FD07
%C9A051F859355A355A355A355A355A5935F876A0C9A0C9C9C9C8C9595A35
%83C7C7C7CC595A355A35355935593559355A35F84BC9C99A6FA0A0A73559
%355935593559355935593559353559C9A09A75C9C9C92005355935593559
%355935357DC97D35352FF8A0C9C96F9A99C97D353559A7C9595935593559
%353535A7A09A75C3C9C92700355935A7A05935593559355A2EF851CEC8A0
%9AC9C8A73559353558FD04C759355935595A3559355A3559355A7DC9C8C9
%A09A6FC9A75A355A3559355A3559355A3559355A3559A1C99AC3C8C9C9C9
%585A3559355A3559355A357DA7FF5A3535A7C8C9C8A06F9AC883353584FF
%8359355A3559355A35367DC99AA0C8C9C9C9585A3584C9C95959355A7DA7
%355A7CC9C8C9C9C9A0C97D3659833583FD04C7595A355935355935593559
%35592FA7C9C9A0C9A0C9C2A73535355935593559355935593559355935A7
%A0C9A6C9A0C9C9832F5935593559355935593584FFFF5959A7C9A6C9A6C9
%A0C9583584FFA8603559355935593559357DC2C9A6C9A0C9C9832F84FFFF
%593535592FA8A8352FA7C8C9A0C9A6C9A07D2F83C95A58FD04C7592F5935
%595A355A355A355A355AA8FFFFFF9AC3FFFFA859355A355A355A355A355A
%355A355A355ACAFFFFA19AFFFFFFA85A355A355A355A355A355959AFFFFF
%A8FFFFFFA19ACAFFCFA884FFFF84355A355A355A355A355AA8FFFFC36FFF
%FFFFA8AFFFFF845A355A355AA8FF355AAEFFFFCA9ACACFFF843584FF5A7D
%C7CCC7C7595A355A35355935593559353584FD04FF94A1FFFFFF59352F59
%35593559355935593559355984FFFFFF769AFD04FF593535593559355935
%59353535A9FD05FFCA69FD06FF842F59355935593559355935FFFFFFA16F
%FD06FF7E35355935592FAFFF6059FFFFFFA86FA8FFFFA82FA8FF8458FD04
%C7593559355959355A3559355AA8FD05FF70CAFD04FF845A355A3559355A
%3559355A355959FD04FFA19AFD04FFAF355A3559355A3559355A35593584
%FD04FFCA94CAFD04FFA83559355A3559355A355935A9FFFFFFCA9AFD05FF
%59593559355A353584FD07FF6FFFFFFFAFAFFFFF5983FD04C7595A355A35
%355935593559A8FD06FF6F76FD06FFA8598359353559355935592FA8FD04
%FF6F9AFD05FF5A2F59355935593559355935352F84FFFFFFCA68A8FFFFA8
%842F5935593559355935592F84FD04FF766FFD04FF35353559355935592F
%84FD06FFA1699BFD06FF5A58C7C7C7A559355935595A355A355AA9FFFF84
%A8FFFFFF6F9AFFFFAFA9AFFFFFFFC8A7355A355A355A355AAFFFFFFFCB93
%70FD05FF8459355A355A355A355A355A355A59FFFFFFA169A1FFFFA82F5A
%355A355A355A355A3584FD05FF9A6FFFFFFFA859355A355A355A355A3560
%5A60AFFFFFCA69CAFFFFA8A9A8843583C7C7C7CC595A355A35355935597D
%FFA85A2FAFFFFFFF9A9AFFFFFF2F5959847DA7593535593559355959FFA8
%FFFFFF6F9BFD05FFA82F59355935593559355935592F60FFFFFFCA6FCAFF
%FF8435355935593559355959A8FFFF84FFFFFF9B9AFFFFFFAF3559355935
%59355935592F3535FD04FFA1CAFFFF840C35353558FD04C759355935595A
%355959C9C95A355A84FFA8FFA1A8A8FFA85935593559355A3559355A3559
%3584FFAFA8FFA8A8A1FFA8FF84FFA959355A3559355A3559355A355959FF
%A8A9A8A2A8A8A8843559355A3559355A35A7C9FF84597DA8A8A87DA8A8A8
%7E5A3559355A3559355A3559355AAFFD07FF8435355A3583FD04C7595A35
%59353559353559833559352EF827F8270027F82735593559355935593559
%3559353559CF7D27F8270027F827F852C9CA353535593559355935593559
%3559F827F827F827F821275A355935593559353559A759353527F827F827
%F827F8283559355935593559355935593552275227522752275335593535
%58FD04C7592F5935595A355A355A355A35602E27F8272727F8272E5A355A
%355A355A355A355A355A3583C8A7272721272727212758C9A15A355A355A
%355A355A355A355A352E2027212E27272759355A355A355A355A355A355A
%355A2EFD07272F60355A355A355A355A355A35602E27F8272727F8272F5A
%355A3583C7CCC7C7595A355A35355935593559355935592727F82E2727F8
%5935593559355935593559355935593559592EF8272728F8272759595935
%593559355935593559355935592E27F8272827F827355935593559355935
%59355935593535F827272EF82727593559355935593559355935593559F8
%27F82E002705593559355A58FD04C7593559355959355A3559355A355A35
%272127282721272E603559355A3559355A3559355A355935602E27F82E27
%27F82E355A355A3559355A3559355A3559355A3559F827272E2127275935
%5A3559355A3559355A3559355A3527F8272E27F827355A355A3559355A35
%59355A355A2F27212728272027355A35593583FD04C7595A355A35355935
%593559355935590527F82E0527F82F355935593559355935593559355935
%59352EF8270528F82705593559355935593559355935593559355A2E27F8
%272727F82735593559355935593559355935593559F827052EF827055935
%59355935593559355935593535F827F82EF82727593559353558C7C7C7A5
%59355935595A355A355A355A355A35282127282821272E60355A355A355A
%355A355A355A355A35602E27202E2727202E595A355A355A355A355A355A
%355A355A59592027272E2727275A355A355A355A355A355A355A35603527
%20282E27202E355A355A355A355A355A355A355A35272727282721273560
%355A3583C7C7C7CC595A355A3535593559355935593535F827F82E0527F8
%2E2F5935593559355935593559355935592F2EF820272EF8200559355935
%593559355935593559355935592E27F8272E27F8272E5935593559355935
%59355935592E2EF820052EF821F82E35593559355935593559355A2F2EF8
%27F82EF827F82E2F5A353558FD04C759355935595A3559355A3559355927
%28272E2F2E272E272E355A3559355A3559355A3559355A352E272E272F2E
%2E282727593559355A3559355A3559355A355A2E28282E2759272E27282F
%5A355A3559355A3559355A355927522E2F2F522E2E28593559355A355935
%5A355935592E2E2E5235FD042E59355A35597CC8A5A6355A355935355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355A3559355A355935
%5935593559355935593559355A355935593559355A3559355935352F5935
%59355935595A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A355A355A355A355A355A355A355A355A355A
%355A355A355A355A355A355A353559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%593559355935593559355935593559355935593559355935593559355935
%59355935593559355935593559355935593559355959355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A3559355A
%3559355A3559355A3559355A3559355A3559355A3559355A3559355A3559
%355A3559355A3559355A3559355A3559355A3559355A3559355A3559355A
%3559355A3559355A3559355A3559355A3559355A3559355A3559355A3559
%59355A5959355A5959355A5959355A5959355A5959355A5959355A595935
%5A5959355A5959355A5959355A5959355A5959355A5959355A5959355A59
%59355A5959355A5959355A5959355A5959355A5959355A5959355A595935
%5A5959355A5959355A5959355A5959355A5959355A5959355A5959355A59
%59355A5959355A
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-01-23T21:04:42+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-01-23T21:04:42+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-01-23T21:04:42+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>228</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA5AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8ARh1GGeVYYUkllc0SNELM&#xA;T4ADc5KXa+CIsmg2S9hu0IiyIAf1gr3ry2JUXlvNb8/sGSMqDTwJyvH25psn0ytrxexetyfR4Z90&#xA;whf0vZ+Lfdlv8q4fP5N3+gTtHuh/pnfpez8W+7H+VcPn8l/0Cdo90P8ATO/S9n4t92P8q4fP5L/o&#xA;E7R7of6Z36Xs/Fvux/lXD5/Jf9AnaPdD/TO/S9n4t92P8q4fP5L/AKBO0e6H+md+l7Pxb7sf5Vw+&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:82206A333884E311BBC7EE557E8A37E5</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:82206A333884E311BBC7EE557E8A37E5</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e3ebacf4-be2f-43ca-adec-58742c762c4a</stRef:instanceID>
            <stRef:documentID>xmp.did:315F8F574083E311942AA750405199DE</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:305F8F574083E311942AA750405199DE</stEvt:instanceID>
                  <stEvt:when>2014-01-22T22:37:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:315F8F574083E311942AA750405199DE</stEvt:instanceID>
                  <stEvt:when>2014-01-22T22:37:20+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:82206A333884E311BBC7EE557E8A37E5</stEvt:instanceID>
                  <stEvt:when>2014-01-23T21:04:42+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
450 400 li
450 0 li
cp
clp
[1 0 0 1 0 0 ]ct
450 400 mo
0 400 li
0 0 li
450 0 li
450 400 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.301961 .596078 .643137 rgb
f
.000488281 9.82568 mo
.000488281 31.3423 li
165.115 31.3423 li
156.632 21.2173 li
165.115 9.82568 li
.000488281 9.82568 li
cp
.945098 .14902 .168627 rgb
f
16.4131 12.0161 mo
12.0049 12.0161 8.43018 15.5894 8.43018 19.9985 cv
8.43018 24.4087 12.0049 27.981 16.4131 27.981 cv
20.8223 27.981 24.3955 24.4087 24.3955 19.9985 cv
24.3955 15.5894 20.8223 12.0161 16.4131 12.0161 cv
cp
1 .882353 .2 rgb
f
16.4131 13.2671 mo
12.6953 13.2671 9.68164 16.2808 9.68164 19.9985 cv
9.68164 23.7163 12.6953 26.731 16.4131 26.731 cv
20.1309 26.731 23.1445 23.7163 23.1445 19.9985 cv
23.1445 16.2808 20.1309 13.2671 16.4131 13.2671 cv
cp
.941176 .670588 .0784314 rgb
f
16.8486 22.6411 mo
16.8486 20.4224 li
18.2427 20.8921 17.9702 22.3062 16.8486 22.6411 cv
cp
15.8281 18.9604 mo
14.9233 18.5728 14.9775 17.9312 14.9775 17.9312 cv
14.9775 17.9312 14.9302 17.0239 15.8281 16.7856 cv
15.8281 18.9604 li
cp
17.4956 19.2456 mo
17.2578 19.2437 17.0444 19.23 16.8486 19.2075 cv
16.8486 16.7925 li
17.7651 17.0454 17.4595 17.9312 17.4595 17.9312 cv
18.9185 17.9312 li
18.9185 17.9312 19.5161 15.6665 16.8486 15.3442 cv
16.8486 15.146 li
16.8486 14.8696 16.6206 14.6479 16.3389 14.6479 cv
16.0552 14.6479 15.8281 14.8696 15.8281 15.146 cv
15.8281 15.3159 li
13.4795 15.4556 13.4463 16.9897 13.4761 17.8589 cv
13.5029 18.7085 13.6748 19.7788 15.8281 20.2173 cv
15.8281 22.6304 li
14.9448 22.3071 15.1592 21.144 15.1592 21.144 cv
13.481 21.144 li
13.4141 21.9224 13.4639 23.3862 15.8281 23.5991 cv
15.8281 24.0054 li
15.8281 24.2788 16.0552 24.5024 16.3389 24.5024 cv
16.6206 24.5024 16.8486 24.2788 16.8486 24.0054 cv
16.8486 23.6147 li
18.5225 23.521 19.2324 22.8286 19.2104 21.0347 cv
19.1934 19.4663 17.4956 19.2456 17.4956 19.2456 cv
cp
1 .882353 .2 rgb
f
34.7407 16.3765 mo
34.686 16.3174 34.6099 16.2876 34.5142 16.2876 cv
34.4146 16.2876 34.2642 16.3242 34.063 16.397 cv
33.1816 16.7251 li
33.1089 16.7524 33.0586 16.7661 33.0313 16.7661 cv
32.9536 16.7661 32.915 16.6885 32.915 16.5337 cv
32.9492 15.5903 li
32.9536 15.4629 32.9468 15.3374 32.9287 15.2144 cv
32.9106 15.0776 32.8545 14.9878 32.7612 14.9443 cv
32.668 14.9009 32.48 14.8794 32.1973 14.8794 cv
31.8691 14.8794 31.6631 14.9146 31.5786 14.9854 cv
31.4941 15.0562 31.4521 15.2324 31.4521 15.5151 cv
31.4521 15.5903 li
31.4932 16.5337 li
31.4863 16.5747 li
31.4727 16.7021 31.436 16.7661 31.377 16.7661 cv
31.3496 16.7661 31.2974 16.7524 31.2197 16.7251 cv
30.3379 16.397 li
30.1465 16.3286 29.9985 16.2944 29.8936 16.2944 cv
29.7339 16.2944 29.6089 16.4082 29.5176 16.6362 cv
29.3809 16.9873 29.3125 17.249 29.3125 17.4224 cv
29.3125 17.582 29.5015 17.7139 29.8799 17.8188 cv
30.7822 18.0786 li
30.9097 18.1152 30.9736 18.165 30.9736 18.229 cv
30.9736 18.2607 30.9438 18.3154 30.8848 18.3931 cv
30.3037 19.1313 li
30.126 19.3594 30.0371 19.5278 30.0371 19.6372 cv
30.0371 19.7695 30.1875 19.9404 30.4883 20.1499 cv
30.7524 20.3369 30.9351 20.4302 31.0352 20.4302 cv
31.1675 20.4302 31.3267 20.291 31.5137 20.0132 cv
32.0332 19.2271 li
32.0972 19.1357 32.1519 19.0903 32.1973 19.0903 cv
32.2476 19.0903 32.3042 19.1357 32.3682 19.2271 cv
32.8877 20.0132 li
33.0791 20.291 33.2388 20.4302 33.3662 20.4302 cv
33.4663 20.4302 33.6489 20.3369 33.9131 20.1499 cv
34.2134 19.9355 34.3638 19.7646 34.3638 19.6372 cv
34.3638 19.5234 34.2778 19.3545 34.104 19.1313 cv
33.5166 18.3931 li
33.4575 18.3154 33.4277 18.2632 33.4277 18.2358 cv
33.4277 18.1675 33.4917 18.1152 33.6191 18.0786 cv
34.5278 17.8188 li
34.9155 17.7139 35.105 17.5771 35.0962 17.4087 cv
35.0864 17.2446 35.0278 17.0146 34.9185 16.7183 cv
34.854 16.5498 34.7954 16.4355 34.7407 16.3765 cv
cp
1 1 1 rgb
f
45.2544 22.8911 mo
45.0806 23.1738 44.8276 23.3149 44.4946 23.3149 cv
44.1714 23.3149 43.978 23.1416 43.9146 22.7954 cv
43.8413 22.4219 43.8052 21.6992 43.8052 20.6284 cv
43.8052 20.2363 43.8481 19.9766 43.9341 19.8491 cv
44.0435 19.6807 44.2212 19.5962 44.4673 19.5962 cv
44.7046 19.6055 44.9077 19.7148 45.0767 19.9243 cv
45.3677 20.2891 45.5142 20.8677 45.5142 21.6606 cv
45.5142 22.1982 45.4272 22.6084 45.2544 22.8911 cv
cp
45.9165 17.5386 mo
45.2739 17.5386 44.686 17.7573 44.1528 18.1948 cv
44.0024 18.3179 43.9116 18.3794 43.8794 18.3794 cv
43.8208 18.3794 43.7915 18.334 43.7915 18.2427 cv
43.7915 18.2061 43.7915 18.1563 43.7915 18.0923 cv
43.8794 15.4263 li
43.8843 15.1528 43.7661 15.0161 43.5239 15.0161 cv
43.146 15.0161 42.6919 15.0742 42.1606 15.1904 cv
41.6294 15.3066 41.186 15.4424 40.8306 15.5972 cv
40.1792 15.8887 39.854 16.1875 39.854 16.4927 cv
39.854 16.6431 39.8989 16.7671 39.9907 16.8652 cv
40.0815 16.9634 40.2456 17.0625 40.4829 17.1626 cv
40.6509 17.231 40.7534 17.3242 40.7896 17.4429 cv
40.8267 17.5615 40.8442 17.8555 40.8442 18.3247 cv
40.8442 20.2114 li
40.8442 21.1592 40.8286 21.8521 40.7974 22.2896 cv
40.7651 22.7271 40.7036 23.0938 40.6118 23.3901 cv
40.5894 23.4678 40.5786 23.5361 40.5786 23.5952 cv
40.5786 23.7773 40.7192 23.8687 41.0024 23.8687 cv
41.1616 23.8687 41.3003 23.8457 41.4185 23.8003 cv
41.6509 23.7139 41.7925 23.6704 41.8423 23.6704 cv
41.8833 23.6704 41.938 23.6909 42.0063 23.7319 cv
42.4575 24.0234 42.8735 24.23 43.2544 24.3506 cv
43.6353 24.4712 44.062 24.5317 44.5356 24.5317 cv
45.4927 24.5317 46.3267 24.2446 47.0376 23.6704 cv
48.0269 22.8774 48.522 21.8179 48.522 20.4917 cv
48.522 19.562 48.2163 18.8076 47.606 18.229 cv
47.1177 17.7686 46.5552 17.5386 45.9165 17.5386 cv
cp
f
57.77 22.8638 mo
57.5063 22.7363 57.3735 22.5947 57.3735 22.4399 cv
57.3735 19.4253 li
57.3784 19.1108 57.3853 18.8442 57.395 18.6255 cv
57.3989 18.4707 57.4009 18.3682 57.4009 18.3179 cv
57.4009 17.8301 57.1714 17.5864 56.7114 17.5864 cv
55.8862 17.5864 55.0493 17.6914 54.2017 17.9009 cv
53.7554 18.0103 53.5317 18.2061 53.5317 18.4888 cv
53.5317 18.6982 53.6626 18.8716 53.9224 19.0083 cv
54.0493 19.0767 54.1362 19.1372 54.1821 19.1895 cv
54.2271 19.2417 54.2593 19.3252 54.2778 19.439 cv
54.3276 19.7124 54.3521 20.2227 54.3521 20.9702 cv
54.3521 21.7266 54.3022 22.2144 54.2017 22.4331 cv
54.1519 22.5425 54.063 22.6348 53.936 22.71 cv
53.8081 22.7852 53.6782 22.8228 53.5454 22.8228 cv
53.022 22.8228 52.7603 22.4263 52.7603 21.6333 cv
52.7603 17.9282 li
52.7603 17.7002 52.6255 17.5864 52.356 17.5864 cv
51.4634 17.5864 50.5698 17.6846 49.6763 17.8804 cv
49.1528 17.9941 48.8911 18.2246 48.8911 18.5708 cv
48.8911 18.6665 48.9146 18.7417 48.9624 18.7964 cv
49.0103 18.8511 49.1235 18.9238 49.3013 19.0151 cv
49.4878 19.1201 49.6157 19.2646 49.687 19.4492 cv
49.7583 19.6338 49.7935 19.9219 49.7935 20.314 cv
49.7935 20.3687 49.7935 20.4736 49.7935 20.6284 cv
49.7886 20.8926 49.7856 21.2119 49.7856 21.5854 cv
49.7856 22.5879 49.939 23.3013 50.2446 23.7251 cv
50.604 24.231 51.2212 24.4839 52.0962 24.4839 cv
52.6255 24.4839 53.1196 24.3267 53.5806 24.0122 cv
53.813 23.8525 53.9517 23.7603 53.9966 23.7354 cv
54.0425 23.7104 54.0923 23.6978 54.147 23.6978 cv
54.2974 23.6978 54.3843 23.8389 54.4067 24.1216 cv
54.4204 24.2676 54.4673 24.3652 54.5474 24.4155 cv
54.6274 24.4658 54.7759 24.4907 54.9946 24.4907 cv
55.5278 24.4907 56.0796 24.4248 56.6489 24.2925 cv
57.6196 24.0693 58.106 23.7524 58.106 23.3423 cv
58.106 23.1328 57.9937 22.9731 57.77 22.8638 cv
cp
f
62.2954 19.9858 mo
61.8677 19.79 61.6528 19.5801 61.6528 19.3569 cv
61.6528 19.2295 61.6997 19.1187 61.7935 19.0254 cv
61.8872 18.9321 61.9976 18.8853 62.1255 18.8853 cv
62.3169 18.8853 62.5581 19.0264 62.8501 19.3091 cv
63.1274 19.5732 63.3286 19.7441 63.4546 19.8218 cv
63.5806 19.8994 63.7222 19.938 63.8813 19.938 cv
64.0728 19.938 64.2329 19.8774 64.3599 19.7568 cv
64.4878 19.6362 64.5513 19.4844 64.5513 19.3022 cv
64.5513 19.1152 64.4966 18.8945 64.3872 18.6392 cv
64.2778 18.3838 64.1372 18.1494 63.9634 17.9351 cv
63.7495 17.666 63.5376 17.5317 63.3286 17.5317 cv
63.2554 17.5317 63.1665 17.5522 63.061 17.5933 cv
62.8384 17.6753 62.688 17.7163 62.6099 17.7163 cv
62.5415 17.7163 62.4556 17.707 62.3501 17.689 cv
61.8354 17.5889 61.4644 17.5386 61.2368 17.5386 cv
60.4165 17.5386 59.769 17.8188 59.2954 18.3794 cv
58.9624 18.7715 58.7954 19.2383 58.7954 19.7808 cv
58.7954 20.2822 58.9595 20.7241 59.2847 21.1069 cv
59.6099 21.4897 60.1401 21.8613 60.8735 22.2212 cv
61.2251 22.3896 61.4009 22.5767 61.4009 22.7817 cv
61.4009 22.9141 61.355 23.02 61.2642 23.0996 cv
61.1724 23.1792 61.0513 23.2192 60.9009 23.2192 cv
60.7603 23.2192 60.6274 23.1816 60.5044 23.1064 cv
60.3813 23.0313 60.2271 22.8936 60.0396 22.6929 cv
59.6978 22.3281 59.4731 22.104 59.3667 22.0195 cv
59.2603 21.9351 59.1421 21.8931 59.0142 21.8931 cv
58.686 21.8931 58.522 22.1025 58.522 22.522 cv
58.522 22.7817 58.6021 23.0928 58.7622 23.4551 cv
58.9214 23.8174 59.0942 24.083 59.2817 24.2515 cv
59.4048 24.3608 59.5728 24.4155 59.7876 24.4155 cv
59.8462 24.4155 59.9419 24.4063 60.0747 24.3882 cv
60.1519 24.3745 60.2202 24.3677 60.2798 24.3677 cv
60.3345 24.3677 60.5825 24.3926 61.0239 24.4429 cv
61.4937 24.502 61.8169 24.5317 61.9946 24.5317 cv
62.688 24.5317 63.2739 24.3472 63.7524 23.978 cv
64.3081 23.5542 64.5864 23.0254 64.5864 22.3921 cv
64.5864 21.8906 64.4126 21.4668 64.0669 21.1206 cv
63.6567 20.7104 63.0659 20.332 62.2954 19.9858 cv
cp
f
65.5767 16.9644 mo
65.7729 17.0918 66.0376 17.1558 66.3696 17.1558 cv
67.1587 17.1558 67.8306 16.9941 68.3872 16.6704 cv
68.7378 16.4653 68.9126 16.1875 68.9126 15.8364 cv
68.9126 15.5859 68.7974 15.3862 68.5649 15.2383 cv
68.3325 15.0903 68.0181 15.0161 67.6216 15.0161 cv
67.1245 15.0161 66.5913 15.1299 66.022 15.3579 cv
65.4614 15.5811 65.1802 15.8887 65.1802 16.2808 cv
65.1802 16.5723 65.313 16.8003 65.5767 16.9644 cv
cp
f
69.4048 23.0757 mo
69.2319 22.9526 69.1177 22.8184 69.0601 22.6724 cv
69.0024 22.5264 68.9751 22.2964 68.9751 21.9819 cv
68.9751 18.0103 li
68.9751 17.7275 68.8491 17.5864 68.5981 17.5864 cv
68.2798 17.5864 67.8286 17.6548 67.2446 17.7915 cv
66.6616 17.9282 66.1147 18.0947 65.604 18.2905 cv
65.2349 18.4316 65.0513 18.646 65.0513 18.9331 cv
65.0513 19.1748 65.1919 19.3569 65.4751 19.48 cv
65.7026 19.5801 65.8306 19.7236 65.8579 19.9106 cv
65.8667 19.979 65.8813 20.2192 65.9019 20.6318 cv
65.9224 21.0444 65.9321 21.3257 65.9321 21.4761 cv
65.9321 21.9453 65.9028 22.2988 65.8442 22.5356 cv
65.7847 22.7725 65.6841 22.9434 65.5435 23.0483 cv
65.3384 23.1987 65.2104 23.3081 65.1606 23.3765 cv
65.1099 23.4448 65.0845 23.5405 65.0845 23.6636 cv
65.0845 23.8096 65.1333 23.9395 65.2319 24.0532 cv
65.3306 24.167 65.4585 24.2471 65.6177 24.2925 cv
66.0874 24.4199 66.7231 24.4839 67.5259 24.4839 cv
69.0161 24.4839 69.7603 24.1899 69.7603 23.6021 cv
69.7603 23.4927 69.7368 23.4028 69.689 23.332 cv
69.6411 23.2612 69.5464 23.1758 69.4048 23.0757 cv
cp
f
78.6372 22.8706 mo
78.5894 22.7842 78.561 22.6494 78.5513 22.4673 cv
78.4556 20.061 li
78.4282 19.5005 78.3579 19.0757 78.2446 18.7861 cv
78.1304 18.4966 77.9302 18.2451 77.6431 18.0308 cv
77.2329 17.73 76.7407 17.5796 76.1665 17.5796 cv
75.4185 17.5796 74.8491 17.8623 74.4575 18.4272 cv
74.3345 18.6006 74.2173 18.687 74.1079 18.687 cv
73.9263 18.687 73.8345 18.5776 73.8345 18.3589 cv
73.8345 18.3315 73.8374 18.2998 73.8423 18.2632 cv
73.8462 18.1631 73.8481 18.106 73.8481 18.0923 cv
73.8481 17.9556 73.8013 17.8369 73.7085 17.7368 cv
73.6157 17.6367 73.5005 17.5864 73.3638 17.5864 cv
73.2134 17.5864 72.9351 17.6401 72.5298 17.7471 cv
72.1235 17.854 71.7017 17.9854 71.2642 18.1401 cv
70.7681 18.3179 70.4399 18.4648 70.2798 18.5811 cv
70.1206 18.6973 70.0415 18.8467 70.0415 19.0288 cv
70.0415 19.2065 70.1392 19.3569 70.3345 19.48 cv
70.563 19.6211 70.7007 19.7407 70.7485 19.8389 cv
70.7964 19.937 70.8208 20.1431 70.8208 20.4575 cv
70.8208 21.0273 70.8042 21.5718 70.772 22.0913 cv
70.7446 22.5288 70.7153 22.8032 70.6841 22.915 cv
70.6519 23.0269 70.5767 23.126 70.4575 23.2124 cv
70.312 23.3174 70.2192 23.3979 70.1812 23.4551 cv
70.1431 23.5122 70.1235 23.5952 70.1235 23.7046 cv
70.1235 24.2285 70.7563 24.4907 72.0239 24.4907 cv
72.8169 24.4907 73.3999 24.4268 73.7739 24.2993 cv
74.147 24.1719 74.3345 23.9736 74.3345 23.7046 cv
74.3345 23.5996 74.3091 23.5063 74.2583 23.4243 cv
74.0669 23.1372 73.9546 22.9434 73.9204 22.8433 cv
73.8862 22.7432 73.8696 22.5586 73.8696 22.2896 cv
73.8696 20.936 li
73.8696 20.4209 73.9263 20.0654 74.0396 19.8696 cv
74.1538 19.6738 74.3638 19.5757 74.6685 19.5757 cv
74.9878 19.5757 75.2065 19.6963 75.3247 19.938 cv
75.4712 20.2388 75.5435 20.7036 75.5435 21.3325 cv
75.5435 22.417 75.4526 23.0552 75.27 23.2466 cv
75.1157 23.415 75.0239 23.521 74.9966 23.5645 cv
74.9692 23.6079 74.9556 23.6748 74.9556 23.7661 cv
74.9556 24.0215 75.0903 24.2061 75.3599 24.3198 cv
75.6196 24.4292 76.063 24.4839 76.6919 24.4839 cv
77.6177 24.4839 78.2603 24.4248 78.6196 24.3062 cv
78.98 24.1875 79.1606 23.978 79.1606 23.6772 cv
79.1606 23.5449 79.1255 23.4424 79.0571 23.3696 cv
78.8247 23.1235 78.6851 22.957 78.6372 22.8706 cv
cp
f
83.5278 20.0063 mo
82.8384 20.0063 li
82.6743 20.0063 82.5591 19.979 82.4927 19.9243 cv
82.4263 19.8696 82.3931 19.7739 82.3931 19.6372 cv
82.3931 19.4458 82.4614 19.2568 82.5981 19.0698 cv
82.7446 18.8691 82.9448 18.769 83.1997 18.769 cv
83.4282 18.769 83.6128 18.8467 83.7544 19.0015 cv
83.895 19.1563 83.9653 19.3569 83.9653 19.603 cv
83.9653 19.8721 83.8198 20.0063 83.5278 20.0063 cv
cp
85.4771 18.2769 mo
84.8706 17.7847 84.1343 17.5386 83.2681 17.5386 cv
82.7261 17.5386 82.2231 17.6367 81.7583 17.8325 cv
81.1382 18.0923 80.6274 18.4863 80.2271 19.0151 cv
79.7622 19.626 79.5298 20.314 79.5298 21.0796 cv
79.5298 21.6494 79.6636 22.1914 79.9321 22.7065 cv
80.1372 23.0938 80.397 23.4243 80.7114 23.6978 cv
81.3589 24.2539 82.1606 24.5317 83.1177 24.5317 cv
84.0659 24.5317 84.9028 24.2607 85.6274 23.7183 cv
86.0376 23.4131 86.2427 23.0962 86.2427 22.7681 cv
86.2427 22.6133 86.1851 22.4629 86.0708 22.3169 cv
85.9575 22.1709 85.8413 22.0981 85.7231 22.0981 cv
85.6313 22.0981 85.5083 22.1528 85.354 22.2622 cv
85.1802 22.3853 84.9604 22.4888 84.6938 22.5732 cv
84.4272 22.6577 84.1841 22.6997 83.9653 22.6997 cv
83.5962 22.6997 83.2515 22.5688 82.9302 22.3066 cv
82.6089 22.0444 82.4478 21.7656 82.4478 21.4692 cv
82.4478 21.3462 82.519 21.2847 82.6606 21.2847 cv
85.8735 21.2847 li
86.0688 21.2847 86.229 21.1899 86.3521 21.001 cv
86.4751 20.812 86.5356 20.5693 86.5356 20.2729 cv
86.5356 19.9082 86.4292 19.5347 86.2153 19.1519 cv
86.0278 18.8145 85.7817 18.5229 85.4771 18.2769 cv
cp
f
90.7739 19.9858 mo
90.3462 19.79 90.1313 19.5801 90.1313 19.3569 cv
90.1313 19.2295 90.1782 19.1187 90.272 19.0254 cv
90.3657 18.9321 90.4761 18.8853 90.604 18.8853 cv
90.7954 18.8853 91.0366 19.0264 91.3286 19.3091 cv
91.606 19.5732 91.8071 19.7441 91.9331 19.8218 cv
92.0591 19.8994 92.2007 19.938 92.3599 19.938 cv
92.5513 19.938 92.7114 19.8774 92.8384 19.7568 cv
92.9663 19.6362 93.0298 19.4844 93.0298 19.3022 cv
93.0298 19.1152 92.9751 18.8945 92.8657 18.6392 cv
92.7563 18.3838 92.6157 18.1494 92.4419 17.9351 cv
92.228 17.666 92.0161 17.5317 91.8071 17.5317 cv
91.7339 17.5317 91.645 17.5522 91.5396 17.5933 cv
91.3169 17.6753 91.1665 17.7163 91.0884 17.7163 cv
91.02 17.7163 90.9341 17.707 90.8286 17.689 cv
90.314 17.5889 89.9429 17.5386 89.7153 17.5386 cv
88.895 17.5386 88.2476 17.8188 87.7739 18.3794 cv
87.4409 18.7715 87.2739 19.2383 87.2739 19.7808 cv
87.2739 20.2822 87.438 20.7241 87.7632 21.1069 cv
88.0884 21.4897 88.6187 21.8613 89.3521 22.2212 cv
89.7036 22.3896 89.8794 22.5767 89.8794 22.7817 cv
89.8794 22.9141 89.8335 23.02 89.7427 23.0996 cv
89.6509 23.1792 89.5298 23.2192 89.3794 23.2192 cv
89.2388 23.2192 89.106 23.1816 88.9829 23.1064 cv
88.8599 23.0313 88.7056 22.8936 88.5181 22.6929 cv
88.1763 22.3281 87.9517 22.104 87.8452 22.0195 cv
87.7388 21.9351 87.6206 21.8931 87.4927 21.8931 cv
87.1646 21.8931 87.0005 22.1025 87.0005 22.522 cv
87.0005 22.7817 87.0806 23.0928 87.2407 23.4551 cv
87.3999 23.8174 87.5728 24.083 87.7603 24.2515 cv
87.8833 24.3608 88.0513 24.4155 88.2661 24.4155 cv
88.3247 24.4155 88.4204 24.4063 88.5532 24.3882 cv
88.6304 24.3745 88.6987 24.3677 88.7583 24.3677 cv
88.813 24.3677 89.061 24.3926 89.5024 24.4429 cv
89.9722 24.502 90.2954 24.5317 90.4731 24.5317 cv
91.1665 24.5317 91.7524 24.3472 92.231 23.978 cv
92.7866 23.5542 93.0649 23.0254 93.0649 22.3921 cv
93.0649 21.8906 92.8911 21.4668 92.5454 21.1206 cv
92.1353 20.7104 91.5444 20.332 90.7739 19.9858 cv
cp
f
97.4458 19.9858 mo
97.0181 19.79 96.8032 19.5801 96.8032 19.3569 cv
96.8032 19.2295 96.8501 19.1187 96.9438 19.0254 cv
97.0376 18.9321 97.1479 18.8853 97.2759 18.8853 cv
97.4673 18.8853 97.7085 19.0264 98.0005 19.3091 cv
98.2778 19.5732 98.479 19.7441 98.605 19.8218 cv
98.731 19.8994 98.8726 19.938 99.0317 19.938 cv
99.2231 19.938 99.3833 19.8774 99.5103 19.7568 cv
99.6382 19.6362 99.7017 19.4844 99.7017 19.3022 cv
99.7017 19.1152 99.647 18.8945 99.5376 18.6392 cv
99.4282 18.3838 99.2876 18.1494 99.1138 17.9351 cv
98.8999 17.666 98.688 17.5317 98.479 17.5317 cv
98.4058 17.5317 98.3169 17.5522 98.2114 17.5933 cv
97.9888 17.6753 97.8384 17.7163 97.7603 17.7163 cv
97.6919 17.7163 97.606 17.707 97.5005 17.689 cv
96.9858 17.5889 96.6147 17.5386 96.3872 17.5386 cv
95.5669 17.5386 94.9194 17.8188 94.4458 18.3794 cv
94.1128 18.7715 93.9458 19.2383 93.9458 19.7808 cv
93.9458 20.2822 94.1099 20.7241 94.4351 21.1069 cv
94.7603 21.4897 95.2905 21.8613 96.0239 22.2212 cv
96.3755 22.3896 96.5513 22.5767 96.5513 22.7817 cv
96.5513 22.9141 96.5054 23.02 96.4146 23.0996 cv
96.3228 23.1792 96.2017 23.2192 96.0513 23.2192 cv
95.9106 23.2192 95.7778 23.1816 95.6548 23.1064 cv
95.5317 23.0313 95.3774 22.8936 95.1899 22.6929 cv
94.8481 22.3281 94.6235 22.104 94.5171 22.0195 cv
94.4106 21.9351 94.2925 21.8931 94.1646 21.8931 cv
93.8364 21.8931 93.6724 22.1025 93.6724 22.522 cv
93.6724 22.7817 93.7524 23.0928 93.9126 23.4551 cv
94.0718 23.8174 94.2446 24.083 94.4321 24.2515 cv
94.5552 24.3608 94.7231 24.4155 94.938 24.4155 cv
94.9966 24.4155 95.0923 24.4063 95.2251 24.3882 cv
95.3022 24.3745 95.3706 24.3677 95.4302 24.3677 cv
95.4849 24.3677 95.7329 24.3926 96.1743 24.4429 cv
96.644 24.502 96.9673 24.5317 97.145 24.5317 cv
97.8384 24.5317 98.4243 24.3472 98.9028 23.978 cv
99.4585 23.5542 99.7368 23.0254 99.7368 22.3921 cv
99.7368 21.8906 99.563 21.4668 99.2173 21.1206 cv
98.8071 20.7104 98.2163 20.332 97.4458 19.9858 cv
cp
f
108.11 23.1851 mo
107.915 23.0986 107.801 22.9756 107.772 22.8159 cv
107.743 22.6563 107.727 22.0913 107.727 21.1206 cv
107.727 18.9263 li
107.737 18.2471 107.771 17.5 107.831 16.6841 cv
107.875 16.1602 107.899 15.8252 107.899 15.6792 cv
107.899 15.2324 107.718 15.0093 107.358 15.0093 cv
107.13 15.0093 106.766 15.0527 106.264 15.1392 cv
105.763 15.2256 105.356 15.3169 105.042 15.4126 cv
104.572 15.5537 104.23 15.7075 104.016 15.874 cv
103.801 16.0405 103.694 16.2354 103.694 16.4585 cv
103.694 16.5996 103.729 16.7192 103.8 16.8174 cv
103.872 16.9155 104.002 17.019 104.194 17.1284 cv
104.449 17.2832 104.608 17.5205 104.672 17.8394 cv
104.736 18.1582 104.768 18.874 104.768 19.9858 cv
104.768 21.0796 104.731 21.9229 104.659 22.5151 cv
104.618 22.8613 104.508 23.0732 104.331 23.1509 cv
104.139 23.2329 104.014 23.3037 103.958 23.3628 cv
103.901 23.4219 103.872 23.5063 103.872 23.6157 cv
103.872 23.7524 103.924 23.8833 104.03 24.0088 cv
104.134 24.1343 104.268 24.2266 104.432 24.2856 cv
104.788 24.418 105.406 24.4839 106.286 24.4839 cv
107.065 24.4839 107.618 24.4336 107.946 24.3335 cv
108.124 24.2832 108.266 24.1968 108.374 24.0737 cv
108.481 23.9507 108.534 23.814 108.534 23.6636 cv
108.534 23.5449 108.506 23.4541 108.449 23.3901 cv
108.391 23.3262 108.279 23.2578 108.11 23.1851 cv
cp
f
109.34 16.9644 mo
109.537 17.0918 109.801 17.1558 110.133 17.1558 cv
110.922 17.1558 111.594 16.9941 112.151 16.6704 cv
112.501 16.4653 112.676 16.1875 112.676 15.8364 cv
112.676 15.5859 112.561 15.3862 112.329 15.2383 cv
112.096 15.0903 111.782 15.0161 111.385 15.0161 cv
110.888 15.0161 110.355 15.1299 109.786 15.3579 cv
109.225 15.5811 108.944 15.8887 108.944 16.2808 cv
108.944 16.5723 109.077 16.8003 109.34 16.9644 cv
cp
f
113.168 23.0757 mo
112.996 22.9526 112.881 22.8184 112.824 22.6724 cv
112.766 22.5264 112.739 22.2964 112.739 21.9819 cv
112.739 18.0103 li
112.739 17.7275 112.613 17.5864 112.362 17.5864 cv
112.043 17.5864 111.592 17.6548 111.008 17.7915 cv
110.425 17.9282 109.878 18.0947 109.368 18.2905 cv
108.999 18.4316 108.815 18.646 108.815 18.9331 cv
108.815 19.1748 108.956 19.3569 109.239 19.48 cv
109.466 19.5801 109.594 19.7236 109.622 19.9106 cv
109.63 19.979 109.645 20.2192 109.666 20.6318 cv
109.686 21.0444 109.696 21.3257 109.696 21.4761 cv
109.696 21.9453 109.667 22.2988 109.608 22.5356 cv
109.548 22.7725 109.448 22.9434 109.307 23.0483 cv
109.102 23.1987 108.974 23.3081 108.924 23.3765 cv
108.874 23.4448 108.848 23.5405 108.848 23.6636 cv
108.848 23.8096 108.897 23.9395 108.996 24.0532 cv
109.094 24.167 109.222 24.2471 109.381 24.2925 cv
109.851 24.4199 110.487 24.4839 111.29 24.4839 cv
112.78 24.4839 113.524 24.1899 113.524 23.6021 cv
113.524 23.4927 113.5 23.4028 113.453 23.332 cv
113.405 23.2612 113.31 23.1758 113.168 23.0757 cv
cp
f
119.028 15.5493 mo
118.512 15.1436 117.825 14.9409 116.963 14.9409 cv
115.915 14.9409 115.11 15.1982 114.549 15.7134 cv
114.167 16.0645 113.975 16.5176 113.975 17.0737 cv
113.975 17.4521 114.081 17.8301 114.29 18.2085 cv
114.413 18.4365 114.475 18.582 114.475 18.646 cv
114.475 18.8008 114.39 18.8828 114.221 18.8921 cv
114.043 18.9014 113.936 18.9229 113.897 18.957 cv
113.858 18.9912 113.834 19.0791 113.825 19.2202 cv
113.77 20.0815 li
113.766 20.1772 113.797 20.2378 113.866 20.2627 cv
113.934 20.2876 114.092 20.3003 114.338 20.3003 cv
114.547 20.2959 114.692 20.3379 114.772 20.4268 cv
114.852 20.5156 114.891 20.6738 114.891 20.9019 cv
114.891 21.4121 114.853 21.8906 114.776 22.3374 cv
114.725 22.6338 114.58 22.8364 114.338 22.9458 cv
114.115 23.0415 113.969 23.126 113.904 23.1987 cv
113.838 23.2715 113.805 23.3857 113.805 23.5405 cv
113.805 24.1694 114.595 24.4839 116.176 24.4839 cv
117.243 24.4839 118.01 24.4087 118.477 24.2583 cv
118.944 24.1079 119.178 23.8618 119.178 23.52 cv
119.178 23.1963 118.977 22.9756 118.577 22.8569 cv
118.399 22.8066 118.271 22.7485 118.194 22.6826 cv
118.116 22.6167 118.057 22.5127 118.016 22.3716 cv
117.911 22.0435 117.858 21.6401 117.858 21.1616 cv
117.858 20.8105 117.893 20.5728 117.961 20.4473 cv
118.03 20.3218 118.159 20.2593 118.35 20.2593 cv
118.405 20.2593 118.473 20.2617 118.555 20.2661 cv
118.674 20.2754 118.75 20.2798 118.782 20.2798 cv
118.922 20.2798 119.014 20.2583 119.055 20.2148 cv
119.096 20.1714 119.121 20.0679 119.129 19.9038 cv
119.184 19.0903 li
119.194 18.9902 119.167 18.9185 119.106 18.875 cv
119.044 18.8315 118.943 18.8101 118.801 18.8101 cv
117.954 18.8101 li
117.84 18.8101 117.767 18.7827 117.735 18.728 cv
117.676 18.5957 117.609 18.4932 117.534 18.4204 cv
117.458 18.3477 117.316 18.2471 117.106 18.1196 cv
116.422 17.7095 116.081 17.3242 116.081 16.9644 cv
116.081 16.832 116.126 16.7207 116.217 16.6294 cv
116.309 16.5381 116.418 16.4927 116.545 16.4927 cv
116.742 16.4927 116.938 16.5977 117.133 16.8071 cv
117.407 17.1079 117.581 17.2881 117.653 17.3472 cv
117.954 17.5752 118.268 17.689 118.596 17.689 cv
118.888 17.689 119.132 17.5874 119.329 17.3848 cv
119.524 17.1821 119.622 16.9326 119.622 16.6362 cv
119.622 16.2261 119.424 15.8638 119.028 15.5493 cv
cp
f
123.627 20.0063 mo
122.938 20.0063 li
122.774 20.0063 122.659 19.979 122.592 19.9243 cv
122.526 19.8696 122.493 19.7739 122.493 19.6372 cv
122.493 19.4458 122.561 19.2568 122.698 19.0698 cv
122.844 18.8691 123.044 18.769 123.299 18.769 cv
123.528 18.769 123.712 18.8467 123.854 19.0015 cv
123.995 19.1563 124.065 19.3569 124.065 19.603 cv
124.065 19.8721 123.919 20.0063 123.627 20.0063 cv
cp
125.577 18.2769 mo
124.97 17.7847 124.234 17.5386 123.368 17.5386 cv
122.826 17.5386 122.323 17.6367 121.858 17.8325 cv
121.238 18.0923 120.727 18.4863 120.327 19.0151 cv
119.862 19.626 119.629 20.314 119.629 21.0796 cv
119.629 21.6494 119.763 22.1914 120.032 22.7065 cv
120.237 23.0938 120.497 23.4243 120.811 23.6978 cv
121.458 24.2539 122.26 24.5317 123.217 24.5317 cv
124.166 24.5317 125.002 24.2607 125.727 23.7183 cv
126.137 23.4131 126.342 23.0962 126.342 22.7681 cv
126.342 22.6133 126.285 22.4629 126.17 22.3169 cv
126.057 22.1709 125.941 22.0981 125.823 22.0981 cv
125.731 22.0981 125.608 22.1528 125.454 22.2622 cv
125.28 22.3853 125.06 22.4888 124.793 22.5732 cv
124.527 22.6577 124.284 22.6997 124.065 22.6997 cv
123.696 22.6997 123.351 22.5688 123.03 22.3066 cv
122.708 22.0444 122.547 21.7656 122.547 21.4692 cv
122.547 21.3462 122.619 21.2847 122.76 21.2847 cv
125.973 21.2847 li
126.168 21.2847 126.329 21.1899 126.452 21.001 cv
126.575 20.812 126.635 20.5693 126.635 20.2729 cv
126.635 19.9082 126.529 19.5347 126.315 19.1519 cv
126.127 18.8145 125.881 18.5229 125.577 18.2769 cv
cp
f
134.551 20.0063 mo
133.862 20.0063 li
133.698 20.0063 133.583 19.979 133.516 19.9243 cv
133.45 19.8696 133.417 19.7739 133.417 19.6372 cv
133.417 19.4458 133.485 19.2568 133.622 19.0698 cv
133.768 18.8691 133.968 18.769 134.223 18.769 cv
134.452 18.769 134.636 18.8467 134.778 19.0015 cv
134.918 19.1563 134.989 19.3569 134.989 19.603 cv
134.989 19.8721 134.843 20.0063 134.551 20.0063 cv
cp
136.5 18.2769 mo
135.894 17.7847 135.158 17.5386 134.292 17.5386 cv
133.75 17.5386 133.247 17.6367 132.782 17.8325 cv
132.162 18.0923 131.651 18.4863 131.25 19.0151 cv
130.786 19.626 130.553 20.314 130.553 21.0796 cv
130.553 21.6494 130.687 22.1914 130.956 22.7065 cv
131.161 23.0938 131.42 23.4243 131.735 23.6978 cv
132.382 24.2539 133.184 24.5317 134.141 24.5317 cv
135.089 24.5317 135.926 24.2607 136.651 23.7183 cv
137.061 23.4131 137.266 23.0962 137.266 22.7681 cv
137.266 22.6133 137.208 22.4629 137.094 22.3169 cv
136.981 22.1709 136.865 22.0981 136.747 22.0981 cv
136.655 22.0981 136.532 22.1528 136.377 22.2622 cv
136.204 22.3853 135.984 22.4888 135.717 22.5732 cv
135.451 22.6577 135.208 22.6997 134.989 22.6997 cv
134.62 22.6997 134.275 22.5688 133.954 22.3066 cv
133.632 22.0444 133.471 21.7656 133.471 21.4692 cv
133.471 21.3462 133.542 21.2847 133.684 21.2847 cv
136.897 21.2847 li
137.092 21.2847 137.252 21.1899 137.375 21.001 cv
137.499 20.812 137.559 20.5693 137.559 20.2729 cv
137.559 19.9082 137.453 19.5347 137.239 19.1519 cv
137.051 18.8145 136.805 18.5229 136.5 18.2769 cv
cp
f
143.602 22.2622 mo
143.534 22.2622 143.465 22.2827 143.397 22.3237 cv
143.106 22.4878 142.872 22.5698 142.694 22.5698 cv
142.484 22.5698 142.311 22.4834 142.177 22.3101 cv
142.043 22.1367 141.975 21.9136 141.975 21.6401 cv
141.975 19.3296 li
141.975 19.2021 141.999 19.1152 142.043 19.0698 cv
142.089 19.0244 142.176 19.0015 142.303 19.0015 cv
143.542 19.0015 li
143.709 19.0015 143.826 18.9595 143.889 18.875 cv
143.954 18.7905 143.985 18.6392 143.985 18.4204 cv
143.985 18.0171 li
143.985 17.8164 143.96 17.6855 143.911 17.624 cv
143.86 17.5625 143.75 17.5317 143.583 17.5317 cv
142.317 17.5317 li
142.176 17.5317 142.084 17.5112 142.041 17.4702 cv
141.997 17.4292 141.975 17.3403 141.975 17.2036 cv
141.975 16.2808 li
141.975 16.126 141.956 16.022 141.917 15.9697 cv
141.879 15.9175 141.802 15.8911 141.688 15.8911 cv
141.135 15.8911 li
141.021 15.8911 140.925 15.9116 140.848 15.9526 cv
137.717 17.9214 li
137.617 17.9854 137.564 18.0854 137.559 18.2222 cv
137.559 18.5229 li
137.559 18.6826 137.578 18.7837 137.614 18.8271 cv
137.651 18.8706 137.735 18.8921 137.868 18.8921 cv
138.571 18.8921 li
138.676 18.8921 138.741 18.9048 138.766 18.9297 cv
138.792 18.9546 138.803 19.0195 138.803 19.1245 cv
138.803 22.2827 li
138.803 22.957 139.025 23.5005 139.467 23.9131 cv
139.909 24.3257 140.495 24.5317 141.223 24.5317 cv
142.144 24.5317 142.928 24.2559 143.575 23.7046 cv
143.885 23.4448 144.04 23.1738 144.04 22.8911 cv
144.04 22.7363 143.995 22.5928 143.903 22.4604 cv
143.812 22.3281 143.711 22.2622 143.602 22.2622 cv
cp
f
148.168 19.2544 mo
148.515 19.2544 148.75 19.4458 148.874 19.8286 cv
148.987 20.1841 149.074 20.4053 149.133 20.4917 cv
149.325 20.7651 149.609 20.9019 149.987 20.9019 cv
150.347 20.9019 150.655 20.7856 150.911 20.5532 cv
151.184 20.3071 151.321 19.9858 151.321 19.5894 cv
151.321 19.0151 151.026 18.5342 150.438 18.147 cv
149.819 17.7412 149.103 17.5386 148.292 17.5386 cv
147.216 17.5386 146.303 17.8623 145.551 18.5093 cv
144.762 19.1836 144.368 20.0361 144.368 21.0659 cv
144.368 22.1367 144.792 23.0186 145.639 23.7114 cv
146.3 24.2583 147.1 24.5317 148.04 24.5317 cv
148.846 24.5317 149.545 24.3496 150.137 23.9849 cv
150.411 23.8164 150.632 23.6191 150.801 23.3936 cv
150.969 23.168 151.053 22.9526 151.053 22.7476 cv
151.053 22.5518 150.995 22.3809 150.875 22.2349 cv
150.757 22.0889 150.621 22.0161 150.465 22.0161 cv
150.388 22.0161 150.318 22.0322 150.254 22.064 cv
150.003 22.1826 149.8 22.2612 149.645 22.2998 cv
149.491 22.3384 149.299 22.3579 149.071 22.3579 cv
148.588 22.3579 148.187 22.187 147.868 21.8452 cv
147.476 21.4214 147.28 20.936 147.28 20.3892 cv
147.28 20.0703 147.366 19.8013 147.537 19.5825 cv
147.708 19.3638 147.918 19.2544 148.168 19.2544 cv
cp
f
85.252 345.838 mo
86.7451 345.146 86.7026 342.894 81.958 344.466 cv
75.9194 346.467 79.1724 349.763 81.9678 351.337 cv
84.7617 352.908 83.4551 350.354 83.4551 350.354 cv
86.6221 351.644 84.6865 349.097 84.6865 349.097 cv
87.2188 350.066 85.2896 347.778 85.2896 347.778 cv
88.6797 347.65 85.252 345.838 85.252 345.838 cv
cp
.94902 .764706 .533333 rgb
f
59.875 333.721 mo
58.2485 343.315 li
58.2485 343.315 62.9849 348.176 79.2041 350.501 cv
79.9927 344.388 li
79.9927 344.388 71.0146 344.516 59.875 333.721 cv
cp
1 1 1 rgb
f
18.4883 356.69 mo
18.4883 356.69 15.6191 359.299 16.6489 356.065 cv
16.6489 356.065 13.8418 357.104 15.6143 355.052 cv
15.6143 355.052 12.5601 356.007 14.8467 353.467 cv
14.8467 353.467 12.0015 353.826 14.4297 351.732 cv
16.8589 349.639 21.061 347.695 20.8955 354.056 cv
20.7651 359.051 18.6299 358.329 18.4883 356.69 cv
cp
.94902 .764706 .533333 rgb
f
21.3911 353.443 mo
16.6299 349.522 li
27.2207 337.021 33.854 335.594 33.854 335.594 cv
41.1177 342.067 li
26.0527 345.77 21.3911 353.443 21.3911 353.443 cv
cp
1 1 1 rgb
f
61.1309 302.985 mo
54.4756 295.536 38.0542 297.123 35.7358 309.681 cv
33.4155 322.24 33.2563 332.339 33.2563 332.339 cv
62.127 334.261 li
61.9399 322.283 li
68.022 319.766 li
68.022 319.766 67.79 310.434 61.1309 302.985 cv
cp
.94902 .764706 .533333 rgb
f
40.8589 298.902 mo
40.3613 299.187 39.896 299.484 39.4512 299.79 cv
39.2959 299.873 39.1406 299.952 38.9917 300.051 cv
38.2822 298.207 36.8276 296.683 36.8276 296.683 cv
36.2563 298.375 36.8018 299.856 37.5249 300.897 cv
31.8379 299.52 31.6743 300.633 36.0679 302.741 cv
35.7764 303.111 35.5117 303.5 35.2578 303.894 cv
29.291 312.416 32.4204 324.876 32.4204 324.876 cv
36.937 324.663 li
36.8452 322.252 37.5332 318.348 37.5332 318.348 cv
35.918 315.316 37.1626 313.916 37.7749 313.324 cv
38.9565 312.187 40.2651 313.095 40.2651 313.095 cv
40.2651 313.095 41.6338 313.752 40.585 318.499 cv
42.6455 318.49 li
44.9341 306.474 li
62.5132 306.622 64.4902 302.805 64.4902 302.805 cv
62.3276 299.219 52.8257 292.035 40.8589 298.902 cv
cp
.0352941 .0117647 .027451 rgb
f
32.5869 331.716 mo
32.6895 356.123 li
62.4746 356.001 li
62.3784 332.823 li
32.5869 331.716 li
cp
1 1 1 rgb
f
51.5747 332.866 mo
45.3604 332.896 li
46.9678 338.919 li
45.4268 348.842 li
48.6172 354.542 li
52.146 348.813 li
49.936 338.72 li
51.5747 332.866 li
cp
.658824 .184314 .219608 rgb
f
30.7866 380.642 mo
30.1133 380.795 30.2031 381.511 30.4619 381.757 cv
31.061 382.336 32.6304 382.684 33.665 382.692 cv
34.9692 382.704 35.3335 382.692 36.6401 382.672 cv
40.7939 382.609 41.7427 380.329 41.7427 380.329 cv
41.7334 382.692 li
46.4351 382.713 li
46.4443 380.35 li
46.4536 378.243 li
37.8032 378.206 li
37.5972 378.997 32.9644 380.143 30.7866 380.642 cv
cp
.145098 .12549 .141176 rgb
f
65.8701 380.586 mo
63.6934 380.089 59.062 378.94 58.854 378.152 cv
50.2051 378.188 li
50.2144 380.294 li
50.2236 382.657 li
54.9248 382.639 li
54.9155 380.275 li
54.9155 380.275 55.8643 382.556 60.0186 382.615 cv
61.3242 382.637 61.6895 382.648 62.9941 382.637 cv
64.0273 382.628 65.5972 382.28 66.1958 381.703 cv
66.4546 381.455 66.5469 380.739 65.8701 380.586 cv
cp
f
32.7412 355.873 mo
33.0762 358.726 32.835 360.454 35.5933 361.296 cv
35.6665 378.84 li
47.3682 378.788 li
47.2949 361.368 li
49.5884 361.36 li
49.6621 378.779 li
60.3984 378.736 li
60.3252 361.192 li
62.8481 360.327 62.4849 358.637 62.4736 355.746 cv
32.7412 355.873 li
cp
f
46.9878 320.62 mo
46.6968 327.162 50.6016 328.518 53.2095 328.143 cv
57.4614 327.537 58.0645 322.503 58.0645 322.503 cv
51.813 324.876 46.9878 320.62 46.9878 320.62 cv
cp
.698039 .286275 .282353 rgb
f
57.8213 309.943 mo
56.1245 310.024 54.813 311.464 54.8926 313.163 cv
54.9712 314.857 56.4146 316.171 58.1108 316.089 cv
59.8086 316.012 61.1206 314.569 61.042 312.873 cv
60.9614 311.177 59.52 309.864 57.8213 309.943 cv
cp
1 1 1 rgb
f
58.6265 313.409 mo
57.9453 313.442 57.4219 314.018 57.4551 314.696 cv
57.4863 315.375 58.0615 315.9 58.7422 315.867 cv
59.4209 315.836 59.9443 315.261 59.9121 314.58 cv
59.8813 313.901 59.3027 313.376 58.6265 313.409 cv
cp
.133333 .137255 .133333 rgb
f
51.668 309.533 mo
49.9702 309.612 48.6587 311.055 48.7393 312.751 cv
48.8188 314.45 50.2588 315.76 51.9565 315.681 cv
53.6543 315.601 54.9658 314.16 54.8862 312.461 cv
54.8066 310.765 53.3657 309.453 51.668 309.533 cv
cp
1 1 1 rgb
f
52.6909 312.917 mo
52.0122 312.947 51.4878 313.524 51.52 314.203 cv
51.5522 314.882 52.1284 315.408 52.8071 315.375 cv
53.4858 315.344 54.0103 314.767 53.979 314.088 cv
53.9468 313.409 53.3706 312.886 52.6909 312.917 cv
cp
.133333 .137255 .133333 rgb
f
56.3359 308.749 mo
56.3359 308.749 59.9473 308.971 61.5176 309.997 cv
61.5176 309.997 59.7852 305.789 56.3359 308.749 cv
cp
.0352941 .0117647 .027451 rgb
f
48.3711 310.062 mo
48.3711 310.062 51.585 308.401 53.4585 308.479 cv
53.4585 308.479 49.8159 305.753 48.3711 310.062 cv
cp
f
436.822 89.5713 mo
437.886 88.3169 436.901 86.29 433.255 89.709 cv
428.615 94.0605 432.952 95.6865 436.149 95.9419 cv
439.346 96.1948 437.087 94.4258 437.087 94.4258 cv
440.503 94.2656 437.677 92.7671 437.677 92.7671 cv
440.381 92.583 437.67 91.3164 437.67 91.3164 cv
440.693 89.7773 436.822 89.5713 436.822 89.5713 cv
cp
.94902 .764706 .533333 rgb
f
408.701 89.228 mo
411.255 98.6191 li
411.255 98.6191 417.595 101.042 433.291 96.3433 cv
431.439 90.4629 li
431.439 90.4629 423.345 94.3486 408.701 89.228 cv
cp
1 1 1 rgb
f
371.024 110.701 mo
371.024 110.701 368.155 113.309 369.186 110.076 cv
369.186 110.076 366.378 111.114 368.15 109.062 cv
368.15 109.062 365.096 110.017 367.383 107.477 cv
367.383 107.477 364.537 107.836 366.966 105.743 cv
369.395 103.649 373.598 101.706 373.432 108.066 cv
373.301 113.061 371.166 112.339 371.024 110.701 cv
cp
.94902 .764706 .533333 rgb
f
373.928 107.454 mo
369.166 103.533 li
379.757 91.0317 386.391 89.604 386.391 89.604 cv
393.654 96.0776 li
378.589 99.7798 373.928 107.454 373.928 107.454 cv
cp
1 1 1 rgb
f
413.667 56.9956 mo
407.012 49.5464 390.59 51.1333 388.271 63.6909 cv
385.951 76.2505 385.793 86.3491 385.793 86.3491 cv
414.663 88.271 li
414.477 76.2935 li
420.559 73.7759 li
420.559 73.7759 420.326 64.4438 413.667 56.9956 cv
cp
.94902 .764706 .533333 rgb
f
393.395 52.9126 mo
392.897 53.1968 392.432 53.4946 391.987 53.8003 cv
391.832 53.8833 391.677 53.9624 391.527 54.061 cv
390.818 52.2173 389.363 50.6929 389.363 50.6929 cv
388.793 52.3853 389.338 53.8667 390.061 54.9077 cv
384.374 53.5298 384.211 54.6431 388.604 56.7515 cv
388.313 57.1216 388.048 57.5103 387.794 57.9038 cv
381.827 66.4263 384.957 78.8862 384.957 78.8862 cv
389.473 78.6733 li
389.381 76.2622 390.069 72.3579 390.069 72.3579 cv
388.454 69.3267 389.699 67.9263 390.311 67.3345 cv
391.492 66.1968 392.801 67.105 392.801 67.105 cv
392.801 67.105 394.17 67.7622 393.121 72.5093 cv
395.182 72.5005 li
397.471 60.4839 li
415.049 60.6323 417.026 56.8149 417.026 56.8149 cv
414.863 53.229 405.361 46.0454 393.395 52.9126 cv
cp
.0352941 .0117647 .027451 rgb
f
385.123 85.7261 mo
385.226 110.133 li
415.011 110.011 li
414.914 86.8335 li
385.123 85.7261 li
cp
1 1 1 rgb
f
404.111 86.8765 mo
397.896 86.9058 li
399.504 92.9292 li
397.963 102.852 li
401.153 108.552 li
404.682 102.824 li
402.473 92.73 li
404.111 86.8765 li
cp
.658824 .184314 .219608 rgb
f
383.322 134.652 mo
382.649 134.805 382.739 135.521 382.998 135.767 cv
383.598 136.346 385.166 136.694 386.201 136.703 cv
387.506 136.714 387.869 136.703 389.176 136.682 cv
393.33 136.62 394.279 134.339 394.279 134.339 cv
394.27 136.703 li
398.971 136.723 li
398.98 134.36 li
398.99 132.253 li
390.34 132.216 li
390.133 133.007 385.5 134.153 383.322 134.652 cv
cp
.145098 .12549 .141176 rgb
f
418.406 134.596 mo
416.229 134.099 411.598 132.951 411.391 132.163 cv
402.741 132.198 li
402.75 134.304 li
402.76 136.667 li
407.461 136.649 li
407.451 134.286 li
407.451 134.286 408.4 136.566 412.555 136.625 cv
413.86 136.647 414.226 136.659 415.53 136.647 cv
416.563 136.638 418.133 136.291 418.732 135.713 cv
418.99 135.465 419.083 134.75 418.406 134.596 cv
cp
f
385.277 109.883 mo
385.612 112.736 385.371 114.464 388.129 115.306 cv
388.203 132.85 li
399.904 132.798 li
399.831 115.378 li
402.125 115.371 li
402.198 132.79 li
412.935 132.747 li
412.861 115.203 li
415.385 114.337 415.021 112.647 415.01 109.756 cv
385.277 109.883 li
cp
f
399.523 74.6304 mo
399.232 81.1724 403.138 82.5278 405.746 82.1528 cv
409.998 81.5474 410.601 76.5132 410.601 76.5132 cv
404.35 78.8862 399.523 74.6304 399.523 74.6304 cv
cp
.698039 .286275 .282353 rgb
f
410.357 63.9536 mo
408.66 64.0347 407.35 65.4741 407.429 67.1733 cv
407.508 68.8677 408.951 70.1812 410.646 70.0991 cv
412.345 70.022 413.656 68.5796 413.578 66.8833 cv
413.498 65.187 412.057 63.8745 410.357 63.9536 cv
cp
1 1 1 rgb
f
411.782 66.0435 mo
411.102 66.0767 410.578 66.6519 410.611 67.3306 cv
410.643 68.0093 411.218 68.5347 411.898 68.5015 cv
412.577 68.4702 413.101 67.895 413.068 67.2144 cv
413.038 66.5356 412.459 66.0103 411.782 66.0435 cv
cp
.133333 .137255 .133333 rgb
f
404.204 63.5435 mo
402.506 63.6226 401.195 65.0649 401.275 66.7612 cv
401.355 68.4604 402.795 69.77 404.492 69.6909 cv
406.19 69.6108 407.502 68.1704 407.422 66.4712 cv
407.343 64.7749 405.902 63.4634 404.204 63.5435 cv
cp
1 1 1 rgb
f
405.847 65.5513 mo
405.169 65.5815 404.644 66.1587 404.677 66.8374 cv
404.708 67.5161 405.284 68.0425 405.964 68.0093 cv
406.642 67.978 407.167 67.4009 407.136 66.7222 cv
407.103 66.0435 406.526 65.52 405.847 65.5513 cv
cp
.133333 .137255 .133333 rgb
f
408.872 62.7593 mo
408.872 62.7593 412.483 62.981 414.054 64.0073 cv
414.054 64.0073 412.321 59.7993 408.872 62.7593 cv
cp
.0352941 .0117647 .027451 rgb
f
400.907 64.0718 mo
400.907 64.0718 404.121 62.4116 405.994 62.4888 cv
405.994 62.4888 402.352 59.7632 400.907 64.0718 cv
cp
f
309.207 260.461 mo
308.535 260.615 308.626 261.327 308.883 261.575 cv
309.481 262.152 311.049 262.501 312.083 262.509 cv
313.386 262.521 313.748 262.507 315.054 262.488 cv
319.202 262.426 320.149 260.148 320.149 260.148 cv
320.142 262.509 li
324.837 262.528 li
324.846 260.169 li
324.855 258.065 li
316.214 258.028 li
316.01 258.819 311.383 259.963 309.207 260.461 cv
cp
.145098 .12549 .141176 rgb
f
344.246 260.406 mo
342.072 259.907 337.447 258.762 337.239 257.975 cv
328.6 258.011 li
328.61 260.113 li
328.621 262.473 li
333.314 262.453 li
333.305 260.096 li
333.305 260.096 334.252 262.372 338.402 262.432 cv
339.707 262.451 340.07 262.465 341.374 262.453 cv
342.406 262.445 343.973 262.097 344.572 261.52 cv
344.83 261.272 344.922 260.556 344.246 260.406 cv
cp
f
311.16 235.724 mo
311.494 238.573 311.254 240.299 314.009 241.138 cv
314.081 258.659 li
325.769 258.609 li
325.695 241.213 li
327.985 241.202 li
328.059 258.6 li
338.782 258.557 li
338.708 241.038 li
341.228 240.172 340.866 238.484 340.854 235.597 cv
311.16 235.724 li
cp
f
356.013 195.939 mo
356.013 195.939 356.066 195.559 356.304 195.333 cv
356.541 195.11 358.019 194.608 357.65 193.394 cv
357.279 192.18 354.614 190.82 353.797 192.246 cv
352.979 193.672 353.033 195.107 353.033 195.107 cv
353.033 195.107 353.836 196.259 356.013 195.939 cv
cp
.94902 .764706 .533333 rgb
f
353.876 192.457 mo
353.876 192.457 354.244 190.187 355.42 191.52 cv
355.42 191.52 356.633 190.729 356.687 192.009 cv
356.687 192.009 357.859 191.717 357.584 192.76 cv
357.584 192.76 358.893 192.897 357.479 194.014 cv
356.475 194.807 356.475 193.552 356.831 193.182 cv
356.831 193.182 355.762 193.968 356.252 192.758 cv
356.252 192.758 355.09 193.765 355.286 192.219 cv
355.286 192.219 354.786 193.75 354.244 192.009 cv
353.876 192.457 li
cp
.964706 .882353 .705882 rgb
f
354.179 194.608 mo
354.179 194.608 354.786 194.596 354.813 192.973 cv
354.813 192.973 356.528 192.801 356.288 192.344 cv
356.012 191.822 354.496 191.724 354.122 191.962 cv
353.816 192.159 353.626 192.529 353.61 193.077 cv
353.574 194.616 353.902 194.475 354.179 194.608 cv
cp
.94902 .764706 .533333 rgb
f
336.734 217.312 mo
340.093 223.791 li
340.093 223.791 348.515 216.008 356.438 195.824 cv
352.877 193.537 li
352.877 193.537 347.353 203.518 336.734 217.312 cv
cp
1 1 1 rgb
f
293.698 196.67 mo
293.698 196.67 293.643 196.263 293.39 196.025 cv
293.138 195.785 291.563 195.252 291.957 193.959 cv
292.352 192.666 295.188 191.221 296.06 192.737 cv
296.932 194.253 296.593 195.252 296.593 195.252 cv
296.593 195.252 296.019 197.01 293.698 196.67 cv
cp
.94902 .764706 .533333 rgb
f
295.976 192.961 mo
295.976 192.961 295.583 190.544 294.332 191.964 cv
294.332 191.964 293.038 191.12 292.983 192.484 cv
292.983 192.484 291.733 192.174 292.027 193.285 cv
292.027 193.285 290.634 193.43 292.14 194.619 cv
293.207 195.464 293.207 194.128 292.827 193.734 cv
292.827 193.734 293.967 194.572 293.446 193.283 cv
293.446 193.283 294.684 194.353 294.473 192.708 cv
294.473 192.708 295.007 194.338 295.583 192.484 cv
295.976 192.961 li
cp
.964706 .882353 .705882 rgb
f
295.653 195.252 mo
295.653 195.252 295.007 195.238 294.978 193.509 cv
294.978 193.509 293.15 193.328 293.407 192.844 cv
293.699 192.287 295.315 192.18 295.713 192.435 cv
296.038 192.642 296.243 193.039 296.257 193.623 cv
296.297 195.261 295.947 195.111 295.653 195.252 cv
cp
.94902 .764706 .533333 rgb
f
296.935 193.872 mo
293.199 196.552 li
299.808 211.196 311.606 222.905 311.606 222.905 cv
313.004 212.497 li
301.895 204.354 296.935 193.872 296.935 193.872 cv
cp
1 1 1 rgb
f
339.748 182.466 mo
333.029 174.945 316.451 176.549 314.11 189.227 cv
311.769 201.905 311.606 212.102 311.606 212.102 cv
340.753 214.042 li
340.565 201.948 li
346.704 199.408 li
346.704 199.408 346.472 189.985 339.748 182.466 cv
cp
.94902 .764706 .533333 rgb
f
319.282 178.345 mo
318.78 178.633 318.31 178.932 317.859 179.242 cv
317.705 179.326 317.548 179.407 317.396 179.504 cv
316.681 177.646 315.213 176.104 315.213 176.104 cv
314.637 177.812 315.186 179.31 315.915 180.357 cv
310.174 178.966 310.009 180.092 314.446 182.218 cv
314.15 182.592 313.883 182.988 313.628 183.383 cv
307.604 191.985 310.763 204.566 310.763 204.566 cv
315.322 204.351 li
315.231 201.917 315.923 197.975 315.923 197.975 cv
314.293 194.916 315.55 193.503 316.168 192.905 cv
317.362 191.755 318.684 192.671 318.684 192.671 cv
318.684 192.671 320.065 193.338 319.005 198.128 cv
321.085 198.12 li
323.397 185.988 li
341.143 186.139 343.138 182.284 343.138 182.284 cv
340.955 178.664 331.363 171.411 319.282 178.345 cv
cp
.0352941 .0117647 .027451 rgb
f
310.931 211.473 mo
311.035 236.111 li
341.104 235.986 li
341.007 212.588 li
310.931 211.473 li
cp
1 1 1 rgb
f
330.101 212.633 mo
323.826 212.66 li
325.45 218.741 li
323.893 225.602 li
327.114 231.357 li
330.676 225.571 li
328.445 218.542 li
330.101 212.633 li
cp
.658824 .184314 .219608 rgb
f
325.947 200.041 mo
326.03 206.653 330.044 207.792 332.652 207.268 cv
336.902 206.409 337.218 201.3 337.218 201.3 cv
331.055 204.054 325.947 200.041 325.947 200.041 cv
cp
.698039 .286275 .282353 rgb
f
336.406 189.49 mo
334.694 189.572 333.368 191.026 333.449 192.741 cv
333.527 194.454 334.986 195.776 336.698 195.695 cv
338.413 195.616 339.737 194.161 339.656 192.447 cv
339.576 190.735 338.122 189.41 336.406 189.49 cv
cp
1 1 1 rgb
f
335.918 191.352 mo
335.229 191.385 334.701 191.967 334.735 192.653 cv
334.766 193.338 335.345 193.868 336.032 193.833 cv
336.719 193.8 337.246 193.221 337.215 192.535 cv
337.185 191.85 336.6 191.32 335.918 191.352 cv
cp
.133333 .137255 .133333 rgb
f
330.194 189.08 mo
328.48 189.157 327.156 190.613 327.236 192.328 cv
327.318 194.041 328.771 195.364 330.486 195.281 cv
332.198 195.203 333.524 193.748 333.443 192.032 cv
333.363 190.321 331.908 188.997 330.194 189.08 cv
cp
1 1 1 rgb
f
330.281 191.103 mo
329.596 191.133 329.066 191.717 329.101 192.401 cv
329.131 193.087 329.714 193.616 330.398 193.584 cv
331.082 193.551 331.612 192.971 331.582 192.285 cv
331.55 191.598 330.968 191.068 330.281 191.103 cv
cp
.133333 .137255 .133333 rgb
f
334.906 188.285 mo
334.906 188.285 338.553 188.51 340.137 189.542 cv
340.137 189.542 338.388 185.295 334.906 188.285 cv
cp
.0352941 .0117647 .027451 rgb
f
326.865 189.611 mo
326.865 189.611 330.111 187.934 332.002 188.013 cv
332.002 188.013 328.326 185.26 326.865 189.611 cv
cp
f
81.7603 105.316 mo
82.2319 104.979 83.0942 104.137 79.6626 104.102 cv
70.3423 104.003 76.9429 109.197 77.7437 109.375 cv
80.1743 109.913 79.9204 106.637 81.7603 105.316 cv
cp
.94902 .764706 .533333 rgb
f
63.7056 86.0684 mo
58.644 94.4063 li
58.644 94.4063 61.2612 100.682 75.5103 108.843 cv
78.5044 103.437 li
78.5044 103.437 70.0942 100.24 63.7056 86.0684 cv
cp
1 1 1 rgb
f
20.7163 109.213 mo
20.7163 109.213 17.8413 111.828 18.8716 108.588 cv
18.8716 108.588 16.0591 109.629 17.8354 107.57 cv
17.8354 107.57 14.7759 108.531 17.0669 105.982 cv
17.0669 105.982 14.2163 106.345 16.6479 104.247 cv
19.0835 102.148 23.2954 100.201 23.1284 106.575 cv
22.9966 111.581 20.8579 110.855 20.7163 109.213 cv
cp
.94902 .764706 .533333 rgb
f
23.6245 105.961 mo
18.854 102.032 li
29.4673 89.5039 36.1147 88.0723 36.1147 88.0723 cv
43.3931 94.5605 li
28.2964 98.2686 23.6245 105.961 23.6245 105.961 cv
cp
1 1 1 rgb
f
63.4497 55.3936 mo
56.7798 47.9316 40.3237 49.5215 38.0015 62.1045 cv
35.6753 74.6895 35.5151 84.8115 35.5151 84.8115 cv
64.4468 86.7383 li
64.2593 74.7334 li
70.355 72.2109 li
70.355 72.2109 70.1226 62.8594 63.4497 55.3936 cv
cp
.94902 .764706 .533333 rgb
f
43.1343 51.3037 mo
42.6362 51.5879 42.1685 51.8867 41.7231 52.1934 cv
41.5679 52.2764 41.4116 52.3555 41.2632 52.4531 cv
40.5522 50.6074 39.0942 49.0791 39.0942 49.0791 cv
38.5229 50.7754 39.0688 52.2598 39.7935 53.3018 cv
34.0942 51.9219 33.9292 53.0371 38.3335 55.1504 cv
38.0405 55.5225 37.7749 55.9121 37.522 56.3057 cv
31.5415 64.8447 34.6772 77.333 34.6772 77.333 cv
39.2036 77.1191 li
39.1128 74.7031 39.8013 70.791 39.8013 70.791 cv
38.1831 67.752 39.4302 66.3496 40.0435 65.7568 cv
41.228 64.6152 42.5396 65.5254 42.5396 65.5254 cv
42.5396 65.5254 43.9106 66.1855 42.8599 70.9414 cv
44.9243 70.9326 li
47.2183 58.8906 li
64.8345 59.04 66.8169 55.2148 66.8169 55.2148 cv
64.6489 51.6211 55.1255 44.4219 43.1343 51.3037 cv
cp
.0352941 .0117647 .027451 rgb
f
34.8452 84.1865 mo
34.9468 108.646 li
64.7954 108.521 li
64.6997 85.2959 li
34.8452 84.1865 li
cp
1 1 1 rgb
f
53.8726 85.3398 mo
47.644 85.3682 li
49.2563 91.4043 li
47.7114 101.35 li
50.9087 107.063 li
54.4448 101.322 li
52.231 91.2061 li
53.8726 85.3398 li
cp
.658824 .184314 .219608 rgb
f
33.0405 133.217 mo
32.3667 133.37 32.4556 134.086 32.7153 134.336 cv
33.3149 134.914 34.8882 135.262 35.9253 135.271 cv
37.2319 135.283 37.5972 135.271 38.9058 135.252 cv
43.0698 135.188 44.02 132.903 44.02 132.903 cv
44.0103 135.271 li
48.7222 135.293 li
48.731 132.924 li
48.7407 130.813 li
40.0718 130.777 li
39.8647 131.568 35.2241 132.717 33.0405 133.217 cv
cp
.145098 .12549 .141176 rgb
f
68.1987 133.16 mo
66.0171 132.663 61.3745 131.514 61.1675 130.721 cv
52.4995 130.758 li
52.5093 132.867 li
52.519 135.236 li
57.229 135.217 li
57.2202 132.849 li
57.2202 132.849 58.1714 135.134 62.3345 135.193 cv
63.6431 135.215 64.0093 135.229 65.3159 135.216 cv
66.3521 135.208 67.9243 134.859 68.5239 134.281 cv
68.7837 134.031 68.8765 133.313 68.1987 133.16 cv
cp
f
34.9995 108.395 mo
35.3345 111.254 35.0942 112.984 37.8579 113.829 cv
37.9312 131.41 li
49.6577 131.359 li
49.5845 113.902 li
51.8823 113.893 li
51.9556 131.351 li
62.7153 131.306 li
62.6421 113.727 li
65.1694 112.859 64.8062 111.166 64.7944 108.27 cv
34.9995 108.395 li
cp
f
49.2759 73.0664 mo
48.9839 79.625 52.8979 80.9805 55.5112 80.6064 cv
59.772 79.998 60.3755 74.9531 60.3755 74.9531 cv
54.1118 77.333 49.2759 73.0664 49.2759 73.0664 cv
cp
.698039 .286275 .282353 rgb
f
60.0708 62.4326 mo
58.4067 62.5117 57.1196 63.9258 57.1968 65.5898 cv
57.2749 67.2539 58.6909 68.541 60.354 68.4609 cv
62.02 68.3848 63.3062 66.9707 63.229 65.3086 cv
63.1489 63.6426 61.7368 62.3555 60.0708 62.4326 cv
cp
1 1 1 rgb
f
59.728 64.1758 mo
59.0464 64.207 58.522 64.7852 58.5542 65.4648 cv
58.5854 66.1445 59.1636 66.6719 59.8452 66.6387 cv
60.5259 66.6074 61.0503 66.0293 61.0171 65.3477 cv
60.9868 64.6699 60.4077 64.1426 59.728 64.1758 cv
cp
.133333 .137255 .133333 rgb
f
53.9663 61.958 mo
52.2642 62.0371 50.9507 63.4805 51.0308 65.1816 cv
51.1099 66.8828 52.5532 68.1973 54.2563 68.1182 cv
55.9575 68.0371 57.272 66.5938 57.1899 64.8926 cv
57.1118 63.1914 55.6685 61.877 53.9663 61.958 cv
cp
1 1 1 rgb
f
54.1626 63.9512 mo
53.4829 63.9824 52.9565 64.5605 52.9897 65.2402 cv
53.022 65.9199 53.5981 66.4473 54.2788 66.4141 cv
54.9585 66.3828 55.4849 65.8047 55.4536 65.125 cv
55.4214 64.4453 54.8452 63.9199 54.1626 63.9512 cv
cp
.133333 .137255 .133333 rgb
f
58.644 61.1719 mo
58.644 61.1719 62.2632 61.3936 63.8364 62.4219 cv
63.8364 62.4219 62.0991 58.2041 58.644 61.1719 cv
cp
.0352941 .0117647 .027451 rgb
f
50.6616 62.4863 mo
50.6616 62.4863 53.8833 60.8242 55.7603 60.9004 cv
55.7603 60.9004 52.1099 58.168 50.6616 62.4863 cv
cp
f
77.2046 110.613 mo
76.7905 109.533 77.4106 108.293 78.5874 107.842 cv
80.979 106.928 li
82.1567 106.477 83.4458 106.987 83.8589 108.064 cv
77.2046 110.613 li
cp
71.2808 112.604 mo
76.2437 125.57 li
95.3833 118.244 li
90.4214 105.279 li
84.7241 107.459 li
84.1782 106.141 82.4985 104.922 81.1587 105.436 cv
77.522 106.826 li
76.1831 107.339 75.6812 109.394 76.1548 110.738 cv
71.2808 112.604 li
cp
.666667 .270588 .0745098 rgb
f
89.8608 106.28 mo
72.231 113.029 li
83.2847 116.631 li
89.8608 106.28 li
cp
.74902 .411765 .239216 rgb
f
81.2476 116.656 mo
81.5073 117.338 82.2739 117.68 82.9546 117.418 cv
84.0513 116.998 li
84.7349 116.737 85.0757 115.973 84.814 115.291 cv
84.814 115.291 li
84.5542 114.607 83.7876 114.266 83.1079 114.529 cv
82.0083 114.947 li
81.3286 115.209 80.9849 115.974 81.2476 116.656 cv
81.2476 116.656 li
cp
1 .8 .2 rgb
f
81.8423 116.428 mo
82.0151 116.883 82.5249 117.11 82.98 116.934 cv
83.7114 116.654 li
84.1675 116.482 84.394 115.971 84.2202 115.518 cv
84.2202 115.518 li
84.0454 115.063 83.5356 114.836 83.0806 115.01 cv
82.3491 115.289 li
81.895 115.463 81.6685 115.974 81.8423 116.428 cv
81.8423 116.428 li
cp
.74902 .411765 .239216 rgb
f
79.1519 110.467 mo
82.0601 110.918 83.9927 108.145 82.9302 106.734 cv
81.2681 104.529 81.3491 106.804 81.3491 106.804 cv
79.478 104.496 79.8413 107.186 79.8413 107.186 cv
77.4897 105.717 78.4751 108.092 78.4751 108.092 cv
75.9419 107.337 76.8169 109.555 79.1519 110.467 cv
cp
.94902 .764706 .533333 rgb
f
273.375 232.995 mo
273.375 232.995 275.444 236.285 272.436 234.7 cv
272.436 234.7 272.965 237.652 271.252 235.541 cv
271.252 235.541 271.658 238.723 269.553 236.019 cv
269.553 236.019 269.408 238.888 267.771 236.125 cv
266.134 233.358 264.958 228.87 271.203 230.156 cv
276.107 231.166 275.018 233.145 273.375 232.995 cv
cp
f
247.073 220.223 mo
254.856 214.344 li
254.856 214.344 261.364 216.313 270.925 229.664 cv
265.849 233.189 li
265.849 233.189 261.818 225.146 247.073 220.223 cv
cp
1 1 1 rgb
f
212.738 236.252 mo
212.738 236.252 209.863 238.867 210.894 235.627 cv
210.894 235.627 208.081 236.668 209.857 234.609 cv
209.857 234.609 206.798 235.57 209.089 233.021 cv
209.089 233.021 206.238 233.384 208.67 231.286 cv
211.105 229.188 215.317 227.24 215.15 233.614 cv
215.019 238.62 212.88 237.895 212.738 236.252 cv
cp
.94902 .764706 .533333 rgb
f
215.646 233 mo
210.876 229.071 li
221.489 216.543 228.137 215.111 228.137 215.111 cv
235.415 221.6 li
220.318 225.308 215.646 233 215.646 233 cv
cp
1 1 1 rgb
f
255.472 182.433 mo
248.802 174.971 232.346 176.561 230.023 189.144 cv
227.697 201.729 227.537 211.851 227.537 211.851 cv
256.469 213.777 li
256.281 201.772 li
262.377 199.25 li
262.377 199.25 262.145 189.898 255.472 182.433 cv
cp
.94902 .764706 .533333 rgb
f
235.156 178.343 mo
234.658 178.627 234.19 178.926 233.745 179.232 cv
233.59 179.315 233.434 179.395 233.285 179.492 cv
232.574 177.646 231.116 176.118 231.116 176.118 cv
230.545 177.814 231.091 179.299 231.815 180.341 cv
226.116 178.961 225.951 180.076 230.355 182.189 cv
230.063 182.562 229.797 182.951 229.544 183.345 cv
223.563 191.884 226.699 204.372 226.699 204.372 cv
231.226 204.158 li
231.135 201.742 231.823 197.83 231.823 197.83 cv
230.205 194.791 231.452 193.389 232.065 192.796 cv
233.25 191.654 234.562 192.564 234.562 192.564 cv
234.562 192.564 235.933 193.225 234.882 197.98 cv
236.946 197.972 li
239.24 185.93 li
256.856 186.079 258.839 182.254 258.839 182.254 cv
256.671 178.66 247.147 171.461 235.156 178.343 cv
cp
.0352941 .0117647 .027451 rgb
f
226.867 211.226 mo
226.969 235.686 li
256.817 235.561 li
256.722 212.335 li
226.867 211.226 li
cp
1 1 1 rgb
f
245.895 212.379 mo
239.666 212.407 li
241.278 218.443 li
239.733 228.389 li
242.931 234.102 li
246.467 228.361 li
244.253 218.245 li
245.895 212.379 li
cp
.658824 .184314 .219608 rgb
f
225.063 260.256 mo
224.389 260.409 224.478 261.125 224.737 261.375 cv
225.337 261.953 226.91 262.301 227.947 262.311 cv
229.254 262.322 229.619 262.311 230.928 262.291 cv
235.092 262.227 236.042 259.942 236.042 259.942 cv
236.032 262.311 li
240.744 262.332 li
240.753 259.963 li
240.763 257.852 li
232.094 257.816 li
231.887 258.607 227.246 259.756 225.063 260.256 cv
cp
.145098 .12549 .141176 rgb
f
260.221 260.199 mo
258.039 259.702 253.396 258.553 253.189 257.76 cv
244.521 257.797 li
244.531 259.906 li
244.541 262.275 li
249.251 262.256 li
249.242 259.888 li
249.242 259.888 250.193 262.173 254.356 262.232 cv
255.665 262.254 256.031 262.268 257.338 262.255 cv
258.374 262.247 259.946 261.898 260.546 261.32 cv
260.806 261.07 260.898 260.353 260.221 260.199 cv
cp
f
227.021 235.434 mo
227.356 238.293 227.116 240.023 229.88 240.868 cv
229.953 258.449 li
241.68 258.398 li
241.606 240.941 li
243.904 240.932 li
243.978 258.39 li
254.737 258.345 li
254.664 240.766 li
257.191 239.898 256.828 238.205 256.816 235.309 cv
227.021 235.434 li
cp
f
241.298 200.105 mo
241.006 206.664 244.92 208.02 247.533 207.646 cv
251.794 207.037 252.397 201.992 252.397 201.992 cv
246.134 204.372 241.298 200.105 241.298 200.105 cv
cp
.698039 .286275 .282353 rgb
f
252.093 189.472 mo
250.429 189.551 249.142 190.965 249.219 192.629 cv
249.297 194.293 250.713 195.58 252.376 195.5 cv
254.042 195.424 255.328 194.01 255.251 192.348 cv
255.171 190.682 253.759 189.395 252.093 189.472 cv
cp
1 1 1 rgb
f
251.75 191.215 mo
251.068 191.246 250.544 191.824 250.576 192.504 cv
250.607 193.184 251.186 193.711 251.867 193.678 cv
252.548 193.646 253.072 193.068 253.039 192.387 cv
253.009 191.709 252.43 191.182 251.75 191.215 cv
cp
.133333 .137255 .133333 rgb
f
245.988 188.997 mo
244.286 189.076 242.973 190.52 243.053 192.221 cv
243.132 193.922 244.575 195.236 246.278 195.157 cv
247.979 195.076 249.294 193.633 249.212 191.932 cv
249.134 190.23 247.69 188.916 245.988 188.997 cv
cp
1 1 1 rgb
f
246.185 190.99 mo
245.505 191.021 244.979 191.6 245.012 192.279 cv
245.044 192.959 245.62 193.486 246.301 193.453 cv
246.98 193.422 247.507 192.844 247.476 192.164 cv
247.443 191.484 246.867 190.959 246.185 190.99 cv
cp
.133333 .137255 .133333 rgb
f
250.666 188.211 mo
250.666 188.211 254.285 188.433 255.858 189.461 cv
255.858 189.461 254.121 185.243 250.666 188.211 cv
cp
.0352941 .0117647 .027451 rgb
f
242.684 189.525 mo
242.684 189.525 245.905 187.863 247.782 187.939 cv
247.782 187.939 244.132 185.207 242.684 189.525 cv
cp
f
270.397 95.3271 mo
270.397 95.3271 274.139 94.2808 270.847 93.4331 cv
270.847 93.4331 273.223 91.603 270.535 92.0151 cv
270.535 92.0151 272.974 89.9316 269.598 90.52 cv
269.598 90.52 271.419 88.2979 268.349 89.2427 cv
265.277 90.1919 261.391 92.7256 266.881 95.9702 cv
271.191 98.5181 271.714 96.3203 270.397 95.3271 cv
cp
.94902 .764706 .533333 rgb
f
242.334 87.1123 mo
244.148 96.6963 li
244.148 96.6963 250.291 99.6104 266.344 96.1475 cv
264.953 90.1255 li
264.953 90.1255 256.563 93.375 242.334 87.1123 cv
cp
1 1 1 rgb
f
193.293 85.9473 mo
193.293 85.9473 189.488 85.1592 192.023 87.4243 cv
192.023 87.4243 189.073 87.9595 191.649 88.8271 cv
191.649 88.8271 188.527 89.5571 191.796 90.5854 cv
191.796 90.5854 189.158 91.7241 192.318 92.2925 cv
195.483 92.8594 200.1 92.3921 196.712 86.9902 cv
194.051 82.748 192.579 84.4614 193.293 85.9473 cv
cp
.94902 .764706 .533333 rgb
f
197.452 87.2666 mo
195.345 93.0762 li
210.857 98.4595 217.309 96.3081 217.309 96.3081 cv
220.27 87.0195 li
205.389 91.5103 197.452 87.2666 197.452 87.2666 cv
cp
1 1 1 rgb
f
244.533 55.6147 mo
237.863 48.1528 221.408 49.7427 219.086 62.3257 cv
216.76 74.9106 216.6 85.0327 216.6 85.0327 cv
245.531 86.9595 li
245.344 74.9546 li
251.439 72.4321 li
251.439 72.4321 251.207 63.0806 244.533 55.6147 cv
cp
.94902 .764706 .533333 rgb
f
224.219 51.5249 mo
223.721 51.8091 223.252 52.1079 222.807 52.4146 cv
222.652 52.4976 222.496 52.5767 222.348 52.6743 cv
221.637 50.8286 220.178 49.3003 220.178 49.3003 cv
219.607 50.9966 220.152 52.481 220.877 53.5229 cv
215.178 52.1431 215.014 53.2583 219.418 55.3716 cv
219.125 55.7437 218.859 56.1333 218.605 56.5269 cv
212.625 65.0659 215.762 77.5542 215.762 77.5542 cv
220.287 77.3403 li
220.197 74.9243 220.885 71.0122 220.885 71.0122 cv
219.268 67.9731 220.514 66.5708 221.127 65.978 cv
222.313 64.8364 223.623 65.7466 223.623 65.7466 cv
223.623 65.7466 224.994 66.4067 223.943 71.1626 cv
226.008 71.1538 li
228.303 59.1118 li
245.918 59.2612 247.9 55.436 247.9 55.436 cv
245.732 51.8423 236.209 44.6431 224.219 51.5249 cv
cp
.0352941 .0117647 .027451 rgb
f
215.93 84.4077 mo
216.031 108.868 li
245.879 108.743 li
245.783 85.5171 li
215.93 84.4077 li
cp
1 1 1 rgb
f
234.957 85.561 mo
228.729 85.5894 li
230.34 91.6255 li
228.795 101.571 li
231.992 107.284 li
235.529 101.543 li
233.314 91.4272 li
234.957 85.561 li
cp
.658824 .184314 .219608 rgb
f
214.125 133.438 mo
213.451 133.591 213.539 134.307 213.799 134.557 cv
214.398 135.135 215.973 135.483 217.01 135.493 cv
218.316 135.504 218.682 135.493 219.99 135.473 cv
224.154 135.409 225.104 133.125 225.104 133.125 cv
225.094 135.493 li
229.807 135.514 li
229.814 133.145 li
229.824 131.034 li
221.156 130.999 li
220.949 131.79 216.309 132.938 214.125 133.438 cv
cp
.145098 .12549 .141176 rgb
f
249.283 133.381 mo
247.102 132.884 242.459 131.735 242.252 130.942 cv
233.584 130.979 li
233.594 133.088 li
233.604 135.458 li
238.313 135.438 li
238.305 133.07 li
238.305 133.07 239.256 135.355 243.418 135.415 cv
244.727 135.436 245.094 135.45 246.4 135.437 cv
247.436 135.429 249.008 135.081 249.607 134.502 cv
249.867 134.252 249.961 133.535 249.283 133.381 cv
cp
f
216.084 108.616 mo
216.418 111.475 216.178 113.206 218.941 114.05 cv
219.016 131.631 li
230.742 131.581 li
230.668 114.124 li
232.967 114.114 li
233.039 131.572 li
243.799 131.527 li
243.727 113.948 li
246.254 113.081 245.891 111.387 245.879 108.491 cv
216.084 108.616 li
cp
f
230.359 73.2876 mo
230.068 79.8462 233.982 81.2017 236.596 80.8276 cv
240.855 80.2192 241.459 75.1743 241.459 75.1743 cv
235.195 77.5542 230.359 73.2876 230.359 73.2876 cv
cp
.698039 .286275 .282353 rgb
f
241.154 62.6538 mo
239.49 62.7329 238.203 64.147 238.281 65.811 cv
238.359 67.4751 239.775 68.7622 241.438 68.6821 cv
243.104 68.606 244.391 67.1919 244.313 65.5298 cv
244.232 63.8638 242.82 62.5767 241.154 62.6538 cv
cp
1 1 1 rgb
f
240.813 64.397 mo
240.131 64.4282 239.605 65.0063 239.639 65.686 cv
239.67 66.3657 240.248 66.8931 240.93 66.8599 cv
241.609 66.8286 242.135 66.2505 242.102 65.5688 cv
242.07 64.8911 241.492 64.3638 240.813 64.397 cv
cp
.133333 .137255 .133333 rgb
f
235.051 62.1792 mo
233.348 62.2583 232.035 63.7017 232.115 65.4028 cv
232.193 67.104 233.637 68.4185 235.34 68.3394 cv
237.041 68.2583 238.355 66.8149 238.273 65.1138 cv
238.195 63.4126 236.752 62.0981 235.051 62.1792 cv
cp
1 1 1 rgb
f
235.246 64.1724 mo
234.566 64.2036 234.041 64.7817 234.074 65.4614 cv
234.105 66.1411 234.682 66.6685 235.363 66.6353 cv
236.043 66.604 236.568 66.0259 236.537 65.3462 cv
236.506 64.6665 235.93 64.1411 235.246 64.1724 cv
cp
.133333 .137255 .133333 rgb
f
239.729 61.3931 mo
239.729 61.3931 243.348 61.6147 244.92 62.6431 cv
244.92 62.6431 243.184 58.4253 239.729 61.3931 cv
cp
.0352941 .0117647 .027451 rgb
f
231.746 62.7075 mo
231.746 62.7075 234.967 61.0454 236.844 61.1216 cv
236.844 61.1216 233.193 58.3892 231.746 62.7075 cv
cp
f
297.626 82.1831 mo
297.626 82.1831 296.299 81.522 295.832 77.814 cv
295.73 77.0146 295.992 73.7856 296.055 72.9834 cv
296.055 72.9834 292.588 65.1943 294.534 73.2095 cv
294.534 73.2095 287.963 71.9443 291.982 80.3271 cv
292.896 82.7881 li
297.626 82.1831 li
cp
.94902 .764706 .533333 rgb
f
349.006 83.7095 mo
349.006 83.7095 350.334 83.0474 350.799 79.3394 cv
350.901 78.54 350.641 75.312 350.576 74.5088 cv
350.576 74.5088 354.044 66.7197 352.097 74.7358 cv
352.097 74.7358 358.669 73.4697 354.649 81.8525 cv
353.735 84.3135 li
349.006 83.7095 li
cp
f
313.835 91.4541 mo
310.854 99.6157 li
310.854 99.6157 299.373 94.2168 290.938 80.25 cv
296.238 77.1499 li
296.238 77.1499 299.609 85.4326 313.835 91.4541 cv
cp
1 1 1 rgb
f
292.418 84.9526 mo
292.418 85.4697 292.789 85.8882 293.244 85.8882 cv
293.244 85.8882 li
293.703 85.8882 294.073 85.4697 294.073 84.9526 cv
294.073 33.0039 li
294.073 32.4868 293.703 32.0693 293.244 32.0693 cv
293.244 32.0693 li
292.789 32.0693 292.418 32.4868 292.418 33.0039 cv
292.418 84.9526 li
cp
.631373 .839216 .839216 rgb
f
350.469 78.2959 mo
355.208 82.1992 li
344.663 94.6484 338.056 96.0737 338.056 96.0737 cv
330.822 89.6226 li
345.825 85.9385 350.469 78.2959 350.469 78.2959 cv
cp
1 1 1 rgb
f
310.303 56.2671 mo
316.93 48.8506 333.282 50.4302 335.59 62.9355 cv
337.901 75.4424 338.061 85.5005 338.061 85.5005 cv
309.311 87.4136 li
309.497 75.4854 li
303.44 72.978 li
303.44 72.978 303.672 63.686 310.303 56.2671 cv
cp
.94902 .764706 .533333 rgb
f
330.488 52.2021 mo
330.984 52.4858 331.449 52.7842 331.892 53.0864 cv
332.045 53.1689 332.2 53.249 332.349 53.3452 cv
333.056 51.5112 334.504 49.9917 334.504 49.9917 cv
335.073 51.6782 334.53 53.1528 333.812 54.1885 cv
339.475 52.8164 339.636 53.9238 335.262 56.0254 cv
335.551 56.395 335.815 56.7808 336.066 57.1724 cv
342.01 65.6592 338.895 78.0684 338.895 78.0684 cv
334.396 77.856 li
334.486 75.4541 333.802 71.5679 333.802 71.5679 cv
335.41 68.5488 334.172 67.1538 333.561 66.5659 cv
332.385 65.4307 331.081 66.3354 331.081 66.3354 cv
331.081 66.3354 329.718 66.9912 330.762 71.7163 cv
328.711 71.708 li
326.431 59.7427 li
308.926 59.8896 306.957 56.0894 306.957 56.0894 cv
309.11 52.5186 318.572 45.3643 330.488 52.2021 cv
cp
.0352941 .0117647 .027451 rgb
f
338.728 84.8765 mo
338.625 109.187 li
308.965 109.06 li
309.061 85.9805 li
338.728 84.8765 li
cp
1 1 1 rgb
f
319.818 86.0264 mo
326.009 86.0527 li
324.406 92.0513 li
325.94 101.934 li
322.763 107.61 li
319.251 101.906 li
321.451 91.853 li
319.818 86.0264 li
cp
.658824 .184314 .219608 rgb
f
340.521 133.6 mo
341.191 133.753 341.101 134.465 340.844 134.712 cv
340.246 135.289 338.685 135.633 337.653 135.644 cv
336.354 135.653 335.993 135.643 334.69 135.622 cv
330.555 135.561 329.61 133.289 329.61 133.289 cv
329.62 135.644 li
324.937 135.664 li
324.929 133.31 li
324.919 131.211 li
333.532 131.176 li
333.737 131.962 338.351 133.104 340.521 133.6 cv
cp
.145098 .12549 .141176 rgb
f
305.583 133.545 mo
307.752 133.05 312.362 131.907 312.57 131.12 cv
321.184 131.157 li
321.174 133.253 li
321.164 135.608 li
316.482 135.588 li
316.493 133.234 li
316.493 133.234 315.547 135.505 311.41 135.566 cv
310.11 135.587 309.747 135.601 308.447 135.587 cv
307.418 135.579 305.855 135.233 305.26 134.658 cv
305.001 134.411 304.91 133.697 305.583 133.545 cv
cp
f
338.573 108.935 mo
338.24 111.777 338.48 113.497 335.733 114.335 cv
335.661 131.806 li
324.008 131.757 li
324.081 114.408 li
321.797 114.398 li
321.726 131.746 li
311.032 131.701 li
311.106 114.233 li
308.593 113.371 308.953 111.689 308.966 108.812 cv
338.573 108.935 li
cp
f
324.388 73.8286 mo
324.676 80.3452 320.788 81.6924 318.191 81.3218 cv
313.957 80.7158 313.356 75.7046 313.356 75.7046 cv
319.582 78.0684 324.388 73.8286 324.388 73.8286 cv
cp
.698039 .286275 .282353 rgb
f
313.598 63.1963 mo
315.287 63.2764 316.594 64.7104 316.515 66.4033 cv
316.437 68.0923 314.999 69.3984 313.309 69.3184 cv
311.619 69.2412 310.313 67.8037 310.392 66.1147 cv
310.471 64.4243 311.905 63.1172 313.598 63.1963 cv
cp
1 1 1 rgb
f
314.135 65.0332 mo
314.813 65.0654 315.335 65.6392 315.301 66.3164 cv
315.271 66.9922 314.697 67.5132 314.019 67.48 cv
313.344 67.4512 312.821 66.875 312.854 66.1992 cv
312.885 65.5249 313.46 65.001 314.135 65.0332 cv
cp
.133333 .137255 .133333 rgb
f
319.727 62.7905 mo
321.415 62.8696 322.723 64.3042 322.643 65.9937 cv
322.563 67.6855 321.131 68.9907 319.439 68.9106 cv
317.749 68.8306 316.441 67.397 316.521 65.7051 cv
316.599 64.0156 318.036 62.7104 319.727 62.7905 cv
cp
1 1 1 rgb
f
319.605 64.8076 mo
320.281 64.8408 320.804 65.4136 320.77 66.0898 cv
320.739 66.7661 320.165 67.2881 319.49 67.2559 cv
318.813 67.2256 318.29 66.6489 318.322 65.9736 cv
318.354 65.2988 318.928 64.7759 319.605 64.8076 cv
cp
.133333 .137255 .133333 rgb
f
315.078 62.0083 mo
315.078 62.0083 311.48 62.2285 309.918 63.249 cv
309.918 63.249 311.643 59.0586 315.078 62.0083 cv
cp
.0352941 .0117647 .027451 rgb
f
323.01 63.3154 mo
323.01 63.3154 319.81 61.6626 317.943 61.7388 cv
317.943 61.7388 321.571 59.0244 323.01 63.3154 cv
cp
f
293.428 73.7993 mo
293.457 74.3394 292.385 74.8394 291.029 74.9165 cv
289.673 74.9912 288.549 74.6157 288.52 74.0747 cv
288.49 73.5352 289.563 73.0352 290.919 72.959 cv
292.275 72.8828 293.398 73.2598 293.428 73.7993 cv
cp
.94902 .764706 .533333 rgb
f
293.301 75.6714 mo
293.33 76.2114 292.258 76.7114 290.9 76.7866 cv
289.547 76.8647 288.423 76.4868 288.393 75.9468 cv
288.363 75.4072 289.437 74.9082 290.793 74.8311 cv
292.146 74.7539 293.271 75.1309 293.301 75.6714 cv
cp
f
293.483 77.3604 mo
293.51 77.8462 292.546 78.2959 291.328 78.3647 cv
290.111 78.4321 289.102 78.0947 289.074 77.6099 cv
289.047 77.124 290.012 76.6753 291.229 76.6069 cv
292.447 76.5371 293.456 76.8765 293.483 77.3604 cv
cp
f
293.019 78.6943 mo
293.039 79.0469 292.342 79.3716 291.46 79.4209 cv
290.578 79.4717 289.848 79.2266 289.827 78.876 cv
289.807 78.522 290.506 78.1987 291.388 78.1484 cv
292.268 78.1006 293 78.3447 293.019 78.6943 cv
cp
f
354.214 86.479 mo
354.214 86.9951 353.843 87.4136 353.385 87.4136 cv
353.385 87.4136 li
352.929 87.4136 352.559 86.9951 352.559 86.479 cv
352.559 34.5293 li
352.559 34.0127 352.929 33.5947 353.385 33.5947 cv
353.385 33.5947 li
353.843 33.5947 354.214 34.0127 354.214 34.5293 cv
354.214 86.479 li
cp
.631373 .839216 .839216 rgb
f
353.203 75.3252 mo
353.173 75.8647 354.246 76.3647 355.603 76.4419 cv
356.959 76.5171 358.083 76.1421 358.113 75.6006 cv
358.141 75.0605 357.068 74.5605 355.712 74.4844 cv
354.356 74.4087 353.232 74.7842 353.203 75.3252 cv
cp
.94902 .764706 .533333 rgb
f
353.331 77.1973 mo
353.301 77.7378 354.374 78.2378 355.729 78.312 cv
357.084 78.3901 358.209 78.0122 358.239 77.4736 cv
358.27 76.9326 357.195 76.4336 355.839 76.3564 cv
354.485 76.2783 353.361 76.6563 353.331 77.1973 cv
cp
f
353.148 78.8857 mo
353.123 79.3716 354.086 79.8223 355.303 79.8906 cv
356.521 79.9565 357.531 79.6201 357.558 79.1353 cv
357.584 78.6494 356.62 78.2007 355.402 78.1313 cv
354.186 78.0635 353.175 78.4009 353.148 78.8857 cv
cp
f
353.611 80.2202 mo
353.594 80.5737 354.291 80.897 355.172 80.9463 cv
356.054 80.9971 356.785 80.752 356.804 80.4014 cv
356.825 80.0488 356.126 79.7251 355.244 79.6743 cv
354.362 79.626 353.632 79.8696 353.611 80.2202 cv
cp
f
358.369 45.0303 mo
286.657 45.0303 li
286.657 16.2314 li
358.369 16.2314 li
358.369 45.0303 li
cp
1 1 1 rgb
f
251.885 328.999 mo
251.885 328.999 253.211 328.337 253.678 324.63 cv
253.779 323.83 253.518 320.601 253.455 319.799 cv
253.455 319.799 256.922 312.01 254.977 320.024 cv
254.977 320.024 261.547 318.76 257.527 327.143 cv
256.613 329.604 li
251.885 328.999 li
cp
.94902 .764706 .533333 rgb
f
200.504 330.524 mo
200.504 330.524 199.176 329.862 198.711 326.155 cv
198.609 325.355 198.869 322.128 198.934 321.324 cv
198.934 321.324 195.467 313.535 197.414 321.552 cv
197.414 321.552 190.842 320.285 194.861 328.668 cv
195.775 331.129 li
200.504 330.524 li
cp
f
235.676 338.27 mo
238.656 346.431 li
238.656 346.431 250.137 341.032 258.572 327.065 cv
253.271 323.966 li
253.271 323.966 249.9 332.248 235.676 338.27 cv
cp
1 1 1 rgb
f
257.092 332.179 mo
257.092 332.609 256.721 332.959 256.266 332.959 cv
256.266 332.959 li
255.807 332.959 255.438 332.609 255.438 332.179 cv
255.438 288.897 li
255.438 288.467 255.807 288.119 256.266 288.119 cv
256.266 288.119 li
256.721 288.119 257.092 288.467 257.092 288.897 cv
257.092 332.179 li
cp
.631373 .839216 .839216 rgb
f
199.041 325.111 mo
194.303 329.015 li
204.848 341.464 211.455 342.89 211.455 342.89 cv
218.688 336.438 li
203.686 332.754 199.041 325.111 199.041 325.111 cv
cp
1 1 1 rgb
f
239.207 303.083 mo
232.58 295.666 216.229 297.245 213.92 309.751 cv
211.609 322.258 211.449 332.315 211.449 332.315 cv
240.199 334.229 li
240.014 322.301 li
246.07 319.794 li
246.07 319.794 245.838 310.501 239.207 303.083 cv
cp
.94902 .764706 .533333 rgb
f
219.021 299.018 mo
218.525 299.302 218.061 299.6 217.619 299.901 cv
217.465 299.984 217.311 300.064 217.162 300.161 cv
216.455 298.327 215.006 296.808 215.006 296.808 cv
214.438 298.493 214.98 299.968 215.699 301.004 cv
210.035 299.632 209.875 300.739 214.248 302.841 cv
213.959 303.21 213.695 303.597 213.443 303.987 cv
207.5 312.475 210.615 324.884 210.615 324.884 cv
215.113 324.671 li
215.023 322.27 215.709 318.384 215.709 318.384 cv
214.1 315.364 215.338 313.97 215.949 313.382 cv
217.125 312.246 218.43 313.151 218.43 313.151 cv
218.43 313.151 219.793 313.807 218.748 318.532 cv
220.799 318.523 li
223.08 306.558 li
240.584 306.705 242.553 302.905 242.553 302.905 cv
240.4 299.334 230.938 292.18 219.021 299.018 cv
cp
.0352941 .0117647 .027451 rgb
f
210.783 331.692 mo
210.885 356.002 li
240.545 355.876 li
240.449 332.796 li
210.783 331.692 li
cp
1 1 1 rgb
f
229.691 332.842 mo
223.502 332.868 li
225.104 338.866 li
223.57 348.749 li
226.748 354.425 li
230.26 348.722 li
228.059 338.669 li
229.691 332.842 li
cp
.658824 .184314 .219608 rgb
f
208.99 380.415 mo
208.318 380.569 208.41 381.28 208.666 381.527 cv
209.264 382.104 210.826 382.448 211.857 382.459 cv
213.156 382.469 213.518 382.458 214.82 382.437 cv
218.955 382.376 219.9 380.104 219.9 380.104 cv
219.891 382.459 li
224.574 382.479 li
224.582 380.125 li
224.592 378.026 li
215.979 377.991 li
215.773 378.778 211.16 379.92 208.99 380.415 cv
cp
.145098 .12549 .141176 rgb
f
243.928 380.36 mo
241.758 379.866 237.148 378.723 236.939 377.936 cv
228.326 377.973 li
228.336 380.069 li
228.346 382.424 li
233.027 382.403 li
233.018 380.05 li
233.018 380.05 233.963 382.321 238.1 382.382 cv
239.4 382.403 239.764 382.416 241.063 382.403 cv
242.092 382.394 243.654 382.048 244.25 381.474 cv
244.51 381.226 244.6 380.513 243.928 380.36 cv
cp
f
210.938 355.751 mo
211.27 358.593 211.029 360.312 213.777 361.15 cv
213.85 378.622 li
225.502 378.573 li
225.43 361.224 li
227.713 361.214 li
227.785 378.562 li
238.479 378.517 li
238.404 361.049 li
240.918 360.187 240.557 358.505 240.545 355.627 cv
210.938 355.751 li
cp
f
225.123 320.644 mo
224.834 327.161 228.723 328.508 231.318 328.138 cv
235.553 327.531 236.154 322.521 236.154 322.521 cv
229.928 324.884 225.123 320.644 225.123 320.644 cv
cp
.698039 .286275 .282353 rgb
f
235.912 310.012 mo
234.223 310.092 232.916 311.526 232.996 313.219 cv
233.074 314.907 234.512 316.214 236.201 316.134 cv
237.891 316.057 239.197 314.619 239.119 312.931 cv
239.039 311.239 237.605 309.933 235.912 310.012 cv
cp
1 1 1 rgb
f
235.375 311.849 mo
234.697 311.881 234.176 312.454 234.209 313.132 cv
234.24 313.808 234.813 314.329 235.492 314.296 cv
236.166 314.267 236.689 313.69 236.656 313.015 cv
236.625 312.341 236.051 311.816 235.375 311.849 cv
cp
.133333 .137255 .133333 rgb
f
229.783 309.606 mo
228.096 309.685 226.787 311.12 226.867 312.81 cv
226.947 314.501 228.379 315.806 230.07 315.726 cv
231.762 315.646 233.068 314.212 232.99 312.521 cv
232.912 310.831 231.475 309.526 229.783 309.606 cv
cp
1 1 1 rgb
f
229.904 311.623 mo
229.229 311.656 228.707 312.229 228.74 312.905 cv
228.771 313.581 229.346 314.104 230.02 314.071 cv
230.697 314.041 231.221 313.464 231.188 312.789 cv
231.156 312.114 230.582 311.591 229.904 311.623 cv
cp
.133333 .137255 .133333 rgb
f
234.432 308.823 mo
234.432 308.823 238.029 309.044 239.592 310.064 cv
239.592 310.064 237.867 305.874 234.432 308.823 cv
cp
.0352941 .0117647 .027451 rgb
f
226.5 310.131 mo
226.5 310.131 229.701 308.478 231.566 308.554 cv
231.566 308.554 227.939 305.84 226.5 310.131 cv
cp
f
256.082 320.614 mo
256.053 321.155 257.125 321.655 258.48 321.731 cv
259.837 321.807 260.961 321.431 260.99 320.89 cv
261.02 320.351 259.947 319.851 258.591 319.774 cv
257.234 319.698 256.111 320.075 256.082 320.614 cv
cp
.94902 .764706 .533333 rgb
f
256.209 322.487 mo
256.18 323.026 257.252 323.526 258.609 323.603 cv
259.963 323.681 261.087 323.302 261.117 322.763 cv
261.146 322.223 260.073 321.724 258.717 321.646 cv
257.363 321.569 256.238 321.946 256.209 322.487 cv
cp
f
256.027 324.176 mo
256 324.661 256.964 325.111 258.182 325.181 cv
259.398 325.247 260.408 324.91 260.436 324.425 cv
260.463 323.939 259.498 323.491 258.28 323.423 cv
257.063 323.353 256.055 323.692 256.027 324.176 cv
cp
f
256.491 325.51 mo
256.471 325.862 257.168 326.187 258.05 326.236 cv
258.932 326.287 259.662 326.042 259.683 325.691 cv
259.703 325.337 259.004 325.015 258.122 324.964 cv
257.242 324.916 256.51 325.16 256.491 325.51 cv
cp
f
195.297 333.45 mo
195.297 333.881 195.668 334.229 196.125 334.229 cv
196.125 334.229 li
196.582 334.229 196.951 333.881 196.951 333.45 cv
196.951 290.169 li
196.951 289.738 196.582 289.39 196.125 289.39 cv
196.125 289.39 li
195.668 289.39 195.297 289.738 195.297 290.169 cv
195.297 333.45 li
cp
.631373 .839216 .839216 rgb
f
196.307 322.141 mo
196.338 322.681 195.264 323.181 193.908 323.257 cv
192.551 323.333 191.428 322.958 191.396 322.416 cv
191.369 321.876 192.441 321.376 193.799 321.3 cv
195.154 321.224 196.277 321.6 196.307 322.141 cv
cp
.94902 .764706 .533333 rgb
f
196.18 324.013 mo
196.209 324.554 195.137 325.054 193.781 325.128 cv
192.426 325.206 191.301 324.827 191.271 324.289 cv
191.24 323.748 192.314 323.249 193.672 323.172 cv
195.025 323.094 196.148 323.472 196.18 324.013 cv
cp
f
196.361 325.701 mo
196.387 326.187 195.424 326.638 194.207 326.706 cv
192.99 326.772 191.979 326.436 191.953 325.95 cv
191.926 325.465 192.891 325.017 194.107 324.946 cv
195.324 324.879 196.336 325.216 196.361 325.701 cv
cp
f
195.898 327.036 mo
195.916 327.39 195.219 327.712 194.338 327.762 cv
193.457 327.813 192.725 327.567 192.707 327.217 cv
192.686 326.864 193.385 326.54 194.266 326.489 cv
195.148 326.441 195.879 326.685 195.898 327.036 cv
cp
f
261.118 299.167 mo
236.941 291.628 215.376 290.97 191.271 299.167 cv
191.271 290.772 191.271 286.575 191.271 278.181 cv
216.181 271.996 236.25 271.742 261.118 278.181 cv
261.118 286.575 261.118 290.772 261.118 299.167 cv
cp
1 .278431 .278431 rgb
f
172.332 110.937 mo
172.332 110.937 175.839 112.575 173.902 109.798 cv
173.902 109.798 176.885 109.957 174.588 108.522 cv
174.588 108.522 177.782 108.532 174.85 106.785 cv
174.85 106.785 177.669 106.289 174.733 105.011 cv
171.797 103.731 167.217 103.125 169.257 109.14 cv
170.861 113.864 172.683 112.541 172.332 110.937 cv
cp
.94902 .764706 .533333 rgb
f
157.035 86.5137 mo
151.993 94.8203 li
151.993 94.8203 154.6 101.073 168.796 109.203 cv
171.779 103.818 li
171.779 103.818 163.399 100.634 157.035 86.5137 cv
cp
1 1 1 rgb
f
113.878 76.0142 mo
113.878 76.0142 112.021 72.3906 111.935 75.6851 cv
111.935 75.6851 109.537 73.0708 110.499 76.2427 cv
110.499 76.2427 107.886 74.4565 109.281 77.3457 cv
109.281 77.3457 106.773 77.4414 109.196 79.5313 cv
111.622 81.6245 116.446 84.4053 116.28 78.0542 cv
113.878 76.0142 li
cp
.94902 .764706 .533333 rgb
f
116.776 78.6665 mo
112.021 82.5811 li
122.596 95.062 129.218 96.4873 129.218 96.4873 cv
136.469 90.0239 li
121.428 86.3315 116.776 78.6665 116.776 78.6665 cv
cp
1 1 1 rgb
f
156.781 55.9546 mo
150.136 48.5195 133.742 50.1035 131.426 62.6392 cv
129.11 75.1777 128.95 85.2617 128.95 85.2617 cv
157.775 87.1816 li
157.586 75.2222 li
163.658 72.7095 li
163.658 72.7095 163.429 63.3926 156.781 55.9546 cv
cp
.94902 .764706 .533333 rgb
f
136.541 51.8804 mo
136.045 52.1621 135.579 52.4619 135.136 52.7651 cv
134.982 52.8486 134.824 52.9282 134.678 53.0249 cv
133.969 51.1865 132.515 49.6636 132.515 49.6636 cv
131.948 51.354 132.49 52.832 133.212 53.8716 cv
127.535 52.4956 127.371 53.6064 131.757 55.7124 cv
131.467 56.0825 131.201 56.4702 130.95 56.8638 cv
124.991 65.3701 128.115 77.812 128.115 77.812 cv
132.625 77.5977 li
132.534 75.1914 133.22 71.2939 133.22 71.2939 cv
131.608 68.2666 132.85 66.8682 133.462 66.2788 cv
134.641 65.1411 135.949 66.0474 135.949 66.0474 cv
135.949 66.0474 137.315 66.707 136.267 71.4443 cv
138.324 71.4351 li
140.609 59.437 li
158.159 59.5869 160.135 55.7764 160.135 55.7764 cv
157.976 52.1943 148.487 45.022 136.541 51.8804 cv
cp
.0352941 .0117647 .027451 rgb
f
128.283 84.6387 mo
128.385 109.008 li
158.121 108.884 li
158.026 85.7461 li
128.283 84.6387 li
cp
1 1 1 rgb
f
147.239 85.7891 mo
141.034 85.8169 li
142.64 91.8296 li
141.1 101.74 li
144.287 107.428 li
147.811 101.71 li
145.604 91.6328 li
147.239 85.7891 li
cp
.658824 .184314 .219608 rgb
f
126.484 133.485 mo
125.814 133.638 125.903 134.353 126.161 134.601 cv
126.758 135.177 128.326 135.524 129.358 135.531 cv
130.659 135.545 131.024 135.531 132.328 135.514 cv
136.476 135.449 137.423 133.173 137.423 133.173 cv
137.413 135.531 li
142.107 135.553 li
142.116 133.195 li
142.127 131.089 li
133.489 131.056 li
133.282 131.845 128.659 132.988 126.484 133.485 cv
cp
.145098 .12549 .141176 rgb
f
161.511 133.429 mo
159.338 132.936 154.712 131.788 154.507 131.001 cv
145.871 131.036 li
145.882 133.139 li
145.89 135.499 li
150.583 135.479 li
150.574 133.119 li
150.574 133.119 151.522 135.396 155.67 135.455 cv
156.973 135.477 157.338 135.49 158.639 135.477 cv
159.672 135.47 161.237 135.121 161.836 134.546 cv
162.093 134.297 162.187 133.581 161.511 133.429 cv
cp
f
128.437 108.757 mo
128.769 111.606 128.531 113.331 131.284 114.171 cv
131.357 131.686 li
143.04 131.637 li
142.967 114.246 li
145.256 114.234 li
145.33 131.626 li
156.049 131.581 li
155.975 114.069 li
158.494 113.205 158.132 111.518 158.119 108.633 cv
128.437 108.757 li
cp
f
144.04 73.5601 mo
144.024 78.1396 146.672 78.7764 148.871 78.9067 cv
153.151 79.1597 153.718 75.4409 153.718 75.4409 cv
147.477 77.812 144.04 73.5601 144.04 73.5601 cv
cp
.698039 .286275 .282353 rgb
f
153.415 62.9673 mo
151.756 63.0459 150.474 64.4556 150.551 66.1113 cv
150.629 67.7705 152.039 69.0552 153.695 68.9722 cv
155.356 68.8975 156.636 67.4883 156.561 65.832 cv
156.479 64.1729 155.073 62.8916 153.415 62.9673 cv
cp
1 1 1 rgb
f
153.073 64.7031 mo
152.394 64.7358 151.87 65.3105 151.903 65.9873 cv
151.936 66.665 152.512 67.1899 153.189 67.1587 cv
153.867 67.126 154.389 66.5513 154.357 65.8711 cv
154.326 65.1963 153.75 64.6704 153.073 64.7031 cv
cp
.133333 .137255 .133333 rgb
f
147.332 62.4946 mo
145.637 62.5737 144.328 64.0122 144.408 65.707 cv
144.488 67.3994 145.924 68.71 147.62 68.6309 cv
149.317 68.5498 150.626 67.1133 150.543 65.4175 cv
150.466 63.7231 149.028 62.4141 147.332 62.4946 cv
cp
1 1 1 rgb
f
147.526 64.48 mo
146.851 64.5103 146.326 65.0869 146.359 65.7642 cv
146.392 66.4419 146.966 66.9678 147.643 66.9331 cv
148.322 66.9028 148.845 66.3262 148.814 65.6489 cv
148.782 64.9717 148.209 64.4473 147.526 64.48 cv
cp
.133333 .137255 .133333 rgb
f
151.993 61.7104 mo
151.993 61.7104 155.599 61.9316 157.165 62.9556 cv
157.165 62.9556 155.434 58.7534 151.993 61.7104 cv
cp
.0352941 .0117647 .027451 rgb
f
144.04 63.019 mo
144.04 63.019 147.25 61.3652 149.12 61.4409 cv
149.12 61.4409 145.483 58.7192 144.04 63.019 cv
cp
f
113.878 77.812 mo
113.878 77.812 116.28 79.8101 116.28 78.0542 cv
116.28 73.0659 114.017 76.1758 113.878 77.812 cv
cp
.94902 .764706 .533333 rgb
f
278.98 357.625 mo
278.98 357.625 275.533 359.236 277.437 356.504 cv
277.437 356.504 274.505 356.659 276.763 355.251 cv
276.763 355.251 273.621 355.261 276.507 353.543 cv
276.507 353.543 273.733 353.054 276.62 351.797 cv
279.506 350.54 284.01 349.944 282.004 355.859 cv
280.427 360.504 278.636 359.201 278.98 357.625 cv
cp
f
294.021 333.61 mo
298.979 341.777 li
298.979 341.777 296.416 347.926 282.457 355.922 cv
279.524 350.626 li
279.524 350.626 287.764 347.493 294.021 333.61 cv
cp
1 1 1 rgb
f
336.454 323.287 mo
336.454 323.287 338.28 319.725 338.364 322.963 cv
338.364 322.963 340.723 320.394 339.776 323.511 cv
339.776 323.511 342.346 321.757 340.974 324.598 cv
340.974 324.598 343.439 324.69 341.057 326.746 cv
338.673 328.804 333.93 331.538 334.092 325.294 cv
336.454 323.287 li
cp
.94902 .764706 .533333 rgb
f
333.605 325.896 mo
338.28 329.745 li
327.882 342.016 321.372 343.417 321.372 343.417 cv
314.241 337.063 li
329.029 333.434 333.605 325.896 333.605 325.896 cv
cp
1 1 1 rgb
f
294.271 303.564 mo
300.805 296.255 316.924 297.811 319.2 310.137 cv
321.479 322.466 321.636 332.381 321.636 332.381 cv
293.294 334.269 li
293.479 322.51 li
287.51 320.04 li
287.51 320.04 287.735 310.879 294.271 303.564 cv
cp
.94902 .764706 .533333 rgb
f
314.172 299.559 mo
314.658 299.835 315.117 300.131 315.553 300.43 cv
315.704 300.511 315.859 300.589 316.003 300.684 cv
316.7 298.878 318.129 297.379 318.129 297.379 cv
318.687 299.041 318.153 300.493 317.444 301.516 cv
323.025 300.163 323.188 301.256 318.875 303.327 cv
319.161 303.69 319.421 304.072 319.668 304.458 cv
325.527 312.822 322.456 325.056 322.456 325.056 cv
318.021 324.844 li
318.111 322.479 317.436 318.646 317.436 318.646 cv
319.021 315.67 317.8 314.295 317.197 313.715 cv
316.039 312.597 314.753 313.488 314.753 313.488 cv
314.753 313.488 313.409 314.137 314.439 318.795 cv
312.418 318.785 li
310.172 306.987 li
292.916 307.136 290.974 303.39 290.974 303.39 cv
293.097 299.868 302.426 292.815 314.172 299.559 cv
cp
.0352941 .0117647 .027451 rgb
f
322.291 331.77 mo
322.191 355.729 li
292.953 355.606 li
293.047 332.856 li
322.291 331.77 li
cp
1 1 1 rgb
f
303.653 332.899 mo
309.754 332.928 li
308.174 338.838 li
309.689 348.582 li
306.554 354.174 li
303.091 348.553 li
305.261 338.646 li
303.653 332.899 li
cp
.658824 .184314 .219608 rgb
f
324.059 379.795 mo
324.718 379.944 324.63 380.647 324.378 380.892 cv
323.79 381.459 322.25 381.799 321.233 381.807 cv
319.954 381.821 319.596 381.807 318.313 381.789 cv
314.234 381.726 313.303 379.488 313.303 379.488 cv
313.314 381.807 li
308.698 381.827 li
308.689 379.509 li
308.679 377.438 li
317.172 377.406 li
317.375 378.183 321.921 379.306 324.059 379.795 cv
cp
.145098 .12549 .141176 rgb
f
289.62 379.738 mo
291.756 379.254 296.305 378.127 296.507 377.354 cv
304.998 377.386 li
304.987 379.452 li
304.979 381.773 li
300.363 381.756 li
300.372 379.436 li
300.372 379.436 299.442 381.672 295.362 381.73 cv
294.082 381.754 293.723 381.766 292.443 381.754 cv
291.429 381.748 289.889 381.404 289.301 380.836 cv
289.047 380.592 288.955 379.889 289.62 379.738 cv
cp
f
322.14 355.48 mo
321.813 358.284 322.046 359.977 319.34 360.805 cv
319.27 378.025 li
307.781 377.978 li
307.854 360.878 li
305.604 360.868 li
305.53 377.968 li
294.989 377.923 li
295.063 360.703 li
292.587 359.855 292.942 358.195 292.955 355.358 cv
322.14 355.48 li
cp
f
306.798 320.875 mo
306.813 325.377 304.21 326.004 302.048 326.132 cv
297.841 326.38 297.282 322.723 297.282 322.723 cv
303.419 325.056 306.798 320.875 306.798 320.875 cv
cp
.698039 .286275 .282353 rgb
f
297.581 310.461 mo
299.212 310.537 300.471 311.923 300.396 313.551 cv
300.32 315.185 298.934 316.445 297.306 316.364 cv
295.672 316.291 294.413 314.905 294.486 313.276 cv
294.566 311.644 295.95 310.385 297.581 310.461 cv
cp
1 1 1 rgb
f
297.917 312.166 mo
298.584 312.198 299.1 312.763 299.065 313.428 cv
299.035 314.096 298.468 314.61 297.803 314.581 cv
297.137 314.549 296.621 313.982 296.654 313.314 cv
296.685 312.65 297.252 312.134 297.917 312.166 cv
cp
.133333 .137255 .133333 rgb
f
303.562 309.994 mo
305.229 310.072 306.514 311.486 306.435 313.153 cv
306.356 314.816 304.945 316.107 303.277 316.029 cv
301.609 315.948 300.322 314.537 300.403 312.868 cv
300.479 311.201 301.894 309.918 303.562 309.994 cv
cp
1 1 1 rgb
f
303.369 311.946 mo
304.034 311.977 304.551 312.545 304.518 313.209 cv
304.486 313.878 303.922 314.393 303.256 314.357 cv
302.589 314.33 302.073 313.763 302.104 313.097 cv
302.136 312.43 302.699 311.914 303.369 311.946 cv
cp
.133333 .137255 .133333 rgb
f
298.979 309.225 mo
298.979 309.225 295.434 309.442 293.894 310.449 cv
293.894 310.449 295.596 306.315 298.979 309.225 cv
cp
.0352941 .0117647 .027451 rgb
f
306.798 310.512 mo
306.798 310.512 303.643 308.885 301.804 308.958 cv
301.804 308.958 305.38 306.283 306.798 310.512 cv
cp
f
336.454 325.056 mo
336.454 325.056 334.092 327.021 334.092 325.294 cv
334.092 320.391 336.317 323.446 336.454 325.056 cv
cp
.94902 .764706 .533333 rgb
f
155.391 361.676 mo
155.391 361.676 156.788 365.286 157.313 361.94 cv
157.313 361.94 159.355 364.119 158.689 361.494 cv
158.689 361.494 160.988 363.713 160.08 360.421 cv
160.08 360.421 162.462 362.015 161.226 359.059 cv
159.991 356.104 157.104 352.496 154.413 358.252 cv
152.303 362.771 154.533 363.076 155.391 361.676 cv
cp
f
154.68 357.063 mo
160.839 356.972 li
160.367 340.618 152.328 333.917 152.328 333.917 cv
146.382 335.893 li
155.83 348.166 154.68 357.063 154.68 357.063 cv
cp
1 1 1 rgb
f
120.72 361.67 mo
120.72 361.67 119.322 365.28 118.798 361.935 cv
118.798 361.935 116.755 364.113 117.421 361.488 cv
117.421 361.488 115.122 363.707 116.03 360.415 cv
116.03 360.415 113.648 362.009 114.885 359.053 cv
116.119 356.099 119.007 352.49 121.697 358.246 cv
123.808 362.766 121.577 363.07 120.72 361.67 cv
cp
.94902 .764706 .533333 rgb
f
121.431 357.057 mo
115.271 356.966 li
115.743 340.612 123.782 333.911 123.782 333.911 cv
129.729 335.887 li
120.28 348.16 121.431 357.057 121.431 357.057 cv
cp
1 1 1 rgb
f
124.493 303.064 mo
131.139 295.629 147.535 297.212 149.851 309.75 cv
152.168 322.291 152.328 332.377 152.328 332.377 cv
123.498 334.297 li
123.687 322.336 li
117.615 319.823 li
117.615 319.823 117.844 310.505 124.493 303.064 cv
cp
.94902 .764706 .533333 rgb
f
144.735 298.99 mo
145.231 299.271 145.698 299.572 146.141 299.875 cv
146.295 299.958 146.452 300.038 146.599 300.134 cv
147.308 298.297 148.761 296.772 148.761 296.772 cv
149.329 298.464 148.786 299.94 148.064 300.98 cv
153.742 299.604 153.907 300.716 149.52 302.822 cv
149.811 303.192 150.075 303.58 150.327 303.974 cv
156.287 312.481 153.163 324.926 153.163 324.926 cv
148.651 324.71 li
148.743 322.305 148.056 318.406 148.056 318.406 cv
149.669 315.379 148.427 313.979 147.813 313.39 cv
146.636 312.252 145.327 313.159 145.327 313.159 cv
145.327 313.159 143.961 313.818 145.009 318.558 cv
142.952 318.547 li
140.667 306.547 li
123.114 306.697 121.138 302.887 121.138 302.887 cv
123.298 299.304 132.788 292.13 144.735 298.99 cv
cp
.0352941 .0117647 .027451 rgb
f
152.995 331.755 mo
152.894 356.127 li
123.152 356.003 li
123.247 332.861 li
152.995 331.755 li
cp
1 1 1 rgb
f
134.036 332.904 mo
140.242 332.933 li
138.635 338.945 li
140.176 348.857 li
136.987 354.546 li
133.464 348.827 li
135.671 338.749 li
134.036 332.904 li
cp
.658824 .184314 .219608 rgb
f
154.793 380.607 mo
155.464 380.76 155.374 381.475 155.117 381.723 cv
154.52 382.3 152.953 382.646 151.919 382.654 cv
150.618 382.669 150.253 382.654 148.948 382.636 cv
144.8 382.571 143.853 380.296 143.853 380.296 cv
143.863 382.654 li
139.168 382.675 li
139.159 380.316 li
139.147 378.211 li
147.788 378.178 li
147.994 378.968 152.618 380.11 154.793 380.607 cv
cp
.145098 .12549 .141176 rgb
f
119.761 380.551 mo
121.935 380.058 126.562 378.911 126.767 378.124 cv
135.404 378.157 li
135.394 380.259 li
135.385 382.619 li
130.69 382.602 li
130.699 380.241 li
130.699 380.241 129.752 382.518 125.603 382.577 cv
124.3 382.6 123.935 382.612 122.634 382.6 cv
121.601 382.594 120.035 382.244 119.437 381.667 cv
119.179 381.419 119.085 380.702 119.761 380.551 cv
cp
f
152.841 355.875 mo
152.509 358.726 152.746 360.448 149.993 361.291 cv
149.921 378.808 li
138.235 378.759 li
138.309 361.364 li
136.02 361.354 li
135.946 378.749 li
125.224 378.703 li
125.298 361.187 li
122.779 360.324 123.141 358.636 123.154 355.75 cv
152.841 355.875 li
cp
f
137.235 320.673 mo
137.25 325.253 134.603 325.891 132.403 326.021 cv
128.123 326.272 127.556 322.553 127.556 322.553 cv
133.798 324.926 137.235 320.673 137.235 320.673 cv
cp
.698039 .286275 .282353 rgb
f
127.859 310.079 mo
129.519 310.157 130.799 311.566 130.723 313.223 cv
130.646 314.884 129.235 316.167 127.579 316.084 cv
125.917 316.011 124.637 314.601 124.712 312.944 cv
124.793 311.283 126.201 310.002 127.859 310.079 cv
cp
1 1 1 rgb
f
126.656 311.927 mo
127.335 311.959 127.859 312.533 127.825 313.21 cv
127.794 313.889 127.217 314.413 126.54 314.383 cv
125.862 314.351 125.339 313.774 125.372 313.095 cv
125.402 312.419 125.979 311.894 126.656 311.927 cv
cp
.133333 .137255 .133333 rgb
f
133.942 309.605 mo
135.639 309.685 136.946 311.123 136.866 312.818 cv
136.786 314.511 135.351 315.823 133.654 315.743 cv
131.957 315.662 130.648 314.226 130.73 312.528 cv
130.808 310.833 132.246 309.526 133.942 309.605 cv
cp
1 1 1 rgb
f
132.203 311.703 mo
132.879 311.733 133.404 312.312 133.371 312.986 cv
133.339 313.667 132.764 314.191 132.087 314.156 cv
131.408 314.127 130.885 313.551 130.915 312.873 cv
130.947 312.195 131.521 311.67 132.203 311.703 cv
cp
.133333 .137255 .133333 rgb
f
129.281 308.822 mo
129.281 308.822 125.675 309.044 124.108 310.067 cv
124.108 310.067 125.84 305.862 129.281 308.822 cv
cp
.0352941 .0117647 .027451 rgb
f
137.235 310.131 mo
137.235 310.131 134.025 308.477 132.154 308.551 cv
132.154 308.551 135.792 305.829 137.235 310.131 cv
cp
f
388.273 242.021 mo
388.273 242.021 386.876 245.631 386.352 242.285 cv
386.352 242.285 384.309 244.464 384.975 241.839 cv
384.975 241.839 382.676 244.058 383.584 240.766 cv
383.584 240.766 381.202 242.359 382.438 239.403 cv
383.673 236.449 386.561 232.841 389.251 238.597 cv
391.361 243.116 389.131 243.421 388.273 242.021 cv
cp
.94902 .764706 .533333 rgb
f
388.984 237.407 mo
382.825 237.316 li
383.297 220.963 391.336 214.262 391.336 214.262 cv
397.282 216.237 li
387.834 228.511 388.984 237.407 388.984 237.407 cv
cp
1 1 1 rgb
f
422.944 242.015 mo
422.944 242.015 424.342 245.625 424.866 242.279 cv
424.866 242.279 426.909 244.458 426.243 241.833 cv
426.243 241.833 428.542 244.052 427.634 240.76 cv
427.634 240.76 430.016 242.354 428.779 239.397 cv
427.545 236.443 424.657 232.835 421.967 238.591 cv
419.856 243.11 422.087 243.415 422.944 242.015 cv
cp
.94902 .764706 .533333 rgb
f
422.233 237.401 mo
428.393 237.311 li
427.921 220.957 419.882 214.256 419.882 214.256 cv
413.936 216.231 li
423.384 228.505 422.233 237.401 422.233 237.401 cv
cp
1 1 1 rgb
f
419.171 183.409 mo
412.525 175.974 396.129 177.557 393.813 190.095 cv
391.496 202.636 391.336 212.722 391.336 212.722 cv
420.166 214.642 li
419.978 202.681 li
426.049 200.168 li
426.049 200.168 425.82 190.85 419.171 183.409 cv
cp
.94902 .764706 .533333 rgb
f
398.929 179.335 mo
398.433 179.615 397.966 179.917 397.523 180.22 cv
397.369 180.303 397.212 180.383 397.065 180.479 cv
396.356 178.642 394.903 177.117 394.903 177.117 cv
394.335 178.809 394.878 180.285 395.6 181.325 cv
389.922 179.949 389.757 181.061 394.145 183.167 cv
393.854 183.537 393.589 183.925 393.337 184.318 cv
387.377 192.826 390.501 205.271 390.501 205.271 cv
395.013 205.055 li
394.921 202.649 395.608 198.751 395.608 198.751 cv
393.995 195.724 395.237 194.324 395.851 193.734 cv
397.028 192.597 398.337 193.504 398.337 193.504 cv
398.337 193.504 399.703 194.163 398.655 198.902 cv
400.712 198.892 li
402.997 186.892 li
420.55 187.042 422.526 183.231 422.526 183.231 cv
420.366 179.648 410.876 172.475 398.929 179.335 cv
cp
.0352941 .0117647 .027451 rgb
f
390.669 212.1 mo
390.771 236.472 li
420.512 236.348 li
420.417 213.206 li
390.669 212.1 li
cp
1 1 1 rgb
f
409.628 213.249 mo
403.422 213.277 li
405.029 219.29 li
403.488 229.202 li
406.677 234.891 li
410.2 229.172 li
407.993 219.094 li
409.628 213.249 li
cp
.658824 .184314 .219608 rgb
f
388.871 260.952 mo
388.2 261.104 388.29 261.819 388.547 262.067 cv
389.145 262.645 390.711 262.991 391.745 262.999 cv
393.046 263.014 393.411 262.999 394.716 262.98 cv
398.864 262.916 399.812 260.641 399.812 260.641 cv
399.801 262.999 li
404.496 263.02 li
404.505 260.661 li
404.517 258.556 li
395.876 258.522 li
395.67 259.313 391.046 260.455 388.871 260.952 cv
cp
.145098 .12549 .141176 rgb
f
423.903 260.896 mo
421.729 260.402 417.103 259.256 416.897 258.469 cv
408.26 258.502 li
408.271 260.604 li
408.279 262.964 li
412.974 262.946 li
412.965 260.586 li
412.965 260.586 413.912 262.862 418.062 262.922 cv
419.364 262.944 419.729 262.957 421.03 262.944 cv
422.063 262.938 423.629 262.589 424.228 262.012 cv
424.485 261.764 424.579 261.047 423.903 260.896 cv
cp
f
390.823 236.22 mo
391.155 239.07 390.918 240.793 393.671 241.636 cv
393.743 259.152 li
405.429 259.104 li
405.355 241.709 li
407.645 241.699 li
407.718 259.094 li
418.44 259.048 li
418.366 241.531 li
420.885 240.669 420.523 238.98 420.51 236.095 cv
390.823 236.22 li
cp
f
406.429 201.018 mo
406.414 205.598 409.062 206.235 411.261 206.365 cv
415.541 206.617 416.108 202.897 416.108 202.897 cv
409.866 205.271 406.429 201.018 406.429 201.018 cv
cp
.698039 .286275 .282353 rgb
f
415.805 190.424 mo
414.146 190.502 412.865 191.911 412.941 193.567 cv
413.019 195.229 414.429 196.512 416.085 196.429 cv
417.747 196.355 419.027 194.945 418.952 193.289 cv
418.871 191.628 417.463 190.347 415.805 190.424 cv
cp
1 1 1 rgb
f
417.008 192.271 mo
416.329 192.304 415.805 192.878 415.839 193.555 cv
415.87 194.233 416.447 194.758 417.124 194.728 cv
417.802 194.695 418.325 194.119 418.292 193.439 cv
418.262 192.764 417.685 192.238 417.008 192.271 cv
cp
.133333 .137255 .133333 rgb
f
409.722 189.95 mo
408.025 190.029 406.718 191.468 406.798 193.163 cv
406.878 194.855 408.313 196.168 410.01 196.088 cv
411.707 196.007 413.016 194.57 412.934 192.873 cv
412.856 191.178 411.418 189.871 409.722 189.95 cv
cp
1 1 1 rgb
f
411.461 192.048 mo
410.785 192.078 410.26 192.656 410.293 193.331 cv
410.325 194.012 410.9 194.536 411.577 194.501 cv
412.256 194.472 412.779 193.896 412.749 193.218 cv
412.717 192.54 412.144 192.015 411.461 192.048 cv
cp
.133333 .137255 .133333 rgb
f
414.383 189.167 mo
414.383 189.167 417.989 189.389 419.556 190.412 cv
419.556 190.412 417.824 186.207 414.383 189.167 cv
cp
.0352941 .0117647 .027451 rgb
f
406.429 190.476 mo
406.429 190.476 409.639 188.821 411.51 188.896 cv
411.51 188.896 407.872 186.174 406.429 190.476 cv
cp
f
179.253 225.758 mo
180.744 225.068 180.701 222.822 175.967 224.389 cv
169.938 226.387 173.187 229.676 175.976 231.246 cv
178.765 232.816 177.46 230.268 177.46 230.268 cv
180.62 231.553 178.688 229.012 178.688 229.012 cv
181.215 229.979 179.291 227.697 179.291 227.697 cv
182.674 227.568 179.253 225.758 179.253 225.758 cv
cp
.94902 .764706 .533333 rgb
f
153.93 213.667 mo
152.305 223.242 li
152.305 223.242 157.031 228.092 173.218 230.414 cv
174.005 224.311 li
174.005 224.311 165.046 224.439 153.93 213.667 cv
cp
1 1 1 rgb
f
112.629 236.588 mo
112.629 236.588 109.765 239.191 110.792 235.967 cv
110.792 235.967 107.991 237.002 109.759 234.953 cv
109.759 234.953 106.713 235.908 108.994 233.371 cv
108.994 233.371 106.155 233.732 108.578 231.643 cv
111.002 229.553 115.197 227.615 115.032 233.961 cv
114.901 238.947 112.769 238.225 112.629 236.588 cv
cp
.94902 .764706 .533333 rgb
f
115.524 233.35 mo
110.774 229.438 li
121.342 216.961 127.963 215.535 127.963 215.535 cv
135.211 221.998 li
120.178 225.691 115.524 233.35 115.524 233.35 cv
cp
1 1 1 rgb
f
155.184 182.995 mo
148.542 175.562 132.155 177.146 129.84 189.678 cv
127.525 202.21 127.366 212.289 127.366 212.289 cv
156.177 214.206 li
155.989 202.253 li
162.058 199.74 li
162.058 199.74 161.828 190.428 155.184 182.995 cv
cp
.94902 .764706 .533333 rgb
f
134.953 178.92 mo
134.457 179.205 133.991 179.502 133.548 179.806 cv
133.394 179.89 133.238 179.969 133.09 180.066 cv
132.38 178.229 130.93 176.706 130.93 176.706 cv
130.359 178.395 130.904 179.873 131.625 180.912 cv
125.95 179.537 125.787 180.647 130.171 182.751 cv
129.88 183.123 129.616 183.51 129.363 183.901 cv
123.408 192.406 126.532 204.842 126.532 204.842 cv
131.039 204.629 li
130.946 202.222 131.633 198.326 131.633 198.326 cv
130.022 195.302 131.263 193.905 131.874 193.314 cv
133.055 192.177 134.36 193.083 134.36 193.083 cv
134.36 193.083 135.726 193.741 134.679 198.476 cv
136.736 198.468 li
139.02 186.477 li
156.562 186.625 158.534 182.816 158.534 182.816 cv
156.376 179.236 146.895 172.067 134.953 178.92 cv
cp
.0352941 .0117647 .027451 rgb
f
126.697 211.666 mo
126.8 236.025 li
156.523 235.9 li
156.426 212.771 li
126.697 211.666 li
cp
1 1 1 rgb
f
145.646 212.816 mo
139.444 212.842 li
141.049 218.854 li
139.51 228.758 li
142.695 234.447 li
146.216 228.729 li
144.011 218.656 li
145.646 212.816 li
cp
.658824 .184314 .219608 rgb
f
124.901 260.49 mo
124.229 260.645 124.319 261.357 124.578 261.605 cv
125.176 262.184 126.741 262.525 127.773 262.537 cv
129.075 262.547 129.439 262.535 130.742 262.52 cv
134.888 262.453 135.835 260.18 135.835 260.18 cv
135.826 262.537 li
140.517 262.559 li
140.526 260.199 li
140.537 258.096 li
131.904 258.063 li
131.698 258.85 127.075 259.994 124.901 260.49 cv
cp
.145098 .12549 .141176 rgb
f
159.911 260.436 mo
157.739 259.939 153.117 258.795 152.91 258.006 cv
144.278 258.043 li
144.288 260.145 li
144.297 262.502 li
148.989 262.482 li
148.98 260.125 li
148.98 260.125 149.927 262.4 154.073 262.461 cv
155.375 262.48 155.739 262.494 157.042 262.482 cv
158.072 262.473 159.64 262.129 160.236 261.553 cv
160.494 261.303 160.586 260.588 159.911 260.436 cv
cp
f
126.853 235.771 mo
127.187 238.619 126.945 240.346 129.698 241.186 cv
129.771 258.691 li
141.448 258.643 li
141.376 241.258 li
143.665 241.248 li
143.737 258.633 li
154.452 258.588 li
154.379 241.084 li
156.896 240.219 156.534 238.531 156.523 235.65 cv
126.853 235.771 li
cp
f
141.068 200.593 mo
140.778 207.124 144.675 208.473 147.277 208.102 cv
151.522 207.495 152.122 202.472 152.122 202.472 cv
145.883 204.842 141.068 200.593 141.068 200.593 cv
cp
.698039 .286275 .282353 rgb
f
151.88 189.939 mo
150.188 190.019 148.877 191.457 148.957 193.152 cv
149.035 194.843 150.474 196.154 152.169 196.072 cv
153.864 195.994 155.173 194.556 155.093 192.863 cv
155.012 191.168 153.575 189.859 151.88 189.939 cv
cp
1 1 1 rgb
f
151.567 191.78 mo
150.888 191.811 150.365 192.386 150.398 193.063 cv
150.43 193.741 151.004 194.265 151.682 194.232 cv
152.359 194.2 152.883 193.626 152.85 192.948 cv
152.821 192.271 152.244 191.747 151.567 191.78 cv
cp
.133333 .137255 .133333 rgb
f
145.738 189.53 mo
144.045 189.609 142.736 191.048 142.817 192.742 cv
142.896 194.436 144.333 195.744 146.028 195.664 cv
147.721 195.584 149.031 194.147 148.951 192.452 cv
148.872 190.759 147.433 189.45 145.738 189.53 cv
cp
1 1 1 rgb
f
146.158 191.534 mo
145.48 191.565 144.957 192.141 144.988 192.818 cv
145.021 193.495 145.595 194.02 146.272 193.987 cv
146.95 193.954 147.473 193.379 147.442 192.702 cv
147.41 192.025 146.836 191.501 146.158 191.534 cv
cp
.133333 .137255 .133333 rgb
f
150.397 188.748 mo
150.397 188.748 154.003 188.969 155.568 189.992 cv
155.568 189.992 153.839 185.792 150.397 188.748 cv
cp
.0352941 .0117647 .027451 rgb
f
142.448 190.057 mo
142.448 190.057 145.657 188.4 147.527 188.478 cv
147.527 188.478 143.891 185.757 142.448 190.057 cv
cp
f
182.437 230.113 mo
182.198 229.752 181.558 229.602 181.25 230.238 cv
180.445 231.898 179.884 231.994 179.054 232.01 cv
178.053 232.027 177.385 230.674 177.34 229.432 cv
177.34 145.382 li
177.331 145.382 li
177.289 145.054 177.013 144.797 176.672 144.797 cv
176.332 144.797 176.054 145.054 176.013 145.382 cv
176.004 145.382 li
176.004 229.516 li
176.024 229.922 li
176.004 230.674 176.669 233.35 179.142 233.35 cv
180.278 233.35 181.277 232.813 182.209 231.098 cv
182.276 230.979 182.643 230.424 182.437 230.113 cv
cp
.278431 .207843 .196078 rgb
f
176.654 149.139 mo
142.419 147.874 136.055 173.254 136.055 173.254 cv
136.055 173.254 148.023 166.497 156.619 174.752 cv
156.619 174.752 165.948 166.774 176.654 174.693 cv
187.36 166.774 196.689 174.752 196.689 174.752 cv
205.286 166.497 217.253 173.254 217.253 173.254 cv
217.253 173.254 210.888 147.874 176.654 149.139 cv
cp
.992157 .811765 .2 rgb
f
367.9 379.873 mo
367.247 380.023 367.336 380.715 367.585 380.956 cv
368.167 381.516 369.688 381.854 370.692 381.861 cv
371.959 381.874 372.31 381.86 373.578 381.841 cv
377.607 381.781 378.526 379.57 378.526 379.57 cv
378.519 381.861 li
383.078 381.881 li
383.087 379.59 li
383.097 377.547 li
374.704 377.511 li
374.507 378.278 370.013 379.39 367.9 379.873 cv
cp
.145098 .12549 .141176 rgb
f
401.928 379.82 mo
399.816 379.335 395.325 378.223 395.123 377.459 cv
386.733 377.493 li
386.743 379.535 li
386.754 381.827 li
391.312 381.808 li
391.302 379.519 li
391.302 379.519 392.223 381.729 396.253 381.787 cv
397.52 381.806 397.872 381.819 399.139 381.808 cv
400.142 381.801 401.662 381.462 402.244 380.902 cv
402.495 380.661 402.584 379.965 401.928 379.82 cv
cp
f
369.797 355.85 mo
370.121 358.618 369.888 360.293 372.563 361.108 cv
372.633 378.123 li
383.983 378.074 li
383.913 361.182 li
386.136 361.171 li
386.207 378.065 li
396.621 378.024 li
396.55 361.012 li
398.996 360.17 398.646 358.53 398.634 355.727 cv
369.797 355.85 li
cp
f
357.02 329.721 mo
357.02 329.721 357.202 329.365 357.133 329.035 cv
357.065 328.704 356.106 327.405 357.137 326.594 cv
358.17 325.782 361.231 326.205 361.085 327.897 cv
360.938 329.589 360.113 330.197 360.113 330.197 cv
360.113 330.197 358.681 331.278 357.02 329.721 cv
cp
.94902 .764706 .533333 rgb
f
360.894 328.029 mo
360.894 328.029 361.923 325.885 360.138 326.322 cv
360.138 326.322 359.575 324.932 358.774 325.987 cv
358.774 325.987 357.95 325.049 357.566 326.095 cv
357.566 326.095 356.376 325.438 356.916 327.221 cv
357.298 328.487 358.04 327.423 357.956 326.897 cv
357.956 326.897 358.398 328.196 358.7 326.882 cv
358.7 326.882 359.092 328.421 359.836 326.993 cv
359.836 326.993 359.356 328.589 360.846 327.431 cv
360.894 328.029 li
cp
.964706 .882353 .705882 rgb
f
359.365 329.676 mo
359.365 329.676 358.857 329.306 359.794 327.911 cv
359.794 327.911 358.439 326.752 358.911 326.51 cv
359.453 326.228 360.801 327.041 360.977 327.463 cv
361.121 327.809 361.064 328.239 360.75 328.713 cv
359.873 330.04 359.678 329.726 359.365 329.676 cv
cp
.94902 .764706 .533333 rgb
f
361.152 329.287 mo
356.688 329.349 li
356.445 331.362 356.261 338.704 357.241 342.518 cv
359.015 349.413 372.112 344.263 372.112 344.263 cv
373.703 334.794 li
373.703 334.794 366.072 340.602 362.918 338.798 cv
362.123 338.344 361.152 329.287 361.152 329.287 cv
cp
1 1 1 rgb
f
411.282 331.043 mo
411.282 331.043 411.095 330.688 411.16 330.357 cv
411.224 330.026 412.166 328.715 411.126 327.917 cv
410.083 327.118 407.026 327.578 407.194 329.269 cv
407.361 330.958 408.193 331.556 408.193 331.556 cv
408.193 331.556 409.64 332.62 411.282 331.043 cv
cp
.94902 .764706 .533333 rgb
f
407.388 329.397 mo
407.388 329.397 406.332 327.266 408.121 327.682 cv
408.121 327.682 408.667 326.284 409.481 327.33 cv
409.481 327.33 410.294 326.381 410.689 327.424 cv
410.689 327.424 411.873 326.752 411.354 328.541 cv
410.988 329.813 410.233 328.756 410.311 328.23 cv
410.311 328.23 409.884 329.535 409.568 328.224 cv
409.568 328.224 409.194 329.768 408.432 328.349 cv
408.432 328.349 408.931 329.938 407.427 328.799 cv
407.388 329.397 li
cp
.964706 .882353 .705882 rgb
f
408.936 331.025 mo
408.936 331.025 409.438 330.649 408.485 329.267 cv
408.485 329.267 409.826 328.091 409.35 327.854 cv
408.806 327.579 407.468 328.408 407.298 328.834 cv
407.157 329.18 407.219 329.609 407.539 330.079 cv
408.432 331.396 408.624 331.08 408.936 331.025 cv
cp
.94902 .764706 .533333 rgb
f
407.144 330.658 mo
411.608 330.666 li
411.875 332.677 412.15 340.016 411.215 343.84 cv
409.526 350.757 396.366 345.767 396.366 345.767 cv
394.661 336.318 li
394.661 336.318 402.015 341.761 405.147 339.919 cv
405.937 339.454 407.144 330.658 407.144 330.658 cv
cp
1 1 1 rgb
f
397.56 304.13 mo
391.035 296.826 374.936 298.385 372.662 310.696 cv
370.388 323.008 370.23 332.91 370.23 332.91 cv
398.535 334.794 li
398.354 323.049 li
404.314 320.583 li
404.314 320.583 404.089 311.433 397.56 304.13 cv
cp
.94902 .764706 .533333 rgb
f
377.685 300.128 mo
377.197 300.408 376.74 300.699 376.303 300.998 cv
376.152 301.08 376 301.159 375.854 301.254 cv
375.158 299.449 373.732 297.951 373.732 297.951 cv
373.173 299.61 373.706 301.064 374.414 302.083 cv
368.839 300.73 368.679 301.825 372.988 303.889 cv
372.701 304.253 372.441 304.638 372.193 305.021 cv
366.343 313.374 369.411 325.592 369.411 325.592 cv
373.839 325.382 li
373.751 323.02 374.422 319.191 374.422 319.191 cv
372.839 316.221 374.061 314.848 374.66 314.268 cv
375.82 313.15 377.103 314.041 377.103 314.041 cv
377.103 314.041 378.445 314.688 377.415 319.34 cv
379.436 319.332 li
381.682 307.55 li
398.914 307.697 400.851 303.954 400.851 303.954 cv
398.731 300.438 389.417 293.394 377.685 300.128 cv
cp
.0352941 .0117647 .027451 rgb
f
369.574 332.299 mo
369.675 356.227 li
398.876 356.105 li
398.782 333.383 li
369.574 332.299 li
cp
1 1 1 rgb
f
388.19 333.426 mo
382.098 333.452 li
383.674 339.358 li
382.162 346.02 li
385.291 351.61 li
388.749 345.991 li
386.583 339.165 li
388.19 333.426 li
cp
.658824 .184314 .219608 rgb
f
394.314 310.951 mo
392.651 311.031 391.364 312.443 391.442 314.108 cv
391.519 315.771 392.936 317.056 394.598 316.978 cv
396.264 316.9 397.549 315.488 397.47 313.823 cv
397.393 312.16 395.98 310.874 394.314 310.951 cv
cp
1 1 1 rgb
f
395.782 313.372 mo
395.114 313.405 394.602 313.971 394.635 314.636 cv
394.664 315.302 395.227 315.816 395.895 315.782 cv
396.56 315.749 397.073 315.187 397.042 314.521 cv
397.014 313.856 396.445 313.341 395.782 313.372 cv
cp
.133333 .137255 .133333 rgb
f
388.282 310.552 mo
386.617 310.628 385.331 312.041 385.408 313.707 cv
385.488 315.369 386.899 316.656 388.565 316.574 cv
390.228 316.499 391.516 315.087 391.438 313.42 cv
391.358 311.759 389.946 310.473 388.282 310.552 cv
cp
1 1 1 rgb
f
389.896 312.85 mo
389.231 312.88 388.717 313.447 388.75 314.112 cv
388.779 314.776 389.346 315.291 390.01 315.26 cv
390.674 315.229 391.188 314.664 391.16 313.997 cv
391.128 313.33 390.563 312.816 389.896 312.85 cv
cp
.133333 .137255 .133333 rgb
f
392.995 310.705 mo
392.995 310.705 396.377 309.629 398.173 310.008 cv
398.173 310.008 395.1 306.776 392.995 310.705 cv
cp
.0352941 .0117647 .027451 rgb
f
386.167 309.239 mo
386.167 309.239 389.703 309.529 391.22 310.567 cv
391.22 310.567 389.609 306.409 386.167 309.239 cv
cp
f
390.671 324.807 mo
390.045 323.639 389.271 322.858 388.274 322.529 cv
386.735 322.021 385.104 322.695 384.291 323.02 cv
383.479 323.344 383.267 322.322 384.043 322.008 cv
385.048 321.6 386.835 320.977 388.596 321.559 cv
389.84 321.971 390.837 322.881 391.551 324.28 cv
391.909 324.983 391.143 325.686 390.671 324.807 cv
cp
.698039 .286275 .282353 rgb
f
417.887 378.272 mo
417.887 380.704 419.857 382.675 422.29 382.675 cv
428.161 382.675 li
430.592 382.675 432.563 380.704 432.563 378.272 cv
432.563 292.304 li
432.563 289.872 430.592 287.901 428.161 287.901 cv
422.29 287.901 li
419.857 287.901 417.887 289.872 417.887 292.304 cv
417.887 378.272 li
cp
.992157 .811765 .2 rgb
f
30.3447 258.82 mo
30.3447 261.252 28.374 263.223 25.9414 263.223 cv
20.0703 263.223 li
17.6396 263.223 15.668 261.252 15.668 258.82 cv
15.668 172.852 li
15.668 170.42 17.6396 168.449 20.0703 168.449 cv
25.9414 168.449 li
28.374 168.449 30.3447 170.42 30.3447 172.852 cv
30.3447 258.82 li
cp
1 .607843 .0431373 rgb
f
41.7285 191.885 mo
45.0684 183.924 52.9043 181.754 60.0215 190.189 cv
67.1387 198.621 71.2471 212.461 71.2471 212.461 cv
50.7344 219.939 li
45.7471 210.867 li
40.1045 211.582 li
40.1045 211.582 38.2803 200.111 41.7285 191.885 cv
cp
.94902 .764706 .533333 rgb
f
51.5615 184.291 mo
52.0557 184.291 52.5342 184.316 52.999 184.354 cv
53.1494 184.352 53.2988 184.344 53.4541 184.354 cv
53.1982 182.668 53.6367 180.898 53.6367 180.898 cv
54.79 181.926 55.0137 183.271 54.918 184.361 cv
58.5977 180.893 59.1953 181.658 56.8008 185.121 cv
57.1787 185.275 57.5439 185.453 57.9023 185.641 cv
66.0303 189.482 69.0166 200.178 69.0166 200.178 cv
63.9736 202.869 li
63.0107 201.02 62.3838 197.463 62.3838 197.463 cv
62.2979 194.496 60.7607 193.992 60.0508 193.797 cv
58.2637 193.307 53.5557 195.422 58.2979 199.98 cv
54.5742 202.137 li
50.543 193.391 li
37.4102 201.029 36.6426 198.906 36.6426 198.906 cv
36.7314 195.289 39.6377 184.26 51.5615 184.291 cv
cp
.0352941 .0117647 .027451 rgb
f
43.8691 201.254 mo
45.1777 200.59 46.7773 201.109 47.4453 202.418 cv
48.1123 203.723 47.5918 205.328 46.2832 205.994 cv
44.9736 206.662 43.3711 206.141 42.7061 204.834 cv
42.0391 203.525 42.5596 201.924 43.8691 201.254 cv
cp
1 1 1 rgb
f
43.1104 203.127 mo
43.6338 202.855 44.2744 203.064 44.5391 203.59 cv
44.8066 204.111 44.5986 204.752 44.0752 205.02 cv
43.5527 205.285 42.9121 205.078 42.6465 204.555 cv
42.3789 204.033 42.5869 203.391 43.1104 203.127 cv
cp
.133333 .137255 .133333 rgb
f
43.9307 199.188 mo
43.9307 199.188 41.5615 201.227 41.0176 202.752 cv
41.0176 202.752 40.0107 198.953 43.9307 199.188 cv
cp
.0352941 .0117647 .027451 rgb
f
49.5908 211.488 mo
48.3633 211.68 47.3135 212.076 46.6445 212.5 cv
47.1699 213.457 li
47.6582 213.094 48.501 212.695 49.8613 212.49 cv
50.6855 212.367 50.8564 211.293 49.5908 211.488 cv
cp
.631373 .211765 .207843 rgb
f
32.1416 218.996 mo
31.8721 220.807 36.2285 219.592 36.2285 219.592 cv
36.2725 220.377 36.7725 221.695 35.6787 222.891 cv
35.1445 223.473 30.7773 222.93 30.4443 222.885 cv
29.1396 222.705 29.248 218.363 29.5996 215.334 cv
30.043 211.537 30.4004 215.105 30.4004 215.105 cv
31.0557 211.291 31.2031 215.361 31.2031 215.361 cv
31.7451 212.367 31.8135 216.178 31.8135 216.178 cv
32.9854 213.578 32.1416 218.996 32.1416 218.996 cv
cp
.94902 .764706 .533333 rgb
f
68.0859 260.334 mo
67.416 260.488 67.5059 261.199 67.7637 261.447 cv
68.3613 262.021 69.9238 262.369 70.9541 262.377 cv
72.252 262.391 72.6152 262.377 73.916 262.357 cv
78.0537 262.295 78.999 260.025 78.999 260.025 cv
78.9893 262.377 li
83.6709 262.398 li
83.6826 260.045 li
83.6904 257.945 li
75.0732 257.91 li
74.8682 258.697 70.2559 259.84 68.0859 260.334 cv
cp
.0117647 .00392157 .00392157 rgb
f
55.7207 234.621 mo
76.9492 229.182 li
76.9492 229.182 79.4697 231.82 76.2285 235.662 cv
86.1611 259.158 li
71.0908 259.107 li
55.7207 234.621 li
cp
f
63.3975 260.963 mo
62.7256 261.117 62.8154 261.828 63.0732 262.074 cv
63.6699 262.652 65.2334 262.998 66.2637 263.006 cv
67.5625 263.018 67.9248 263.006 69.2275 262.984 cv
73.3643 262.924 74.3086 260.652 74.3086 260.652 cv
74.3008 263.006 li
78.9814 263.027 li
78.9912 260.674 li
79 258.574 li
70.3848 258.539 li
70.1787 259.326 65.5664 260.467 63.3975 260.963 cv
cp
.145098 .12549 .141176 rgb
f
54.9697 235.451 mo
74.3994 231.406 li
74.3994 231.406 75.8604 233.381 72.0713 237.193 cv
81.4727 259.789 li
66.4004 259.736 li
54.9697 235.451 li
cp
f
53.3701 216.137 mo
51.3457 224.945 li
51.3457 224.945 45.5518 227.424 30.8125 223.639 cv
32.3154 218.111 li
32.3154 218.111 39.9678 221.424 53.3701 216.137 cv
cp
1 1 1 rgb
f
70.9404 209.467 mo
78.2656 230.072 li
54.7373 236.354 li
48.8984 217.191 li
70.9404 209.467 li
cp
f
53.8477 233.441 mo
55.459 230.199 li
52.0186 222.375 li
51.8086 216.992 li
49.1152 217.811 li
53.8477 233.441 li
cp
.658824 .184314 .219608 rgb
f
31.7168 227.275 mo
31.5313 229.096 35.8271 227.68 35.8271 227.68 cv
35.9063 228.461 36.4668 229.756 35.4316 230.998 cv
34.9258 231.607 30.5381 231.27 30.2031 231.238 cv
28.8906 231.119 28.7959 226.779 29.0049 223.736 cv
29.2686 219.924 29.7939 223.471 29.7939 223.471 cv
30.2686 219.629 30.6084 223.688 30.6084 223.688 cv
31.0078 220.674 31.2559 224.473 31.2559 224.473 cv
32.3018 221.822 31.7168 227.275 31.7168 227.275 cv
cp
.94902 .764706 .533333 rgb
f
31.6348 226.137 mo
31.3203 232.137 li
47.2754 232.746 58.3389 227.051 58.3389 227.051 cv
52.7881 219.438 li
40.2188 227.832 31.6348 226.137 31.6348 226.137 cv
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (\700\751\743\763\753\774\752\740) ()
%%Title: (1401.i003.049.S.i003.c11.office manager poses.eps)
%%CreationDate: 1/23/2014 9:04 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2KIpGi)`r`rU>"'J;S.e^TT8Sj\N-5ql4I5)#0&ePDmbiF6Cs6S'7Wd94#g>'dUhFn-)im`!DS\5NP_EssHDq=3uo0Vc8
%oph1L2&%?LQqC,ao7%,Ucg-?PG:Z.]<UF,sc/(aa<=QOq@]RoAFOtTQT9X#+YAt,F<,s(47\fX#Y0a+H0;4H9A"NJg7c:a:=-[+;
%at(u?T2=]0?0DFoi+p`Se#YJ([GV&]#IU*Qpq07lfI-=R.-U>3Gqc:V.luH<`#"&!`d`o=%YOA!\(@VOlE038,m<ma/=uJ^BNOs2
%(_"E8IuEf)Xq[C+qMcQ"-5StabMH,,LKMjh\$;c&]e#OAV14Bta6utTClnZt<W#&_)h*LE[@EgEGb0P?'$d1*J;&=M+)@U'3]$lG
%/CG`)L<%,1]2@er[#(5`k0;\]VC:pJIj9MQG6i.fFj7R7_4J8^hK7_Am^d\g:gdR`Ok2HZ(L84K#l^h/J$8%,#F/K>&_l\qH:RZ.
%^pYHE!<7l;_gWio]P5rD5Wt%Z>i(OT<\8"SIZ!QBUOkQIV\/kB&BC']H-cY*D)M1"*U>^5SE3cNC:Eaik]Gp:m`Bo>BHFY>dR!t)
%fH;ba=dGISJJ>-H3&sW3jK;X':0$-&DT[NM'HBK#DW=2,!(ZI$lK@j&qPpOqkq#ODgq)=@f-4h7[@G-a#a)b5HarViedL.)H9kIR
%TP>jn]kA\D\\04Ba72UulEj]n,P<l1)HbG(AJKakS#&`\ZC]NF)d)9Kn5$4VZU^ac^jiqUIk;'.\h<t6(1jPLj0PoKVn.n\l8jF[
%qp_1K=VcSi*A.2I@$ZLSQKA!a:tJ,Qi$8^1\h8,L>m,4S"N+=9(Vttt"=k7mCU&\f'T37WqtR/Z>8DAUI0B%fm_k%G-1d"=:Ats>
%b0P3@?@5'n`!cSh(ucjHjj+Jer/37b'`KE6,rrIkie;mP*?p2eE@<.L%uj-=?c!gj?o-erZSG7#"UKj]iEq9.I;G+Z7#P\M1G,"o
%pm8TJp5Au)T3'))e)KIi8J(k3_%9-7MaR#(1?SM&fJn80@#1T5BdO:57NCqO^-`$k&+Hc)4>u/*"@F1!05i2D$PSk.J9+=hTZ'Q!
%P$>t"AD/7F'2R&2Z"F2Qn[p]MRE(WJ`ZXh:KL#_eO!92*SMB;g&P)bW@*Iqm,L_?.j'RI*"JNHgE[aRR5+[Be?*^eI)Td31G\.h*
%$7R6@DjgI75,LKhbf$9qbDhYZna[8ccHjE"!;nkW-Pk$[b+-_'cNN5NI/8n,3KejZ"5TgG7WKi4(!-Jt\s.c%'<->s9iCPWh3PF.
%Fp$>Aa[t;5P/ub---M^%@.(%p$N5b+6<1&F5>C1!U1aJO0_g(gbl9tQe)[CiRK'U1INL`EIu_G8*@IB5&c[+tIhY';It[s=O.Q/3
%k[#`Y;tS<6Q-9(hHKP6ln3<W0E=_Rmmk;GBn+[c?e;U,1R\'Kd%oeD#fQE(`bJ3)0WI$PM_.V5nmeHFTO+44B>r"9^kdE(7krj4A
%_iLu!9O&AkM7L:#cb+8Ll4ST,pALFcSRMU@clL%<jHe\0pOV-jIVehu,6.V]l)*U@4UCeuk$MYgJlr(j<OC0E'\.e5e;HApQ&<.[
%oLk'=0]>1/6HEW`/!;Id+D<O8WDJ0In.gtM6"G!/8RS^cHELUQFiX9Bm^UFd=H<Pt_*>Df8/+2lQI!RlUORUV)/Zs0#*b#C#t)9b
%I_r8pGJa!=6oO'#n=fZ<!LOd5#_,S*E<D,6d@q)Wjd%V^C`XiO+n#,lnW^DrBBU,+$>q9Y6b"?QjaT^0>mCfniu&ppla)[4fF$.\
%_iAJo[(6%[_hu3A(stM''KuAgCC%WQheLm?G")S2m/*^dDd]7=cPFVLliSir0CmlIB63jYTEkim+3+7jqjNa/=(:p)#$M,#!o_9#
%9U*lY7Jl2+9A`.r*aEo>CFZAl<L"4#8)c]:"=,M3TnuQ$)<fIIQnm:W3dN\a@)qYfV'J;*ZhnVhUHcX*%5mN4^sN7CV7]i(E'VF&
%)_qY^]6gg97`u\5,G[FdE#14IU$t_3'RU[&`2I+W0oJijIBBUH$95`5UY2lk:`_DPV9fso:$?1";eLd%6'j?MJ_A2Nbo21D<>f7u
%F$M\LUkSC,(o-d-]#.4%=BN]sC#i2dYVNF<MNfL3'k5K0ZiN0\l)s(!%UqS95[n\Wf#kr&$?(_RR3QRZ1qtIt/kt2XK`[SM*E;An
%*?g;4_Mf+0=3RLkngVKo-!f@>)k'2ZCnm*EMr^m#IO<hV.grd/<":Gr;$S#pVLa"e+Y+iIF;g]u#QNJCD;(;Ri+%q_e"S_bVCArf
%WmDWpHhK/K5^0"\rq!o5K"4R"PX\dnA7a0EK?+fjI@/,UGlU-I2_G[c>7lOfC7*.%<LP@JQ6A!QjQ[jkniWC(C:dH`n9Um,nhX/b
%2\]\YSmCo'c^JBQ4bXYd'T0'V5R6%BMf*oB"5:bhD/jXt<rpf<E(LGZ'6/9E>qXB#TGu)V\@KMeVf!K;__,]>&7Tok;8YO<mk?J+
%6[-BU\j9`d(>Vh+L*+bK=GV:].e-%63^mb<`;VNh\r!?cYX9p.`MRC;rKCKAs.lsY#>uNEeUjJXdEri'+slJa.81,B"M3DC5R.)q
%R`+b^1_BOnRJo5m+sX_Zl9%*6;kblNr_'>Lm@IsK'`m8M0I(&sBKHG\.43.<Y,I;1#Z<`qn\[1rlu>1k>L[Y8FtnCqWOnoujbsNJ
%_3&^/CdjtUm#IWU/l-IMr(@_p"_VGe=0S4qa/%1/7T>_1&W5W,/gDb%C)@h;:s*R@)2:Qrq1*/;=[&q6EV*r%LSPqL;"21gP]s@,
%lerC0b.Al"E30O.3^aA3nkoBUkp"%d`0<[-dS61LJ1eo2/m'$_7&ErU@F(-9J@HBb5dOQ^MPF'%%P,R6nO;C<2<fj[k<0k<l)5SM
%+d%rQZ0l=3aL;bfJaRSEKL0j>FA^c3\X4FX$sKH)FBhmdTL@)uIF!aiSX]l97=a?H]M0ip,L&Be0e(cW637[B4Y265K@;cTD*UPd
%#`\sh`:!UY\>'Epi3EP4Gb<Ihl8*[Qo^!2$#`a]ZVTZlPn\@>!iuE\9p4d0JFs0+P.^9SsDKsWT8>M%&Ei+_ZG)Eq*XU\1kjnL6(
%^*(^/#ML+%&]"^aKeO20Td@=hH!m;O6YJLhBjpcIh.TR0)<PfCLiNu]prp=>N(&^?qDJXgE<RNj%LS$=Wt]IsC#>nJ$!gMe45uTk
%588%[eDcA,7*;?)Ra3!R<mXT/,-Vp>M*?tL.u^!dLiRC?7*HCUn+qQm+JME;jCj=Rj60`*F+l!&COP*K,4[!@BgaX/cjlgAgP`n"
%NuUrQ3bd8-F2^ZM[_*@\FISn-!>*WnZh''j5V"rP\jj>i3.K,b&4<I`0.Ch8$-[pQ`u0\H-1q*8W6<?$oHMkF\,cQ&!)")"3>%Iu
%_o9`8_c'A37Ap&k(aOb):.Kgh-Dn3/X9*UjEf-*/#\D)8d<0]CUK(I2j@-n-Bag`T"B3AsM,@da;U[h27Qi+CR9^l(5\O>fFBuC&
%@Q''.S5gbi6Y.^j"`bUq/Yk+bL7KKMRiF,M@S)#G#csCjnm5K9WM]1V@S@;-bg4IlEkPr'4@AZL(^Z]WSsG$;o1;;-?Z\e3KnsDe
%,)q(H%HD#ZBF_a<fN>3@3Z(-nl$;nG`VC]BC^'uGk,)?cT$"M'=X;9rT]eL,^C58&.4f`W$87U"#!MU"81gfaM>i&."b4^8/fgEE
%&7Ke\iTh2ZH;siPQ-%1E-jY6oRg9JE5u.#(3"1Z7'I$U57fS.t21KS-@H8E7onXed&VK-)K9PG#Ueom2S`MZr]4J"F#&N89".mt"
%9QM$knQ_*DaH:h.*AIDVc\%jNkUsXkOl@>F2W.RBE-p(cqOe')oB0CRV+oCK4+@B4^kZEbJNXZZE;Z/4(!bFY9?eP"IIJ+^1%"1\
%k;$U@a*/]h/JDlZUq>+W,7YO.kdI!-D2Jpi%p;9*/nlK`"=fdk#<Re1$0jnPag-tbg)SEWWQ].AE,ia3E];*0K<PHfV[B:Op`[p!
%*ja8HdfBMO6bXrZ_k_BEV'.`kNUQC.FhrtB3Qd3Gon[LK01aQP##?OT9P'lR$l.`sF1D=c.*!!=P;Y!mQq)?2=^rFY`6s(/=C[.?
%#1Q);5AdA\,%[.+ZFE@>U_=^idW;MV]<jWY#Lid+k<k7JfbIdJm_h34\ag=[,;GT>9=0H47O4Dd?pbc?I+F&M3r)<ga28jFa<APZ
%'%P_Z\==l15(WaV$r=BSGA^$FKp\csbY<&d;beh1UL[%*<)Tqu_LZqJ*\P.lf^;V'EG)&'mXne7.h"PJ_p?6gULkCY"2FRAq7:\K
%s7QbD;KTo#/kgX6(>-\bq.BPX^e5X+\'KN*B+[l9&^#a0AWd"!n19VuH:>mI4UYFc*%([>qjsMYBE9-$N)^Z]&&=ZLm##%^8#>A=
%,s3.QHo')rrRl\&q]DNE?1LZaqtNV7/kjI&-h`%qaBV6X*8N9I>1*&BAOJM>om($7@f5i5lk/A.Wfo;+#.Mr8RB=r0"jb@=]7@5"
%hms6&rtjL$2V!?ahAMQ4Z-btn"4/Sg+tht?es(P'YC!E8qg[.%nq:9s.ejMf085LKY5:JH0cep8U8-J!0;q2o"CMcD+/"0-c2cn_
%B_^9M`a*e30A6;->m=o-+*pHd[A^SQZ3[3.emfMU:-U;YNH/!q@u!0sP_s<_`#>-lL]o'aB'8U77CrM%]#[8B5,Tg06.U"=V\BFM
%:.dQu-a-WW<^AHH3##u06;>XP7&[$e#]qq8=025?+RbN+%!8Cn1-4C6^S=fK&79Zj&=T9gQj6'&$<J2rB"2i5Rks\U!>1#YRPZB!
%'2n0YV6uj*G[qEgo9M-7<p4K)Lc)[H\Z,Z_n@3.mOq1/COnGXsbE0,=VOBV8/rq!jdsTQjdM2*d8R-RsZCD4_fVA1HZAW*aKt:B`
%2L&+Hf1,WjW$%97Joo_f.YB]PR4D!scChGN_)@5A['DT9#e<RkA'sO*e^gO.#EiAs1'G5Yq1#?Adh^$t<Mh82g0fNKilI5Pi8B;?
%+Xh4A021:+fM%(QL<F)2U'M-(U-cA0=Th10I`/V?`=W8F.HM5'0&+=qJtaQ9<>8%[+=Z1K<@(;sY_:#;Yd>RM\o1Cg'NNuKHjs-M
%@BlE'VT[g]pePHf(3D$82$2=T\Zq:uI;F,O%UiK_f0*Pdr&^i:n7YJ3'C"jmXGbED3;u`+"MVd]JH-FarW.h7UiVCqk9,pB')^\G
%;&*-Pi"5Z"ZT&WrH)?9H-,GFq>-ti9X@@D(ocVFl\G?Fh0[:K/4!*B9=,S!3A="J]-&+GVQqAO!2:Vu&(RQb;OsGu*$4@#ogd4%2
%`"P?t@iM<u"CIP+92tXR?STGj-:.HpJk?m^'A]B$biR9ULhR)ZjWPrf9WktUkS0%l,Fn89ITTmc\5bYH-kbNkYuCr0(E]t)>dkT5
%dBa)ND=YNLCHR[Di`UJGDoW\*rk=>mA&<gOG\mmj3JP\..j2tX]LN\iX9+J<L,BDLV+IP<%>*tfoT\tAF<?+qh%@UmoUI(+)0RGb
%&Y6G#E6!."RL^cC8!d$fLnr)!#AdsB0X,OV^#c(6!;g47bq>=t;\;?$KK)ijf3l9jWk;9d(OcV:j)V6KHn^ecUuEA]L$#0apndM3
%SE>j54[;gV6B;qNU)q6?e<bki`^eGd1$!j<;07&*+=JO(.BN@_/`3F@QY"!n,n!B,fB^M;(mus$0'B7,JuqF@)+gc/3'[m^L@mrh
%-t,[b>*]h)`&:k1iX_W(b.j)Q^bfFJJO:ucEp;!mX>rl,(i5E%M3eHUHZWk^4PITnK!Id1(/HrI&t(_dpoY/0fp5k#=(rNc.["lV
%.1KF06J[j@6`pL=^DL!L%L<boPu3s:X337@Y2D+,[-Rh@"O#M\lQfoOTu9F1&jIr2nR\s6Y9cWl7.`)A(Zl0/J"c$k^0$"%dM4+p
%(e5.>kZJDI#GJ#;U@KD\*-BM;"cf[ujLQ]Okt#42C*j1$X-bu47O&L67cfG*,S`)ZBM2.p4Y.1dUAD\L;#s8*"f#Tr6B&Df&Q$%M
%57]Ri\HrQkZV-6d<%R;M/74Y)+es(!<;%5[N`T9'Z7>i9j_.$2Q+CF)rZE\:B\gRSGCB8j1\BdRGHjDh%p@rB`kOsBS(@L>8SYmP
%0Dm#D3W?]?r'qOK&;';-IJ5Srec\V\&k<XE%Z%3nJ%55NrWf_6libE&8DWR9,EsD%N;HGS#TXFqPRW1/MV1t^;&?qU'njOI&a40:
%JIEf)TT_U$?&TslURR6KclGcgn?HH.nA:(4N$QtIq^;\%#&QqS&o$(9bWn]Cb#^R^]/6Js>%hKo?PW64oL5t*#KbrkajM]a<YDJh
%eBPo"%496)jS*#9+'`b<nhlFuP;oF?,ki`rAHm!t4?k*9:Iu>(NOJ:nU0tr8\,WH$4Y/u7"V(,&mo3d;Rlsmc((k<Nfe/t"bOlBi
%7-+N:6MTNK;asl6GJMLEn\@E[?ht7#V&f+&Vi7N?Z@%6_0I#SFmTe/9R)t5s'W0t9>I"+3i,WQOA,"N0ntBk5h,T<haO>WAqkQg+
%:TRu`:#U'I;ckS=Cb`Af/=#5XW:"ZD@3Vr[(J>(+(doVp>r#&,[,8=Q$06u[cbk_]XI+qScfg/JSmVq+Uf'"Qd2i4,h^Gph[#X2S
%rdJmf;_#atlnJUoKS_?BO7_TqM]lauU0)+$f;Rdp4,MCqES;b])WPS)_QVQHkn73ck!p,R0C6QKi[3)BXJ)G9mcZ30dN9RPO%=\Q
%8rPO)$QPbLQ?eZk#>EK&6X>d'6Rs*b>%EIl!F>giB&i\tdS6&fQNNh@g8QPH-Ep\E/rN;^&2(pR*7\V&>fYA9$mg1SO\&A5$uFC9
%@`X'0:jt1`(j.QQp+bC0Fr;K/k$&Wk4c`GV=e6;l,#%1HqabuYg],diC!W2+mT1I)jdcH.(ZI7H-ku4)U=>"C,lO^q7m3$02-Sup
%4Yh/h9<M,?dQM4FO#qS8;tLjH;Yode:[%d2;B@."V+\W9?,iEi:H\79<OOc6D%dE+-TtA=?Us8<b3Be7"mLg[WJlse$snnfHY-&2
%;r[bj96gkn/9,GCmXIOn"2sj7F\ohK>u6DOj0Hj*l65u-Pf-F2Q:J7C3)sAB6?9R"b-a&98FJaVFuoU.]+5)bN\7?6@[0uh8a#Vf
%!>=9+)Y`a"/=j'O12]hNL)`Gp5_<^c$UM=/<kD;e"ttL8[K,DC=<?W7Pk'dipOOq!?f!Xh/1njk?q,rG]OXK)gu($e*""7oZ+g,W
%g5',:;h.i:A9#9nP0O[4-D>?hQ]Y)H",Q<(>SBmeeihs[$mb:d@@iR&LhW>e\l,BHf_^r.S<_!bUU3Z.="<4X-IEj'L4`5NTTG'Q
%0mDtZ-RDHm6ouCFnh_UiU(0TRD6Saa.#BYk#2<aY.XuYr6=ma.4Y9%[i_;LtNO[sNYDg;eLHJS`hal8K7:!1l6,\p1;`H656F0<Y
%GSZZ4Mfr4R=Je`>a>U;]LPf1NK=Cc;2\B/aJc^ihVeG#WM(5r2qeh:S"aMg8*r/`\+6RZdSnjDiW*Yq\RDHdO\]1>^-eQ8$QQ]d;
%!Z)KS3"8JClhM]d+fV2rr9\SgarPutJk%guQ&[fmMU6rE@<T5f@'6^JR5qOVg7lZd,N0A#TtZS1V6U.PmQo@jn/'kh?`6[fKZ].o
%U73LQM&]e@/rX6I+aX]"\X6?]_"U"6_N'cHJR-.P'Y;K,7S;U@:Wec$hiX1`>RDsa"YpEik9FabGYNg70::a>*hEQ$S5_&[nXU8I
%eoVcG8f_du_@tP[/5fKh$LOWL84k-B\PTgRPKk/LpIRR8&o&]7PhX<4%]O1,_,hu)\e`[^V8E^Sn>([,X'@?rF]@V*$<n/I6_XW*
%ZuMlSm'2S$Vjf5(Ho7&!,%lL3Ljurt`&;mI4@Mfk2T.#Hr#Ugcn3SjAFPWmO,pmn7G>Tj-Zfj6(/NF6oe+ULX`nPt1i.Vp)h-"5-
%JYX\krIH22(.*'2&`"k7PL%<Z0&DaBW^(O\LJL&r^/^%d?0P5jY5M4l$_d@fOu@3^.i1]P'o&*0Vr31kWO-UGTr^e>"fNgQZaejF
%EWsnhJ5BVu!MqBkE/PYZ,mDk_//^)EMEgm+Q7?9Y!H6*'\6LRlFSPJg,s*\8:LXYPmS7k(Ldl\+H&a<oXi`9D[8:br9Z1rf_f?Mu
%a\pXa\2mn:#Q/jE!>8_(0qo`*Pui;Tmbo`=Hm)"BWZL5Xn>MTep"0S\/0KaUPE'&C>isLR*5![(Fm,Q,3XHhq57$tIocE&m3r@]B
%e:g#`++89-kZ*dR\Bu$WHj63L$PO9dW)PmpT^dA61ci!6]+\0^aP36[iY\=#E<+r=;[`ucPP$<3;@Mk6Oud$e+d_jj[.DC$Io96:
%XPO.>`fP8[Y?d#MH`eo.E2,b!R-+%XD6j-08fZ0D\(M22^,L.XT=d>/ntTElpq%Ke/^m+I!-+PX&M`<G"bWn?\D>>jqf$1iV3Bst
%gTpbL.O9u]V.AhOj\iXP7FaM1/Njc0-pMs'P37T:>5;l608?)6kQ6%!^W6ti+A4H<+f!1h&j"f@%KE2<ZZ,M6[12:O^qoXg9uVNa
%+THQ:R0X'f=FZKXH/2J"%OG!8YOgbU2I$q:V`NFbgl]R,5e)EIoGLY%Lu)LKpJcK-h9u^rj@r*@F\d+ofT<\+UJnB?A5:u#V\B<H
%UtC+3o;3IlR^9E\MAKDb'3j(-35Dr<%*IN/CQq5\kg6[#aso&dn21[ZddCI3UW@8*7JQXR4sS[=\_VfD\*T3dhOqQCR7R<-CWtio
%4s(fbK<P%pk1AS*J>0J$lpBeW^kngk"joJ>YX5%+<9<(._b8jE@)GfS<:EJ?_."To%S;[`Q>FD,2'Mh#I?+]::,Uh4,"+P_:@bR;
%eF)<g%!Ce/HB`Wi?Sk?T0c5O.>h_rp'80h[W/Jc^V\Q[M7oqJ!nlC:Gh$7lo)29$mc8>g#KYa8PosUgIWQ^.WO]85,LI%VCOV'Yo
%?@O`pR\X%3;KU)SCn!n;%>u*'M:dL1J^d;Rf]S*ePH8+(oa\7DO^Z9QQ1EqGF@Tq98!bhS\jnU]aV)"D&!?Y",HH5^WMAN<F2^L'
%`>GaN(,&*-UrSW$M=,)@VE'6q:>.!c,LZH7;6^1c;7VBKdY[;Q@T>%[?/u^jMb\BC^Gb*"VZ\3FZik_'DHY)C6V*<&q1;LNj1j*\
%hhq*G78_/f`,+]_H"kYSFWnn+'Yt^QQkZmI.gcG\ihVEu4[T^qA]jW8_Y\[,?',i<q>?4O/kAV13Jc=o7o6S/Uo_bHJUT`G1t7eo
%?.@69e+cD+_("Bt7NU/pls7S+A+5(ab\ork1Mkk-a1pDXJ4AS1H_]KA6`5e+@f0`3G;8^FVf(C1Ykp-37ANRbaiVk=:BMt/htZR9
%7M=j0cZd<m&\g<DPg'[I$ftt0IiM_+/@M_N\(pMO_>/l(%m$g^lWefU]qNc4JmQ3?LOTo,)GXVHTL6DL^J97@s'G5.cH/AI%j,\5
%>5e.io;m)trt`:OlSQ['G:HUCbjD$O&$!=>gnJJ<?6/_)]c^[]\!JEMjYnZ[+NL*@GBsYCBDA!nIjm?mFfqG>\@(,i.ql<DZ%9fY
%9!ah1=6[)u%"?R%1b5+:I1VFP>Q5'pW;s2tdA+-D_ZlZL)[Js)#\IJ%0`\J>1/1d5?/u?PTNUT8U\!5k`H,OT+ch(YS[KI0mSu5S
%]HqrrEHSsfe(em41->I&7II\9C.*__!:`pnadjLIR@6]6i3WgK_s&2S=D9VWkFG6BU0^P55NVKUU(Mf0ED`""Si1*LUN!Nt*n)hS
%')J]dX?dZNH4f7B=7'$1eBQB0V2`_*l,OpAEQo.ndW$SG\iN\OWsX?$oQJum2djUKrbjB9SQgknn+V!4[;#`U0%E7#Zp:,ZSFFoq
%DXj@"7M@sj"ZgbjVu9p%\mkmD]hYI\#ZJF82ennV8J#'CD$SR"p`]Y$rC#H"_aRR&(7&uV7kc@DNWd^9Pt#+GrEZW"/k1@K.p!,_
%$P78-;iT!i:d;_YA\^b:h@r$-cAC.d?W9eMa[jrt)%]--RmJIFcMWk,LOZ0?KqB5Zpj$p/[)b6YTE^&q(0[I]*lI3#FP!!o^":MZ
%>69*s)_0=6'79]'BcgT`C+u&:ghS*:_SL.!Tuj6TJo8>c75%9K)jA1P@STDU[*fE]:@P"h)js,E#N0M-3GgN`c2Q7B[9*/Sa<H^c
%i1%T_ffJEKHdtt76k$IU_&_,HR;beaB2gda0Moeu0NgsOa-2`WCuOFKiC:9>W7C?9K5D);1:S:J/FGuKg/VIm3D/(iG\B$ka@JqD
%ctKh>:8QS-AABJm]jZ2[5cdVP=U&mA6`V>BAb#oR9#4YJ@iice*AXr;ar0eIDB?sF6b.])88"J#35:GSXa514bbZM)o>+[dm+.-8
%EZ(,?4I2JWEq<CN*m;f<\To_B%tBPm'[(&SAsQo:6L\('34c'<>(>Fe_mre7(;t=JON8Knc!n?'VOp`q\%qL*2Ys1*qCI@^)8^rB
%Y>u#0W`O.&R@ND!p^MQNgQd5s>H]jkUN^RdrT4Oc;p1n!C,ZuMAeUT3Qi,Ff=Z>Q(iM9[-s0XC9[eA%,bPFEicV-rV"2.4+k,Yp/
%Xj6e#(Sg#VKOXr6aH@JVE-(RLYL(("lM^]1rgH:/cVUjom<?i*e_mB0ai8$$n/I;QPRNAaDY>$7:ALN*Wu3b#CtEWm)ac;@I`5?o
%gT+Qe^So>7"rn1r_1.Y_oUcO[q9KMiNb0UhVEFu]ZYd_NNIh+oO)`OH2g`0iP!U[KDAbr2<-O&R0U#7-AqN/;Y/)tO*)h>6E;Nn2
%q'j?@C4H_)iGt0d'Aj9&RUTXj15iqThOqMo_*QD!K77l$ADs@^ac6K6`_G3MgN,o7%1>Dn2R--JdJ((fO\r3%lFi+VTU1Aarhkb9
%/-`rBa];b=Okf#PmKK0Q!%BplhG/5'E]a$UO02qujn$*36$6Mq1CBU#W:DCG>)bir#l^%HHt`@LI*<#21[Y"_9Ir+%hT"o3DaVc^
%p`=OT;QKPu:dbBACohndWj4D<0KW^r/^WjlHD?Y"KOGY6b.UiRI=^#2APhYj(l$fu20Kq'f5:BL>a@%^ba$dbH2Y%XI2hH[DhH?X
%E+Upg9'\Ec?fi[=I"n\0DrDMm1ND!qbBaqZEFr`E"#<gDTdX&kp_gc<+@B0"r.5!$g\cYThmPtKl<E7pPI1bsB$9*3B5Gj%</mD[
%@&qs8SJdNWHIM+i334Q8<1;()E>16]C:<nd\B@V*GF7>WmJ?SeGI_-t;lY&rNCl(Dh_NlcZtIhJ>ZG1A$qG.j&a:](q(F]!;GFfo
%N%hrhir;QbWRcl(De_)he7Q`jrT;9SDc4Ujn]S^pj-7K(laKQ71%itW+Wd0pl,\D!e9c.;^A[m]>Zih!dWUq].dX7nBOn0rBh\1@
%T64===n!Q<)tSqVGqnhO?#ZB,$OXD56H.0!8hJ4<3t-71BN,n"=+4aH"]TWJd`JH;)=kdj-:8'daq?tHD@VFs5iLL/9IdGR*IlQm
%"$R=\9js='%`M;/PJ8:e-KCGG^F:FtX_*lIX&f+!r@s!@$-Zko2hb;-h@(kO^-#>r1obo)/Dl#7J_k'N;/+Ub1@<!%T3B&_\<q-`
%R9-+V7=\FP9pI,0OI;C+`OlgpRe!eQ3,@ejrAIZMA3jhmP;0QCG7V#b,WDnq&\-)$;1@78AT056U_`'A`p1c5/P>[oeY6S?B'PB=
%]G>'bM_ZS*kB>IOW;ct-.%)pOe=51H</ZnCR9<,Db^(j5VS/@Cl*sHq-s;Y"H4OmcC/JU%P\(\HC,5>C271@tmcA7lSsQEsD8$[i
%GN6^0Cr@E$`D*Mn<o%-Hm@9F)rf33"S0==iqirJf2_-icgpYD2kI8[Zp"D(`2/BAH16>nHfB.BrY1I8PYE_2r13_@4mb0Lu[/cV:
%Y1;Z<m<VrQm]=[([CK>-CUMoke`%rC-T?"Y4`)Id5_B$8"2MGa?!iQW\JSm#_-Dr]@PfK&#PERu`^-BjoAhi[Dsh5Oa04RJ$l+W3
%Mhd^X&nA.)L"6+1Kea4='3qq7hJ"ZZQabbE92F%g\BJkS\WO#9W>h:h;bd%fjP[9DYMja/502QS]'amN(7`pEUOU9AZ$l#4dOSng
%`u+/;TlrLNI@4W<k;U,N@5\9J^3&+SkK@DSDYK,De)hS)Xrf,Uc1HYD1K25a%@sJZ]]SI6l.,kQfkfArs4XA@e,Q!0elB?4"lFF:
%TAb"]B1B"_jJ3YX'._5mRRo)m+ZFR).M!BR%KsAJW&4Ye=eu&f#),5K%\lXa&if)6LI2h`)KiKT^qlBQjZ=^<0sdW>;mu3Sh,.;=
%e9`!55qe-(o07(;BCR,(RS5gCVVh<@IT(7cHQ2BNS=fg.0V"d8VG_#Tr]<@E]tVg9qp'[_>N,snVJKemSF\Poq3g]D_.nG]/!-7.
%1Z/#3HqY[]/>Rlp4L$b.o:<m7COYD-h)aJ[SGCb$B4q/o^EPEhnt-epWE0*<&tB$V@]Kgo:,C)e%/%+Zm!].u7dKNb-oUAR(Hhb#
%Xl:A)))*&s0ZDeeZ>u3"`tB$32\t"WYY4r?)8o?Sd7T"'ZqJk[%d"Y7.F!t!Ii!931Lt;%2U4BMd+eVF.bL[YC\@;M`aAC>,Nrud
%K%`\p;e_7SPFADpk,G\:+TmqErKucok4u?/r[bZYFu#SB<;oh2lM!dH%U=V5,ih[>R?[fDTE4L:AnkeZ2k6`oeL=,G74!2R[4*C3
%>BbcZSk6B*,q5U,4/da7n(b(7HLNh2F"ZHZ#hu6n0u:*UJ(iiBABL&EGI]F21Y<JRg2!JbLV(bD0D!-*4Rr!WOE_@O(/DMu/.CWI
%k)#FMian^+R3u>'M3iMIAL8$CNA5^8=ZYf>-]gZWq,7Y]&cp<PB999]HC=UtdV\kNmHmT+bqGQR7ST!+P(RJ`Ca.%K#Le.T6l$d)
%QVIB^[cI/[njW7%f'0Z%NI(&d;BM<mSjfD6^LUfBNT9p`VWfdpo:),E_`270^f,.fY8IAeN,>*B_"9j)*,"fSr>H)+^O9gFqpJ3D
%WOHqhFA]$Frk9+3]edF!.!#`'riQ*toEd9XJ2[Egq[Em.L*);SAb`*"!h+"hR<ltnSXjnU*cb.+W+Aq@1SY2\nC]5UQJf*!DHu>u
%BqPA@@t7qFd+]EH9\[kj_./S[fp$c82@C+cC+'IR3V;cd/Q4*eJ@d8:VWq<G\HoL+6%shJKh`=FhhI&I=&h&ok%+!Crg@pTZFK*W
%kb6>o)"Tl0Cr\3[4HD5I%^7b8@n_gAhs*<n(-\5N0rEaScLVn%WlF4IN-QIS7e.B5/,(N]MI!)C;P(pA)2NCcWDn50`iE-'978_m
%Rn/ocp_uMuqO=O2D?bq+\Z2(f0=)cWp$+reB=OMq[*fE]:@P##1ojb'ZN9ij_C`sE4O*lU5,a@R10otR#JMX_R]W>k]iQ5>E).`>
%&FR'baFmb!H:HHamCHsZMe&E%>$"i\+g@HQA:DeMBFB!if*j,(%)66!CLqLG=uV5Ur8+(a]/M-r5;Bo2-k3NY[6]9rq/`*BKDnj0
%kIBD0m5I9_Ahtm'.41MW..t#SH8<5Vj:=lLX\+hXb&&X'b(Rti'mrHiiFLG^Z=bZ]P[Sp9]]:RN$M/kQffr<s9leEhm5P+Y\ja/S
%-*Q+\4EcHGQ?aBQi:\[8m!1/V?`8d+1cLKXk0_sHR[XdtAi,t"i4I4.\`l@f*mMrY1j9>N_eraBQf/^3)%Gaa?oAPYk2G)XS=>:T
%o5JRgc:&>,H(2[]9ZYFU3;9T+Wh">`=laknA%>V4(.<5sOI4(0ZQINL[U5?1AJ[+4r3H7-/&_p:g\bB7q>H]PHR3S*]b7GeQSI8N
%L%`9(6,q.pUDjb(n1Q2nT/J1LbDdK#[G$m\^%ZS2;_GH3qq9&RV&"#/`GuiG.!fKI5t67)UC(m:N-o0KR?XGI)fZfKk6tl]Dm_sZ
%V0b1[^L%`"'@Jh*OIeB/G"VmhbeKQ+1W#d_=$WZhn2"<',EOLcRe2g6=^m$"*]Jf/h\V]p+5RRD4hj&'TnjpQfO9Y]O%&0/>0.I-
%,bT&_Wsj]%h1"Og;@Tq+Pm#EHPGZSCW-SZb<;oh2l=W-c$mBP(Rn8ER_f\RPL+A%2#/&-H+caCqYkqD"P60XdFs+Ef-Po)bAQS*O
%\Mn_bJ^8Ifl#gT#]%cX%r!PE*C9MuJ**`E?h.d.^4P8UF;s`Mc`EpGL+7:n.MPeECReoKoT4md^Ne@heZr;(khi47KhrqN!.Gmm-
%Dk?<e7SSu\dCC5#'Aj9&\gbqI@.Z(X#lWiob'XsE7U8EH^d4T1*(JI[,]GGTg6UNcqUY"G-IZlL)ti&RV*6Z_RRNuRl-t%r=$`_@
%bEs6hBiJcpDB,u"ph;[I=`B`Ia(\Ge;f<JU)$/'#j4lOfX_jTI%.a>:#,g#9q(kWlG4ssWY$r_<iYLD0F1Zm$I,]8tZY9>Vo/3lG
%T1bY\9QUqPFB*nN1>HY!'09CC.H4^gX0?.j[e)<_-VD0Wd.:1S['lZPG>-Q9Iqc6,2R7,*3d]mtD7\99mIH9TkuZj+G@XCV&?TP`
%?`3mdN'EZ%\IirWDtA0_=6GoD9S;,-_lpV9nhL<&-(&sJUlKBF:!W>;]4ob"f427g<s`kg145(#AqW\!nf.(>LO*i?J"%.c579N$
%]lSi%O(mA-?KF#em`n4D;TiXmnIrcXZ_efXco8%#r-ktu30S+<2DJ@kc7-<Yc=YgP2S3Z];fBE+/)4fX#_b85Q071&V:e#Tnk0<g
%aRe$TC8TiZ]CpG7Ag6c]=T(8#F.W5qV`r&qWT;<>2!,CqY6s4#`:D6==T5!/>k:II(;(Yf3@Qn&iK#-ZRu'ieY?K0Q(ko,t=V^=X
%i4Rp*Ira`P?FB#RLHdk6o\o7&rK7I<aK)^DK3Y,!mp>)K.a?+]d)k[!C9Y]L+6N@I@\qJNT<e\8TZ=08@kD?Ug:_mZDcD$u9=_];
%!\?FDJ3SS.L_\m;UGXW#H&r@4YQW%Ds2Db1^KQsgo/aQ0]^`TAo(KBBqR]>f;!8ZZ_1#HND1)H9GQhnK13lj6C,^_U8BL8:T=b7*
%l/6H?I_l'@=0TjkG-P<,dNB+F>ILO$$f*OS^ccW%Y%bK:6Ifqt`"l?O9oE13dr9Bs4WHpl9tgR`mp<f1n'LcP:/u=]\PHRs>jW#K
%G_k>[1Y6%)<$@8Q*9UlLM&.DSA9o:r)F:PCi2fQ=i"WH$9gqte):rnNHD,#@"ts4M[1'=g`D;99^YA'NDADAm8A+s5dQ73?Sc:dM
%?C.gQn*!q)g%E+SDhS\K/(Mi#2dGkZC^W?h^uOMi<Dg]]#DIup+^qRp]=U>="MYH8.tdboW.;=O&!)0GS[KFreGg?:Jci-MAe9kQ
%[As0U#an;M*fsslA5+tT38rVF9o"Ij_,'lO[.sj_d")+"_u-B77bP>+PHfSZ_TCfTB(tAi8uK9Ud7F@Hr*X!\+0MK1HopqqC-q!Q
%Kh@>*oeMnZKbUXWK!%cNJuA8grZp4Y;HeSSSiI.(Y6^U+LrR8\-WBs;6lG:t/t?Gs73/^>R3X$#:>\#U>[Jq]s-6kA+RF2(4Q9N2
%GC-Hm.8YMDPXX39'm)gjL4UCWkL=uKDN6&FJGn6g\Qtrb4o9R5pj33%H+-YShB"OlQqD8`0W6hJ@%?JjNG/jLY8^7<B$+Z.ZMi-)
%/L'mea#B(6ABZCOp@@QKK$S1tc'h`V:CHqX,q+>=.C<:=n2Y@Y^o>rqc?fAYqYB4=/hL\Fe(".'U_l+c9g>.1*=`5)[Ad9K<R@er
%^pEkHMfJd_`S@YRoLL=#Ma8_u:SA@'2<;`cn\IHW"gr[V.X)_O>E-A<abA2g40"_WZSUN/p"P_.m01b-P<7t2h4U*m`INi1,B(WI
%[4?(olIN08NMqpog)U<qFF'je8uIu5Y'WqVJ)-8IZn&Q<i)EdCmcC)YGMB7V+C(a?QU7RE!i&36g@`*86)"[OdYZ'0mGtp/YE_2N
%FF-<Orh!"s=Lt8_Qq.i)/'YgYh4k8"e-sS>M/Z55STf[I<FXG[ZHI[?>rGp;b>u@_YcW@Y^fmV7S"g3h'*G:thghqX62)QkLpeY=
%rE0qc)DTWqFk:'C8hU1cJ?f`+i^\p[n+YOdgP"[%Z).)sd\:%3i(X3%B"\C2((u!=>rlD;Ag3*Ekep>.e5-h.+;sGA($(C-IsSYG
%Xkp+Kef4:R[!\kc%Qc4V]9VN(^N(CV%U/7=kE>sqLlP58U.tIRG,'1`BcI?EI\Rho1>2Q7eW0AEG'K5%kU:+,YOl4bYi;=^;sMfO
%l'<iQh/-.B%FbsrkW$L8`b7>Sl5C%@7,uItUTI@Xgf^S:3lFCdIg+@DC^M:lTeBX]nS#QGaAo"l%!"M`Ss0[X"7>eCXio(!)_nc4
%WY&7ol[B"]3O]t*'f;_l<K4YSNu)>4H96Sjd?*,^2X'("_5@s4;Jjq<^jDFKp]oID*'/3iFD4B;D#G)jg6e4n4\R4Kp]2q=%HOSi
%'l8M1SIg"1s62u7A.10GQ3?OY6<7<]>#7lNYM@j4<\O9Z)OH0K_,5*"E34-HZlCLWIBb4kM+pi:JK6,H=\csZK6'ajXgB6eOV>4t
%]lfbKSUc$)aM8>'[IN/j,WloGclcTfZJIbK?G;p07uOQ-)GB+Wf)^ouFFt>L(hXdbWk7[eS0VVbYDl?nimHeEf',s$XHcH$HV@qt
%^8GjMjB=BE&KBou9bIV,D3NALTe.ALap`8n&S8*nAF;,pF)cn%Y\_S8hQeIX,W&B8(c1r1Vc'Rjg93>K_E&2G^kC8!?Fr`OYJ\&p
%]F=JUinbilZP%k`1K&gUa-'om`[A_c8MZ%52U/a9#,;'Rgpc%/4Qi9UL_Kp@pjcC[;qK6/EfG^Enbe>UW-NS4A0Tj7=:3=Ra]e-)
%B<K_bjW(I>)=6$Mq!Q%p<sKNs)Ci"J1`?r?3H#S]89.kN,;hOXX&a*8aud"YX)jjS^Mj3!cS&7/,T(r\.3*1Ki*YN1:JgFJp#d0(
%@A%AA4-lZBe,snMFKSPfoDIl/+8r)8(nah"[jD,U40A4DFe:O<q-##R4/kL$rb71XSi0_1hhX9gW<1VpT@Qk7a/unAD[,A>oMW[r
%<Em]hSHk2XC8bf\._T7"1B<6GG9(dWR,=&6LAk=3kROT<37pI_r99m.9ERVZE6RSJU=HET-:)ao;1Kd(rG:%rT]60C#+kq;d;N(+
%.L1R*1n.ou56bqu5-A52[E)g^"^YCbkO3=2HFfUC]XW$iT2RVjYZJ5T9i6kq9-^ZnJ_H[G=Zr!'/U]PH<e>Y]*[du2;MPEG1*BM[
%1rhsNGC'd5=NDcq*P:r`&R<,j2J!;5]7tEB1paB[?(3f'DbgM(/kKG+l;umlK.],&M@\/ZH_Gm,D`&ED'=1kPbqXil8p@S_Cl*Km
%-5k&o\5Y]*(3Jm*bt:Sl,h6Bh'a`^$@hN=BB?('S\u55X<Fq\L6!+?V%!kmJCcJ@uE)1eIXW+`S":a2c;l[qYD\?7poF*76<WJ4o
%TJJ6)Sc;+"P>j4C/lIi\6PI?e)jPRNVaCHEEtcXK##.dON0bkLb9Tifr>YnI>LfeKU7KVGAh)CW/4_UDj9%SRqI21RX[@%d$*FrB
%oUP,_@#"'Udclc,rm5umH((fa'$ucPa8k!eqRDa)'AC;A$%Gt>>]p?QScLlUGm<4%atnPq<hAT',nTHfK2SaBq7:R/bg'Y/F4P)d
%Q$@>iY#(7&-a3l$>![)BMi,s[""m,W82F+RR0Iu/8Vs.m`B((ZS6/AgjQthN7joh[WSSj]9HnHEG/m9OmKmP+W`MF*.aJC+e[l)"
%k9+1;a-6"fE]@Zqa$-I%'/U2Nc<1]F?9dIegTD1^d4g9=gMc-'FE=^nQ=#L'lcmUB[g.9/O(BngANS/[*0rG%Ym_9]K=T='AnW-i
%-9:,05dV"nrlG1fOZUg&UQ:ppct_(J-o##$bH?5Q;J\4+A>s`e5h,X5I=`u:m#>`XAksseK$PlmdZp4hipEESO6AM_WBP4:&PKh*
%`+)^/WDV;*c5K0rY2\a:/sKh@g;G^so]idq1P]7/XhU?1ppYnDW-?tl.i>>0dQ8!$]ODbeAFF?4L#Xj&$o.lqlP_onesj(WMGISt
%`WO2bUo'Q0RFVJRLZUM7p>0RB>@XNg-?Q@rFBVb^(oh024_F)\Y(I^FDk6K.#d;_S]@FIIS`%hQm!'B=<lQk\4C7]\S^qMO[p/YG
%KV%2rAiq.'9TAC?Lc\5\aG@n<UGG84]h_\@,<%-]du0iA)IPmXoO[7An&dEp;EZoCSnu<[`CcWG\*Ljis%_kMj%cH,%c*YoisQ\_
%=6TiJE'A:dQ]M<Di6^<8h\SR7f<+t)#ZR6QS:-7j8NbB9j=4I5OM>iBF+j2lq:qGl%1I`ugb1DOcW39^"uVtSFV-;cZj\#J]M`\1
%l:p]5M]oftK8IJHRc"2/H7^,8)W^1*3*"'X.bsJ?<cJ,Z@&[6[Fo0\s>jtLp6m7"9(sabq"(hZ@44cNO(0'bbqTV\2[UO\BK+X)O
%jD(ULNlgd8Gk!Z(T,I#\$kK-XF:op&1WQJ<1e7>Y!&=4b"J8@IXM:'"P^t'18'&k:Nb?n_iIB@X1i&B%p]s$:=>BAA,#l-/+&?:M
%5m%gmjHlZWP)6&![F[B"j+Col(S&4A#CgAh)")dJ(E?fSY>1RPH=Lb85kYPCh8UEg6s*hd^Rd"")$A2pf:/+p(D>De;5k<;Ib^o0
%m6M0[0$%]+-#\;kaoEI53+Q@liIjS3_1b\3qPqmr"/$;COg)+U==<70Iu<s1ea+<NQt9A/0l\A!?lI;$XGW$J'keJ2*InO,1HmB+
%=]S/<,C,:_jiM4"$rSMum1Mjkd)rLZ0sp8a62FI?Y@%mBCE;Ke)^t/W/(A/&l5^U`Fr[gk&T!H@rOuZ%gOK!4H1TjU7iR`f.kgOM
%ql>FQcM#f-qK_]#$ifY;ihKtrP4(T=hE3GqpXcn2Cd6`3SuqI1I^HT7kuV`:XR/"UWaX[aP]#`4l$PpFYdO!Ys*/=#V;9tm^=:_A
%R]VS*],_4NU/s=(rd&d(dg1tkod<P9V0r9iq9WBY[1=sb?1Jf_m>p#8de>Buj5]E^GLbF7!lhp3jep].^0`W:]ISAJ4F.7]Pg5L0
%Vl?FSYh_,4mH[Q?^#NT$mH@^5E9gl>2D>"^>O1,CeT,A8U$jXPf?RbBU6klhlr!$6b<*>_fP8'+5:^"2MAPtV2*m@C%nfoFpW(kI
%ZUaJ/+BW`pq"=Q#$XQ!o;;/#:gb#Tgh]I)5X7r*rM"d0<+/X%m0.p>L<V,lmn\R9=f^osOLWbBQ/)QZ%MN?Wh`M!8+l.[$K0/fi\
%asFd%0:1".06h53=f^2GqL`_Porg#`KuV!98#r3Bc[Ba+ki!%??tjE:`J"fN=;u1nCjF:jUT<K(HQ-boe`S<&gKs3;l!C:!UFooV
%X5T/jdYmNtTUbs/Yi"\;D7s7\X2$'_HVYDY=+WcV5.G&A53sn<'mDS)^FQLt-=0#8gA,:8Iqfd(?^E_/eip3OVt[sQ\5/S%JC7B^
%nU92Y:Y%VnFV@@>ZuEQdXU58\>ME0-0DG35CR*/"rnZ[s*Lt-d&&-I?"9R%#VtY?CHF*P!h\<7Phj%P(HuZ"\NCVG]BKO#Gn!3"4
%:Wk7ll.PkG1!mN[RiAd(YJ/G&L+A#Kp'[af#+u;V_BjSdQCoio3CKg]TJlCZTl`W^#%un_@=>Ms=2!YBpZ9iVg<1T"9'+HQJp$qP
%p#bkoa]%['U>#2K*`VmH@nfH/nE_eMmR*o+a7B+Gch\fMR!BA#qXlT^c"Z6#cfM$PBU-l'au(@lN*BFgIX6M(*UaW$%+CG:eE+.C
%j8B@8X4+V(A$#.4HUbX.R.ZIC48=&3\^5B3%T5*>HCXVj<4ob$'MPj<r1q*kQPsU)H"!knT5CFM"$O%e>?`&e]mJW+MdCn#RKL/>
%,JDn2pRSqKG)SKL8&"C#P,a#q#6*W"p/:Ft3rE)D<AkqcJkfrI#nEPCKI^JgK]LeAp.eqm`,hEKhg?-kQhf(TGIo'+!:Qq/o],55
%\,Wk?k82HN3/[S'[,r0?=!'tsVX23DTj^*0(Cb9TG+X.54?pR[A7-!'%BLf,05Y&K">JHn9iO$^EjktM28%d3\15-pl#!ouS\"7[
%L@K#/-6#&&elf97X]qS^=$I^=9D<Y%7sJkRlOU0aV@T#TanD$m]_M7gc?fI-FIE]30'kdYm[_k1]VBBu8o+)IM`qYjp?9'K*UgD]
%\)&1p<;a&nqE7NY\ZD#[LD4Hh='Ddas.Qk"*]Cb$QE-?:*m,?k:`:'LdgnZ+g'(dXjH4Z=BKqNp]rjI&<VXY>%kf!e]pBh$RP7H0
%UJ$-$X^h7eIW>,&Z'm?iNus\5]LQ<B-K3>G:R:ET&0dctRfS>2GrkGoA,uhC9N[lgpW$ZB[p.sZj6@:#jQh"4ipRs?5CI#*oVm&A
%ZILMWl`Y)[gg(%C0"lZ.I+@+*RnNB&@<;FXamd>t>76/)$RLl2odLMQgNchLCi$dJ?*b'5miAF+?f-,)_n-H%g<tVW7<Q5P]7mG[
%!iN(pPi-Z^RC]\+Hks.RKkZ^@(mNbDD#lM)Oa>G[lY'@HNLrD.mbnRCCb,!OhWChVS#`AQmGqchN$+UgTb/>M9&X"YKR+@B`7*Xt
%aYC6@jZa3$C_-k)kCD,OMa2)d+HI=kQnlss/0rRs[VaB)d53]"+I-onBsZ5l8MhFX-qR8#["4h^,0qHJ1,,kk$/%GuGT@FULe&FZ
%ZPge1g;0[spG_\U%."*j1U%bP$0`06:5BI\Oq`1.GXZObW,V%hBFupmE^QIr1#CQ"iC24r&20V4H7Ls,Ps$nl"p47JGX_NcaLMAA
%On<t:\<6tdMEHa"7c=5%\djNI9G<TZaT/1]=k8dH4A.<))"j_$#A06J'+&'*D\?:O1h'bm7UgTk,-qk6nK:dUbc1^`T4ggVAgMY;
%&S%5`W/`EZZj[1hR\gN#\PPc!a,IAQJnUY4%(+/Eb>FW"knS,&LoYC+c(BPJs/l_sk^#tlnEg'!31MYV"89VoIf$G8DlN"J9XDF:
%I0*q6(Tj(FdXSs7l(@U.+)c!E#BuNXDr3dG[Vb\'bf>Nb$A2bd*"Ei)is'[A^a_"XJiD56JECFZH3?Fjd\i5dQG)g.fD"p\#;7Jt
%8><Ibi<)d6ZsG/(H$/5m.(t$%_h_)e3!m78k0Y.:W4-hJ?J\sl9Rb^b\(l\GN&_B7U@=+Sf_KXe_qQg[%`ksg?Ir2/2@ua[GF$0)
%k(2/(eMi8TrV=E@ksae*\$Q/uoD+^nn)_15kX199]ihl#md:<#i=kW_"Yf&1o3l<p+!4[FO"8<5OJ)i<B%q7<"><D\YId;?on-&u
%;O;kIfbrDLH_8;J9-ZeMQmNk+7?!,FE?P8;g\4@uhjkJIhlX;GZ`Ae$E.&h/5aJ>*D#:Hf_UYbXDNjR/NuDB"TobteBX]M]YTARV
%K;YR;eYQn@_e]582fR^K*u-Gp58;`7:S4_HrCW5&&ZT(;pZMK'>"5%uhhQjIZir.aINPm)]?L/(7q4%e'luKbb3U1k_85^I"s-Wd
%OGjWX96Dn?QUO0=[d8K*H0U^(5M0T[[?ia>gG\a0a*iA[l17.K,<2eV-iWhNFS9<l)mm%\d["WZ(.ARCd3Q6'`4g+Q]Gr5)[f?$D
%j84;9g&Ip$\6"]$J^'GbCS)TY])/5kqHs]8q/H"!,Qdfa(;/8&No'W/V4.<)iq_.m`P1]2*[nWR:YS_l4d_bd5$m7*'JDZ-?!i&l
%I<$P-lUr;-1&nOu\[N!-s1qh`]^(rMq-(;XT%o;h#SREbHL7`+TM9]c"TK>#75-,`RJh>*/KC]jE?T5_?S=Wj>PTFT34?:S?@KBh
%+m-c"jP]pld<=n=m*1`S[e8dc9D^uDn78f-"itq$oE"6aB,BAfmBla/<%L`7[/shXGKV@NolP!0c(fY;WMZ)CHQ-VrKC@[eS&tu'
%@D/B0T=8oEcL]R_<tD/h0V?qc>A'`+7L_YEV&76Cb:(AV+pg89Oql74*gTQ\i+Si%a&[e$I#\X&0-)l-r0$kQ>CQG-bN%P)1LpSs
%j6jq*\?L=#5pXF_H"t%VQh#p>eZJLGh_.?dF_on*RmiH6";Y6Zs(KqUC[X3j,Y9']CDXh=Db/<Z=P\/bM,:,=SsX3e[DLJn;`&7r
%GN>#df^J,JJ_Z%:o($;V/7uaCmR)`7*o-eSCotJL;;X?[IX8`9rn`\H`VQ&kI.n?HctLBW=$Ba4C%.KQ(SJnpK_)l,m,?!E;UF:X
%,p1%9^MDWF2QcWBGjerq^\tUGHOQ5/fn8jPdem!(4"arn\@g8Dl[.c[pShC\BIjU;;'MKT^2OD4e\,U>f3Z/`Nd%s/*o5B*j_lbh
%F]R>4GAt(cA\J)n3J1UepDEWOk4Ps,HEma&ZhkTpQHsLIPDtL._-+1D5H\ClcgPcMGZG9J%rf;[So`ULc`>CLY)#!gB(XQ4+8f76
%(L-=U^h;rsmZ&'B&Xls0oW-M/j%;<6VRcV<4^HtFYdMl%eR@MA*:42cg<T$8j,m.@Z<jT&rYPk8\6;ecO,s3J?sS*!V2AGi3;4F^
%>PV.R>2OhcTM:=pRiu+4du>a*pRa]q8pfFRn^`b0#.`VCet;;O\(:M3MY52>^Kl4eI/>I:)_GcBm*0kL;e`.UGYg*NBt^4rs*F\t
%(_c#=^\HgAY5A.'h\-L*fZ61ZgIl>BjTFtQFFO7J@B[037<"FTO/&E$*Q6@NJemq6Vp2%C$Ra$VS)r,,O6r`Ic>.K]+$M[T:[UG0
%!XtD[QbS"<<@McF9[`<7q6]X9&Z/^g>Ll#aa2\_Z-<TE`:,q[E888IffO^=!hgQW_--u&W7ILWZNa"T4*V;uTa(C]NjRp*N?MW6[
%h8=<cpf=m+1^hGs&@;f[N2;h@Rk)OQgBMZOn_7]C>FSFCGYD(M1mNhF@g%M/8%f]Bj28Phc_#SC*bE2gpj\,t(A"/4R`h7'&>#+j
%E<3GT>%f!b@"K((2YHqY6%!dL1"K@fmONeO_a2Uqq*D.%Aps7@<NT64E`Wl$*jE(A;#:'UkE.Z7Q/)4Z@E(\n4SrOZ]DS]%]l`DN
%BTu76f,*5uDk0V[CGbKW%X!;9O9P,=E;`dVm;qORbKVp<iO%3,X+"27>P-O\_g?E*h^sF'3*rq_ptjJO[Epg)4-dh&O=Fub/-0n-
%*26oeQX9+8_aN+,,]0^V%mKbm9()m@^3T#$ICu:@SGNLP\Je##rXIrYR1gN@J%W;0!N:E_J!J&]>71O'G_-DEro24gk?`ObFl+hm
%llGm0D$0FS]AS'0075T#TbQ>q]ScV>3XGBEU\dIj*m_;R=7])Ldid/XD+l^7#,ngk/8Y&64_(bdVS(PErIR(!*Mf%M?27$\!"us@
%@IuBH]*3'9lo9+rp!J[9#1bH@f#@XKG\As0A;U3$TQ$t4KR*GjFFo&?V3NN#gRkqk[_Ff;1me.XE,XA.!\CSKJG^'Al6IJ*g=e(=
%pFeF7bkomnC&*gV<\3a#N!5"o[Mj7"\Il@%\)JCRHLW>BCHP\g9_12DmR;-p0W2laH+S7^0>?4bj#]sdqtfo4r1N!hS[Qj(T[^&i
%kCos`cM*\.[Iq32,8AJFhU"+JoZ`9,nTt5N46jT.L(0*p.ICBj]3rYd=0TVtjaZ#hE(>6Yqs0`=kUQ#NG42?t\TBYJ\$]6gT=1>p
%:4PETq!LecnnmPriG/0sb[uX#(@t+h]m:4D?'!M:%#br8^`ct1^mpt27Qu>""5NF;=.ta'Abs+3ke7##h[Tu_^Asr="QZi7SNs=n
%*Di[0Ehi.&qnZ<IVtR]'HEk!Dj*Bo"T0.CYaq]1qjkdnG]5m0QGeBL)fC#Lr\&-&MgohmqXa%#kT7G1f?E%r+r1`(IG!9b]%Z#hW
%#2GO0nbT;iVg\U"=7$>T9b5S45K4T+8Pk4G"-e&-`.E%*$#ITX`R<GWp3j"9ZM2:%C#mm/e'u.8SAUA/+5?*gQ]LW(BmFZ9oVJDp
%:4c@5N(8q4Y57SJRceL2HWZ%'No!OmrDn.,rOpY&(LMWUK$CLnU.s[(i0saZqlC6qjR\hJI_,P5CNo.26M0sK\UW')ZKc?k$BC;t
%H5=V\:c:(H2uma-[<gfIKIbg3+._H<jjR`.?0U-l=<Gn#Tb<Rc.l?%_ZGa29BfiQq!KT!o(S<U8ptihfH[W*PD^D`HQM!Uf%nkG^
%jg+Ng^/hX#ol<n.Gd^N\;jmi0"L<O<UTLP@c>*>"Akf^*K/(a`52+'7T!.sd^.655YJCZnZs*$ihB#eKj/'WS`oa:?>6]gE#A&,/
%5H[Go+KQI"TWdf!bU"@sCs'0YdWnN/$@q16K$o6uDnO!=mPjIrO/:$E@#\\L4PJRBYC%eSKtc8@PgUk(JMmF38"r0Fnb>Q;oR1Za
%@e]Njp4nk*2c?$:(lb2;\3V=Fp]T+BWdipk]RKhg*27)=Y[@AXd$hh9WqLbDLKq6$]fE$nJ]PQ.nJB\DLot),Y*<8J4]C?"0Q:7(
%hYoM+a?oY0]Cu*:i#sdpRfDm;H*_VDqQ`eOVUWPnd/4%PZc^>CrI"LCp[[@-'<qP''KdjHqtIfcqp4qF='p6XiLd3a>p%!3*9aof
%)DL9pJ\DlF0Dn=bL@-<&*=gH)[_:7QmM_CMm$GH95MT$SI7L;FrC,i8?:9B5Yl,Jfj$!Fip4E>B.ZBi>JpR/6?[Au)hi(@ekWL=q
%:KM:1QLIXr-CV.+4iH/@5t>fKOX'm8Df'l-m<clBqZJ+l)?f&8Wthi""b*g>*^sH.2RYNX]IDLXSR])"jnt$kH%Da1es[Qf<6%96
%"L5ZI3%)AgZN"lj[iL_pjmPBThceThqRLa]qVe2M^:RQN]4fbF&)?c#*E_ZL]T'"c(@-0/4[Q\^IU)hK;BDntalJq8MiUjD)6WBn
%0_"4H)q1nsWrE$ih?gqoQMfTCM/J[@ZM1:uSa6"=qme;5)n`O+5",5f4fO-`?DDKS?nGb?=OrDfQl5Z/?G"Vo"tu)Wr4\Xj0+Std
%nA:-DPcq[;IU-RD2a8)I=$pr840`-6Tl4l=Dq1fGVetq,mH.BmajKRWj@jCG4h^H:MZfSLQZB]4.Tusce*_"#ZW##Kk8=$uTQr>X
%'**fKQD0))i/cR<YNie#)].J@_r(0m("63C*#A"3Q35IEAf7I85=&d^-N;YW%c3t75>#FsQ=;(tAa$.3Mr4ERr'NXBh&s::pBgrc
%eLpmEc7XS`^6"t<45Zs4[hCumj'%JCit'MHWhJ_os'1RV5Kr.SG8HUE)QnZoW0W(NCdUia0Z.mNX)?eA&DO71UTWa%6dp$]eUgUp
%2=+kKC#poe?E\*Y?;p4l83,gMg-d):IJQoc@,8>/>>pCRNXPm2q!\2IS"o49IuRL4>'WJhO&f6i#(ZZ&`T'V1E2,<=Dnp8,`2]4a
%*S6*)\9SmgW8@?bYY?qEL>pjrE#?jF]+3%;V\8HlNs=pt#^:0<Y5#Uod26:ZCndk&X<noUY'1/N.M3$O@(=FH\uEMRM;LdC%99ef
%rY6d/EJTW?:j%:^H=!po8LDV<or--[!s_s51g#%J;4L`U[/."$e+:"_l+(aMc-"deS4rjPae\3Z)`Bu`d-#!t7bA8";qNEt'949g
%4+n<3km]1!\%%ZLs6e244mo(QQ[YL=m(D;G(+i39i5HG=Br:9R2@t+H:^huu"PX4*EXYJ1;/A$i,l3EWTRa)2,U@Qi[S0pip,<F#
%a"Ue_)I+;)rs&OE5b+BI)g6>p-?98FO9O>d2PUS!BkY&dnJOV,%?%&\2Ape\E\6WjBaQe$#&7EoYNq2f2,pQA@Y3m'J4s?P7u[rk
%2Xj\%DlcN39p_a/o?a'(h>jsP_Zn$,M(#SC2Ds,&;oA^aT]u-^WG&de#IH6A]ac$"0_oQ)(d4As(k`T"I!uO7;caBrhZ+P1NmOXR
%a?Qn6e(%!1!NQgC@0P/?>K!OAK:?+?1MDo:mLo-VTLEA^_bscA:!RYWGF:QkXA,ID9?KR'i+PO>QOQW;hP1o!mp^+#Y^tqoo,FdQ
%6:JO[XCU=W?tl/MTT@m.)+5!;QphIa@M#Ps%\9W<CT=EkD]9ILqk-?)@,6K&(@=/%XT]qT1"A-eV`*!.X,[Xt4i$1+VCNRCJu6S6
%%-5BY=l-$7cK6?<'t,$&+AEc_.<u"SNR?>dY^+m`\;3AnDr[Y3&%IaS,8FpEa)@,%V17;CWRHj>D(%:cUP$YJ$DG]WqES,!,DY_&
%f+m!LoJe[pWhDij<U++fJAm)T04?!U8du^R+]19+'Hj'$)?ki>PghtSluJTTn78s6jFIN>)$7k\$,d$eAtfL"?-@klNrq\#apQjC
%5Vcj<9jQr8TufP36X/_'j;^SJJ0(p[ZjFf_o*kR+C&n115smXHZ`=H-;Ja8l\CMr&!6jJR5)'8<*iu;*cumaZU62-@;.qG3h`A2=
%'</.:7h+*>7BNH,J5d@Qk6;aE%h533/MXR\HPs!&$;WC-RBQ^gN,V$:M`7$'8_fSEPN9QBF=e]3BQM,+R^Ng:fc"psNBb@;%>jHQ
%-dB)`>DR`tRtT0ogPBhN3cV;CYm[^4_/40ZY1f^!TS+a2%qqXC_bI3=eAhd6(!E9T2!L[<Fkoal=csB5?dc0p6na:>8d@+l0ATK1
%@4#BkYX-fAK4s29`SZldMb^S&'E]j8^UMTb`qA"1E+!H\:nruJ%A"DN(^5,N0m+3TL]]7]BPVFg#r-)n'#`[C)VM2['*JOCA*=C[
%J2oHj_/Tn2!*W3^=j_*7X==RLTX2Y\<]==L#9YKRQl7`.XMN>%9hZY;g#/>COQtK8]eU9?"rqWRF<Q;?Em_f+fEU;e98h@q[]9UI
%B-#4ufdkIc*2QguF:8Fa-!%@@9,qPQ<.s]T(&46*Jt`p:K+64E<G2OYZR2n8D3@UlFf@Ymfnb;]1pD@CL2A5e^t^;md4H_((XMP0
%G&0mS',B8%UNM2bWFN.F+pR2dZ3IPbfdOjk/;#L`,bbc06W]J9#-G!7RgKif;/>K`/mK=<YS%E(Y/]0h9dc-uftn9M;%l7uR;^23
%XSot8Zm%\D9F[2q5r'ZABXTMF<S*BC]'2abAK1"r2RmL,0[S?heOY"DZtNpt:s*s\%Eq46'Qro_'HsJ7lk$g2>`68rMP>'9BQGR9
%6((4U6%^.[;42%5;[1L#@5$(<oeWRA!s2l;`3*c-"QbiER6ucaCbSO"e.QO!D\#Q$ZtZu:7W!meja`Bu$juHS*\?*HCCp:MoZ^4D
%M!1L*%:flIljT=#BHV@02IJ1OdhF/1A@%8L#!MdR]Gp8Q[4.d0iscR&l\PfL]JJ?BBR6o*^]fsEcr!I#m+<OPf[1=o#6gt/\roGh
%1Q59B4jQl\KY[Xc'ehPe-8_Ze0]f=80W&5g2).6R@mF!i/0]ImL^#O:NN%h2VTU.aD*U_e/f]u:SF2./9aWQI*kW%rUo4Uk2$Do2
%?O29T*A*[e$-+g_7#E3o)qWMP2<=ZJpK:m:%+M3o1PKRXQKVnJ$Fa_'Q%9iSB-&C<%3$:R7fal@dE*R1M;2[A1pUU./.IVR`Z#m;
%LA\-WNFF#q*8[VgjZ&$M-N=id*-=8]I^8t2n7oHEStDcUBX:QC@Y:Cr.&"/DJ.O;t&ga1_>t#LA.$]@#L1M#0qa_Q?ka%ZRE'ppc
%D75Fe"*:FUOTFWJYbAi9/2jeb=U!I#8c\,6EcV>]2Jb'<'ju[2Q3%q_2M6#[^p;<POZ8%c2K0fr3/4;#%GV?XUn.QQ)UNj#$]p\i
%o!i[A*Om(J6PBeB"#ABUciAM&2eXIcRYghAbQO>k-%s:d.>n6k^("C".L\tgL7g6i]r@K%e5.Gc6u3kE=jm'`X<e;p>lcI4'*u9`
%\K(@sYl+b0L<LF/RcJgL2*CW,-F>q?.X8"n('euB@adFjd@h'R/ZNPA+5<_8@;R@S&Z",#e?.7LP!g>6,_@nb*7Pj>!YiWX_L)S[
%ib/BR*K2L,J.iu>@)]0Uc7B"u`G>&T6<nH6+uVFG,NBp=Y(>OBZl.d4PB'\tVNKu7/;4NU%@Rt(P&6Z5HIed3!ZHC>ijj/`)]YNQ
%Zj_]7cC"jS6nC/h'uWR'LhKr.nY([]on)RAa2_(S.q"$?ZhFb#3_3T0)/aCN%Yp]O[tNcD!j<dZ8!t2.j!R\+7Ql>^_`%/&^m@C%
%dqin%s4ta*D-&TRS5%XbRm01,jbd58()\5SOpN%K((UlD",.M/0Q`Y7.W!!jKP$BqU,GMd4:on<8&l<kM7O3:>W-[>*[apt'.\G8
%,Yauc$q9+ZEYT5s.VHSl2B2%FMEoBe'OZH(@\VThDno[mQ\6a(5UPW4F_UoO#S"#kMTTBp&M!JU<FVE`#q.:%02lNR%P<">!??AT
%oEs>(ga-X</<,A3Z%:AtJML?g/1^'1R>+t.bNo9>WbtB5)E&HP*0#5EF^.l;,%$e&5UuHT9JML/RFEa/:14N!-X@D"3bULi?)Qm&
%\IlhS1f.pVo\qdUf,D^A2CKJ"+!h.Y&e_Zm`YfRe_#ptWYR:M(ScelW&1quIoVs%+UPOl&m?gR2gX/E89VX3eVJ3pPmNpK%0URJh
%UuFYr%N@[)FIc[=YRU>3F"$sB\(P0[YTn.(`&\IN#`g3@0,7EJE?578$@C+cje2SXm9j-\XQ'Tbmn3<gVT521BQFeif&#%0emR3h
%,:l+47S.71&UG*(ZcE7$?jRY$FtG]jEA6pU$/KTA9kT:ccdT]7&1>;E+tWk5L*N'UKtSch<0MHmAdQ*iIW&VCM5RXR7i*lnO)2Ep
%A%8>QAHN-LWa&o\7(u'j_8$mOh@M/_BQHRfd;_#JE_K,rJVg@:K.0\d;&f##@hXqS'?NcH;dlFq^'*S)E/S.*`=SUC#ehd)"1edK
%F>bug/'3MqnIi0'#R%#"FkLs]rr?3T&P6P&eMJ]TWc4\+PSfJnPJg(+f#.dE'$J`A-W2%T4NUGk(b)1e#7:)8-./rlpHj52gDRik
%'PH@ZQiK)8pe:H;.X2l+Q_?uK!)jOBR75':@\%!I2FA=].5dBeaYq><\SU$]*4pcN4uBe91l)@egDmYV5Sdr:"H\B7_ifR7,,7`Q
%@S&=*(2-&Ki[s,n:hh<MSrQUO:Xl3*)HecGeQJ<NGZH_15M<8ET_^X.FYNtiB%9f4Js1M'Eu+VaRRe5S+@GZ':aEt.nM]mk9EK6?
%Ob85s$6);T;Dd6PSB8#r!-*.@L5&I?d\-Pmor5%*6pm6jXK.YV!&@:-*J$Rm@"Vr=gn61a*EbWDg-8!Cf!QJS:r8@A1dHCjR*H87
%&D/F%oO@g>2V;:<Z8LUVUAo+>A1P$Ib@J!h4;i5b&<o/6o2"Eo>A/juDQr[+RQH4lMXm%Z@%(P4"'gpU"5,9o't.!)"G^tcRKgVW
%PNJ#R[WGUE&ge@K&r0OZ(7O6/K<]Np4eU:FPJT5rTd&];KJ=o"+KlaF4!LUD"r7tD.&N+,;D%.6@jD$`ME%R;].Z)[<lLU\RlAu?
%fZqhm0>:LUb*<mTPA,\q=U(V<5rOBS^=Sc%d%j79F`b/Ta!"bJ/42$+E.J44^n!l,@=^a@KGu7L7rr*R$Jl/aM@qUTgnrc/:=G=C
%,Wn52oL+?!YcS>gaNXp(i@oAZ$Oo!R9Ji)'C/IFqB=7+6nn=EX#9gH.AZ2j!j&j)Md,7I0R*5OD6dnH9Y%%m$`#qhjbm\o?nHR_[
%)]WX7nTY]cFHcAW3$1+.SL[R]c\V[9;f*,(;q;*j'N8*B%AS)>@2Ch<@&aV7-NXnf=WC+$K;f]^6".5'g2q%fkT%`CKYp@^L/,Dr
%h%aRFXqhY36TY`[R](&T3qjiYjC/I_[Afl-<u*q+iLl=W5Q_-NK'J^Y2:4,j+V?U$%U1]P6810*`ecN.rn\@O2/8gZ^_%8T'dQ8n
%%npJI9QQ9q3=U3c,5m)5KX_fL?uqAM4RnO`!e+(5(`A4i#eR#HA(/P8BGZg&*SX1)8rQ<;,9_TQ3>@2\I:jh9D=CfAj%pSM/8>M7
%h+#A;)l74WEgrFuZX"qn&DO6)Acg%q1spg`(%N.%'le8V)7/O79Op5P8KBQ71Aa@La@N1!U^d`?FHO5TR1,Q!R5jou]DsHc?',Bg
%&3Z*bG=9[`)8W7;_tC$-WH0$L";i4[l?%9'nr0K.BONHM"^KS;[YF#u;]M-c"%A*tPU?`?DTL<8&&;`7k)?*%8+"Z8gEHk/jqB)K
%7.pkLP$i(16+>WO"0MW23d(qQQC1d3irdJe`lJLN8C1u7A;i)3X)nJbq5?pH?D@]1Jos`[$JW?JFqKNdOI5a\8/W=>bMZncku[9V
%Pi0Cj3omP"/p:]<BNVR:WNhu"^e6K-(m"ou8ep#q%2:CW8)rs@DK;+_iK:K^L]p,XJq\$$&karL%AGD1H\H;ZBfZ=;drWYr%dfS7
%`)'A%n-S*D.r*OT&\5J"MLm>kBrLl-YclEH=Gj%oZ2(mCgD!N.@?N8IPdZ9Kd+h$AMPY'P;[M2hU1$";An1h,p5r6Q@??=Mj>sOM
%hBJ9V&BGWtAi/8>6!VCF%?Bb[VLf8].$H.`@;+T)5rtAeLtWRB?tAOPVBE=E)^9d,UB**'*C=,T8A9::4s4SBC1?iIDOE"M(WdW9
%SS,U_E>*b:73'%I#Am)L!<&n]1m;G'49uZLE%f7pBfDO$AP\LFo4S+uY`^ID\>?6H.aH7GjUIN=@=p1k&?rm>BV67md7^p!e#;lb
%RNj`H+Y:SEJB$8PJJPj=)QF1/B^?S[.^#Joj<eF`OY%"cK34T$#V5;J*/J&IS[BbAe<84=3(h(HG%n21Moi+]U@QVe'Jn-EJHmbc
%9=?j<96=3WObJ!6T1;!db`6/t>.?m2e#F08cnHK&F>n#>TZ)KsKl![hS1nJaSR?6E)TC";[h'"\M#\KkN=,/A+BNkLQn3==%6Bu(
%mM30-g)_3S9>q+j2p3K`QRF8DEk)g>ga=XjJHcC'U_dW@T;2s*eRCUfE6Ln&Kao`/9cVTS%g$Qu%@0g9(dHr*;l75[Y,$\.p;c^)
%gnFm]Csp7a\uEIl6A$oPJC\*i;V4:M43XhRVWpL6.G1nB=nIEp+F;C"7rfmR3ic<9Q;JKt%6\?.o"5aaMLdXX+UUnZp/Gm-*<1[W
%7\mo:aQV7f*e@6:)g`I>.7#hc.+F0t$)mqbhT"SugC<%M+3^Ze0bDQ9LbVRS;MmEsU7sBiVLp4k#$Yh&d%]/X-W0G"^<""/5GRgo
%TTU<:/oV.@rgm"A@OaaDC);(+)`ZT,7NU&#1f.0ue!G\j>F4#$)hV<\MtT0\m^=``&L%lrla!NV!bnBX"GafQ`^\].N.c%eg==bb
%51$0J=^-UQaF(L2&1)3(7mko8K*m/Z-0T3"cO"8L/W^0@HC_PXN[fCTRQ.+KY`QfCJnf96%^`WR%@E:9[!K@oHCG29lE1n*%U47c
%U#iL5%4a2r)GH1W<>:Ra62&8%_r354n.J:&ZIi>.(d@hpaq7oR1_BD%-ddYY1ZROE,$6R:Ppg&K4eSJB,A&^LM3j'4@Y8F$gcGl4
%)`0r06'X6/m-3h`I#(=V:P5)AbbVA^;bpp,G"[oR.Yfi[j_,#@a@F:`ET"naK-"7T9/Zj8PI,>H*mrAT]R`hojR1/H<\08$UhCQT
%%M)YnMCCrfcdng-Jq7lLY%Z05P!rRZ$m;(O:_fu9KN&n(&ulG!+`o6^&2#ZfB"G(/.*G$g(gs&STaWgl"&J9@e4[^g3[]8Njd9NK
%aBFc;;T,hnTndYak>%u?%@qfBWA\TR<dMb)kicBP(iE:9E+Co\A8$ji$T/un"-cSK"QIMFQ7Gf9FqRq44K5aK[7b$Q%'7W/UB^/J
%b$5heR4N>7N/Ifo\_nWs[6n5<X7FILGr]tQ7,:2ZTQ1mc]gNeV3gF;49MO"ri#ssQc)e$5kU*m>U_Ifi:hcD^S%+n*="go?&Aa_H
%,>58QKr+qkfU.O?p3;3@dYunaHpCBe$L`S,s,[_f?rCrr,U(%c1Bbo?>"1rd5PcetT$)(^NXT)rkn5_4,I8O;c]*BAG]]Tt5pisq
%J=Zg*gPm1;N1f5"/R'(D=IX#TpPo]O82sIp%lE3gY#mPP4p&F!),eHOs3//\Me-1[*VOBLs,\l8#ooda^Xu>an7.!bL.(iJ6l8<Z
%Kk-Y?K`:`&j"gA^-Vim+WiYfWqP,GoBC<)ZlT3Xf@uORTBH3eel]V1)HS=R\*ko$93i4];#kf9Fct^.V]+>t@KeR8B\%ppRY8%9^
%7h6E_0]QVH#f5&=gE]j\r"HM>NO-NglRKA,Gt%@`M;(>6R7Uud99#c=&GM6:VU<-B][cE<=]l(0k-W6sg[_8-[+DL/=u\\laZj.S
%&`gb$*!RO5cP:+>-abVlS!E*X.->U[RMC(M#dUNM8(LleB!mG1`'l6f.nq/>UU/7e?i]uQ\D^N1of3FMnQ.$NDMB@55ef?sj#B'W
%U)`3JOE93$-AMr7iigDo[l1JNHfhTaXaWWg,b0)iK+A2FkZ=O.\u;MQ"7rT%Zdg2!TjZf9J,t;2a3KU_(gb.Kcp%q+5bk'dLRR]:
%]/\S=Nni9aRC66h!-f`d!PbW9NEe,GW0"JXE,67NiZ^_-GS`+ST7msC@;'LmJ/tQ"EG&rPdGCq+_HT/3EZ27Ch70SAM@Hb*$qI^B
%HW.[0DAPMW";W_6L'-#spCe=(;Y7OqnAraaNXR/0QkcfKL,'KC4Di_KJ3_.\MVYmNrF@rZ#T_i54=lCh0e4?(4\!FHpnHe;+',!-
%)n62;U?l>%GjL&7VrUG%hUDe:eXI#MfluA23:V\%\j1Y/JHt@e]S_fci_+!sSq[4]?Z#0i2Y5K,KH4q`P$N>+NbmOuSqBHdNd9\Z
%?mIVIg@<Qm#e%S@DM2$Mn9A7pZGEhg_A<9Z/Pmp;4qHE%h-GPcLiFJ"psh&$pq*!G4GF2\P4tg++8Xsh6nRe:YO@W^4`%MD)07Y6
%:-r*UiM!:q'!,.R'<El]T:MBXh&M@1Y5)'[B_;,fbcgFK]JufaG<3WNO^?!G8+oR,!3JHoNCQNYk?I(*d]8.?324Alk4ngG5oi46
%F_A\?Y1_?R/."$>R9_ra--eGO[!&uk9'rPDE_C]S&u2:n?/9/en<R?CCjX)d$JEshZc=u(#hdb/+gS.M)mcTT9nYNp?,a.EJKqda
%([=3,1V:4kS:[;;h,rI<64o>c`KqN9KB2;U?h_d6hV.Re>Wln8_;$X]m?1[:rna]NoT<BIk@J9VR9\SD(AM:s'`G_8IZ<\DCuo\/
%$M^<8X#jU=Zmu>s4[En>Bd!j`/n"F]I9+!A8'B@;Y$&T`E,'O?Qqk-?l2p,$-p+;,%mu16a3ak:&?44/(9(<hVJ6SsZ\h6rA9,qr
%*q,l$M9P7:=1a]GAS-)PfM6=P<IAMd#K=pPg4m[=B(]npbj*`ubUO#YU8`k6GB70Q]H+EoS'9CI3k[Od:%<\]q!(DPXrRq9gI3KU
%"I[dD5J?j#cE*b@\g+N)X=hk7NCmYloe?"Xe6-Eb%pPW[cS;c;Aq5Mu=Zubu>'H@MR8rlIocDESZ=Zp9SM`jn$,:l2X=iGog\jQt
%_5GAV?4BZ4?;9bl(]l53lmg!a",E4._jYSrGBS,R>G<rg!1mWTaKFMqKa;mG'n].F;^Y<pqF<r/SR#NUl<c2*d7hceU=jm9imcX]
%%+FL"QsF!NFufeb`$p".+bO!B'j[=_VR6TXLtjHaQZ>O(ga]2s/121#]93^6p=?bX3A,b`aKu)@(Zi`73k:.0d?,Cj*jEkk3$olZ
%MUe.%^W<P6%(G$Wc0!gH2U;*AX^Zbl3:iG?4`"8gHKS>6Y`bsRh!2d00.1U4q*9.ns,<2;2ZKI9fkp>q(s^D+@ajI(D?)&$rZcZ=
%QeakKqrdB3&T,)ZV`*,AIPL%f`e`M)EaUi7s5c7]h>Z"8V5sP:R-8tOrXfP,pUgI"L;Rm"#J/Q%1@FKJ$d2h;B(%]0T9iO&Tl]f1
%m5*;ibo_;H4XFtE4$piiq-OQnk'sXMo1'!r?M=@=pnu<l^Mc<8pAQXmokj0<h&PoJpO:oFE$fK%l\%?62FLbU[f41/qY`;7[][;n
%M8+,@pELC?4)=;W2l)]sp3Aq7a50%5G'1E17,.m6s1AO.A+Lc\n)s+g(l%UdhUrElT`DRXIiepP0eP)q"qtpag\/Bd9W6_>J(Sf:
%rS7C53PK"SEVmKh@f&B,Z2N]@atS/Aa0Vf;gp-l$[M+>=rVq+RVN]@)IufEJh=c>Glg4SYs6jr#O)b37)Ii`]g:71#OEuFIn5jW)
%0Ddu*6oQmps2/58]=2srh]:9?mCm)Ff1!K)"LSCC^gUX=rTXBU\#O@@#N.;c3J4q@q(!MkY7A?c:*bMqY^rjWYq%d2rU:'_SHFDF
%aPQAGBsn\YkMD6U]A)]&`Is0)/ujL`S.<?bcqg;61pJG%"kH$G!$`jQ`#B3%#3=6,2ECiM"Thm<!!cHEG7FVe1fQR#!+9o>.:_`3
%)#s71\'g<W*KFo]i2"'d@n6sIGME/F29EHcpODn%,Al5j%n!C!\<VC8=<@4m7?]a]n,SKrPSI<1GlX5sk+m,/diI@]X]3r,/pk94
%(rn2]D8e$>YP.u20ts+ZYTk_A%_s@u/dL;k>TA:C((S,\MXB4!\!+5OrI=Y4Fmf8q>DrI[o1#q^5GrXV/MM&J8Wbi^-\`3:\Wk"+
%A1Fk<?'\$i/Z@O=lZ_q/7cKtQ#r!TFEYjYkrma4a%O#[FEbQ5nFU?TkBDR:\G7*gT;g<bF`K^kaXE!kb/L!JH<2G)MN2[QSc:ANT
%4tSF=W)D>qG:3E-nIM2W5;*rll>SuA!u>Nm]/$Da@JB:DF$?6k]6Q&8>9s^'aE@UNpq*DF-\5JBU.gDK9Dj3)KF*-(Tpc,*#Cgln
%_iOI*E"lCgG6PVe@G<jO8$7>d)O\g%7G,3q$ENTc$j+V=#>V>)O9En]&ht@Ik,';?],K@U',Xq08?]*uGhGXH?Bh6IBanSS@\5lT
%eQZsH&-a_K4@_J<%(BAY1IdBjG<0l.oV-uR5qKoK?-mhjeHX';Mg.2].XlLbFcP_:duGM"XcD5=qYnLj<XE9/old-u&!(ZuPFe^_
%E]%cp*/W3-$\LKaI1c)[hPp\h"V*$>TfC_jdTX+]oeOQPE3,%\Fok6p*HpijX.P%:K"G;.b45c^s2IX8SG\9r*G1Lr5NcV0`#Zeq
%\3)Y+WZp<hmY1"$MJLjL%]=T578")1o$KZXIb9U0h*"J=755]tQ0mE>^o][CdsSM*5Pd@3AQgpTbDe^2Qe9;<eM@&s1SPhM>C0V?
%A$nM5s5o.R:fnRHU7]HB_K%tMLi^g$)-1oH_np)MjEXl4.oke.iaEA4<TEc[LkX4`1If="@e-'5YntRm'74@;.$h@58gT1r>U"9:
%6cHoUR1/86nYXSu)"J#l$*cEs/3\'U<N_Z7U&P34MoHB2m=L=O;(bIkA'lSd^D\,>Z/"9BG=LS%EN9e(=K[gJ^$+=t@%Q"X#`L;u
%I;]@m#a0n\0MA0OBdmXl"\]\$m6ZAfV+"62"(a-O)cHBA]Kg$]7Up#_Qap@O;=(lVn"EYG\lS_$1(:Ht@PE1Q=@glR!bThW,X7oW
%=Uo4eTFI<#99)he0kckY+FPT3Amniq3*Q+8GD<oX?Ao*6nkS!Y1IaDb0%::1J:aahjIYlR:<79\*eJ$50kgH=Su&\q`!.YC)OfS(
%7JePIgYINVj(E'_++r6=)Kp<O&cgWI9-@p:N.fRCp;7jh?ta95:4!#hnoL8+]L:0<PFL5Q"Qlp5Os(9cUP1E-mt3l/2X"s`qgbK=
%-2+$_d]t64%E*pH@`9hQjh4nMf1#Kl&l))XZi#L*C30U>`->J2dGUGn:ojE\j+r-0*B]l3Um<72k;Wu\28Q4sj1<Ls/C`)'2M^N2
%<"WIQnhPcs]i]0fg,gM]b-WQ>ChPCO-cF'`>1s$>96;a:2(/.Dm/#Q:q@i2CNYF1O7([2>>!f;^#nqq2^6g$9&>`%pJe97k>PKO.
%aOKBa!M-)Y%VC$)H4X@c+>*E,(24n%bZj6<452WgV09,fgCA]j;M,Ig;Tq6K%U`-e;0TgYD[oqY<t_Hm_@l[PmPd9<6g2!@gTf`k
%?H)kM+j2'fPqSFK)Z<%,PrMISouQ:`o3>6O.$h3`]:Y^.BKh0Z]64?OP=f2h"ItFHV-!ULPej$fo4F1E%4#kimUb>sT['EhM,K58
%N,i]Dk1^`T@TT)lkTnCk[R)8=X0l]leT(U`Q_4M.b@5k'kcC0T<:oW[#UgZF\K9s"GnLh[c9`^Ar:#ZCB9*6X%WUFXo=EuQFe6Kh
%#5aLXHbT>5Y`LK_jU6uOe/5[2$g25aN>5j3>Wchd[<B&X7_]-<ThPL3W[lG+mIT2OFYS?4HE:^_mmT(tA[r\@k.7]f1VcEAATe(g
%]>5+T.?PKfU@?LGlR<$uBC;HDjGi)^?7jukd`%H%HK:'_irt;r&705uj)VR/7L>Oq`B/0E`#/h>L*6f%BIk6ro*T"QS<oqq0bt9I
%]4+FAhc+50d4u1sg7@2;a&tnH)OHPDKrRlHToD>&,l_gf-;Q+r\2aR<(uK2%9q"g&>[[^eZe$m0TKpA+@$2ferh3Eib@OF^@DZW)
%UB>j7B-dNH`8DUV?K5T@<#9&gBb:[#QK\9V3CR:unjnrK#qb<RZX"pq[rhnS0Z+Kr]I>PD0p&2s[P^Q]4`H_+L!gGIF[n7hlQAMY
%YRGRp.%!M_EUdi<o-GYrIFr;ccnQ(3*[/.=`IZ0t=-&4+`L4_)pNK:'qV*I(2%`59_@YA*pPAq/S,$Rtb$!=r((=JH8^0pi<(l27
%3/^K9))2tgRE<XN6[al^iI'glVDnd02^BNG*!n_PCoafi;R>b"\K+Z;N'(`_.4O,?B>Flm#9qPeL8=884(5oRp'T]<U?7arZnF5*
%g:XB:_+;t=]?>((.=\Xa[mP/^BUNCV3A3u\Zk<pR>&'H;!\k,DhKLN6jG4Y9S77j:&kJNXU"edi&dO9=RW/pMKm_83N'H8@&L`mT
%DR7-qJlD5-3M4=qHmgq0M^?;Nmu4(OrD6@**)]<"9YBuQhX=mj\X\&l)f@X%B"dC.%`;1^803G;)46kZKGe*Qi]qou0.Tfm"F)n)
%P&H)hPW``2+0/h)F;m!A>b3mm%qi%ujr4MT3"u2Pq?GtrWbjE,CPiQ[%.TmN+C\H3VD3rFcVo/a![Gu'4ECoQUG,V.c?XlIIcai&
%UPX$mpqRh=%oD7ZODMMh*AXs*f1a,pqBD!WYF"oi^`#rVMhC:R4Rk-RDhr$-MIEJ-qo=Eb@_"d^mu51!_bu(W8Ph-[5)nP2<&'?p
%AkH/[?Aq)I#oSJ/'b`M.=NpNSJrO1u&#)H-_pZ+>8qARKd>WF)MqL#)(acg2m:TFo)n[$-*l<HG(MAF2m2>uG$-S1N#_[20QhGR8
%m$J#=!ub[>9;(i.+QL[#[/.6FAIOJ[?c.ik/:fUk1D5q?fe%r#(!Y$^oN#@Zg%H#t%^7\b9kV-1\!FEcn]%di+eDHE0l1-Q#XTNK
%0EQ5\aRPfI0ZQ+^J<"oQiXcGoa*`Lqn7($)?SpsK`#Wp[/8rB.*^?f5mh^P(oMh4pR.5qMF4Ud.p<>`63'/&3^jY$pc0POdXD[63
%)G-8)pb=<I8=?s"ZNL:(cH)e$D`-V$&:r%afLDnE"IY0`W1aiVb`N[T$bi5`aPQSHGf]SDE5tB]V)r\<YcN;76\\;J'7iQc9o(SF
%G-r0FHtOZ@R<Qfc>oWQ[hn5P"jP.sZ8"_am4&bNr>fKu]@tLFq^MZCV@aR9pMesN9fM*=+Q^R>bgR)`4R.=fuJe[s`Gd00()Y0ok
%`WRU`DX>`\0i;B8_*`*6LV^2RDbN+-ARi:i[5$2W!P!2XJm*GD8GLu,W(qfY!3n1C,eo_TY'm9]4.b&`$*)sb"S*(UQ?<nq"TX<)
%bq7g?i\GYVGIq24K/"/]e'Wpe.9^X`FW.(mqpJnlVC)#5S)pq/?&dR)@#7<Pq\&>1/H]t[96IILd;<*fco^rMV@BH?aW0>i>N4DH
%FamO)QU(FG*B-[6\M$s5>#%13p*DQ?1?q@+;FP87#/nOY;T18T,(i)0VQ?k?gMihb^"-a&iX]7Tf.NC1;f#h7,m^lu(4,CAO>=#r
%m'SK4m9DckfU&b,F'lKs[4ags]p7p?Jt&refn*P\3"!c6[O$*$WRmc:oT42>Zn9fG+Jmi$;us%*rO+<.C#6qA/R9sk[WEG6D5g88
%:![Y_D\02QF'HM>p@BPcD$ciPBZmq<4Y0jiD5i74g3$W"%[,W79=9Mo;_4DO?toqc^*Lu#I(q>.A"&,=ZnK7Ybq@P\FL@Y9dab:E
%$'s\\>T4>_.P_n)`e;>(bd2A#_GD3;[L[@7((22%`e56`4jU`u7Q'^C)\YX*"1<FB9K2eEfU:#6EUHM%9C,>RRs$-7k-nNt:&MPK
%DECd720>o^eN[Sd*nWqa=tnD4&,`PuC5B3XK@6n$0`jt3e]Uq;cK6^RAM_ltK,>DA%E7^:8C#Cn%Z_FJ(l6HB2MWH)s"4Hc3-2]a
%^@s(?P7bXG=r>`*F?PUG]Pa"d\f(t1KU*XL!]930M:\F&j)R-B35`\h3e,.%jp)'WR$Lg_o-me'*3P#eJ(jktgDU;nld4%bG.EP,
%[!E,99]QXs=cjm239/<$IFN1T)H0ZsO,FSm:rIon&Sh]HJF<;ILE;1+[!8op<,IDr5/4"Nq?4:WG#!<e?Iaij-nUBr1?Qruol#c-
%ARNV?]#=>]<ZP5efb#DMnC"pIRHcjAGIIC2i<8r1-R3-U0IVc-%4W:e<!n'bmpAn`O.$LT='@qsM?/'+KK?QXmi^P8)#XrdV2"n@
%+<>hE92T5#%'ZlMe*=,?gpJFajd]Ok9ahc/1*,.4L==MITt;9MdtY&M>E&<1[nfI_V.l>RoOFopSWOr5>\0KGh<B$Ee'45=.&)TH
%eJYZk[dZ/UCO@&XA3?WHrp:'#)5NjcEeS(`^uU3=Z#8Y[W6G=cM>S_>p<H!-1;AR&Ypd>71,@up\L:Qo!*^j&<k`^!)8685D0&(3
%nO?614$>]bJPn\:3&jF^eRNGbfE+(Ja?F%L9kS6.cU)D<2me>Hkn[G6`<uP[b=riQc:@t\/d+6M8N)LFeXMe')sOdhA1umA+`h?/
%4oM\4gi#\Xf='cc4u[>2KM^2Aa+E-Xm]KZ-@^g9<FsdI1#:E&J/"rMU.``14Sh>)+/1-VtMcSZV.)9L;ONVIU@\U9ZENkrl58/-%
%.27-@%*HrQ.1MlJ?u\BMa!L^=a13KbeO(H'dKT;iB;%YVIs;lWIY/p]a3Y?8YjdKHege0#$]4\Ga:Hm(U_bY:6+#M/=gZF%.</ZP
%@`Pfi;aqp^n2#DV9i23?e.ReZeDQu]WuND7*k>CY<!`Ch)pcdDGp;:iQ2(nq)kW.*fu%bs]b+oSnFAT9lerCD2X2?UB%jh1D#1FX
%[&'YBChV6Q5fjJb^#&nVYK[cp?UJHF<L7)J)B"R#YoaeqB2WlNX&D5a(Tb#GbA;5fkF]bhad3359Mq*ciraoU5t*t%O>W,EEWUrJ
%Dd">X8@08K-@EWCP_K4Q<k5u(i_Hl1U>^9]R4t04[\GM"%cHK#&X]Z902tFL$rN/$QH(EXJ!A4_@'"4#M-rV#?B[EL+p%q'7:S?K
%mE='&F2T8a%;rH4+K41fenrkUDB'ItNH2s5-Sm^%mDVoR5(@bpO-e7%1HjNL7Tat5^$-C0LBKfi7:k2Jc.`ih>jh#]`V5,p\rW+0
%>6<6."cunR_;Sl5/`fn_@[3@QUL@A%3"97I6oE2B=s6C#f*2ZEPU6b>%9SEpA7<;3/A>4jn5A4#/JtSMr_Ci["jr@:[Whf!Pp$FE
%2QE]PQXup9d7_H9<m:oiU4H6DmDZXIVM-"UUiL37pg+&p`nq7+H5::EFko8&2s+[R]3$U'UN%7u'-Bg,9LUl[/dsCcK7P6XN/-Gf
%bO4*D7hg:K/'<c:\JP3LET0BdnUn]pK`Ya!a/l?D[%l8"YNU2'RjJUpbo_q@q0+=1C^+@rckU-_TECHZA;s&&9-0]$rN&lp[uCn&
%&91=Fd+I6Y,26C-Y#;*#<Gs2!O3=IiKbCYlgV]&eM@<#WIb8m(8q8O#L/VR(rbWQ)9$=R6@At/9\r>f")Ac8me5i"V%hjVPT7:7R
%=mFsR8/r:[IcE&Eh9W$ZbrQH-G65QT(o;0Ppe@^i&qqemS)4@_0NRk%`d%H9&V=C)d67Cg?kZNbf+5bG<)f'm9H^%uJV`PUI&]47
%?7Y<D*QuM7<T#(t*0W1<ajJ'iQc;a$fu_:Trclj.JJL7=J_*kCrqK<@LrfoV3Gtd5$60H6SmX2l]-Y=PA4+l-@S?0iCrgpU(&L?s
%'urXa;6<8%R=B2LA:@j-*;>H]Z)Kh+T.X-,KK:jcOila!B5CrU_[BBU>lX<rI_'7UiF?a^c.L(#q1i"%.7A_66u`itE,H@D:T4'6
%!p53[-^k6P32n]jI)T2kK;&X"!t\V?I^/7qOF^qGS1-LilV3-*.net9Hq"bVY?"2h-i[o`BNBtm6`[#Y0oY!AEARCt(eoejW_aL6
%B%Wo?p-^lB'J>JT;619_6cT#m3#j8b%-5M8G@+RNe5;j)eS#=n_^KGlNR>RR"'%2C&5\,+9/#q&,p\O--&-Gl5#p`akZMhR*,tCK
%'m@W)\`^W2ODNmmP9C[]ZGT9W*4,[+_"?ki-qk*a9*N)X-:J%I%@"mY:kdrHTTgOGVp4m,lm@0:b6K((SF$LhP7_RILd65u$h)AH
%#ZLs!-OLK$1!*ETE6V=5nn8/<K4Xnj?3/#9^U%%ui>\>r`$((K@K\=71fOZLgIKTfJE1R0ALgYU1U!U0U0rU8HYZjPJU])p8#^fq
%:P8<<(RDId3]`)l<9/#(M#+(F9JI0]R$dJko/=.+EP9],WHK-@paRltqf'S7^K3E*#Rcjbkifq;pnfiK`d8_A#>PdhNZAT\k2gU@
%68"1PFYH4o94o??q)f@SrGXp.'JG"X!f]F]@AuY.0hB0ECL_)IjrX9:RS8JM;m`Z7Ti3*`Dq(#&clKRqZaeu<Wo3gM54PVmC>7Il
%$3V)6P^BM$4Mda3fKpb.H(;YELVmua1ghn5[j4U/<2eV]c?uRP0sX_7c=:]]H/XAS4=hlmX=D>/!977^V'erPNP-#=<Q@jk#q1N.
%/-?,@K\nd-((&0a`uWTd0M_C&[>PiD]*t)Yf%6R+k,?$T=d=i`Zrurs"AZTjG@aLNM#scf];au34m,2=_HS_&jtGm8cUPoX/#ACl
%qPGK%1g4]5b6I8V_moG?fl^28EPmb&o<H9lUI`1hqS4@kd>'1]m-:57L^*T``"Prg\hEOJctr-M%u[bqij[/Y2Ue.S3F8PTfk`5;
%[`*WbL1N_)B%[G;a[Y[1bNR)-e]\tI0:Y0eX$cA5Y2:F^rf^P>=$tkAF\Y'j@;1W'Kh0k-?1Y3[5>]LfYt1VF9ajn>"hjnFl-Ni@
%,;E=gI^m`9N'&V`U-RaZJO+](]"^D:\9alq)kn:/Xn9LGVqLJdr;j&OAg0_nC=REc=c,HaQE7c%qj83Mk_W<KQ@e?Vf.]t8pgbqF
%HO!_iW6uZu4e?"l9[1Re$#o@Y@fgV+KG`e@3+/E)7\*]?_g(+7oFD&EQ2_8tp#7575#0p4[$.^#Nn$*=ESn7K\_`X'YVqEu<dHtD
%'[Qudrg8sUSW9;Y*tF&4ga`^u+R2ZSBNRp9Z><`C!E$AR>XJmCg&-i[eW=)uS-G*%%SsJdGle@$f=Qo)&rV\jG*H#l5)O.amd<4Q
%HAF^WGUGV+a-ZRtiuJs^]PZ@H(;\TC/oC]NOt!/90'V>_70-OYNOA#\q,9$G>r.N:kt6@'AD'T>;,j:IO/>?;1)/35KaYi2%[h&,
%1AID^@2[\5XdE*Xd2($Kb^-ag1W_%_][kKE.RmA/0q@BeT,4X1Z4=4f!M3]@@tUm+hSVq1M2lN*R6WL5I^--=E1E)X"JX3pY!,IP
%Q]+b47IM"04()]?&Boq6OEMd1'c7_t"n:&Sf,3H9&F#@RFn=67MC`NkK8ah5Ks!U2T7*cG:@k$$P^k%r5EL7Q2n?Q-MYY]"F#31k
%i^Fs'n5oN9`&<>\7<DBkj>+s?NZ.D^i+ru)Ks!Ou<@mpd7?8HQL%(ef_,(E_b#"7/cu.OWSc)ZnH9T$oI\+DQDR2j.:k'QsF`cMu
%Z3;)nPdRAE5#RU[-/3uL@=iCHWrlmWpS4op2Y$bST/XcIl9Os+E"`#?NC=Rn"*Xd"3jfT^WeTc,2%;fro)8\h0/5DH<eTL,"TYu&
%6^.q\1b",5#h<s4of,>^*fhEG6ghJ5KJjEW2pN9"CIX`Fh8[#7*]2[%PQm]PBYoPNH[jHuoiQD$boL(V4pB\XX0lWq/H1sC.Vj$S
%oCJN>Ys@V`K^.j]O$28lZ)ECu-0#LrBrZW\Q$EK6&"Soa)M:`,EG(l#[KJ_bN8m"64l5Q&6`fo/n^5A*1.(jLC7A?2Gkd$WOI'Ot
%-sXb\i<9:jpcGO6DuOQfC:(;-0>0X8#!uXu(*21;TFJhlj)H/5>f":/?he%5)]Oij<6RfhBuGXK1kI("0qmh7j#i1C&&s2t#;-rt
%k$K8'#)7mdA'+d@j@aaJ5hnc5Q7]8&@u:e)2>Drmd/Nk0rh'5c&-):Js2R@<s78JSp]'qorome)rGSq=q\Qco5`>PqDu]A-ro\e-
%a8bj?^]"'0oUl-ArV^(ericA$ci4.bs+bOm.k^eXnUH&U.bQMa')#'+0,>Te)gJH#oXts3KJ,dY0(K?J(:fEqK.$ecSq*rZ&-EW/
%`MoQ52ge^mncl!F[-7$;7uMhFm.Y/%_;@4Y.q6DMGh_RG(N=94ikZJ_.ZR.j-*'J&!DFYUBtr[p@KhloKSt@#^OAhO8CGn=f0SMK
%Bb1+[0U'DT"A0?<`\^-"j+U2kg5Emg&6'Ob>7't6E1$NZ$]dTf#mGmM$\HJ8Ptq$pf23=t-5,HJ^lj`=+fmOU4.9.U'?uW,K)t!S
%nge'(bc_.f.n_MYSYf/A+*r2q%\]pQlp.,-c[2A\n$-,!k[]=[M9uE4+#0Z6>:ign!41TZQR(Hp&H5&6l&4^g.t$),:@-#lq[i4d
%+j)7Kntin8dIH)77NYui*&`7Mf+R?>Knib^Eg=6'QlpGUE=<580N]3.Mt=MIF"b+[-7U4ZBLMc=4''5Z3BUSJrocG&PU1T@a9u5=
%_^@PsIZ*(1W'k5)?m5/#oe)AEkuG#@Y\7-Js$C2'6E1o@pIi!d&4<sqHo0QMBENl&BPd\K?,=s7+D-UT*Qt)a$l'5a"PG_V0oLjg
%P#UBoOruuHL@.P'ngXiVnN=/hm_kY$GMgGS;h16]B"X!^[kJfif&fu6!JO_g,]M,GZO?5&\bQ:$L%GidQ`qa8/G:M!aU6Er#&rMb
%Ri@1t4&J?u35boYN@/a(_&4.T,sMY-6Ape4<h;eV8_gs48,tKn-fMD01Vdl8*nao)Wdp1b+!,bK`lo+u]M_uPD1RDAW^[8_^MUK/
%$p(n6acOPS\=@W+XQ<12e6@GM%>P'tPlQQSg.1NoN!^I:7s*S*[2klnYej;"VEt*U_(?`u&n'Ig:afM;RNJ+Z9ANo'^u$9T`Df0V
%A6*X+*XD$b`H"fgJQmP(ToBT9VucU49(g,lkB(SE\\qaMg`e(.op4LL\EVJ:\IBHR80RJBR)C(]kd>E7=n'ZM4g)k(+A`+%B*1`h
%0%kkn>"$ZJ&86h\MRkfJ>7Jm[DgKo8g41_g6Yl3oKqhZ._Y\P'>"!QXog#Mfd)^`cZ[5q8N`O$1)>E3S&.j79L_,2C1=.1lfDWA,
%Jgg[j%(hDo)5=FX1LfZ"FF;.s8/bTthT$PLD+3q+-3C8e(Llee_6)HD8P*lsf&R4\%)BM*F8O.jD0r^V5mV>_Oe(W5M6+[A*`s4%
%A(:b"_ogI7W$J4k-7d"Re/Cbp-X0aNr<3Js_bI(G%H!;$MD%"UPH9o!55Yq%hpO(s&fdc+mA"M:"btOf7@IO:aYsd'7sN>q))GEH
%[J+X0nVsN5Rr(Y?%u#\AO7R$;CNK?(/qiY-6*rS]e1K(q"$HXu<C:Z<2`L<CH2FKZL,IsWOAm.+6@'%W"=C?,oLbpI07$\uoMOG0
%'GO$+7=,Oo,f.E@^4rW+<Ed+Z@M`RS!=ZHmguM4Yd/smS@eH/mc6Chnc.?_L_^R6:O6VXoXeR12;?hn5K\ORha-du$YdZin9[GXr
%P4es`'D]n/VX@I%\uKZ%Q0E=UEW;7XNRPD(H[IGY-ue+Jc(fnJ+Bp;\a#b!]N(0Krf);8oa)()NiWo7Ll7kms0!tq"/\HPc8l#cp
%F5\]1:SQKD'oiDd$<b(oQSWQ:L"1.J/trKWjS1P_S:4->D67;=<],>6;O@f?!V<$MZii2(F1N*IDt,>4i'r8UGYH!tr=@/EJZou]
%dKF_'Asj^dC:;0#aE^hu[=^+eV'c`4YlJ2#?UCbMML*[*G!S<@*e7@sE!:Mgn*>'&@k$u#RD_Tm@'K<3l#Xtq@X#P%qDL/O$RJSD
%o&FODpc/`![Z;O*Zj9s4.\7Y3E\DfZc]%e>#eDSDi-]OIY\XC/Vf^N9:o8D%=<0(+\6Y$oA@EmW;Qq]!:1,eBLC5&$>fIE$!3MDE
%Jl""d9*pWAr7t=Yc#&fIhi%&8\5U9TLf]ATqtPl[idkP)$4JhmWoJM@D:!Ha'A"r`^X5URV?reb:+IkhhVn!G83@j2g2Ycck@3]<
%G/7u/lJ?!o[;^NfH'gZodc9atk[?jp6A)]84s\`q88!?8a`\`R[:)cO9m?ug@Nl3LjpcoHO!"/00p]E@A&Al>%iI1hq$u[9G.muS
%K_4rJB2Q#Na"^7(X"(qFmJiBlL-$+am,alBRuh!4/C-<bh0@0Co#*95G%>:qW.(No6cH<cFcOYuG1>&+LC\8jF[Wrhq=aT/cO'b5
%WnJU;3Ts/8iNc$Z017@'DY=C2^0Kp\+FWun`68ep_>s!fhTTut"O-f964&q8%suJ^59V`fq?u&Bl/H,4l?>sQg3LuP'ZT1hrWe#4
%^E#hLM4T#B34E>:,E;h`$oNZVE'nR\-:3FoF5dIa,qH"C7(&>)h6/E9,t:a<T;`g%!b$[JJN1EoH>-L$?s$T*<i?H@;:Nl5in-k3
%kN[t]>3&K(Kp*7&j2ut^j@BgZC!#P8PuPMC1''C0Fc--.4#aCPm\\q_$S.R6_UP+6"I6P[j9EI>G<cq-c3UL%Dmb:nM$8_ASB`1&
%^ogsq!$]87p]hI5$&4tgjPpF],!]"']S_anijb.;9:.^@'S%Ja&&+haXgcN+(KSQE;m]MI6ipDL>W1hgm&pKS99_N>h5:og;tD@j
%IS+Ahm^Nf3Kk";?(L,\`$nNPg=uT)Cpm/ru>FSLR1833<D-=]Fo===)$[K^u,2ikSo&bcD-:4U:-<?$Ze"a2LYYot4ecKhcQo<QD
%Hj2k[?hAn2-YHuu?V9^K)Z>c*D5h>(;9LJBpJR>O!YmLSQ8fu-Tl[`$8M`7a'!C&'Gj)J)F;.auKkr'rQZjjt!!,#DPc(TSkC%G_
%l>[&P5<EM'2lF'ERl1#\kRYI"4r8M6/ZBF=3f%H%I]&9u7,+^30^p@*+8*uSEkMDurqD)q!8r$'U)mT<UE?oS<P%UU[DG=gDjgs\
%qPak7"O/KP=ZJKA_[cP+a3k!apJA/'hhWqiqHT(25cD'sN1?R!R<?ge/*tW&,\IgVMH]am+gWOs6kq<_(T&\Y?<:9lJ&R+A$2qb&
%PiVi'M^'na$;83YE%F)$.4=,A\7aY:1E(8t*.prg@48TsrM,7u+SI<3A:.?jC85<MDsrip4\VGHDTe_@n)h(7q6&^4i.c=tI]DL1
%(E#5kq$Bu$Bg/0aH/16i,Y)elf/5K,1=10`PD-`(Q.bK(W@H6uPL$98Cdu>I:naS'4snV96EXU?RH^'3m)IIr"9H;[3%*C-$V\E5
%[F_c#OP"L'#.uk2Vl'IBP;45)gi6A^QN@#(s&MidG?&l/G7N6LQk<nT=Hi[#p/oK[:a(Pa1M33s/h;d94!&%Pm#EZNQb`nV2JlBs
%q=/a?^ZhW41nq/aG>;(,>8%o19aCAQM5%t]QZ3#neUBJOm.E"MiK8?V=,)bJOfP:4;<^leIdU6@/5j]60:IE;WTXb\J>l]+WWm?B
%M"SC2JMfUaQr2qJ;=9$^*_<r[=8V"1^R:kA,b^4oQ_nF\3L3HDR1!%R`I,*Olp#<'l=VA(NWfrj.Lfe:8.ni%<Wu4E?pnK=/2djB
%D6]O;;8O)i[qg%<48`e$,sYB9Eu&Ng/G;YD\YJPMNjDm=:B@fJ?:Yo3Ko(39o:c2alXH'Fo('NignuaIG^la!C8M("p*$K:JKp'Z
%$(6C(^:'-)Z^Vn3VgDN%0S3u3c-m1>T+r.Hi0]]@F9eQ)RCGTdQR,mQ6#G7X]bIb3:gkN[*P3Y+$@[(gmQr*%0:!sC&Uq8qT"M(<
%l+;DTM5T?RKd..&Xc;pXWo'WZU!3tmEeS:Zp;\A+i_MEIBiqsLo#YPA>oVarWLpRP(Y6`,9fe90O8JZli<=VET$ttNpO9sSE-"?2
%Ipe21l&BF$BDaRJh6s_mRJE[ikhTJYQj=ecf2iRP3Nd/!oZ')=*</EfCD@%jR\i:(s.c)_VqBD],/pi>g[k^anG1]@J*XDA.2s3h
%Q!CuGA2h@:]bpZ%7'%&Y,B-A.\qH,*&o3&LXpeM4&"Q0'1MR)EK'e7PAJOu%(1rT7rp>WAs!E7EOTo.`0.tIEn.'Eo;YfZ'NpDI\
%E2h3LSP@beb#1XOVBGZhG^;gL:Gnhs'CpU2aIpg,8+Wqc05V'a:f=&rV^0LRYdQbW_#n0h4LO,!D:ps<W&Rt'$^GC@S'inB3pSnW
%c-n?Z#V,>"FLVp?8FqXmK9MN(J2mkg!E?+q;Tc/>=nCn8K)OE/:IAM_9?Um>4p.\M!fgKZ\M2R9U<CjI^+,F6'^K1u,#]*+WsO/q
%d*XF;io_X:4>0rY'QBa#;0Ztj"9tAMWei\^c=\COC?S%3R)C-pPpAp6$7"\6X7.SG9)JDK`G&J\&Q;4$,+(8t2)(.%EL<a-+o!Vr
%%Ai@7=ku];/^Nr8m=_8U^TBRbWTg>1'&0,B(dX7fiTCrXD,[GoDAnLS(69HJXLI]_3uIr"W,#i5@dpO\X$c;$84+L8;+@F;MZGB)
%j%G=;Bo0hN;^meR-*O-S%rNKA]5gEC%*bP.eZ.7P?)W4E^U*j72,q9s;%@qB,a6^qdqa.:0-kDmHe3(!c#IVk!&B'$@T`XCPQE.i
%.`4.MH=44)!$j"4#fJ+])Y"!13]6uA1p#F*YXW`mL#9VWn'gb?(&Y;3>*25YeIT&KH.T?^F9Z'-/3g4/\SCl#cD-(S\TpU$-"iK@
%adPqBHJ4`!XR/??3ZQ%.(%5p!h%qa<XScUc%CgpMgB;d&MjcZmJm^c`rtYP`.98^'&.SdIY%t=;M/^5q%&B(&I`oS2$oV_>j^j:7
%?o1mdpc2CnZ[I4h5I4:c%RB(CK=&UQ32O?t(oAA^>)qETA_<*lc*?V6;k'XVkV(ot:$Eg']3XN1C))HkL7K=tK.EWCb>B<Mn_P"+
%UEZV;4O[bPX)Yb1JI[l!TlesmYQ36LNYeHCQ+Q%51H.KMPA^Bh]hcgFeR05hKm<+`OO<ibm/g^0%`+*H4@)6I2SHEI;('4p*IV2E
%;,AcIo1=uLAUG+J>@a`k#3_:0co+:S"11KZL5/!Qg#dFK\ISTS3q2_%ZEOkLSRUaZM@:K`_q4n9!fB!fN\lX?IX$,Lct?3b&[Q(A
%CQ[Gr_I#!^)WQ>qJTi\52(O@2Uc+"_c'`rcVEbN\gWgr[e^J7ri>LC3$Ou:]]aR)jL4($PP6H^u5H<V%C/1/ne2o\)@S,SIMpHh2
%nAC]]]fdTCc'I,lElgkhIbA@-322FEHfa@J8k/]p9'$2IGYgX*VO=JZStJATV"_)%[D]Yc4=6K9KZ.UE7bKd!15d"FJ/4n5TAGBD
%<-X(0g0At/kJ?>BI9)f$Mj7A"V76<Jb1%lN!@nh?E&=k*9Iu>t'n=hh<M:tZD)R`SLHBrD;\_('P&>CLrkhYY96tAG)Z\nR,nHdS
%!6fX]&cnj),fGST\D^r7o_2?*b#'0B=_.Vs6P-A/H1Zb'rR!^-=s[;T5*&1'AAo$_P*V<">R8-A>PGVE`HQ#1'R/<PfU^AQ@la],
%dR;Oc=dplUYYhe=8ioHuLS9@:j.$%jqDG:O$c%=6?qLudSFPuedh4<B,iEoL'#Ja6@AmO41JVHo&-EQsRT*;Vl]$l8D3^obo'k!j
%b>XgbhZ*P!.P(Wah#9F+5m.FXB`r'9R!_bN`t`o_Bnu$OSQ\$F$C*/G#[&r[9=Qn^T7W"M/rL?F.YJ.C/uX(PmK.>.r*N`AWOk!o
%EDk"oH8)We%<R:02'b>]-r!G[HTa1l)p;Dfb<mZjrJ6_0]+go6,VGcTV!9/&rJ;Ni@r)"*YRo*=@aG+9,)ARoH2q9@4og3s<ifOi
%2tII+`+NT.*9]EFmkP,^*s/X4V5g%.=;=4Z*Zt27;5')-mTk*+nZ5`R&DCi`+;(RfPGLToUh,Z:?n.<u)O/Ug5m!E<+M0$YKB(j(
%3qrZI%RD?<&lN@BY_:D'SI.SlZr^1c[97,S77*kVLd<PKAN[X%e's&N9-$A]%B#[+.E52GRT.F><'`d6.WQZI04O/KNs6gOK@9Kd
%_2M,\*\^4ED7;(K%ETh3P"92kekA#_J7rJ7@`d,lPUY%tdp0kQg^@i<ihAHF/tsaHT#Ej+]A*]0Y0\"PBVYAuTHaPC!-rJ?o3[mO
%SJ4#G@S#qpTLdg.@_o`N2!`ZSl!59HMA?r4.-beEZ=K).RKmd^%H)qMJ06a4JLo<ECg.p0il(+]'i^q?V87,d!3T2:Gc!^^5!CX,
%22ED@")S5?!TkRAZm@4tO+)td&2t`9*$I]ZNj`r&*B>1c7]D4GX+h0c.op8RQq*Q;)0$Ng0>sSY<h3WTG\2aH#f;A'p`d(7)MBm^
%[@35RKs.]U+@.rJ[/k23X2CWYJ`%V2k[?1EP&oN^bI!`/jieC,$&s(sW)p\'oO>EheR`87JJ\,ZMMlkrj7>*[&@KM?#=9ECJIf1A
%2fb:'MB5[D!gO$^E-6bsEC"+DeJW%F;Bf3X`?k>7ZuG&F$We)m-?XW)]OM5p4M8nefHiEI\&"4rKMO?uQ2EZ[.jS+;]Ht[9bhOKj
%TUG]!h(UXk7bsSL7M,Dd--0h&WBZ^0k[pfU:e42k3.rt0K69fTS<lO'.<Vt"S02NG6LM3X(^KoW7aph%g"h7BJ)9IMr,cC%AX)<a
%2&2)>hkc(OP@^[C$TaYf+n-Y7Ue>L>:^IY32<d5ei2#7X_jPeOs4lBF$X0R98NW&#+4RqHeWrEIIrZ+febob]4<Od$JqA62,+:%5
%n@c`l'eerdWenJEAdDH1Ze6oc"8#=p)dY78dB3l,kVp)\XHBI$8(nW42O/QA"e3h6Bc],hWtu`W8V<s@ORF2Q.Ko;\$&i=*-!ah'
%7ulJ$06lP?EUR11WK,1<JRaIXb;ED\#m+j+LRYsYg%!_QJM'(?2`=rF@b),8&t]o;2,p$,$_F?`8aX%Wndmb9U2n\%.I&R@Rk4</
%qEU!sma(t!;T@%;CqN?gAeie))./ZVlLk(#$@0.KNEJ?8N(d4AkJuk]/%[:8o$,^>eF4m_3mb[Ppbje>Ugh#deM,<I$ebTbDc2$%
%L%sT%;f*Em!fne^$$(X165&1VGL[4S@9AL+(h%=J,)\\pM$h?qgqfc]_<(CcaE;D!&'t4iI`P%q.OKC=SDh1el&iQ*a/[ahdM\i_
%!/M!booOu*QS(%5F%nbq%Po(EW;qNiIOlaslF6l\kE634Vm,D2!KASK&f_.UG_eD<a4)BFn&(C#faf<&#2fqX?U/Q!iKKi\fs4ag
%'[@4LJl3X]NHk1e"@QVfi@kZP)BfZUq"l\jlT<k10=)^?3sK1",N%F.U';e!6cWRC8Y3W%Vc4`I2E8&T:$U@KYgaGh-um?tF$V-N
%^QKj)r"%/)$$i'C`%qMgq4iC1#DfSo]S`MN-"U!Z5J5&bL'th$9K7'3)Bc/HK%m%3$2F@u>ttl+Tob9!GB(l[+AT8d!^g9,8ck''
%MD:i<@4\GSW'$".\p.FP>A:`b3akFM&6O]K)@du:'>=)7URjE'R[#qU=NV8C6DG5(CS(5#-)K,=n<"Ij(4&$1MfBC:nPCo_:sF=H
%Q2<K"LRA:Pem'DU1q5C2;Y$Pu%CR[nEOXpG2!=r8mSOsEd#iJb;gVb)#+]u3&?UETkHB3#i/[t:n.ql,`2!+C#G2'q<j9F*&FY5m
%s*$%ITV(1"62&Ue)_''co-#X4OaA39IV9dQikD'#82P%DJV%1bV3f</g8Tf*mGUOl!u65"iIbe#.mjcdD,KbS*rRL'NIh,6pCr4t
%cjFD1bcJ%_8<HI`X%<^12Ie'Y<O`o,!PUY=liNge@rh;ep/.p>#:X_>Gi[LpgJgN[@3J8:!eR+<7*/8O&0P!!n[M^hLuHuqV[p!+
%*Aam;Hp=/UnGoR4:M9t^Ek'Y@\>G/aRM="krT\1UIOc`N%>fK-`d_u!&:H91HDamiJG&B\U+B]jpS6TsEL@.^d%<99NcHMrnN6$8
%^+r*g'nmTi5'^Y.R(47VW>5Q3pa._`+iTF@/S?Sj(^5I3hs=.br-B(7H<*B7N<One#4DVb$?^lZdDB0ueBNK3%\:"pgkX>d#nBGW
%EUHA8&h7Rh(OUt564V`Iq#49!1H2XPoAMq3l)S/U[A>j"s5F"LDMZA%U2VF)XQqjPY'/V1%i[\b1'aWf#EIF'>#rE=:/(WgHNLSg
%j:YQG<>E]<jW1:gY0P)/e*(OD,nC`lFb%Km<P9RjoL;IK3*fH$M$.VR^)8_C1>&T+Csnm8U4@hicf/X(.1gj73nLC3q+V6*goh^U
%8X+BhBJ^_T=,ra)Uj4&SR%g)e?VC&/5./Z$<t4lY.K?l<<0ZGlmY$<TY$=e$*M@5(Kj=-0*[RtL3%=T-Pr/8nl9kF#(<`sY_fu0/
%!/TIt(+km*Tg$R"jFf4C](D1`2bPY!%WWSM+]-I_h471/$.;kSh];oIFXiZ;e:5Y/,a2h6)[48_[]af?e5+?\qGj"J[8[)q\\AiB
%p2>oU:KORW6Hn-nmW+VDJ.[lo<F,;"CH29<oJe(p=I'6^J(F[%<QF/LZuRu\p<4et(D)5C%4@>lk)MhCfX;'`rnnR>kR:@T%,T#-
%2k2*)3sjd0LT6k$V(/AmR*:AYEe=IYkOBd(s%NFZ\GYhOIhD!MTRTGj)<+VNUI\YYnY22X#/lH\jhlS7DfM-U_bSDg_n$*+UFbAI
%N3*.oTpq$rF!`P-;;l(=gB:3bN9uig*^Q#T/fY(io"kR>^E=LkGQm&D76#?.eVK2<#f:!.5>F.eFQr?Bl"7X9<AmHDJp/?87N<di
%N`@50HnElXGr(JJa&`$':&rKufCB_662o$f>aqZ`L/pU*f-22BJ]lr)s)!o,7@K3>d-S>+'V6c[knb*2h81_KWOmb#qJ*)Zrjh[<
%!3"(k^jbhGhp)L;OZ<pLJ'X'-'j+Lq=(D4Y9[((bFX]jaE`+n'%aLb$.@?bPKi7k]IH)umL.Dt$Ph3_hA\Et9pDt,K=.*nrPn[S-
%r&+Q5<nq[t-PM,mCc75]C0.A'elK`"Y^D*2/l/#g@1qiA[j1DT_jKFdlFnQ=l9_mj4_+mds4B$?PT5F>0-s#DgiBhJ-Oe?c7U6eZ
%_cke>&"=tZU+e.rL+M.VZlX:%pd&k1$`f$&\>s!JgctI7\`&.(Zf1;\&6j_>0h[fDRZG-&1LJ;(K]_=9O(BS6!f"Lq-AF!2C2>%G
%ZNusFeAV`u?&5Q@_a.%-2R=N\l:?CJm4ZN+Vp"grcV7d^E^F3oil%`nQK3sbGuhYhYk%]G#+pbmBIA[</H_IsJRFVc#P%/:7M]%"
%%gY?fH=$-jC(Wu;jEop@/>=@&#Ac6u8m)%oC89u#ZOmMf+1Mk#UVk:^7\2TJaO/`!%*WY$0^[raOrOt\&lFFL*)u:%P]>Q"$'9\B
%-oE"ho7?q['-r?b-Kh]1Woqg2'/CZ(_O)7=,kDEFN!J9]"99+'hc)<MN5jf1+\%OSU(!6DLqs>"T-'E%PQbjjar.K.C,7W4Woa/m
%+u7O["5dsj_@M/L,3b'PRZ\j?#;2#4!7sU"7B&9?MI2J50m]Bt.;7lU/V;(8>)Xj]V%$a%"`0;(&8/og$%T?RAtTX4`c"0*]Hoqj
%=HqA-A%<`L&5n$N%s>Es);OrX,"KGqHn:g:kLf"9".IOgI2pkR&n*B1_Qg[^G-?;7\i%C1^FYY$i>60%a2S^9(a)^KT#.7,kO=Da
%4tR"F:mt.lWm$Vd>;LSh]I=1g;C7IY#'1YI:H5BO8'FCQll7Xj[KN"k)I#_4bP:>Ui@Ud$Y%$_2"`)'2QS8'6N&2lcjs@A\=9=iF
%eF`T<SCj3tTJP$V@l]3;MkK$NW<E1[k%#3jX@s3&4K$QaJD;N<Iq.t<O\dHU]0iEHQ'L8X_]NAG]^nJ6;Mk(`<$^'qQm0`iBgIdG
%)nfia7&/C\BpsPQeirQCp;KV7`D^M3NTuB48I;FG5u\A6B4=_7WV5`ui*LX6'!c>n0u2nW:s&lS$oI\p4eVVj^RglFA.d7hA\$@$
%"8"GXTK_FO8O`fO::J9d(S[#-X%!oa*O9/Aop?tUcXJNe*/QhI,RW*:i\/1$q`^"A\>>P8-l,d+V8bO)j`r[)r:)7d*'\XA_88#u
%O*cJK$V%m;LiILG3o0<R?_nC:ptSf/Kig\7p$e?5$\1>R7DpGi,cic&.nNei9BV!U,,kr+Ii.1+?/WFGXr5:qMd,h/XT$#8fP;WZ
%7s/e<)IZ1k$)N0odKX$dAdeKtZjn`FWh[[3h5d)InJ[ne8[MNV,LTb*RAhP'nd\\_6r/'mG13X2jl,AkUV-KXWH?T^WM`fTKHSfh
%@a!765.lP)p\FYs1Hd1Jblq3^NKeNSplI@1_i:01HjdqKdlf?H`]tcE[&?b*:(^Wf*),%#b-3WO=+JmI'oneJpf]nhEr0Mj^;h%.
%o..@g4AR.2AB2p\@r/HT+bB'[4GYF6"Y$Yr(gl2P1ukA;\GP^)Bf<>3LU^P"Y.G%Fn1u?k!\MuINJ,g*_e?jJ@$\)0\S*!_)??M6
%T5#?<hnkcB@r+N7YnkTur)IcH+$]C3a\)8:81Xc@nfaL`#&2$XN-;G+8_K3cCM>PXW<g-5Y3+p$r?Ae<MD*+<AHaLd:fWnDQUj[q
%>,)5*Q?j3`bE2js`UX%W.@RcBZR+5mDekG@_%Yc`MJKM\FJ6/AoWc0lWjOHgXGJ]2+YL8K;JI@V#-NB\5)Z3X1mb4XToqfA<8j\c
%^R.`F@LeFqam?k2!W!*98PTtFq-?FB0KVj(T[hBE._2Eg"H,ae4hLU$g3L2@.mh#p9Ub<8a"Mf[g?e?NT/ZPL2OM+AUo=0a#4?*\
%AhAgDQ=`[=n;r^36HH#PkP;:<-BD)qOuBLR3.n?L`,/ABp/&W110J$cY2j$Fe-f1fFuQCT_K+J+1m(;Od0mdraqE=Cm:(l!^WFCF
%4tDE6=[uja3'18^HRqfRqa,oV#:Z`598ZGG8[*8`f7d*b,W>t6&W\kMN"0@O'Pa_P70Rip7T)/OLd<f'Lr@HS$edY?[2'u-:I81E
%nV4eWq&G&>[65[e?9E'P?>-=>$?OY*9Tk]@8Z<1Z=%+TiHNd4G=%R7K4%0k2CK@`ndK([4UXBk.`X5NdG26!,PP$9,$PqZq(cblD
%%AtDu+b'prY)U7W6BrK;BcQ4A;)BhrdoDXu?2'ZfZ6<kf'Xnhe%Rjuehu:>=r`hGZfR8e%rd0?oM9J(G+5WXT&p'^rfn+E[Tf"pR
%.[ICe0i\Kj`r_!16o^Pi&8b)]>HZc,bR05D7H,C1qV*`<Q7"^_n_Yu(c&`10$-N`n12+,^Kg?FqH@oaN(4SjW!;3rV9142:mQk6;
%OVUQ)*i"b44hM2:[\:i?]cT`3SZM2%&hC,U:0-]1i$Y7P)_[te=F.Gs.!0ooES:V8Otf]Q0!7G4[;V.LRG<Qo#f/#6>pT2ZOOXPJ
%Q2Umf1B>_,^>`X4r8rN@6gjY0NE=&cNeM\_FUM6l%t2.W1V%hpS)`32r,38M@HI)0GFrq2/Oe*L#@UV`2<Ao>[ikN%W'IW%A(Eh-
%pWl\+s6<)K>?=oJNChV#+(!qWbT/BSd[!;M);&S"Y&2]o.V,mur)fc"_MlEP'`j!7J^ImIJE$r<#a@7D@;hjN\-9pa6U4fl#dA/0
%RRLL6jrPhV$"G]+OkK<GO*Fh6]JQ6@=Q?SFG#SX)-V"NoY[CnVP5mH+&#Hdt+["K6Hr^ZP#6O11kV'n1IW2'U>Rh-;)R-FWqQ&$o
%d[KD[9nG>0JR,eDk`:gW5aTQQ#I"m2$!qd=&c2pVK=lOGbmJYb@V5J!)9@+MQDuPf;!u3&JUAUg%?/G24\kZs\d5TqAAPCB1T^'I
%b@#LO>)1#A.g09REu[qU%UhmNepr+(#mNsQ@]N_5OWl"1P[gLC^B>]=KYC<V/,T5Om1fb(Un(fah;gL+Il`c_1poIIe=91Z\`/K7
%A2oRgI\e+1kc1*@6US`5dR0[D>fC0M0.\&CPf>?,,G_S+1Q+LHMgb_7S?8(,XE2ate\#ib?mQ9CG#YIL(TF?%2h6P64?*tu<L+]H
%l7X0CZK(@XaHJ;8'N_@raMbss0Ec6*5ioL*fK*04C(^?;.Jn)9kJag/Ma-0?W\oHAAeL-4[2l<,H7dcN_oKQXe?K6eM?Cb)9u]L*
%d\-$SRj,(B\jj3<3F%&+2<,BJ*'F8n:/?dZ6iF!OGCm5cI8eI,/AN0:9KN64<($s;?4c<d\oI>CNP&!;OcZLB8LomC"&ZfuWi8`#
%S-*SX0(o;ZJ2R8l'!#="J\WbuFB<U[\.DU/;KcXJgfBNLC1cg/h1f#6M,OG5:n19Ika5fAo8[_r-#.SaUU/HuB[&-sd/%HeBlPh0
%;KZ&Mngafq=?Eao?<t##AnkB6'ET\mpQNLK_rTu5E4?U[FcLcGJl]<Q4C+A,4K!l:X1@-jT)lGE//#e$8_B[l<SD8RAeT$!%.&A%
%Pl_QUL''toH<<XZ2-R]k^mLQn8gLu:cE.=SWcj(Y>)l(mme'MM!_GVjUQ>#Uc2hRG3?K%<_F=&YBbNEn,A=W$0!1-fGnZ7pM^(&M
%^D9ilaea(8Gi<gCU8fCX?aRPZKiP<N4W:l'X-l/4dT;7lZ<T;/m2<3t32iNW:_OtUM:LQJml3@s/N'PL>+ijBidoQ[)I\o8-AP8G
%(FA-#.In8qF2l7>K,GWGD9ca1T4(_aJD/Q9MI`23918!D6+\PWr6F?<>e]$tfS<\0m.3Rh4Y)316oc4gSAg$pq=oU6jEMYQFNgYP
%@"EVd-0<7^9qjBNc^kVp=mc:0UE^+ud[Wt:99-mrBU(C\BB&G5IOT:HEA]@OTYYcS^"!`k/5f?M<n8\b6o*)QJ_1H_Xg3"nbAT57
%#9`T;do7la"Q[$l1MENH)5E4^lS.&a<IeLOLE'^DG->#/n_K=&H4OCp%*$5CACJXKUZ_IBJPV4BRd,c"WEYRJi\j@2TQU_^[Xjsf
%6)E-^$R7fe"ch,VgFt)[&l9I9K)a(q=!0N>lk#]s=MSs,s+=6B>8/add#^;erZQ':d\9&pfXI4%Y..(*R7^Vm&/Vrm&pns"^gHZF
%YS),cjRRCJ'^HX_"3_+h'h9UZRcZC`>E8#P)&eIB,WGmcbYGJ5Ul[Jq7"FZk!E#jDJ!97)=S'/MI]BHTid!&3s1":=L\.[J.)R@T
%A(mc4Y^$qZV\osllN`3+LC\dh#Qpig=_Dd;8dhFm+"%`+$AtR=!uEX!\s2>K#0^t:AkX9!JEZMAAK/Z$b*m1f,;T(F;O:<KhDR:f
%&91p%5TFoSW@&icp#Tjd>pc?pL[ORBgu8c,J)Jf8cun)G(3@ZuO`T/dSZ$I07acf-@r9L-JT0/T_LK4fK@'+2o_t/6FpD_;7#&9q
%[2<EIA:t!Hs'9\26Wj_%TptK=p3Qt9pQS]BJR345l7XfWO"4+8VXktD=bp9X,\LLXn=V2WbXDW1Lf#s*_WWPdAs%%kKl)fEcE5nJ
%;LLMbqVcGP'DQiAc-ZhP?XB%.'2=>ps4#k0`"^/jO#d!50>?[0#llV$bobEDs.qHL9%OQJ)3g!mAO;PI[h(*@oF$hhCdc)<YkJ"E
%<BJ%[!i&C)NQ/8OJA`3APeWaU<mZZ%go;B'jpalff;+Q$:-WN!$s)ja&b*&*QGET&+>c`PC(V(N"P!V,ks'Uh:![[_^Ja_MZW)cV
%SD@AD$sV/i:EL&rgr)JE-KPEpa_s3TE1mtlhgna]<_ZN3;uBI]jm'uT4Zr<pA+/1gE_h2LpBROq6;`an(?/.qm)M_gSS*#Zl(7[J
%,pL_3#L1jEf:E_N%I?5p?2Y8N>`;[,WJOG&TCAe`^b(!h^<&q=T$)&AZ15=#T,,0FmhWoX`UgQ#,71BuhUh^__??CfI#YAc]iu?2
%oV),agMd&T\(c\S0Cem-S([\RdHpl'OU3-8_2iY/;WgF?>`)G`";niNJRtNS_0o6285cGo[@gL?hGVPD8>-SPe-:h(pYlb%"#CPt
%Q,RZ*5PA5VED.kflqg&ZHEI_Gc@CiUfj+ne[^6baRil#eW&)TQe_W[feE\(!bJdi5MX$!3-.`AtgSMlO+3K0LZ/FAK4;;3Af0b1J
%?c-lQC!7;M.Mbj@!VMg$^>WeSmF4+$$88^sQIR:\@%s$0QV=AhHohOG/$uDFK(isgWGu@r'"ABa+'*,Y$=tXuLMejqm0Z*d':49=
%qA_MOHU>]H14Xlq!MP+94dN\B)DnEYW9.[@B>t$"cWhd\L=5arA+D,*?PPPPCe,T[_]Ptm#XO&?V,^/G,.''4X1[_S">`n=%*ERt
%)fuSJn"PDLPg9C8D$hW9g2k@^<`u+)_aO"H\TE)q+WXF2,2m`f<u,RPS]*">1ibIU@9U%_D*dt7$%XYl")!U^WGj_;BfS#*b;m><
%O&R)9rc5EbWi.^5O4E[pIo(-U3a*OE+;%\qpp7mG/MKe5&WOn$!f([;)NBb+UBVof"Y[f$U=M9eg>2/0>j32bSLg6q)'TRhjdL9^
%/qFZ.3+RO#W5\mVXOROGDH)QB$-,I,cjo**%k2O9YnT?hcY6/TbM-)WI9MRL@e?C:!C'p:MF2Z0_QRA6DWtV);1^'>LoDVORk-h5
%%<APH(atnW=MVo(ZN7GGe50Ajn1-t&^#p:MhS7OGU?!kJ;*l"5Uni.4"ipbrM2FY5bYONJErj5?!sjg:B,,'_$o*^&Nkuj\hA.jP
%3.D^B+TJ]-W]eQ8_A'1:7'-1P<4:Yk`._0AD?8`@/M6k/kq&KFg-@5OC3=OF=X,8`&QA45GNQ%Q*^).,&mA;:W"E'>>S(^&3Eo`1
%&_;bS*XuAlC<?,5;I`ZPmV9lomE@5p6$)EQ(V(LsmbXCJTh=lPTkT0a;8(K0+K0@@&tH&8S8;YgV,rX/SO.&XZc&5PPmpVmC-/Pm
%773noeeKLE>OB'Uef@WL!n&d)i3\LbGn3s'YSrk?C$7C+1*8NI2oVa$`R<L'T+9HRJQS3*M6#L`)J92e:Fp'*gY3s/?7IIo>*YLc
%Po='!C>G,Eqk6bS:!N;5Fp.B6O'U\HM0bVL"Wu2Ha3&!p%Vj>ji^=r<+n&MDSC6F\W`lZHI#gF0N9nVDFhp2m,5_srk<(92C+I+0
%,"m_51Pq"B.bCkS[6u./YlOJl%]+JRPH.9:@laHr`DWcg^+4jh.cSaT;S.N(iB&@ZRTuOTR8<S^Y?s3:P="Ds]G(KTAlY5h6Um?N
%+BK#hTTK(_Tg7!(2^Vp=?J[+)OO%+F&OrC\F_7ZDqhKYTTkO!a.kq?YiESLZ`32SQnLO_*.-K[&\s+n9WnU84fUAoJ`Ln45$S<pp
%`sfTG%:Cr3/VBcs'Zer988TY-q/K*Z_3.fTO<p(2Y8ODQ<9+Q?=?FLlVe%s&7j[2>:#EsB\I;:n<Eg)H&g*@K*e"%+VaWFFkbm.`
%@_'nt)-=O\-Q5YD<"$PQeuXFR5[!kl<ZPhR:]#0k6EtnMOVFli?=a_<(eKQgWG"`\VFq,G?d(Re#R7U::iY7k9kX;.NSu/rM1@[q
%iQ-KIp@rXBjFu^_9GjLScj9KPX'l=tj)f>n95mgc"%@#IR"&4;)0'U;<d,@A(d0?>gZ)=3Xd6GY/&MIC7Y1e:.mFgGn@E@7/@QIq
%bT)YbA,sY+2aY;N^a8Mqm[MJWPZ#F.51TuE2)Pt0J)Cuqf9pGhWmo%sMjan#2GPajbpbu/+%K2249WBXTe`b=qVbs*CkU`,oj2dW
%LK]lV:"a\^Q-GKpL/2,1'hNP$V-$S*RY!*e<=H\e:tIq4h4ri7SsLmI_m8Zj+8Dpf3GYD9V1,/m:6_R:IRnW'JeG-n+>GrOJaZp'
%3:NS<aBH[rpPQfs23*2e7-P5/bUe:!T_r1sDAmdga[K4?a1,[u,X)Bs73:opVrT4^ZEQH#nU<3R)&7i+ado%u!FAe7'iYS1.U'-Y
%i=R\%`6:NGB/6jMFET4YLK$mM,IU0:h@ejB;[YLB)I]rZk`&e\:.()+QC[C(:/MH?E[Uer2@9Yn:+B[,#e>02*52BhpHO;E:,ima
%`VLBu,$/X&Z-@YsE3644%TPN6jF#KQ:t^q8&O2)%$Wtssd=cO;Te-?U@C?Vf46LQ.E.Mn.'O.JC[[U)r/VFYmET:*RG0q7CW<oL"
%N('>oKXpoYfq\HnUlh(7a"$r\M9g+W`_ri;%$"O(>TORs,9b\>#o8'r*%SrU'_)QInDV3jUINC2!hQ,4PT5FI[+VD4ai!B7YM27?
%m3c:8CbLoWk"m@T_U>q6]uUkIEtmmZ0V'E;"<-QS`WI8HnbGm-(BEfI,bNkF_PU"V)(.18-ck*D%>lgUp("cjP'/ZikK5^-Im_C1
%jqJuU5QW_mX@PE%W#Y1PCtDq;XsI^NV_sdn@<,/1(^DdRM>;f:-S$c"-@\4.g2ibO$+UFE0.5pm6(Dnd-/la2&L&"_DWV7=7n,%o
%lY9O.Q,^BoilD5<;P*f)^P/'@)V=jn/9m(SrD'e9SZK:r`WR^WmIg[_[<[&*YhZoq(uJlRBAJ"UT74EP`=e&P&$>R!XO'1@cHO3L
%q.N&;(pc,uY*E!Ek<2J=/3)?":%-XQ60^kLCN]doMf^50qB0&F<G`Rnp=d^:^q5bq3AR7d(tLkQ5%PI44AQ*>fu.BA;Ubrbk44)u
%*b'Z(7PbDOn:f2Z'C9E!&6oROkV+i.)jgmT/[cc^mT>Q^3'Kn!,=.:bSgfU:9KT5a#_0j/%.B/[qOgYo$W"$3E?*4s?'7gcG?;\G
%YDpRo8d%<0a4YpcZ>f79Kp+/RZ@5>%`5h=nIf"suL#m:\]LX:FiE1Gpr[&3ZGWN@Wp`Ll1@+d8tiXc/SF3#2n-,dZf%Na'HV\\i>
%:^`83$"hA#-cI"O@4>p/2\rI4g08WX()2Ii@>3FMC%=*Wku\&UnI(uHJqL]18lB2A$S()=YXMR<@HN39O.br=1'C4;D:E5aQIhpP
%Es`F,MDMnsW(a[6+:Kj`(;Fq%&rRA4/"fBH[IPkRF1\chk_\!<p/CaMh4o+A<,]B0g-0o@ZT#;,0)5nL$-``\E0Y>-ERmHeZJ:CW
%=(<:$.K"Afq3T+EcbBJV4R4--$45LVb$o=HSD5ST/WH!DJVag1(P_(p<^h@#8*CktIVhdl/tr:-$P(*[eR<2D+3`dD2TcU."8L%m
%#bG.H!!MTGhsqm[P%h@CcP"nnS7%)W+=_//2G&Er$]4`eP64BIQH(Y+/s6D96)@nU]>.('Bt'pLcZ`M/eL8L$h5Z*A/.iM]JLAN!
%&U"H/)F?:q:j+`kbX0#$XBP_oIlEdXBJP>(E82]:/dj"g<LfWk8Q(Co;8@f#*etUcmV!Bk`9^$GE\"I*MZUq+I,Y*!0MkVp1-/1e
%lTU!A<!?LWE^r;N'PdsTAPm,oVl?T3$n91+6]0bajEZ'h87qeS1,q=11,0;2NlQqT)oVusIFnV8!.2;Y4*%`Lge!YZ9pp5g,\dCK
%L9S=*Enq\f]\Q)EgMa\igm87N9mi.+rDZf;_:LT%j3GfPI<u/lX=\UBQd^'NL8WRlC44t#kKsR%LKmQ$S(B=JnCNdh=:p]CVI^o8
%`%%)5_@j0-*732_DT&J:G%34hEibtMYlbR,6]@hGe?g(bB(Z-76U(^Wc/?P#_k/8-ai\OHePuS4cleS]TgJ>P$n+*N+C$Tip];un
%2:0.b'"jMj_JX[#5$()VIe`$CdL_:uKsr1lI`pFZ>Bl?31f!t=::HW8_R"%X0bOqg.`tO1mt$A?&"iDL:+\F^P"\2,ACEjFeGsQC
%<n?qr8LOn4U`]_5G,_>*/M%VC/5t5K=XiG5dP`gZ'o_k6`8f,F;MQs2d'q+M)G4Qo!G=uRQ,_5nMB-b[[?un\L*J>[PN57/gqj!S
%Q>J`Ji<HR1ad@K#/)eED@!;DF(d#doaC@3,J>2N1A_"=']hgO\=Nm:i%Zi1IJ.)Ls`#8jT+\J0FRilsTY])l]E`jeFacG^NF=P>0
%P*Bb_$5@I7N@e"2MB4MGIf?o]/:^kNi+j`IlZ%TK")pdb$8l?Ma]WY/cl9rB.(phg$kcTrlZ1<'\@hC3J3ZgrbUf>0M!i)+7_3Hp
%M.nQ-.kKaJZ-.o_2P(^IdD3hN$of;+U.3lna6-SO1)kuoPg*t$B,U60gH>9.dJRdegLSkdb?/[=(iljMH2:(0CnCi*H#gTHdqrBX
%Yp2Egom+2SGa1r^=4V?6/%G+4q)+IR)W%up"L8Ie/`9MY6nF4n2a3`tF`(jCFTmt(5R1UuX;+p)OsmsnU"sWo^=Lcc[qV8R>&h:"
%o!D6-N%cRq4&NJ;FC\[D<<GVJcU/KElBhXOeiUB*0@u\)LU6&"9W]Jp:ANi$Ci[gQ1PG`JN'JAEoW+_kY7jo9*%tKqo.*@sC%#;)
%73b<(IN@]W-W=riK*UR\ft,EX]JNB%1pAUAMb=u:->rqJJ)e/Z0#l1<k>ZWFek&1?Y+:c."'K4-%b'"Spt5L1]rfTY_1"lQ>?7^i
%hLK)Ge0[U'p_ZWM6\UgD?+u@-kEN=B3N]WXj,JaAq4&+?%4h$TClr`]FQuC$.khB?FVhmGf]T[%Ej.om?&/=FKln+^R6Te<2#!2P
%9"N8-KGq85ZGe`JMh8mEhS9RZft16N^,.-h:8Q485oL=lC25MU_SJnT,FJCPE0/G,O*qQBgfQ9KeT5R.#hq*aL\!Yp3%ucr=<UBF
%SB\$pI@0S.ZPV3Cpi+AO>7q(hQ8Dd(bd#P7$Hf-1C74U+GsGQ>r?#,ZbMaI25$?C[_\F'00hs6E?Br1"[:0;?$U[Gun4t[dS[6$`
%aeR[qh#L6bIapp6inn5$e_)P]'PQU_V7h<"$^+bHghsdfPWZBU2%$itm#Q[/?0Koa$SlB0!C0MFC&9uH6T?$Gn+'+&h!2c#FAnT.
%1QP4-?aQODaKs1a9Lt^lZ;><?Scja&hE<0mTY[%+aqNG3-L?91huJnj7P6GnJ'V(cYE5h7:J'D[JJ&$#GeRYGB>uU1AWfbt<E9P^
%aLF+NB+V=5kQ&$J*^BCuPXu<FCbT^c;r$3tT-[H+2PeXnn0NW7B6u$'GgqI(CJl9@H"tgNhfeRNP?ll$0oA%#;`Vh9#Kq)-336sj
%!$:SuA1UI/o0@<9l-MX8iC?edSLdIOmeI<[IK0+IJ&t1_Wa4I\g<un,fLR4-N`JDsl,4.o7d)!'1RtK%"@iL3nLe`M.ae$1T";.s
%OJ*2ORej]Cbko3,"a]6RB*7ELM^3BNk:8F.Ajf6^K0K+9S=\jIhhDl0psajBaT5bB$1mr&cPq76+LHg]N,&GSW+5F$9I%-;9+qi0
%3$mKf91t0rU9"9r:7)Aj_$sRQeTPcQ5b#UgA4u(Pn]7F>n+&*O3G28h@n7;:\2CDh=k,P-=L,$`$$O3A37sJ7:\KLHn8'Q`IK%g\
%;0R"*jXLLSC8iLgJ)3d`1MD15*R7d\C&#<l09&PRM]psUGXKr(O+H$XCP"S%>>o;]r*:^)(Da"l9r<q]a`hU(p9F*(&C*Mtm`BDn
%E^GYmRVWg.2p$WE@)e\8qokl=qHC0-WgWYAC-FUJ-WGJK<G,,BSK,`u``Hm&<21e*B/hEWo&EU(Ub`%UcUkmj+(H".CWV/>7.YJt
%;!52,4+1P=:TtPq"H[_Or7WNN6Fq<:Yede+cdq1IQN:QApO$2a(TJ:5ILG:>V8V2YG'@A#CcZNkL/!R(^u``ZRmAiMCC4^m^k@S9
%V3=4P89e-MZ2g4P[e\\\Jb>^58+o6N#PSr[-MedupA(iTK0d&5/1-IL&K(@Sa9<#b(a;/#:SJi79Zp1!2tEA;ahtHR_/bouW.16a
%^I*$;&[n%WZPtkgEP"\9^Au]SPo\fY<@.^eglaj1TXuTshh0+t:.:i7M_BL-;t;O9ofT!oA.#aS.oT04k8FiJSiOS&rmW*jAq&?p
%"K\]JCAU@Q_kLTJ[&i8Y@&1V%&[^@83Pqon+&1/`5VEo/Xf74gRSu@?>rL>W5'*F,=iTOmA,jdSQmd;UV?R;mXXi4VDl$*p)$adu
%_9m"RN+sdOb:A&;g%Znhp=JVK<MAUHJ?+NFiqphiFIrY)([KeTP]].l(02,/?feY"hsWD9l#TksjS%>AJBJ$i;nU6<QgOMu0N4ij
%WH-*LLnYDa's%Qa*ifY*5ll[;[Eqb.ge/"4Y_%a1n5WdQ(4fX<7,*+Q/$-VnM\rI!9uUhAdJ;SAn7<s=OWcf^F(ksB.p0sN.h]L7
%f(=5/?QdJP)O87TpseKP'R%+_4sSP3QJOTi>T^\_ZE74/A:jN1[dUA([[XRfmce'+OJo?Z;ER2\lhj4I[Y]Y#f(>pLWh`\TPoq6^
%X6jiRld&o&$#FTsP,YN7*.SlTR0$o$mK)&>ia\V<RWV#^d%QD\\^Ye/Zd1rI1_#*`=RdR1U5=&7CPEoh<(r8Qq?l8E?/0;^Z!d#A
%ZGtQ[@p#-sU5HSnq-:q[i+#bNOpe_g5u\MpdNH.1B/n/>mOb*mXsX/?\^,0>mM[`PkZ93B_Q%P\$FlV,;UuPO_@JF#lK)F=E;;+`
%CE91me7kLc_+O=TqNt!SjGPEDigt,OQ)EM?^T#:VF!p[Y/lX#8?*j7XQ8&qFVVua`@#XNo1&Hl)I;W9gb?]d/*Fk,/JXPF`>lk-W
%&!%.@m12=6d"Pb#qW6[4eZc,_Ta^1Mr%3hj&Bg,nRA]oKLTd<5ZDH<SQ=UL?T"%pR_co'B5Q:H^U@O7nW=Yj6WYTf*ea"l,ep,()
%S,=1cTD9B:Xn42nqp5<2+9%Vs<CPhq\K\MsrLZm=jeccsW=Emt\idUG-7iEZ_%k'*)]FRPaL-Xt$H[C_lrPn6&^Wfa880f0ja"L0
%f6($G@C"Ic$Pek;F^`cfpOs5";CV5qGbHRlM5;m5ECTP1\>H9)B-*X61f4iLK>6':htl!W[+_5G_,):q9DbCt`Y+3;YenpX]=e-O
%#l/HA4-%IuP7fqe%nq[e9P&EGcS!k_S[*hpeK`<=.042DB;d%m13o!D99L*$qp"6BU8@p>%^+8ma!WjLBUOWgs)nQsK_h0drZ/&l
%Z4lC8(-+\5(9I[,+B-MJ8*i[;-^/[HXS>[B$^QjVA548EI5h`g+2)eQ(9-4l;b1*o_gqo%;pm+gdWY@rgcIr7d/o8(a6Lfg/,#$t
%bD91R%iM+T/1]$BA5mmCPnkAaOU1:XlTKXZgFks*EGMlY#YlGhiOC`]l>Rp]Ls^b>`(!@;ZP_N-N*mkV9(pUts2T*oE'j_1FHC['
%;F;<6*XG_SeC9r[NVAK^(4IZe0FXbl.>#n!JM:5nh@OC><3U&e)e*IoI!>CJOQW\(iSketg*)ObNsVIT-H_VXCOTqh$Km5^)G=Yl
%11B'PMO3A<QrDKP^dnkS1`06+M_jerlGp)Q(3Ts(`0u+-Yq"4lWObXVTH\oI6kd">p"P"4,C+'=g`L_doEPF(HY*/;=TMX#(+h"/
%Tg_LZ-l'Rfjq"M.I'QE]jq'4Q-n,8;+UW(*1hGqCi\DqBABJk.]`fVGe<M/!"8!Dql=]81>YUmY_`*1D@]\KC#3&G3"H)Y\klu,9
%nEd-9TLOY+<f2dmM&_$YcJ`r_-^na@<D(b8a#K3W-oDHl50(85&D#YMBAdu$<1>*@_%;&n+U^*,Um5.nUa_H`o/kI>7`'dGo!-[[
%D%qh<QDsKrS%iP!APrdI4Xi3"prAI/jSc!\E9&,$bR+l9J.%V0BeHXlN=tq;N#$7i2H%VHCpIWAjM<Y31jqrJW$=!a7hQtsm1%_M
%c^W1j;AaZ:PT;rgfTh,jQh'NP]`(O[$(Z'p7>^2+&,/H2HFbW&%`b'>///0\&0/0EntVTFTp>.mf;CoeE^Sc28TKm&'"fnAa%]4Q
%Z,gTq74B[q1)'pB%\ZFZ`u7:NWX*QU[5Mct5THVF!&fd3lB'q-Yi]Ze'O[ce5DlGRIJ$La_?FMB>acsaN^%B':qt*!*t=/l#;ruJ
%"^;g'`G`*U;;+V=Jot7hKe%B+N+A=k8]"kR_X`/WBq[q)h@4'V7DiYQ?)n/)"1JXms'4qF,kU!-s38nNC<*dX%9'<mC8mT<FfmIX
%>-@[A8,$UjV_h-b%"hRqeY\FD^Kk%hpRW\ioqn"^XcPZCWgg,Rf;"-1"AmGbnWcP^m_7lhc*fa9$`AJ&;HD'KSl`=k-2QP>MFj]I
%!(ZY-#u)RcPU&5Q.ANIc5/W#N#G(0cj#]E!Z;fJO8R6'2>Pd$f7$rW>HmIMjqZ^=UZVouDI*HO8Cao@-.f*T&]bG>aE?q/6AbBl@
%s2`=3(`g9S?#;<.kT=N6!'$hc9+^1dY7h(PWsT"eOf7eSauaBh+JY!2!;)gL@#?#X(L>t5.EhX0edt,dd>QbDjGs\b_BQ9(eU!mp
%_9Hi%\WG_Q3n9^-mDF>XrBk`0A7obr!p0N.;rU%>[1V4p<#J#+5s)0Um#_0!_u590BR=QcSgJiVfr\_JL<r5"pU9Bj@0#6oXOWTV
%:o&uRRa=I(#c7=$EkQqT7Sa'k@8/oa<C_d-Or*EGeUhU$`/<:<n/sh(h#ZW\RDf3^8bG2e2f+iQ_2^bb(f>C\.<q9A%'U]rpLa4:
%O)OP=clbG$KO=Flm55XimF&jF(pKB;LXR@dm:5Di=qo%!cE4fr.^HoBKLmMTF##S+X2TdQKrOS%`bpr85A$Kf:iJ)0],bKY@$DX@
%Y#na1$Pa'(aer:l58upf>2FUIP,fWDKPV43HhbCSTeS;Q[T3^g1QBA^1Jj0&LaZn:JDJYu+h4-,p/J0>ibU''271f^El(a@>&s#T
%0?G`O-J(8&eel,YLPR:^DsC+bM(jk:/8]3`^3<!PK[ll+p8AmOc##K'1%-4!n!Dh62AJXuE6EYdK;0SerM$\=K=R9c\irR#Rpoum
%s3]H87N"g5"DuA]Y)68]!-(+7<F*_P7B)%l;2'sD?[6JRG4,#t"4d&d!9DJ+qV/.)URLiqoj^P'C)214'WoR.n01<hiU`X"]MOd!
%=GL8FMQrnWSi$sW.1ZSgUE9dHTVX;apT`pqU;.UD>pS%>ZLr'%*"4`roUUO#<HhrlU+@4BE5K,>Z2EMKUM6FF"uWNkG5P2,4qsu,
%:8F;(Nm@`fj7<L>$f?"5M[fQl+'N)(*9FKARJC\Q$s:rll`+!2nlQO:I(YkE2s9Ia2)<@!Ks,;%s+.#L&]:P[EZP1_Z*3/L`*;To
%6LJ&@Wq&A37&KA36ZF6(Qlml9"7/D%l0$l6<Melg7HZ,m#%A8fDZ=?YV2>6NV%LSb!&t&JiXgZSO7P5%giaJjX=+Fr;UUB=d0UqZ
%++$%!dl,f`-7^/JEIeZ4AQc(WQb++&i44rh!RM:?-s.mcKQnN"ELd0\0J[9tla.5RmPm).kQh6Q,=P?+p8ok^9n.^r^.K"<="XUY
%CDa\!#f-=K(b!W>5oW?jR@fCf`FH7P:Q/FTVO\;f,j%T,D4q\I`F`+D^q^OWA>Tf9r"+u@UeeKbaRT8tp7mgO]n2Fa56K.@+,L]<
%a%-/6Mcl6[fgVg?3hhCAkW3F48/G/KFp(j9(pNJWed_7sP/gF&%;@d4I;BEm(R>&C!pKkI(r')DAnKj2Pi@DI14=gT!BWuhZ_7(=
%(_%OSa;^Seb^N,L,.&`C!.=VMjZ;VO#X!qpm]KU-Ie`28M.!Yk"o:^$!6;_K`WOAh.9+7h/.\+I#cD8W!>@j8Z"BJic?YunqIN9F
%j%U0&L4upR?'T7)Vh[Kr#`H?ucjJ\[!c^hp?cWO_b@T@`:1_Ki$$C8s)9SY+F:uODK_9Ns4$&4ZW%QRn=VnK8XBh1<(Ia%5[in(%
%!`D*qDZ?6C*7),[>2c7&=i^pm6q8I9p;PWG9g_.#n2a.Dh28CD&+iDmU@:Vu;c@(0ULpJnCt<&.e)aU#KN%5L-l$:X<dOS,Be;4>
%dDT69<c`bU.-5!_@r^Ne86oAiK[;r:VZ2_Zj$;O,X@MKuj#W')o49fp7AjUujMH)!f2kTa$?nfTDU%&A2.G/Y(K)69b)k']*p([%
%0GH'JOb7M-bU2+>!i2<sYhSBIeB!8hQ%HOm18nT<b:nfu$kkb$chK2t[m4rCE$@NlYhPmLaH%"7&oH$\"KH!bEne_HdSM$-F,5tK
%ct!KL#S+qL[Q7/U8.i6G^R2^%Bu'nh&';+dHKpN\+-kpJmC-Lme*k^nQ-KPl?oPc%Q<IrEB]uXFed`9W,Y_iBLdobFMCo0p4`o1U
%>)*1nJU:4*Q$QoMThJJ?LI(kh-SC!ufcVP%\<IP$>p=NJ:/nm@n2urm1>NL[/$TfN)hp5c5Mu0KO`-7QblU!=#<OPb>J^ITL2c>p
%(jQFPP8.:RCeYNKHP5!q&ST-iVIKU+V-2,:+%`DN>T*tKaUXnUZ*!c1p="p_/,W+LR!?+P1tpN%0?p14&id-)S6@ou#p,R*QdR_(
%m7QalbME?D7[r[)9)V#)-S1AS5Imc:M#;Hk^9&t)<Y-]/D(Td'>Y"pC5&Y'R*Ts<(p<1V<P*>&!$44Vnj>4G$mc_A15i7Woq6[.T
%kq9/^=smnPkgM'Wb;DT7'%SJ$!#^E'ra?#tQq2?OGYeAB60O4:0_o`X<<3"c[3!;ITGXb!C7W7r@JLnYlM#Qb!%OXGboKFI4,g4e
%^bm\gC8YD/C"7Bd#+ZpKScXS[r"`_+(P=eKf4I44%Mm1F[0/0M5XUuBr&G+crNpnmD1ARHg8BU<YhE7eQ%Z[4?#?:j26DtIJc=^;
%$Yc2#nd:>46!F.5Thht%8NL*([<h[%?Za,r'n2'mX'Dl"3jF#(b14_gZE.*Ocm92m'SO?%<oHLfU$,<uG;Q@dN9_l(1]qbj0(\F<
%Q#&DJ0OsM7/gX3WLrH:(9FgMF>]=k]f6:=_%A:,PiT)!rC@gH?`U<el#-(F'YLU2>Kd4!YG;%ni$4X1G[aUFlhc,*XJib;?)]pi(
%Z3VTQYu5'ST*,/L%Jq11d__jcr=Rn%91Cf\SW-K+S[LR:aF@kLDKuC=!.MuKS,<mXG#'D-kdS!/Rb$>M(f8ig_Qn:1bc8kO3mKu6
%[DAJ&3;hV(Z39bQPM18FhBL=%rAM%ndDQ.D]1.B<a,%<WqRN):L8*CFeM^C;,'%_eY`rqQm?D"%FnNZo7fqhd^\HUId1_Rfmqg]$
%+MU,.9/Qi1P-NsA>5lG[-(9S6%T\O;=!%]l7Y]m!G6P+FBs3W]HB'-82^!`BXl)>E71Lihk#e)nbfR#X9Tu.>Ys5oP(82X(Geqf+
%&@&V3'`c39I-WG2C-39ni%Apa-%mdX6>*TFSrC=/O^e0KWE$WCeJ[@P'2aT#'g4gY#](rLg,HgS-5KR[JcCN">df-/l6]ATL/)Kh
%N]`g$S-DYnn4\A_c=>_o`,+oODRXdH2\lf"(SCT3Yt&_Z">cS3ndfT86;PtN>p-O_?kDLXK*=p]Qsc4WOc"7OA3/4+.*-.U9pdN@
%Uq?brHISW;3\SV_8OG+[,2D/HJl*&Boj+ka#QChZ=$28rGRBYbOmj)V4+-S/:SYte!d&rPQKEJJ(&aej%L1\lGAt!Lc?EQ-h[s?1
%kF+'lBYFE"$BA-;\cd,dR>@e.j"-098qa4sN"l.ff8dZpZ&no#2uGgjl.7>L2^='LD@s(OoB[8ZYb1Y+-:(R5mOHQ@OJ"hQGf]=n
%<+ctIU^`P\0[!@u6ss=Nl:*>oCk.VoG)pH3;g=SS&Ct$b8B2nt:Y^V.H)*^6.\HhY7dS6*X\ombac]S1=;L'lL4P/9[>55^J;&fO
%;%;N_*\Ac]<FVZ@_t8t$(BK(SW"a0HE"fj)a<f+^-l7JS(""PS,9S4`b.1k9c#7dF$]\QRn@=$%3&krcN40"loL&!q8S77":C05$
%>/aPJBFgU8IPYD+%,;cIMB&>LUaWa_b6V>W2-G3.-BI?[ffsq4>`O(LHcP"U%LuLF*""S4-SaA`@kZk%7eW'DT4q/l?*u?uVqd[\
%i]'DR(h"p8+#/eB.ZS&LG9WoiW;L3*/BR,u&mP48eCtNd8**>Y'57DqF6D"^2j.bHI09Eg[-=CkN*lc+>`OLm?m($j_C/M:UQADf
%)jot0<-r0J[l;Y%S7#sn4d8Relfm7t2u-!60`Kk;pY9g:6eUE"q]sn4Gp83+[QhItP&sV3(.mIhLVYg)>O&\4fL%c[2t4"K1tg%l
%`bP![chpLmnRM[i;!N3A$aNDO3P.kX.dPsBCD_s<<rii('H"gn#`S8$el$-#O5Q>^XIZ_4'F3N@qVU*oDNW?lBU*Z>EdbgHR2Jq#
%Al@l%9&+i6;=YTjKMZ1([4Wc]Nodr[#V,#GNugornckKta=41mZRD+04?gnOkn-A,:]juSHdj1_MQ((-gQjr1gtl3I&,7#4lDK>,
%>>&'(;=O^1Em3kMoY"H"//1?Ser6^d&o]`nV6\ib"7D?TF&@6V-K>E&=9p0WBTU25Bu>?(&;%]lc5"iXI1.Bt*oYFu/&d=$D3B!U
%;jE3RiZTRj58a"P1'S,HZe;Hm@59J_-'RL*/G90#VA?lVIdRKXVbj4t!I]M3_c[mp_D76:0K8.^1l!'%)L`_Nnr"YXj<@jXWGqQ$
%@m@D.;X(^sjuMSrKiPMu&7PfP"W*$OV.X'5"Zn%7Tu)T:8Psp"Qsg!doUXU\L4HeGI-1h>UX,6F8ihpQ([p'9WL,)^dY4!0KaC\J
%QTkW?kRT=^S+,`bN,J0)0;Gg-`G(gd$ZnZAD%AiX.oE0FA^`AFX3aWdT>\^#+B-,54/;YAcr[6g3;STfpOK>F87Bgb;Z6Q/5\GT5
%a`>?-77O4)"'N@OmGhUDnr=<(,OE14Lo-gk>=4MZbngq(5p0?o!M"3%IDW[OeG()HoJQfS4ZM4'SMk8>Y"]0?SP^'0Xr#4BSJQVi
%(1%PeU4NaBl\HV';I0g/"E8/4U*&M9":fc)3/PH&IDYk:q+!:U!2%K7Sl)&("5Dn(RS:E.JiLpZ=X@!DVV:@j$T0:<&_OJa$_Wif
%SZ9b!'rAH!\e>=l,r:T>&aeA9*^6koagdh['I/uf8.s+s/o-q2IY7o'XcTlH,4bVH[0+e\X9Q;-]eLHD^"M.Y&?N9i(sWPL?s[4,
%\f;3pLm1g'Kokp5Ds/or8#Ss4K..[i'HHd;KIC>`GE#O.F2N&F*LG<:U:MUtj:j*aPL=JU;L=.@Fqdc-Vmo)WhoTj%3gFmdOXt@Q
%*P/t63]J:U\7s]F3%e9T;<[=GcgD4!0Oe&0BV!r'N'PL,PVP\Ta@la8XQ9#&,n;aMnTdV/bV$0j4.dYQVUl\LL=E]YeZF0I(W<J.
%<j%1\fItjd/Vr3ZOB6CUZ9?JidBGj+<Mg\g+=-^SBh!2C<rd_k#]Gp;C+E>hc=\Cnj#^d7;+R@_)&tHtO7bPt9L3dnHUKW2S5VE`
%lSZE"g&hKL'$eRM'%=Jdk?[^.'`>Pg?4hmW!'r9C-4dnTi<#QaJeN`f5)0]7*=0>"`H*oV8u]NsqWo?S0MR&hMESlVnN$$Mau<bf
%KbQ<#K>;7PYc8\BOY@U#<ASL?Ar!u-;ogdsF)9+$U=M]&#GWX][)'k#'`QS*h6FU%\Ya!MK4D3$/qTj3Jo4X\S*<u=XLs,7Y@Ra<
%F!3'Q@50?$PDF:2&Go4$*sZ&RYDeZ;Pg&-Oh3,Ae"X8Bd$J"Y^9Sp*ng]$QsmD^Ho=&X:H9XY@UJr!/V08AMh&u/,:Nbo!(+d";%
%9T@g9`]-Z;U(W0fOJ/c,AdTI;E#I@Eil6DXe'`/TdWBeX<c<iml:ZL9Nd2F.-8%u]cXT+E2mY>&)B\Wa=acMWCsV=m7cNI$?qiLi
%ZnqTAZh:Y#QO_mS`M"o/RILZ]qcQ]Pg=IX`NkLIRL+Y1d#Vo[=B:65e+7i6;+#ic_3:htuEIF-`aDhYLBJE6uY:nt"e\'!Z+_U5R
%1dXt_lSW(WBAom1D(<&UMg+J4ifg@fT9dSJ-YqQ&[7#FT\raegP(&pd+;>bje.kP].]!3.9&/Q(>9='BYER\UI$Wn4`GI<Nr$9A5
%8lM$1<tS<`r/c3e4St9ZGit*<dD)j>Db)YRZibIj.E[j!M?bXWREKPdni:ZM8]=7hj7\5:)1Xf%.c6j3(oNPt)`t.[29:H%#cWd=
%odI,I]kkCm)("B"7Z0&GRW,ogR1?`<78?T_QO@T9K6/8ck;lYA=@JEJjH&VkL=<H*a/iHW9kTN9$C'a)>SR%BdCeJJ+cE*slrF[#
%j#ii-#8I2E1oYo#Wo,/O<u$iX`N$MplJF?/1;2-kJ'44S?3dTrpEFWHXnTfjlCFhN'HbEN==<'4>n"EDbuAa.4;'9&oti7&;R78^
%GV7k8$l@6m+f2XYs#UTK[MhZQ?`Q0`f*"&8'?N3t+!?J#*eprtN?<85We?D$@=/P`=XnD5O5aEA?qQu"\EL4]k6_EucFURsk2F&!
%6+lKn,EAu4nZ#L':V,L+Jp7gcZd\T!<m+tao@&lN<=`Q2+rY:'>FU7id8/qOc6+b<h47mJ>E3.*Ne)R!7M`^=f3"NrA([.jFcDG=
%N8\hjVo9p-(rG)VntsbPaP?V]8[+&JE:@.JaS>3dr9nJ2F/Dp#b6[63h1MW"SO)=;">s8Z.,gU-4,5QkX-20>(8Z46h*K;3;Maf-
%P%_njKqMUT7D2e>;mNH>\)r=Rh?O=SIm#>5f:YU`+ejSP*]E_JO'$;g4C?u[c,3BM$8$ki.mc\-hQdWe]/L[cmV@(m%tdHo&m:;(
%3a[d.S[!:R1g,c8Tc.KBf9q](8ZoTt7f170/=bTmj@V]n<>qt@bAg;,k98!e>2+Fd-lgWiYB04O0/Ik55$>*ZYtD3k0oc5nBSZ>n
%_aQ:bBWYYS'fIHg`]C*P(`,I;A2Fog.d<TgA3.YH\"Z#])8.s#&hr1pafW42'i?9@lX@3*o@%n2-YQU@<?tUiJY1`Qb[1f#Uh#ba
%_<jQ!Z5<Oe9h6$#`ldf=hM^7.;5g.=9[3u2WjtUm=C7jjXDgiAr@qnW&;)ndc$E(#?J$6s6BLo:=MT2"#i`43PD5a.<>':^,"O'G
%J;cmFdBqKD<Oo#MLFp"ZMSWEA%_R+Ed<-sD%KfWWP")DW6T'I$[mU"]J6BpU,_RL'BXJX\WG;/[PPdJF:SG4uCYLLX_[*'Z>ShU%
%qlm;MdqPhF<[]:KeX@l8,Qf)tMX?je(H"ob.rq/P/&>bh-a4GJgm#t6]k'),Dck>O<#Y")i7D5G-_Q4(f3u&bm;"in5X-T`!Z^dR
%d_*L-pU_l%VW8Sk_hN/kAdfH-X\-ZQ!H#r$A_P>=l!JgWe5g,^@%q5)oeRq)`K'F5SAs+=JMOW2hHZt89P2S9iMb@c:+MpTk#rDB
%Yu-TPgU*V,gRNNk2"eL'S_N;8jO3!NXfcR'#$WOCeQ\5No>;0XHE^1T[0RN5$VW!GV$lL^B$V5F-;V2$s.3ur)8'eO&$n7!_)$S:
%=i=@0_#&choc+s6F4iMP"##<of*B"dLlrXZBng8ZSrILIZM%Ac1&H#J'8cF3=63h,/ec$8!CYJfNh1%<aF*2TNirm``KHq2%e@`r
%qYL'Qj;p4:2NN-WS?5tH#e;R6[KC0X2cf>%l8<WqaMbe:(UhmX=%s\S=fns3!DOu:TeAkn)/5r7G^&<q"@4]UU,#H^p8+>W`=<CC
%%_1%s7<G6R9]_CPg-CJ\ZX#$dZS=MGX,fdQ0h[HU"L)2S-gJY*+gQr.2`AuDh,Xi@=Bu17,Q(e@PULE_$d.2s@p7KS7ES'"eEW"$
%e<X[4V7PB'9qaBj8f85V3DpQ1gIVp5RVP>da,$<C17hTF>h7J%7BREON&dRN("-b$J,pr-ZuRsQXf7o>5F$?`kp/-*^-i*gG<UtE
%f*ue1Rnh"pQhcrWGscYNm<2ZAS&X?O)qEt?CXP*@_`D>G(p2>N.1!13DFTrOL/QFOm)sp5f%p8(d*-8X1ns*f(B2<LcZ)=d)U<"*
%[RPDuFG!*s2q7b?nREpsGUmi(/!FPSToiLh2r`V[p"5bb4tM5`a":1%_[utR78Ie%Mni5niV)skWh!KjKIZ6/hY&rj`kKB$j4r36
%6(%V%g)hh"6rpTmUP34u$d;jGZ[=5YXniD0i[If[)='ilG^>P*#d<DK8l-[-oe]Ah4a1*,/^Bdh2Wq9m><H0ZnD]GC0glLlEd'@q
%]r"'+Y<6d9!5j,2*85%$`uHLLZsXFg=Li%Nl*T#4V;Sd')Mi"%DZjQ+9L8)l0_`gN6b8IY&")'Xc[.uMXX.mUmTMOolCs"f1@MUC
%JV1/9+G@45EIG*uB8JjSq^Ai,gG)spMK`Q^du+l9aa@:KN0_G(G)9lZSKThD*c%,eVPVM^0Wn_O>]#lKq'c<iRG!j9Wb8TNCjp+>
%)\+Z`X%Jkp:%7:?;]c`:D_hL7(CGZ&7_6dW$MkOU;&CZ>=[qIkr/`oDfqqM8@d1Y@TB"V.CH'!EU#o#'D3@@Wm[8qml!KKMABB2m
%!UY7GBeMW*g=SK2r6G\?(CDX3dDbOW"\D8cAcE\gS+,lEBZ!4ZZdrO<LugUpV\nM$/_5*tX*QGD/0kfq?X?ua0<JGLCPW)O5)U+n
%,&*=$hh\lpE2ZU;_@JPpD;;csl<RYhLjk\Rdf_;Ca<MPj>U[;0Ss'n3&2a0tF]I5g#`Z,U0<;4G#2f-u\!"ClStdWj24;T&6Jc+_
%_Gq#t2_f^pqT>Jobk\@6j/,'`0'4'I)=$ub)iJC.HqpW>XhT;Z&!*H5<dC!:AeE#m03GI-DpD?&8^M/\,:^B=["Ql^2$8_GOq\-L
%le$56=DDl&(H[W4OtHo4h3B47ZA,o/qTt,%#[=95eNP`Z-u'(ep\DJa&`KE.-omr<7YHA21+d:`6]P.2'oE!2_Ekg@Ak3eF/6(6V
%l'N"=`"V"F[R2k*&U:aY+RA!q8)+!a&>6G]e_t#p<bZkQQ:\+XGk+A&ltQQgX*D8`7>)Fca((WXran)"IiM`RAXTWJ3_N7H3g(-3
%n_pXF&*Fp&ifEBWZc/[k=iXs\%Rd#BQ4R=*9I@-aeosW1:bh`Y">.!fNk?_h"SF(1"$c5T?L#V`Tpf!.D:85teB)XXq&D"]q5cH7
%isjTsE%"gs[E0EFbfn#j"=L)Okcr(U(Lmh6e\8=3aS@"4F>.T7`U=.*/RiaRAAo`Gdk\RE/LDJ7i%4jgQGeP='9FVL(BT1ZdYC&7
%EP@VEf;%HEAPN)+rg!j^3LgKuF!l`f&'['#O=GcS(*tPrI6i'-4(jkc_tUC0CLg8#7aSYG&!h8`mg0kI$\j"Qo4G/sGqgF<JGWm^
%LsJHZ0V67IIqdJD%jAI91hGM.AH,qe$=WkR4#CFtcT*2lSXs!B`"aGG4F>.W[l*#(`Pld"mrie[CL[)dI@`AkXXl6iD9:1B)=*gK
%+RU4V('`/kn3/"SbH1c=ZM(q>gVsBs20r#(8_\m;L&!MgOckbT/*j7L,e-d53P3i__UgsCD\+79]01_Z4%&k6+?MFtn+RP^L0"q[
%4c_+Z&1R_;^:s"Wb@M.]$[ursJ"PWkEN!X6D=M%,HL/W,D5nb\XTgspAn"@;ikG-^BqV!70u+O_g);kN6r;X04)EJbo!L>Cc)k-]
%L&5n,Ge3WY%g,h`CTCFQE>F;Y#iI#AWoX6dL'E:`e1`&?7UT2L;F)aG0efiE_UTV3f\VG+Crn>^=>Q[<-DcTk]g+,qRhmPD=4f`M
%[#b_0@$PLhA1C*AI/^$VS)6+a-CSUX9e2;DbNp1PSR5/&*'TKl=o0Ig<\/&VFA'Jg=BEG&H3B\/JdGrc`4FJ_XljAWQ!C/SmTL7q
%8qjgio+`TqpM^Q)r?\lI@fLLVfaRQJks-0HN^TirEr`P5-)P7q(*TjXSK%i+Q0TE4e[6-,B5?+$KQPssZIE$PP)WT"XN>QeoCK=/
%R.-D]d$C?F9g"A+rm)s1mHY2=_SRHhg1SE-=48e(oJ_g7L-Jr?DlY;/i>[RGTA`<!f=#q#A";ONEr9'fCCb+?@1*Zb?k3*M5Mk5l
%!;SCu*<WUN'l-SZ9&DN3-rjPLhMVq(*cG9,1<??U+tMmi8B39n@kq]6.NbM3Kr27<JFJS/[BN^GX4^`jFEEmXW7ila%bWnXT8EfP
%o'L7ag*VPa`"3sl!n7[FE@o$W*THaSF^q[_mFd7UrKlh/F:]P^p<fXSeU"uiN1"ABN]LeNbNWnr(/V)-i\aFL/%lHcDD`AQoiXO:
%=\H+H-PsLGg6<hZ&<P%7\I=-m55m`Fr/BV!FPM/0D``J=aMVGeosb-N@&kM==,udFmg4P"S2C'<(2r9Hbsgj_iWA+\Xc>=Kji$?Y
%l5G^m,r*BuFu.F20cOIrlmOp6iBcoi_'Xahn;&/D6):ah;;Ae*W?%_fL)23ohAi;Shg*u/`rTF,E:^t#Yj]W"*BD-\CCO4$02<'<
%A3;8K(Y?G2Fcq/F[84+>I5u,WKRbs9K*B_YOKtY&F,?ojR^T$QilZ9P+lkG[9.qi!K>_<Ta8G2#b8'j_<BPCJDHimcr2.$^jK,b,
%%OjT_H/9DT@=RV=9ShBCS!d#cEEH$aA60bmDGbVBogj:/),g\#5ZJ;ue2tCB\\]q9];A!dgu#+6`#[L-#P4*4HYIQJ0Cq;fb\G&u
%EqCSOJL5o@3odI:m@C[LDY0o3[elRmm!u"^f';^+\)u\h3GTidMePk@aXGPU7I[3cH@'@@n;#5\EMXa+#Or[C6mYe0jaE.nq!5#C
%YU6?Uma/l?+[`Tck3P[]YUhT+NS(9A$L8,7CUi58m)/>CSr!ruSh=I4b$(`4AORsScLT5i-MT0o0rG3!dYs@M3D+dFHc&EQ?<upY
%'mA0[bMrdEWQX\BR#4$;Do/OQi;Id<jMUU8Tqq,3nMWj1;##/$G7GeZ[bWsKSAS+<<XQ?9H1=r8F4%`Zg<KfDSeDKNAc!F)Bc(/m
%/Ts0RfV\FY-W!-;=*ku3=0rBlfS2R"[$eTBST0_/=-7jHA:J_db^<1\GDTjTJI`c;QE84U(<HDW_P5eFL?'D13JYTe<Of,0,EJA#
%YgU(S=\2+m[JKE-1+^Z"PrbIl>TB'6bJZJ3B^_9(Eg*uA;`t^_rqY=[rp;]Wg?3B1XTU+H`*QuV1B7\!ig892G/lN":,@R$hCT:e
%?`&4=C?O`j:nJ;V.S&H?l;o.fiid[2c:<J)ZD&hIk;p7NJa6JPYZ?MPc="5,P*0Kfff;)#/O@88D)Cd!AX<c`k&dcJ>YG2R\GiDI
%QmPC5L8mpq7qckJr5j;[l+OK-.)/aD]Q>$Obp%\-[;:"gCgBrDKoh3#M8$]LoWIQIl3dbQm)SYi6KlXR2`DEom1Ln@f-f1U-eIk]
%'rqmh*'IZ`Enfg8Q7)NH`7MFFH+52[pL7V>e.jR"UFoIJUm3VH;6W`Bes%63R@a$65XLIY;b$Mm*Qd5)8?1t"o**J7SU?k?_!@o1
%MqDh[V4'eA(Kg(79I.g0jWXD[WJ)?hqR4SKiJ(i?je%8h6?oLO&`QGaf,`-AV^,\r^$.5*#-089FGJhR3`]@<p!?90Y\G#BkuuYI
%2"HMLJsf8e:XNpf(EPP7jmUuRJO$r8@Y.q@"^lccB!':#$&c?gp.^)[6!OE,4_:6XZM>WH!gMmtls]O9MU`CR6tcCteL\OT3Fmih
%#"3+<=VpX<"jt++b)!J%<Dl/5FF`>Vi4V,LqoLPF=]JfKe<\3j<(rqmO%bG_7m@q(l\3[97JYNo!]u`4Ms!\4=o6!n;h=#$%@_3H
%>8RD52&PK(ZXDGRI"D@4[NdiT'EBM=UQ8V'D)#9&Y7!MD<F`+H^'8]j053/:87+kZaTRr9e:*D#A#uYl50%l\XCg7^R+[!sIBl])
%ah#eQ]LA,m2qZ!bqF]HI4);I07L\Se,[-glAj9miGC`3\(pj4-O>3uJ0e:m"_VRtiIbRFXcMtoe/&W.bnaM+(BJK)G[(9(L,rm+;
%\u<g-_)2JR:\hOm1)3cB4W^o8/Q2#X#5bmRH)2&^UQ])D"jslDc`$]o,m66X>;&<bW\Z4AYT#L?,"^-ADf$9f/R.H9<L]rhepm3G
%W,7%u`%/oGMa)VUL-rKEG'l`\aNE"4WQ%bL_8Yq(jf]b;IZ356Mfp;`b-S&uP7'ecD[h&:Pu,-)C)mdN`(]pt/50N#Pp>IAWmTr!
%_)eefMI!"GQ-U7!<l#Xf?^E4#XYn`u0&.HHdWM?eTtt4&:uQJAO`?R?pgGW6Q)J=""8oMgEsiHGogQL@@Nts]nLn5%g(Cnm`Be4m
%j=)&tk3GOU%!<_4mp$^\;,mqI0esq7ZC>Ile(r=Kf1-@-n"-ADKoF\VJuB028B/!#V8"+Y0O9NQ"]@S\_Ps98EB]N(@9.!9]UO"G
%1EDCNT;$jJV-YKuUuo/KhS/*pK0t%[fZ_dGGtJ7!B!-ubUee&d1/-+N5dC+NLRJ66RD;9*/CWt].1bXNq9KTM6D#uPISE[og22Ec
%b))m\,DXr)S%_S>T&)i@b[L_N\P018s&hS\.J_CYNfm]M-&*`[oE*b;MS0]M%^p=S9D6IRfPC(\d%dGA]_gF%kKt#XIoqSY)_r4E
%*$5cLLbA'i"+R_ameoK9[esafU;$nW$W(k7prYgSX[u"51I`:T7j_pD0TfoCP[Bm^L#hkA\DF[=OXo#fZ@d!h[!cBk(FV\:QB:tf
%7,(W&Ar,J!'+34Vcu$]9gJbP^B8YS@i6HB$]R]*)BD5a[Q4B6&%I_8<`EtOs9D_jV[aW4j:Ya90h3`8P!ndRtc"O+/6oEu2q-$2m
%mX?p+G+7=j7/H0P\DF_*0&o_V!QsE2=[P`WE4rRWXCH]e00*/FAUkQ:HUYPa(IhNc.!42+#sJHQDsi(kC@XDd3EORXCSsQ8#=[L4
%9]5)]TuP\3?hcZ#G2`5G>f&=&aPr=W3(s``K-P2gB5cH1iI:TE\$*QRSUL0Uptk7,>O[0*ZgM\I6qmj#r)?N:>qpYpF(Mu[N/C&B
%fE]H__]]q:5M];!qY=7UISV[*I:fd.\IV?qkc<1,j$MlQZoU=;>W12rO_5J6GX#&1>(>\"Z0':9e2i'^WP-j+AN5D4oYHmf['0@#
%hnH#9p,:Me[&^K[]"f!FQE%P0D'uGT432I$e+!-9$KYE`$7$X/2%)pO8-03JM$BKM,>9)PN5;r>ZaP%`<"t#8:6XtI3B+lc+tcmd
%KRRc$9Hs5Qof\'J^4\&bjM'*Y0CEQQ3+qb?mV*2N!-QHQN:3U2N%kK69,L^='_1U.<m1q^`>Ls3@issC)BN+77E`)4XKHf0WL?(b
%%@#hH:U$^9rImV4]3BDG5At&UHG1fm<3)b6\;X"%6Ybg[Eun@G^<_rP3)H[G\$AK#$`O+p(3VquTdQ\T9;^'RMq[g-hO*@lm/S`+
%]06NQ`>!jcBkRjX+F1CV>]a/m-2V9]P<B1V#]Yo3l?([Kk_2%),Y5BtAgiNIXmbOa/4fZYl2\YfgtGE2O(=+lOm)$Ef$a<=5.6-G
%.KL4#eknk5>Y1e^h31MOMCJ*Nm=\<.CRu5cPA@5X$ki<065;*8M/EKf1bJ/D67\VbT&QFV33&qgV/am:#WhgWh_;e\q1F]p\r^rW
%;jXoJVTg_5ga@*.pISLqMH)][(3ZG-dE7D\`[)E[Jp]nZHY,L"1ln#>VO15^#pdauZo!#`rQL'n^/T(DMR-%2j5^A"Z$$@61aY4^
%.q8oYj9R1,c>`c[g@7lLJJP-2.TbTJf!$Od*)\#3KjN]u@9k'<VO+u0X[trDh7`3n^k!us/`r620ilPe=$j8!bEf5.TaJLVl`V>[
%)g_(_`=$&-Y"Ibr;2JhRn,m7DV.Mu'irO\&i*U-R5QTU%KqH'/e$j^cj'!kmAThi2Y>d->W9$kG?ok&S$3l=q]H8IN/"sN])ouOm
%%/*3#Mi4:'2WT^TBWEndi;\%Fkd#q,Ci_.u'tTf-Ye(0JVR@LR';Q6u1^tdVZ09D@5)0FC6A<eCh.c;p!!%=K7OF$j9(!G102k<[
%;+UKp98TCcTn56tVWu_(%q2O[%VBYd-5kBl\kT%_,]$GVI^i*tK61[J2YcSJ1Q+Y3V&QLjWFa3:[IfCG,'#`FMsb\n\N2/C\bJTW
%C[F'_#GN<]D3XoM@hOE2k3\G3TZ'C,`>N*4?K)Wn?PIMr(jPbM1/e9\-Fspo`f;:6Os"Q!37oS&,R_Z!l^D*VNXjTJ4tBN<gl39d
%KAI2IIEsZ/%Z4o2q;t(s$CsfQ#T#iBmkj`XUJCljW,:):7#%)N]X1&"GF3Ad09\%/:bnp77g*k(ZOhg=ZWT:k2iCdYn^=6TMa4a&
%h$u;1*aStB$C%N_G9!Vn9Ol4o\XN:=*QdI'@>-\fZ-5='8]fYV`]a`Y_HQ&C;B^.D=hO]#\B5<u%r!,k[q+(:h:o8<C+S8=_C0`t
%p4g>^[Ol1HfbqP-G+<s-Q<,<@RI?a*)lK1C$[B(jKa(oJ#hO&i=Xt4H/g7b%jUJu#%c5P%^A[1MaaZE>B9+4EK]X&hbYZY;&=pq<
%UXG>4YV/jc(n.1rgiE[o\o40Q<jft_IA1d7M+EY_SQ4Z$g-P2\dq*q#VE\Xbf*!VCb[YC'&c/73/2@#N<6fa1E]&">ME.),Y1B+J
%/BXg>lBidW;u)_>?m81-MKp!MYpalY2-+]E<\Oo-$/.V6pls<&FQ@"&2Y1B`.2A6WRXD#sT-ok3H+1H`TE"KZhed9S%JL)u^A@BO
%]<JsFa+)\[rU]ab<i@Ym>I(?Gl<\pJV8?9rG%gF>8MMjD(#l^_NT#LMkFsR,L9b*tIGFqmlc8=V9"lA:C7=Uc4'pK!aUXnk@AO[P
%lK@a^OrgNelLf!Hdtb0h*H,aiPP#Ias7PEQ'4)dNC7=V^iGK`$h8d<:T;.qbW^)Yar<#UQNI!Z6NP#khfU^Kl"h]9b.5%BY[c]YL
%_+GLsKPR$n[IVo>5p.7*\\&isBdK^+)<(B3Y;a5q5Mna$Yh2oF21#&[0ABqhiO\]mp\G_U]tn:-CX%(:N).lUFc.m,e`Q2kD_-0j
%&,5qdD;Ka3]Qlc*,Eb@nX;1!IX@ZE<khjZCYt#Q2/ic0GOu3W]<C\^GVV</BLe?Pi2s_h--5AgD4E;KH'rjW*=aXCP_E@A84]cC1
%ha<]>VCTg/VYKh?h@]++"X8KC)tBuN$h_n,O(5pf<rK^l$#"6<.soXrah:.gB%fZ@T@1JdU=O3G//oeDXHK8hN,1<+DI7g*[RE8[
%?_ah!q%"o].2K\F<G#Mi88Sms,tLK"1IFE'?,2n$:P_]i.ulBWVIYnY4`V\;Xj1o7DPX%?^^qJc71)%_6#Ofjk_FLA&nF*fKsT#b
%1'5kTBg?rSV>;>dQNbsEo7u(b,6K$j!5PJe-FI5S9!6M&D!PWP&ms!tOU2lDQAZ^Gr30B7(MGglNRi#`,5OR`"i!poGr'bP?LR^g
%2%08DU&\RZch)r&_P"<Eor=6#N#:A:.UA7-+.)thZqUgZ<2;:On(#B#3;H(];n#Mh2_Dg4gnH?6Y!OWK;2K#pU2KJfH8m255pr<)
%An_0Y!o`ICc<'*9<du?_71@\(;$uMeV]u1LPBRLe<maiD./UqI06#X/)Al%^T1c'c$j6b.[OS^<M1`47CLW^;Xhs[Bb\W;b[n35F
%$_W!7;_2NTD-+1/SC"=oIW`?";XYUc.hFTnOkd>5_;5(g>WJJbVA6s=^0h>&Z"=TD5qQu!SYBc!-&G(V8('254m=:HeLfciZB-q\
%Z`[32iHXI$FiBsZ]u8;C\LLP0kqZ/pdJDfs(F`=S[;b?iY5HXEj*EB@cV4chr<^3)B4jr!<_Gf:oLk\&P_#SP;@BZG+([Ca3m"ZR
%q_'cJ[l=3$!ELYurY=eF$Mr6*+g@h5eQ@",)<F!"d-OJ%i(@O'qWrA:C$oELC:8B(5;,^e'bMb7`CZTf@B"id<6D&#6o2HHplFrP
%pL"$@a3n5OHeLAj:_:Ii*#rCc/NFY?3R21(V-\;WdY\r+G=Q4D[:lGd<\![uGFuSE(Ih:c7oK68h!=\]s6;.2-ioOSr@Yq]MF!`"
%.T/N:.Cj&lQ@E<bELi7F,GPpc5F>2n\F.HU_-a!P#2X%aNf"'n.,$GCDXi`k!dYXIF6mbF)p4K$Q'XOn_Cj!d[hS6d15(H+=<e0=
%FcAGi:['isQLo>8&/UI_pdh1IGkjFm=-_uDE%?nN?PPKKq>JiH)1gQ(?ms'0b/t>jr,"t(H<OFOOm`5a$d:Zm3bX$r$D<SRh[9h9
%;,i>GG%!E*,UQt!Ts8R.7$]P8jOJH-\F+f]<D70ZX0,jp@@*gJrj5cL6l(B8ceL$C$)2RiM*MJLF\TP/;;?S>^<.3m\*TD8Zq9:H
%$0H82cAVDHfMMPhrGd^[f$FC>ALXd?,>A1=nWBkYX5-k+(6=C5P6X.Z,NG_:2:8<=%l84nQh'"i'7\&)>ZSTubJ^=Pqs4k?^EIg%
%4V=9T^@iHG65q"G,U2f6cYp%+VX?A>E%pBG)NleJ[S,f!rL0KsKP\pkS\Q=2$=ots.db3rQ>i*m0(AS^O5d"g<^VSbS%Df^9;9,h
%VD+$p(tbM!#gM[s+,5[ARW#qdUqa$qX&lCA8tJ]3f_kY$"eV>I;bjP"CUEpLg,Bcp*<#Kb<86B^@pZSaDtmtmXjH!0hm2*R#k++'
%M&8,B$6T*/C\Wd.\#0YF)5a'a/k5GOD2G:a4[!+t.LCW%[)i<\qM:jaL4,6/_K*!U+KCj&3ksMEG(s$2gX,BId?56o99VlFM"b_,
%:fG^#i\Z?/74,>sS(HIVHO[+:`LE4I7h/DN>Zt]DIDaf0InO+SbMDk%^%iN;_@bMt$dl0&=fI;4N^l<bGnM;N2-\@l$8)oAH,,\R
%2j@j["V]S,q!IHiIm&#dJO&%@ZS&qW5u[[gUpaDh9S'XSLOp%YXo!*F>p?fS!<7^J`$tYulIeds->r;JoE?>t>V2#?naF1N"g=ZW
%[YO2YAB5-o:n*`0PG(DG&TZ4OoL$>>_?!Ftjcg93q5H9u4,)[ZiTIh$bVf%,f5iF`\S7-;UTiq26RI&F9a6=ji`AI;b%7Dk`.r?r
%Jd?j_?U(WPLV]UO.Vm-330K#Srh%m:Zu@NB]M?2SWWRt_JF0edP#>\=%hE3CV5:;792M2A/_lj2e/O2#E:q_gb6<jW0f_s`3i`8I
%]e/r%Q8b-jRC37Ga,Cu7j^Tm6>ZpmpNr>\Jh!=U(>d^Fh#j^ShB7J$M3ka,CY8*.LClGd4^90kU@tG%crU,Wm[(It["?BJ?!q8`4
%+\;6f0ci@9o#`XG.9a5ZiJ?7/rd#q7oQDkEhf?#IqsUH_ErQ"Zs',M1s7E4=H2@%a5Q1NZrFu&EJ,f&"5Q-Y8J,DP2qU<d*s4nds
%r8X]IhYm5I5O$HXrVQDgGCTPdVa(4=J,B&>GCTVLs7ZJ'd>tFPr8A1do[!R1pV6V*>[nY]~>
%AI9_PrivateDataEnd
